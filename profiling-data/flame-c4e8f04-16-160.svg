<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1078.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1061" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1061" > </text>
<g id="frames">
<g >
<title>fmt::v9::detail::vformat_to&lt;char&gt; (10,373,818 samples, 0.41%)</title><rect x="1168.8" y="773" width="4.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1171.84" y="783.5" ></text>
</g>
<g >
<title>__sanitizer::InternalAlloc (1,736,505 samples, 0.07%)</title><rect x="13.1" y="757" width="0.8" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="16.13" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (28,527,046 samples, 1.12%)</title><rect x="472.3" y="821" width="13.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="475.31" y="831.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Put (2,087,307 samples, 0.08%)</title><rect x="677.5" y="773" width="0.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="680.48" y="783.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (7,020,853 samples, 0.28%)</title><rect x="632.5" y="741" width="3.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="635.55" y="751.5" ></text>
</g>
<g >
<title>kmalloc_reserve (5,108,182 samples, 0.20%)</title><rect x="1053.7" y="565" width="2.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1056.71" y="575.5" ></text>
</g>
<g >
<title>wp_page_copy (1,917,790 samples, 0.08%)</title><rect x="26.0" y="565" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="29.01" y="575.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;::end (78,173,693 samples, 3.06%)</title><rect x="912.1" y="853" width="36.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="915.06" y="863.5" >std..</text>
</g>
<g >
<title>el0t_64_sync (30,165,325 samples, 1.18%)</title><rect x="29.9" y="869" width="14.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="32.93" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (166,116,688 samples, 6.51%)</title><rect x="785.2" y="757" width="76.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="788.16" y="767.5" >__asan_s..</text>
</g>
<g >
<title>__check_object_size.part.0 (4,574,637 samples, 0.18%)</title><rect x="1033.3" y="565" width="2.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1036.33" y="575.5" ></text>
</g>
<g >
<title>net_rx_action (1,819,783 samples, 0.07%)</title><rect x="40.1" y="325" width="0.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="43.07" y="335.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,787,692 samples, 0.07%)</title><rect x="267.5" y="757" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="270.52" y="767.5" ></text>
</g>
<g >
<title>el0t_64_sync (4,670,797 samples, 0.18%)</title><rect x="280.7" y="837" width="2.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="283.72" y="847.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,736,505 samples, 0.07%)</title><rect x="13.1" y="805" width="0.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="16.13" y="815.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_new_connection (22,912,249 samples, 0.90%)</title><rect x="1179.4" y="917" width="10.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1182.40" y="927.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (2,220,466 samples, 0.09%)</title><rect x="22.0" y="677" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="24.96" y="687.5" ></text>
</g>
<g >
<title>do_page_fault (1,917,790 samples, 0.08%)</title><rect x="26.0" y="645" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="29.01" y="655.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (1,053,495 samples, 0.04%)</title><rect x="410.9" y="853" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="413.93" y="863.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (2,220,466 samples, 0.09%)</title><rect x="22.0" y="741" width="1.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="24.96" y="751.5" ></text>
</g>
<g >
<title>inet_recvmsg (14,184,462 samples, 0.56%)</title><rect x="34.4" y="693" width="6.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="37.36" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (6,318,390 samples, 0.25%)</title><rect x="167.3" y="869" width="2.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="170.30" y="879.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (1,996,686 samples, 0.08%)</title><rect x="114.6" y="725" width="1.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="117.64" y="735.5" ></text>
</g>
<g >
<title>_dl_exception_create_format (1,978,499 samples, 0.08%)</title><rect x="14.6" y="821" width="0.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="17.63" y="831.5" ></text>
</g>
<g >
<title>ip_rcv_finish (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="213" width="6.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1149.98" y="223.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (12,457,312 samples, 0.49%)</title><rect x="1173.6" y="805" width="5.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1176.64" y="815.5" ></text>
</g>
<g >
<title>tcp_sendmsg (67,134,038 samples, 2.63%)</title><rect x="1026.9" y="629" width="31.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1029.91" y="639.5" >tc..</text>
</g>
<g >
<title>tcp_stream_alloc_skb (9,201,109 samples, 0.36%)</title><rect x="1053.7" y="597" width="4.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1056.71" y="607.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::default_arg_formatter&lt;char&gt;::operator (2,194,200 samples, 0.09%)</title><rect x="1166.8" y="773" width="1.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1169.84" y="783.5" ></text>
</g>
<g >
<title>do_el0_svc (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="757" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1168.89" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,178,279 samples, 0.16%)</title><rect x="1175.5" y="709" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1178.50" y="719.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (8,162,957 samples, 0.32%)</title><rect x="674.7" y="821" width="3.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="677.67" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (6,318,390 samples, 0.25%)</title><rect x="167.3" y="901" width="2.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="170.30" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (8,162,957 samples, 0.32%)</title><rect x="674.7" y="837" width="3.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="677.67" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_key_equals (74,728,029 samples, 2.93%)</title><rect x="989.0" y="757" width="34.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="992.05" y="767.5" >st..</text>
</g>
<g >
<title>skb_clone (2,574,240 samples, 0.10%)</title><rect x="1046.2" y="533" width="1.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1049.19" y="543.5" ></text>
</g>
<g >
<title>tcp_write_xmit (33,752,601 samples, 1.32%)</title><rect x="1036.5" y="565" width="15.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1039.48" y="575.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="789" width="1.0" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1163.99" y="799.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="565" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1168.89" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (67,360,465 samples, 2.64%)</title><rect x="377.9" y="821" width="31.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="380.87" y="831.5" >__..</text>
</g>
<g >
<title>__ip_queue_xmit (1,819,783 samples, 0.07%)</title><rect x="40.1" y="549" width="0.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="43.07" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (26,393,506 samples, 1.03%)</title><rect x="544.7" y="805" width="12.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="547.72" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,194,200 samples, 0.09%)</title><rect x="1166.8" y="709" width="1.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1169.84" y="719.5" ></text>
</g>
<g >
<title>ip_queue_xmit (18,496,250 samples, 0.72%)</title><rect x="1037.6" y="533" width="8.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1040.64" y="543.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2,184,087 samples, 0.09%)</title><rect x="113.6" y="757" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="116.63" y="767.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,949,765 samples, 0.12%)</title><rect x="10.0" y="965" width="1.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>__napi_poll (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="293" width="6.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1149.98" y="303.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (39,107,276 samples, 1.53%)</title><rect x="44.5" y="869" width="18.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="47.46" y="879.5" ></text>
</g>
<g >
<title>___interceptor_malloc (1,736,505 samples, 0.07%)</title><rect x="13.1" y="773" width="0.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="16.13" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,201,820 samples, 0.09%)</title><rect x="1189.0" y="741" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1191.98" y="751.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (4,460,132 samples, 0.17%)</title><rect x="168.2" y="853" width="2.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="171.16" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,915,428 samples, 0.08%)</title><rect x="1165.0" y="805" width="0.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1168.01" y="815.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,453,300 samples, 0.06%)</title><rect x="609.2" y="789" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="612.25" y="799.5" ></text>
</g>
<g >
<title>__do_softirq (15,421,377 samples, 0.60%)</title><rect x="1039.1" y="325" width="7.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1042.06" y="335.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (28,527,046 samples, 1.12%)</title><rect x="472.3" y="837" width="13.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="475.31" y="847.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned@plt (1,053,495 samples, 0.04%)</title><rect x="410.9" y="773" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="413.93" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (265,583,417 samples, 10.41%)</title><rect x="44.5" y="901" width="122.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="47.46" y="911.5" >std::__cxx11::b..</text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,227,396 samples, 0.05%)</title><rect x="43.9" y="885" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="46.88" y="895.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (24,854,961 samples, 0.97%)</title><rect x="1143.4" y="629" width="11.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1146.37" y="639.5" ></text>
</g>
<g >
<title>invoke_syscall (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="725" width="0.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1168.89" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,091,674 samples, 0.08%)</title><rect x="1177.4" y="597" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1180.43" y="607.5" ></text>
</g>
<g >
<title>el0_da (1,917,790 samples, 0.08%)</title><rect x="26.0" y="677" width="0.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="29.01" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (198,755,267 samples, 7.79%)</title><rect x="284.9" y="837" width="92.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="287.93" y="847.5" >__asan_sta..</text>
</g>
<g >
<title>do_translation_fault (1,453,300 samples, 0.06%)</title><rect x="609.2" y="725" width="0.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="612.25" y="735.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="629" width="1.0" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1163.99" y="639.5" ></text>
</g>
<g >
<title>__schedule (2,202,772 samples, 0.09%)</title><rect x="266.5" y="725" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="269.50" y="735.5" ></text>
</g>
<g >
<title>net_rx_action (13,149,277 samples, 0.52%)</title><rect x="1040.1" y="293" width="6.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1043.11" y="303.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,153,310 samples, 0.08%)</title><rect x="1160.0" y="805" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1162.99" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (110,451,758 samples, 4.33%)</title><rect x="62.5" y="837" width="51.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="65.55" y="847.5" >__asa..</text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;int, true, false&gt;::operator++ (5,693,196 samples, 0.22%)</title><rect x="873.1" y="853" width="2.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="876.12" y="863.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="709" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1163.99" y="719.5" ></text>
</g>
<g >
<title>el0t_64_irq (2,234,244 samples, 0.09%)</title><rect x="471.3" y="821" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="474.28" y="831.5" ></text>
</g>
<g >
<title>epoll_pwait (20,424,944 samples, 0.80%)</title><rect x="15.6" y="917" width="9.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="18.62" y="927.5" ></text>
</g>
<g >
<title>__sys_sendto (24,854,961 samples, 0.97%)</title><rect x="1143.4" y="693" width="11.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1146.37" y="703.5" ></text>
</g>
<g >
<title>kfree_skbmem (2,036,311 samples, 0.08%)</title><rect x="36.8" y="629" width="1.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="39.83" y="639.5" ></text>
</g>
<g >
<title>do_page_fault (1,973,834 samples, 0.08%)</title><rect x="11.4" y="789" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="14.37" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (17,644,067 samples, 0.69%)</title><rect x="865.0" y="853" width="8.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="867.96" y="863.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (8,539,204 samples, 0.33%)</title><rect x="1186.1" y="837" width="3.9" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1189.05" y="847.5" ></text>
</g>
<g >
<title>do_softirq (18,496,250 samples, 0.72%)</title><rect x="1037.6" y="389" width="8.6" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1040.64" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4,670,797 samples, 0.18%)</title><rect x="280.7" y="725" width="2.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="283.72" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,906,620 samples, 0.07%)</title><rect x="1183.3" y="773" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1186.26" y="783.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (152,326,991 samples, 5.97%)</title><rect x="472.3" y="853" width="70.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="475.31" y="863.5" >void st..</text>
</g>
<g >
<title>schedule (2,220,466 samples, 0.09%)</title><rect x="22.0" y="709" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="24.96" y="719.5" ></text>
</g>
<g >
<title>do_el0_svc (1,222,690 samples, 0.05%)</title><rect x="10.5" y="837" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.45" y="847.5" ></text>
</g>
<g >
<title>do_el0_svc (1,996,686 samples, 0.08%)</title><rect x="114.6" y="629" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="117.64" y="639.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1,819,783 samples, 0.07%)</title><rect x="40.1" y="261" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="43.07" y="271.5" ></text>
</g>
<g >
<title>char const* std::__addressof&lt;char const&gt; (1,679,392 samples, 0.07%)</title><rect x="679.4" y="773" width="0.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="682.40" y="783.5" ></text>
</g>
<g >
<title>el0_svc (30,165,325 samples, 1.18%)</title><rect x="29.9" y="837" width="14.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="32.93" y="847.5" ></text>
</g>
<g >
<title>el0t_64_sync (77,059,664 samples, 3.02%)</title><rect x="1025.8" y="789" width="35.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1028.81" y="799.5" >el0..</text>
</g>
<g >
<title>___interceptor_send.part.0 (24,854,961 samples, 0.97%)</title><rect x="1143.4" y="837" width="11.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1146.37" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::rfind (216,250,713 samples, 8.48%)</title><rect x="171.2" y="869" width="100.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="174.17" y="879.5" >std::__cxx11..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (74,728,029 samples, 2.93%)</title><rect x="989.0" y="741" width="34.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="992.05" y="751.5" >__..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;spdlog::logger&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;spdlog::logger&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (1,917,790 samples, 0.08%)</title><rect x="26.0" y="837" width="0.9" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="29.01" y="847.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="805" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1163.99" y="815.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (258,942,940 samples, 10.15%)</title><rect x="1023.6" y="837" width="119.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1026.61" y="847.5" >tt::chat::serv..</text>
</g>
<g >
<title>get_page_from_freelist (1,977,714 samples, 0.08%)</title><rect x="1031.2" y="517" width="0.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1034.23" y="527.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,291,674 samples, 0.09%)</title><rect x="1163.0" y="789" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.97" y="799.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (1,310,886 samples, 0.05%)</title><rect x="1143.4" y="613" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1146.37" y="623.5" ></text>
</g>
<g >
<title>el0_da (2,439,170 samples, 0.10%)</title><rect x="632.5" y="677" width="1.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="635.55" y="687.5" ></text>
</g>
<g >
<title>handle_mm_fault (754,412 samples, 0.03%)</title><rect x="11.0" y="741" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="14.02" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (4,670,797 samples, 0.18%)</title><rect x="280.7" y="821" width="2.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="283.72" y="831.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (1,978,499 samples, 0.08%)</title><rect x="14.6" y="757" width="0.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="17.63" y="767.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (160,550,619 samples, 6.29%)</title><rect x="600.4" y="837" width="74.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="603.41" y="847.5" >void std..</text>
</g>
<g >
<title>invoke_syscall (28,257,879 samples, 1.11%)</title><rect x="30.8" y="789" width="13.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="33.81" y="799.5" ></text>
</g>
<g >
<title>do_page_fault (1,581,410 samples, 0.06%)</title><rect x="268.3" y="741" width="0.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="271.35" y="751.5" ></text>
</g>
<g >
<title>__lruvec_stat_mod_folio (1,453,300 samples, 0.06%)</title><rect x="609.2" y="597" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="612.25" y="607.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (2,227,499 samples, 0.09%)</title><rect x="1152.8" y="101" width="1.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1155.76" y="111.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (1,978,499 samples, 0.08%)</title><rect x="14.6" y="725" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="17.63" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (76,358,828 samples, 2.99%)</title><rect x="875.8" y="805" width="35.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="878.76" y="815.5" >__..</text>
</g>
<g >
<title>ip_output (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="517" width="0.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1168.89" y="527.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (1,960,073 samples, 0.08%)</title><rect x="1185.1" y="773" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1188.14" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (78,173,693 samples, 3.06%)</title><rect x="912.1" y="805" width="36.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="915.06" y="815.5" >__a..</text>
</g>
<g >
<title>__asan::Allocator::Allocate (4,180,773 samples, 0.16%)</title><rect x="113.6" y="789" width="2.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="116.63" y="799.5" ></text>
</g>
<g >
<title>__sanitizer::ReadBinaryName (1,493,302 samples, 0.06%)</title><rect x="13.9" y="917" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="16.94" y="927.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (4,126,817 samples, 0.16%)</title><rect x="409.0" y="821" width="1.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="412.03" y="831.5" ></text>
</g>
<g >
<title>sock_read_iter (16,660,838 samples, 0.65%)</title><rect x="34.4" y="725" width="7.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="37.36" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;spdlog::logger&gt; &gt;, true&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;spdlog::logger&gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (1,917,790 samples, 0.08%)</title><rect x="26.0" y="821" width="0.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="29.01" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,970,340 samples, 0.16%)</title><rect x="1168.8" y="757" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1171.84" y="767.5" ></text>
</g>
<g >
<title>do_pte_missing (754,412 samples, 0.03%)</title><rect x="11.0" y="693" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="14.02" y="703.5" ></text>
</g>
<g >
<title>ptep_clear_flush (1,917,790 samples, 0.08%)</title><rect x="26.0" y="549" width="0.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="29.01" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (46,924,261 samples, 1.84%)</title><rect x="610.8" y="789" width="21.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="613.84" y="799.5" >_..</text>
</g>
<g >
<title>__sanitizer::CacheBinaryName (1,493,302 samples, 0.06%)</title><rect x="13.9" y="949" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="16.94" y="959.5" ></text>
</g>
<g >
<title>ip_rcv (1,819,783 samples, 0.07%)</title><rect x="40.1" y="245" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="43.07" y="255.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (1,968,661 samples, 0.08%)</title><rect x="1171.6" y="709" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1174.63" y="719.5" ></text>
</g>
<g >
<title>operator delete (4,460,132 samples, 0.17%)</title><rect x="168.2" y="837" width="2.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="171.16" y="847.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (4,126,817 samples, 0.16%)</title><rect x="409.0" y="773" width="1.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="412.03" y="783.5" ></text>
</g>
<g >
<title>__interceptor_trampoline_send (989,599 samples, 0.04%)</title><rect x="1142.0" y="821" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1144.96" y="831.5" ></text>
</g>
<g >
<title>__check_object_size (1,310,886 samples, 0.05%)</title><rect x="1143.4" y="597" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1146.37" y="607.5" ></text>
</g>
<g >
<title>invoke_syscall (74,681,482 samples, 2.93%)</title><rect x="1026.9" y="709" width="34.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1029.91" y="719.5" >in..</text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,978,499 samples, 0.08%)</title><rect x="14.6" y="901" width="0.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="17.63" y="911.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (4,178,279 samples, 0.16%)</title><rect x="1175.5" y="741" width="1.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1178.50" y="751.5" ></text>
</g>
<g >
<title>__pi_clear_page (1,977,714 samples, 0.08%)</title><rect x="1031.2" y="501" width="0.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1034.23" y="511.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,439,170 samples, 0.10%)</title><rect x="632.5" y="613" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="635.55" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (17,644,067 samples, 0.69%)</title><rect x="865.0" y="837" width="8.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="867.96" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (116,864,033 samples, 4.58%)</title><rect x="62.5" y="869" width="54.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="65.55" y="879.5" >std::..</text>
</g>
<g >
<title>kmem_cache_alloc_node (2,497,001 samples, 0.10%)</title><rect x="1056.1" y="565" width="1.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1059.07" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (23,899,963 samples, 0.94%)</title><rect x="271.8" y="853" width="11.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="274.83" y="863.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (185,164,459 samples, 7.26%)</title><rect x="698.0" y="837" width="85.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="701.01" y="847.5" >std::_Hash..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (2,410,228 samples, 0.09%)</title><rect x="169.1" y="789" width="1.1" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="172.10" y="799.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (30,165,325 samples, 1.18%)</title><rect x="29.9" y="853" width="14.0" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="32.93" y="863.5" ></text>
</g>
<g >
<title>tcp_send_ack (1,819,783 samples, 0.07%)</title><rect x="40.1" y="613" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="43.07" y="623.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,973,834 samples, 0.08%)</title><rect x="11.4" y="773" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="14.37" y="783.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (2,091,674 samples, 0.08%)</title><rect x="1177.4" y="645" width="1.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1180.43" y="655.5" ></text>
</g>
<g >
<title>kfree_skbmem (1,819,783 samples, 0.07%)</title><rect x="40.1" y="101" width="0.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="43.07" y="111.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (4,550,900 samples, 0.18%)</title><rect x="269.1" y="853" width="2.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="272.08" y="863.5" ></text>
</g>
<g >
<title>tcp_push (23,544,075 samples, 0.92%)</title><rect x="1144.0" y="613" width="10.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1146.98" y="623.5" ></text>
</g>
<g >
<title>folio_add_new_anon_rmap (1,453,300 samples, 0.06%)</title><rect x="609.2" y="613" width="0.7" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="612.25" y="623.5" ></text>
</g>
<g >
<title>__skb_clone (2,574,240 samples, 0.10%)</title><rect x="1046.2" y="517" width="1.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="1049.19" y="527.5" ></text>
</g>
<g >
<title>neigh_hh_output (1,819,783 samples, 0.07%)</title><rect x="40.1" y="469" width="0.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="43.07" y="479.5" ></text>
</g>
<g >
<title>wp_page_copy (1,973,834 samples, 0.08%)</title><rect x="11.4" y="709" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="14.37" y="719.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (265,583,417 samples, 10.41%)</title><rect x="44.5" y="885" width="122.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="47.46" y="895.5" >void std::__cxx..</text>
</g>
<g >
<title>el0_interrupt (3,990,464 samples, 0.16%)</title><rect x="266.5" y="773" width="1.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="269.50" y="783.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (2,184,087 samples, 0.09%)</title><rect x="113.6" y="773" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="116.63" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,026,495 samples, 0.08%)</title><rect x="1186.1" y="805" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1189.05" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (121,354,639 samples, 4.76%)</title><rect x="485.5" y="837" width="56.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="488.50" y="847.5" >std::..</text>
</g>
<g >
<title>tcp_sendmsg_locked (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="629" width="0.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1168.89" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (36,578,030 samples, 1.43%)</title><rect x="681.1" y="837" width="16.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="684.09" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,172,317 samples, 0.09%)</title><rect x="1184.1" y="757" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1187.14" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,143,692 samples, 0.08%)</title><rect x="1167.9" y="773" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1170.85" y="783.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (1,968,661 samples, 0.08%)</title><rect x="1171.6" y="725" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1174.63" y="735.5" ></text>
</g>
<g >
<title>el0_da (4,670,797 samples, 0.18%)</title><rect x="280.7" y="805" width="2.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="283.72" y="815.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (2,035,202 samples, 0.08%)</title><rect x="410.0" y="709" width="0.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="412.99" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (11,070,308 samples, 0.43%)</title><rect x="1154.9" y="821" width="5.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1157.87" y="831.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (1,996,686 samples, 0.08%)</title><rect x="114.6" y="485" width="1.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="117.64" y="495.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,906,620 samples, 0.07%)</title><rect x="1183.3" y="789" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1186.26" y="799.5" ></text>
</g>
<g >
<title>handle_pte_fault (754,412 samples, 0.03%)</title><rect x="11.0" y="709" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="14.02" y="719.5" ></text>
</g>
<g >
<title>__sanitizer::CacheBinaryName (1,493,302 samples, 0.06%)</title><rect x="13.9" y="933" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="16.94" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,935,125 samples, 0.08%)</title><rect x="1181.3" y="837" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1184.29" y="847.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (1,996,686 samples, 0.08%)</title><rect x="114.6" y="613" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="117.64" y="623.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,195,353 samples, 0.09%)</title><rect x="10.0" y="917" width="1.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (2,118,553 samples, 0.08%)</title><rect x="1164.0" y="805" width="1.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1167.03" y="815.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (754,412 samples, 0.03%)</title><rect x="11.0" y="901" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.02" y="911.5" ></text>
</g>
<g >
<title>ip_local_deliver (13,149,277 samples, 0.52%)</title><rect x="1040.1" y="181" width="6.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1043.11" y="191.5" ></text>
</g>
<g >
<title>do_mem_abort (1,973,834 samples, 0.08%)</title><rect x="11.4" y="805" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="14.37" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (74,728,029 samples, 2.93%)</title><rect x="989.0" y="725" width="34.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="992.05" y="735.5" >__..</text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_channel_message (1,921,676,415 samples, 75.32%)</title><rect x="271.2" y="885" width="888.8" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="274.18" y="895.5" >tt::chat::server::EpollServer::handle_channel_message</text>
</g>
<g >
<title>do_mem_abort (1,917,790 samples, 0.08%)</title><rect x="26.0" y="661" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="29.01" y="671.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1,996,686 samples, 0.08%)</title><rect x="114.6" y="549" width="1.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="117.64" y="559.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,222,690 samples, 0.05%)</title><rect x="10.5" y="869" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="13.45" y="879.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (7,020,853 samples, 0.28%)</title><rect x="632.5" y="757" width="3.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="635.55" y="767.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="869" width="1.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1163.99" y="879.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,973,834 samples, 0.08%)</title><rect x="11.4" y="741" width="0.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="14.37" y="751.5" ></text>
</g>
<g >
<title>__interception::InterceptFunction (3,587,115 samples, 0.14%)</title><rect x="12.3" y="917" width="1.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="15.28" y="927.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (78,173,693 samples, 3.06%)</title><rect x="912.1" y="837" width="36.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="915.06" y="847.5" >std..</text>
</g>
<g >
<title>dlsym (3,587,115 samples, 0.14%)</title><rect x="12.3" y="901" width="1.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="15.28" y="911.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::broadcast_to_channel (606,140,800 samples, 23.76%)</title><rect x="863.0" y="869" width="280.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="866.02" y="879.5" >tt::chat::server::EpollServer::broadc..</text>
</g>
<g >
<title>__napi_poll (1,819,783 samples, 0.07%)</title><rect x="40.1" y="309" width="0.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="43.07" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,291,674 samples, 0.09%)</title><rect x="1163.0" y="805" width="1.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1165.97" y="815.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="597" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1168.89" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2,273,088 samples, 0.09%)</title><rect x="166.2" y="853" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="169.24" y="863.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (2,097,375 samples, 0.08%)</title><rect x="281.9" y="661" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="284.91" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,112,883 samples, 0.08%)</title><rect x="1174.5" y="741" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1177.52" y="751.5" ></text>
</g>
<g >
<title>__aarch64_cas4_acq_rel (1,917,790 samples, 0.08%)</title><rect x="26.0" y="725" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="29.01" y="735.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (2,153,310 samples, 0.08%)</title><rect x="1160.0" y="837" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1162.99" y="847.5" ></text>
</g>
<g >
<title>ep_send_events (9,067,488 samples, 0.36%)</title><rect x="17.8" y="741" width="4.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="20.76" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,439,170 samples, 0.10%)</title><rect x="632.5" y="693" width="1.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="635.55" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (84,040,558 samples, 3.29%)</title><rect x="635.8" y="805" width="38.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="638.80" y="815.5" >__a..</text>
</g>
<g >
<title>skb_copy_datagram_iter (4,978,409 samples, 0.20%)</title><rect x="37.8" y="645" width="2.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="40.77" y="655.5" ></text>
</g>
<g >
<title>el0t_64_sync (20,424,944 samples, 0.80%)</title><rect x="15.6" y="901" width="9.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="18.62" y="911.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (15,421,377 samples, 0.60%)</title><rect x="1039.1" y="373" width="7.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1042.06" y="383.5" ></text>
</g>
<g >
<title>__sanitizer::MmapFixedImpl (1,996,686 samples, 0.08%)</title><rect x="114.6" y="709" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="117.64" y="719.5" ></text>
</g>
<g >
<title>__sys_sendto (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="693" width="0.9" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1168.89" y="703.5" ></text>
</g>
<g >
<title>do_anonymous_page (2,439,170 samples, 0.10%)</title><rect x="632.5" y="549" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="635.55" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,960,073 samples, 0.08%)</title><rect x="1185.1" y="741" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1188.14" y="751.5" ></text>
</g>
<g >
<title>check_heap_object (2,764,999 samples, 0.11%)</title><rect x="38.8" y="565" width="1.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="41.80" y="575.5" ></text>
</g>
<g >
<title>inet_sendmsg (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="661" width="0.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1168.89" y="671.5" ></text>
</g>
<g >
<title>memblock_is_map_memory (1,310,886 samples, 0.05%)</title><rect x="1143.4" y="549" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1146.37" y="559.5" ></text>
</g>
<g >
<title>do_page_fault (2,035,202 samples, 0.08%)</title><rect x="410.0" y="597" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="412.99" y="607.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,736,505 samples, 0.07%)</title><rect x="13.1" y="693" width="0.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="16.13" y="703.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_join_command (4,373,078 samples, 0.17%)</title><rect x="1160.0" y="885" width="2.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1162.99" y="895.5" ></text>
</g>
<g >
<title>__do_softirq (1,787,692 samples, 0.07%)</title><rect x="267.5" y="677" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="270.52" y="687.5" ></text>
</g>
<g >
<title>server (2,551,260,492 samples, 100.00%)</title><rect x="10.0" y="1013" width="1180.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" >server</text>
</g>
<g >
<title>__asan_stack_malloc_2 (36,578,030 samples, 1.43%)</title><rect x="681.1" y="821" width="16.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="684.09" y="831.5" ></text>
</g>
<g >
<title>__sys_sendto (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="693" width="1.0" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1163.99" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,736,505 samples, 0.07%)</title><rect x="13.1" y="837" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.13" y="847.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (1,819,783 samples, 0.07%)</title><rect x="40.1" y="629" width="0.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="43.07" y="639.5" ></text>
</g>
<g >
<title>call_on_irq_stack (1,787,692 samples, 0.07%)</title><rect x="267.5" y="709" width="0.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="270.52" y="719.5" ></text>
</g>
<g >
<title>alloc_anon_folio (2,439,170 samples, 0.10%)</title><rect x="632.5" y="533" width="1.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="635.55" y="543.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (4,978,409 samples, 0.20%)</title><rect x="37.8" y="613" width="2.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="40.77" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (2,291,674 samples, 0.09%)</title><rect x="1163.0" y="821" width="1.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1165.97" y="831.5" ></text>
</g>
<g >
<title>__handle_mm_fault (754,412 samples, 0.03%)</title><rect x="11.0" y="725" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="14.02" y="735.5" ></text>
</g>
<g >
<title>__inet_lookup_skb (6,374,830 samples, 0.25%)</title><rect x="1040.1" y="117" width="3.0" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1043.11" y="127.5" ></text>
</g>
<g >
<title>__arm64_sys_mmap (1,996,686 samples, 0.08%)</title><rect x="114.6" y="581" width="1.0" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="117.64" y="591.5" ></text>
</g>
<g >
<title>__sock_sendmsg (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="677" width="0.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1168.89" y="687.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1,819,783 samples, 0.07%)</title><rect x="40.1" y="565" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="43.07" y="575.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (1,497,975 samples, 0.06%)</title><rect x="675.7" y="757" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="678.74" y="767.5" ></text>
</g>
<g >
<title>vfs_read (20,892,712 samples, 0.82%)</title><rect x="32.4" y="741" width="9.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="35.40" y="751.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (1,819,783 samples, 0.07%)</title><rect x="40.1" y="597" width="0.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="43.07" y="607.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,949,765 samples, 0.12%)</title><rect x="10.0" y="949" width="1.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>___interceptor_memmove (1,053,495 samples, 0.04%)</title><rect x="410.9" y="789" width="0.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="413.93" y="799.5" ></text>
</g>
<g >
<title>arch_counter_get_cntvct (1,053,495 samples, 0.04%)</title><rect x="1045.7" y="133" width="0.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1048.71" y="143.5" ></text>
</g>
<g >
<title>sock_poll (4,647,302 samples, 0.18%)</title><rect x="19.8" y="709" width="2.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.81" y="719.5" ></text>
</g>
<g >
<title>next_uptodate_folio (754,412 samples, 0.03%)</title><rect x="11.0" y="645" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="14.02" y="655.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (2,112,883 samples, 0.08%)</title><rect x="1174.5" y="757" width="1.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1177.52" y="767.5" ></text>
</g>
<g >
<title>ip_rcv (13,149,277 samples, 0.52%)</title><rect x="1040.1" y="213" width="6.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1043.11" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,915,428 samples, 0.08%)</title><rect x="1165.0" y="821" width="0.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1168.01" y="831.5" ></text>
</g>
<g >
<title>operator new (4,458,601 samples, 0.17%)</title><rect x="556.9" y="789" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="559.92" y="799.5" ></text>
</g>
<g >
<title>__sanitizer::Symbolizer::LateInitialize (1,978,499 samples, 0.08%)</title><rect x="14.6" y="949" width="0.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="17.63" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (84,040,558 samples, 3.29%)</title><rect x="635.8" y="821" width="38.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="638.80" y="831.5" >std..</text>
</g>
<g >
<title>epoll_wait (2,033,385 samples, 0.08%)</title><rect x="25.1" y="917" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="28.07" y="927.5" ></text>
</g>
<g >
<title>std::is_constant_evaluated (2,445,306 samples, 0.10%)</title><rect x="541.6" y="837" width="1.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="544.63" y="847.5" ></text>
</g>
<g >
<title>el0_svc (1,996,686 samples, 0.08%)</title><rect x="114.6" y="645" width="1.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="117.64" y="655.5" ></text>
</g>
<g >
<title>check_heap_object (1,310,886 samples, 0.05%)</title><rect x="1143.4" y="565" width="0.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1146.37" y="575.5" ></text>
</g>
<g >
<title>netif_rx_internal (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="373" width="0.9" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1168.89" y="383.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,091,674 samples, 0.08%)</title><rect x="1177.4" y="613" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1180.43" y="623.5" ></text>
</g>
<g >
<title>___interceptor_malloc (1,978,499 samples, 0.08%)</title><rect x="14.6" y="805" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="17.63" y="815.5" ></text>
</g>
<g >
<title>el0_da (1,453,300 samples, 0.06%)</title><rect x="609.2" y="757" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="612.25" y="767.5" ></text>
</g>
<g >
<title>do_epoll_pwait.part.0 (1,780,449 samples, 0.07%)</title><rect x="23.0" y="805" width="0.8" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="25.98" y="815.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (1,968,661 samples, 0.08%)</title><rect x="1171.6" y="629" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1174.63" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (71,507,488 samples, 2.80%)</title><rect x="956.0" y="789" width="33.0" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="958.97" y="799.5" >st..</text>
</g>
<g >
<title>handle_mm_fault (1,453,300 samples, 0.06%)</title><rect x="609.2" y="693" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="612.25" y="703.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_client_data (2,491,816,789 samples, 97.67%)</title><rect x="26.9" y="917" width="1152.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="29.90" y="927.5" >tt::chat::server::EpollServer::handle_client_data</text>
</g>
<g >
<title>handle_mm_fault (1,581,410 samples, 0.06%)</title><rect x="268.3" y="725" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="271.35" y="735.5" ></text>
</g>
<g >
<title>read (34,490,320 samples, 1.35%)</title><rect x="27.9" y="885" width="16.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="30.93" y="895.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (2,035,202 samples, 0.08%)</title><rect x="410.0" y="453" width="0.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="412.99" y="463.5" ></text>
</g>
<g >
<title>do_page_fault (754,412 samples, 0.03%)</title><rect x="11.0" y="757" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="14.02" y="767.5" ></text>
</g>
<g >
<title>__schedule (2,220,466 samples, 0.09%)</title><rect x="22.0" y="693" width="1.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="24.96" y="703.5" ></text>
</g>
<g >
<title>fmt::v9::vformat[abi:cxx11] (74,738,261 samples, 2.93%)</title><rect x="376.9" y="869" width="34.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="379.85" y="879.5" >fm..</text>
</g>
<g >
<title>do_epoll_pwait.part.0 (11,287,954 samples, 0.44%)</title><rect x="17.8" y="789" width="5.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="20.76" y="799.5" ></text>
</g>
<g >
<title>void spdlog::logger::log&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (27,169,022 samples, 1.06%)</title><rect x="1166.8" y="853" width="12.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1169.84" y="863.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,581,410 samples, 0.06%)</title><rect x="268.3" y="821" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="271.35" y="831.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,035,202 samples, 0.08%)</title><rect x="410.0" y="581" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="412.99" y="591.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,978,499 samples, 0.08%)</title><rect x="14.6" y="869" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.63" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (107,339,020 samples, 4.21%)</title><rect x="116.6" y="837" width="49.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="119.60" y="847.5" >__asa..</text>
</g>
<g >
<title>arch_local_irq_enable (2,202,772 samples, 0.09%)</title><rect x="266.5" y="709" width="1.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="269.50" y="719.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,035,202 samples, 0.08%)</title><rect x="410.0" y="693" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="412.99" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (129,455,269 samples, 5.07%)</title><rect x="412.4" y="837" width="59.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="415.43" y="847.5" >__asan..</text>
</g>
<g >
<title>all (2,551,263,554 samples, 100%)</title><rect x="10.0" y="1029" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" ></text>
</g>
<g >
<title>_dl_catch_exception (754,412 samples, 0.03%)</title><rect x="11.0" y="917" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="14.02" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (121,354,639 samples, 4.76%)</title><rect x="485.5" y="805" width="56.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="488.50" y="815.5" >__asa..</text>
</g>
<g >
<title>do_mem_abort (1,453,300 samples, 0.06%)</title><rect x="609.2" y="741" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="612.25" y="751.5" ></text>
</g>
<g >
<title>invoke_syscall (17,246,398 samples, 0.68%)</title><rect x="16.7" y="821" width="8.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="19.69" y="831.5" ></text>
</g>
<g >
<title>do_el0_svc (74,681,482 samples, 2.93%)</title><rect x="1026.9" y="741" width="34.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1029.91" y="751.5" >do..</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (12,095,782 samples, 0.47%)</title><rect x="1040.1" y="149" width="5.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1043.11" y="159.5" ></text>
</g>
<g >
<title>tcp_sendmsg (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="645" width="0.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1168.89" y="655.5" ></text>
</g>
<g >
<title>aa_file_perm (2,034,390 samples, 0.08%)</title><rect x="33.4" y="677" width="1.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="36.41" y="687.5" ></text>
</g>
<g >
<title>do_translation_fault (2,439,170 samples, 0.10%)</title><rect x="632.5" y="645" width="1.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="635.55" y="655.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,035,202 samples, 0.08%)</title><rect x="410.0" y="549" width="0.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="412.99" y="559.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (12,095,782 samples, 0.47%)</title><rect x="1040.1" y="133" width="5.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1043.11" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (71,507,488 samples, 2.80%)</title><rect x="956.0" y="805" width="33.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="958.97" y="815.5" >st..</text>
</g>
<g >
<title>neigh_hh_output (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="453" width="0.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1168.89" y="463.5" ></text>
</g>
<g >
<title>do_pte_missing (1,453,300 samples, 0.06%)</title><rect x="609.2" y="645" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="612.25" y="655.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (2,091,674 samples, 0.08%)</title><rect x="1177.4" y="693" width="1.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1180.43" y="703.5" ></text>
</g>
<g >
<title>__check_object_size (4,574,637 samples, 0.18%)</title><rect x="1033.3" y="581" width="2.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1036.33" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,003,341 samples, 0.08%)</title><rect x="1180.4" y="805" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1183.36" y="815.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,978,499 samples, 0.08%)</title><rect x="14.6" y="917" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.63" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (166,116,688 samples, 6.51%)</title><rect x="785.2" y="773" width="76.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="788.16" y="783.5" >__asan_s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (6,318,390 samples, 0.25%)</title><rect x="167.3" y="885" width="2.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="170.30" y="895.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,097,375 samples, 0.08%)</title><rect x="281.9" y="709" width="1.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="284.91" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (4,351,826 samples, 0.17%)</title><rect x="1162.0" y="853" width="2.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1165.01" y="863.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2,159,411 samples, 0.08%)</title><rect x="556.9" y="773" width="1.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="559.92" y="783.5" ></text>
</g>
<g >
<title>tcp_tso_segs (2,309,516 samples, 0.09%)</title><rect x="1051.0" y="549" width="1.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1054.03" y="559.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,996,686 samples, 0.08%)</title><rect x="114.6" y="661" width="1.0" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="117.64" y="671.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="805" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1168.89" y="815.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1,819,783 samples, 0.07%)</title><rect x="40.1" y="149" width="0.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="43.07" y="159.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (754,412 samples, 0.03%)</title><rect x="11.0" y="853" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.02" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,935,125 samples, 0.08%)</title><rect x="1181.3" y="853" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1184.29" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (2,153,310 samples, 0.08%)</title><rect x="1160.0" y="853" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1162.99" y="863.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (17,246,398 samples, 0.68%)</title><rect x="16.7" y="837" width="8.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="19.69" y="847.5" ></text>
</g>
<g >
<title>get_random_u16 (1,745,329 samples, 0.07%)</title><rect x="1060.6" y="693" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1063.65" y="703.5" ></text>
</g>
<g >
<title>loopback_xmit (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="405" width="0.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1168.89" y="415.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,439,170 samples, 0.10%)</title><rect x="632.5" y="597" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="635.55" y="607.5" ></text>
</g>
<g >
<title>invoke_syscall (24,854,961 samples, 0.97%)</title><rect x="1143.4" y="725" width="11.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1146.37" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::rfind (216,250,713 samples, 8.48%)</title><rect x="171.2" y="885" width="100.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="174.17" y="895.5" >std::__cxx11..</text>
</g>
<g >
<title>__asan::CreateMainThread (1,973,834 samples, 0.08%)</title><rect x="11.4" y="949" width="0.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="14.37" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (30,852,107 samples, 1.21%)</title><rect x="544.7" y="837" width="14.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="547.72" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,679,392 samples, 0.07%)</title><rect x="679.4" y="821" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="682.40" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (2,065,771 samples, 0.08%)</title><rect x="1142.4" y="821" width="1.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1145.42" y="831.5" ></text>
</g>
<g >
<title>ip_output (18,496,250 samples, 0.72%)</title><rect x="1037.6" y="501" width="8.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1040.64" y="511.5" ></text>
</g>
<g >
<title>do_el0_svc (24,854,961 samples, 0.97%)</title><rect x="1143.4" y="757" width="11.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1146.37" y="767.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (1,497,975 samples, 0.06%)</title><rect x="1058.0" y="629" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1060.96" y="639.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (2,234,244 samples, 0.09%)</title><rect x="471.3" y="805" width="1.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="474.28" y="815.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (2,091,674 samples, 0.08%)</title><rect x="1177.4" y="629" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1180.43" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (174,066,106 samples, 6.82%)</title><rect x="1061.5" y="805" width="80.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1064.45" y="815.5" >__asan_st..</text>
</g>
<g >
<title>el0t_64_sync_handler (2,584,445 samples, 0.10%)</title><rect x="634.6" y="693" width="1.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="637.60" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (30,852,107 samples, 1.21%)</title><rect x="544.7" y="821" width="14.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="547.72" y="831.5" ></text>
</g>
<g >
<title>do_read_fault (754,412 samples, 0.03%)</title><rect x="11.0" y="677" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.02" y="687.5" ></text>
</g>
<g >
<title>ip_finish_output (18,496,250 samples, 0.72%)</title><rect x="1037.6" y="485" width="8.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1040.64" y="495.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (8,116,831 samples, 0.32%)</title><rect x="1150.0" y="133" width="3.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1153.04" y="143.5" ></text>
</g>
<g >
<title>ip_rcv_finish (13,149,277 samples, 0.52%)</title><rect x="1040.1" y="197" width="6.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1043.11" y="207.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (8,364,932 samples, 0.33%)</title><rect x="1182.2" y="853" width="3.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1185.18" y="863.5" ></text>
</g>
<g >
<title>call_on_irq_stack (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="373" width="6.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1149.98" y="383.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,118,553 samples, 0.08%)</title><rect x="1164.0" y="773" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1167.03" y="783.5" ></text>
</g>
<g >
<title>do_anonymous_page (2,097,375 samples, 0.08%)</title><rect x="281.9" y="677" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="284.91" y="687.5" ></text>
</g>
<g >
<title>main (2,539,105,157 samples, 99.52%)</title><rect x="15.6" y="949" width="1174.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="18.62" y="959.5" >main</text>
</g>
<g >
<title>do_softirq_own_stack (1,787,692 samples, 0.07%)</title><rect x="267.5" y="725" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="270.52" y="735.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (10,284,055 samples, 0.40%)</title><rect x="1173.6" y="789" width="4.8" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1176.64" y="799.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,978,499 samples, 0.08%)</title><rect x="14.6" y="709" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="17.63" y="719.5" ></text>
</g>
<g >
<title>__sock_sendmsg (68,632,013 samples, 2.69%)</title><rect x="1026.9" y="661" width="31.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1029.91" y="671.5" >__..</text>
</g>
<g >
<title>ep_poll (11,287,954 samples, 0.44%)</title><rect x="17.8" y="757" width="5.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="20.76" y="767.5" ></text>
</g>
<g >
<title>handle_softirqs (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="325" width="6.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1149.98" y="335.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (4,458,601 samples, 0.17%)</title><rect x="556.9" y="805" width="2.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="559.92" y="815.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (1,968,661 samples, 0.08%)</title><rect x="1171.6" y="693" width="0.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1174.63" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (2,003,341 samples, 0.08%)</title><rect x="1180.4" y="853" width="0.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1183.36" y="863.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (2,153,310 samples, 0.08%)</title><rect x="1160.0" y="869" width="1.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1162.99" y="879.5" ></text>
</g>
<g >
<title>inet_ehashfn (2,530,798 samples, 0.10%)</title><rect x="1041.9" y="85" width="1.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1044.89" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (217,968,031 samples, 8.54%)</title><rect x="573.9" y="853" width="100.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="576.85" y="863.5" >std::__cxx11..</text>
</g>
<g >
<title>ip_local_deliver_finish (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="181" width="6.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1149.98" y="191.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (1,679,392 samples, 0.07%)</title><rect x="679.4" y="805" width="0.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="682.40" y="815.5" ></text>
</g>
<g >
<title>__interceptor_trampoline_memcmp (2,115,500 samples, 0.08%)</title><rect x="270.2" y="837" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="273.21" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2,273,088 samples, 0.09%)</title><rect x="166.2" y="869" width="1.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="169.24" y="879.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::shared_ptr&lt;spdlog::logger&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;spdlog::logger&gt; &gt; &gt; &gt;::operator[] (1,917,790 samples, 0.08%)</title><rect x="26.0" y="869" width="0.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="29.01" y="879.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (2,035,202 samples, 0.08%)</title><rect x="410.0" y="757" width="0.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="412.99" y="767.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (21,070,490 samples, 0.83%)</title><rect x="1037.6" y="549" width="9.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1040.64" y="559.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (2,201,820 samples, 0.09%)</title><rect x="1189.0" y="757" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.98" y="767.5" ></text>
</g>
<g >
<title>tcp_data_ready (5,889,332 samples, 0.23%)</title><rect x="1150.0" y="101" width="2.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1153.04" y="111.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (28,257,879 samples, 1.11%)</title><rect x="30.8" y="805" width="13.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="33.81" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (20,561,602 samples, 0.81%)</title><rect x="600.4" y="805" width="9.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="603.41" y="815.5" ></text>
</g>
<g >
<title>process_backlog (13,149,277 samples, 0.52%)</title><rect x="1040.1" y="261" width="6.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1043.11" y="271.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,178,279 samples, 0.16%)</title><rect x="1175.5" y="693" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1178.50" y="703.5" ></text>
</g>
<g >
<title>tcp_write_xmit (23,544,075 samples, 0.92%)</title><rect x="1144.0" y="581" width="10.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1146.98" y="591.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,736,505 samples, 0.07%)</title><rect x="13.1" y="821" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.13" y="831.5" ></text>
</g>
<g >
<title>ip_rcv (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="229" width="6.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1149.98" y="239.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (2,213,410 samples, 0.09%)</title><rect x="37.8" y="597" width="1.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="40.77" y="607.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (2,003,341 samples, 0.08%)</title><rect x="1180.4" y="901" width="0.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1183.36" y="911.5" ></text>
</g>
<g >
<title>ip_finish_output (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="501" width="0.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1168.89" y="511.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,915,428 samples, 0.08%)</title><rect x="1165.0" y="773" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1168.01" y="783.5" ></text>
</g>
<g >
<title>tcp_inbound_hash.constprop.0 (2,095,639 samples, 0.08%)</title><rect x="1149.1" y="149" width="0.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1152.07" y="159.5" ></text>
</g>
<g >
<title>__libc_start_main (2,539,105,157 samples, 99.52%)</title><rect x="15.6" y="981" width="1174.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="18.62" y="991.5" >__libc_start_main</text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (1,968,661 samples, 0.08%)</title><rect x="1171.6" y="613" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1174.63" y="623.5" ></text>
</g>
<g >
<title>__send (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="821" width="0.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1168.89" y="831.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (24,854,961 samples, 0.97%)</title><rect x="1143.4" y="741" width="11.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1146.37" y="751.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,453,300 samples, 0.06%)</title><rect x="609.2" y="677" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="612.25" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (67,215,094 samples, 2.63%)</title><rect x="542.8" y="869" width="31.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="545.76" y="879.5" >st..</text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (2,035,202 samples, 0.08%)</title><rect x="410.0" y="485" width="0.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="412.99" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,539,105,157 samples, 99.52%)</title><rect x="15.6" y="965" width="1174.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="18.62" y="975.5" >[libc.so.6]</text>
</g>
<g >
<title>__tcp_push_pending_frames (33,752,601 samples, 1.32%)</title><rect x="1036.5" y="581" width="15.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1039.48" y="591.5" ></text>
</g>
<g >
<title>do_translation_fault (754,412 samples, 0.03%)</title><rect x="11.0" y="773" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="14.02" y="783.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (78,503,384 samples, 3.08%)</title><rect x="875.8" y="837" width="36.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="878.76" y="847.5" >std..</text>
</g>
<g >
<title>el0t_64_sync (754,412 samples, 0.03%)</title><rect x="11.0" y="837" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="14.02" y="847.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="421" width="0.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1168.89" y="431.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2,334,834 samples, 0.09%)</title><rect x="1153.8" y="485" width="1.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1156.79" y="495.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (4,132,390 samples, 0.16%)</title><rect x="1184.1" y="789" width="2.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1187.14" y="799.5" ></text>
</g>
<g >
<title>schedule (2,202,772 samples, 0.09%)</title><rect x="266.5" y="741" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="269.50" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (2,153,310 samples, 0.08%)</title><rect x="1160.0" y="821" width="1.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1162.99" y="831.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (2,091,674 samples, 0.08%)</title><rect x="1177.4" y="709" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1180.43" y="719.5" ></text>
</g>
<g >
<title>__sock_sendmsg (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="677" width="1.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1163.99" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,298,956 samples, 0.09%)</title><rect x="1187.9" y="773" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1190.92" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;spdlog::logger&gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;spdlog::logger&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (1,917,790 samples, 0.08%)</title><rect x="26.0" y="853" width="0.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="29.01" y="863.5" ></text>
</g>
<g >
<title>do_pte_missing (2,035,202 samples, 0.08%)</title><rect x="410.0" y="533" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="412.99" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (217,968,031 samples, 8.54%)</title><rect x="573.9" y="869" width="100.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="576.85" y="879.5" >std::__cxx11..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2,410,228 samples, 0.09%)</title><rect x="169.1" y="805" width="1.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="172.10" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (55,948,459 samples, 2.19%)</title><rect x="609.9" y="805" width="25.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="612.92" y="815.5" >s..</text>
</g>
<g >
<title>_dl_catch_exception (1,736,505 samples, 0.07%)</title><rect x="13.1" y="853" width="0.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="16.13" y="863.5" ></text>
</g>
<g >
<title>do_pte_missing (2,439,170 samples, 0.10%)</title><rect x="632.5" y="565" width="1.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="635.55" y="575.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (1,973,834 samples, 0.08%)</title><rect x="11.4" y="885" width="0.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="14.37" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,968,661 samples, 0.08%)</title><rect x="1171.6" y="597" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1174.63" y="607.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (14,711,710 samples, 0.58%)</title><rect x="1166.8" y="805" width="6.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1169.84" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (71,507,488 samples, 2.80%)</title><rect x="956.0" y="757" width="33.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="958.97" y="767.5" >__..</text>
</g>
<g >
<title>__asan_stack_malloc_1 (209,249,107 samples, 8.20%)</title><rect x="172.3" y="837" width="96.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="175.30" y="847.5" >__asan_stac..</text>
</g>
<g >
<title>MemcmpInterceptorCommon (2,435,400 samples, 0.10%)</title><rect x="269.1" y="805" width="1.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="272.08" y="815.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::parse_client_command (2,181,945,698 samples, 85.52%)</title><rect x="170.2" y="901" width="1009.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="173.22" y="911.5" >tt::chat::server::EpollServer::parse_client_command</text>
</g>
<g >
<title>__arm64_sys_epoll_pwait (13,594,507 samples, 0.53%)</title><rect x="16.7" y="805" width="6.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="19.69" y="815.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (4,581,683 samples, 0.18%)</title><rect x="633.7" y="725" width="2.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="636.68" y="735.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (23,544,075 samples, 0.92%)</title><rect x="1144.0" y="597" width="10.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1146.98" y="607.5" ></text>
</g>
<g >
<title>do_notify_resume (862,144 samples, 0.03%)</title><rect x="24.7" y="853" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="27.67" y="863.5" ></text>
</g>
<g >
<title>__asan::asan_malloc (1,978,499 samples, 0.08%)</title><rect x="14.6" y="789" width="0.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="17.63" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,960,073 samples, 0.08%)</title><rect x="1185.1" y="757" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1188.14" y="767.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (1,968,661 samples, 0.08%)</title><rect x="1171.6" y="661" width="0.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1174.63" y="671.5" ></text>
</g>
<g >
<title>tcp_rcv_established (8,116,831 samples, 0.32%)</title><rect x="1150.0" y="117" width="3.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1153.04" y="127.5" ></text>
</g>
<g >
<title>alloc_anon_folio (2,035,202 samples, 0.08%)</title><rect x="410.0" y="501" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="412.99" y="511.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (36,852,890 samples, 1.44%)</title><rect x="45.5" y="853" width="17.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="48.50" y="863.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (18,496,250 samples, 0.72%)</title><rect x="1037.6" y="405" width="8.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1040.64" y="415.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="421" width="6.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1149.98" y="431.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::base_iterator&lt;fmt::v9::appender&gt; (2,325,922 samples, 0.09%)</title><rect x="1182.2" y="805" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1185.18" y="815.5" ></text>
</g>
<g >
<title>__fdget_pos (1,394,846 samples, 0.05%)</title><rect x="31.8" y="757" width="0.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="34.75" y="767.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (72,936,153 samples, 2.86%)</title><rect x="1026.9" y="693" width="33.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1029.91" y="703.5" >__..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,172,317 samples, 0.09%)</title><rect x="1184.1" y="773" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1187.14" y="783.5" ></text>
</g>
<g >
<title>ip_finish_output2 (18,496,250 samples, 0.72%)</title><rect x="1037.6" y="453" width="8.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1040.64" y="463.5" ></text>
</g>
<g >
<title>do_vmi_munmap (1,996,686 samples, 0.08%)</title><rect x="114.6" y="501" width="1.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="117.64" y="511.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (1,497,975 samples, 0.06%)</title><rect x="1058.0" y="645" width="0.7" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1060.96" y="655.5" ></text>
</g>
<g >
<title>pthread_getspecific (2,231,502 samples, 0.09%)</title><rect x="115.6" y="773" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="118.57" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (107,339,020 samples, 4.21%)</title><rect x="116.6" y="869" width="49.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="119.60" y="879.5" >std::..</text>
</g>
<g >
<title>__asan_stack_malloc_3 (2,069,647 samples, 0.08%)</title><rect x="1179.4" y="885" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1182.40" y="895.5" ></text>
</g>
<g >
<title>ip_finish_output2 (17,123,675 samples, 0.67%)</title><rect x="1145.9" y="469" width="7.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1148.87" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (74,728,029 samples, 2.93%)</title><rect x="989.0" y="773" width="34.6" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="992.05" y="783.5" >st..</text>
</g>
<g >
<title>mprotect_fixup (1,222,690 samples, 0.05%)</title><rect x="10.5" y="757" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="13.45" y="767.5" ></text>
</g>
<g >
<title>el0_da (1,978,499 samples, 0.08%)</title><rect x="14.6" y="677" width="0.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="17.63" y="687.5" ></text>
</g>
<g >
<title>do_notify_resume (2,234,244 samples, 0.09%)</title><rect x="471.3" y="757" width="1.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="474.28" y="767.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (1,977,714 samples, 0.08%)</title><rect x="1031.2" y="581" width="0.9" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1034.23" y="591.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1,996,686 samples, 0.08%)</title><rect x="114.6" y="565" width="1.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="117.64" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (11,923,335 samples, 0.47%)</title><rect x="674.7" y="853" width="5.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="677.67" y="863.5" ></text>
</g>
<g >
<title>do_translation_fault (2,035,202 samples, 0.08%)</title><rect x="410.0" y="613" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="412.99" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_begin (2,144,556 samples, 0.08%)</title><rect x="911.1" y="821" width="1.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="914.07" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (185,164,459 samples, 7.26%)</title><rect x="698.0" y="789" width="85.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="701.01" y="799.5" >__asan_sta..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (76,358,828 samples, 2.99%)</title><rect x="875.8" y="821" width="35.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="878.76" y="831.5" >__..</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (2,003,341 samples, 0.08%)</title><rect x="1180.4" y="869" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1183.36" y="879.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,453,300 samples, 0.06%)</title><rect x="609.2" y="661" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="612.25" y="671.5" ></text>
</g>
<g >
<title>operator new (6,412,275 samples, 0.25%)</title><rect x="113.6" y="821" width="3.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="116.63" y="831.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_name_command (37,597,691 samples, 1.47%)</title><rect x="1162.0" y="885" width="17.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1165.01" y="895.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (12,457,312 samples, 0.49%)</title><rect x="1173.6" y="821" width="5.8" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1176.64" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,736,505 samples, 0.07%)</title><rect x="13.1" y="709" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="16.13" y="719.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (1,819,783 samples, 0.07%)</title><rect x="40.1" y="645" width="0.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="43.07" y="655.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Put (4,342,913 samples, 0.17%)</title><rect x="676.4" y="789" width="2.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="679.43" y="799.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="853" width="1.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1163.99" y="863.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2,034,390 samples, 0.08%)</title><rect x="33.4" y="693" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="36.41" y="703.5" ></text>
</g>
<g >
<title>do_translation_fault (4,670,797 samples, 0.18%)</title><rect x="280.7" y="773" width="2.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="283.72" y="783.5" ></text>
</g>
<g >
<title>operator new (4,126,817 samples, 0.16%)</title><rect x="409.0" y="805" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="412.03" y="815.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (2,091,674 samples, 0.08%)</title><rect x="1177.4" y="725" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1180.43" y="735.5" ></text>
</g>
<g >
<title>___interceptor_memcpy (2,273,088 samples, 0.09%)</title><rect x="166.2" y="821" width="1.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="169.24" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,915,428 samples, 0.08%)</title><rect x="1165.0" y="789" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1168.01" y="799.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (1,222,690 samples, 0.05%)</title><rect x="10.5" y="821" width="0.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="13.45" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (4,033,981 samples, 0.16%)</title><rect x="1164.0" y="837" width="1.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1167.03" y="847.5" ></text>
</g>
<g >
<title>__check_object_size (2,764,999 samples, 0.11%)</title><rect x="38.8" y="597" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="41.80" y="607.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1,977,714 samples, 0.08%)</title><rect x="1031.2" y="549" width="0.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1034.23" y="559.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="741" width="0.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1168.89" y="751.5" ></text>
</g>
<g >
<title>do_mem_abort (754,412 samples, 0.03%)</title><rect x="11.0" y="789" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="14.02" y="799.5" ></text>
</g>
<g >
<title>__do_softirq (1,819,783 samples, 0.07%)</title><rect x="40.1" y="357" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="43.07" y="367.5" ></text>
</g>
<g >
<title>__netif_receive_skb (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="261" width="6.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1149.98" y="271.5" ></text>
</g>
<g >
<title>vma_alloc_folio (2,439,170 samples, 0.10%)</title><rect x="632.5" y="501" width="1.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="635.55" y="511.5" ></text>
</g>
<g >
<title>__sock_sendmsg (24,854,961 samples, 0.97%)</title><rect x="1143.4" y="677" width="11.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1146.37" y="687.5" ></text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::advance_to (2,381,023 samples, 0.09%)</title><rect x="1172.5" y="757" width="1.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1175.54" y="767.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1,819,783 samples, 0.07%)</title><rect x="40.1" y="197" width="0.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="43.07" y="207.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,581,410 samples, 0.06%)</title><rect x="268.3" y="805" width="0.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="271.35" y="815.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,978,499 samples, 0.08%)</title><rect x="14.6" y="837" width="0.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="17.63" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,065,771 samples, 0.08%)</title><rect x="1142.4" y="805" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1145.42" y="815.5" ></text>
</g>
<g >
<title>tcp_send_mss (3,487,801 samples, 0.14%)</title><rect x="1052.1" y="597" width="1.6" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="1055.09" y="607.5" ></text>
</g>
<g >
<title>tcp_current_mss (3,487,801 samples, 0.14%)</title><rect x="1052.1" y="581" width="1.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1055.09" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (84,040,558 samples, 3.29%)</title><rect x="635.8" y="789" width="38.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="638.80" y="799.5" >__a..</text>
</g>
<g >
<title>ep_item_poll.isra.0 (6,981,008 samples, 0.27%)</title><rect x="18.7" y="725" width="3.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="21.73" y="735.5" ></text>
</g>
<g >
<title>__memcg_slab_free_hook (1,819,783 samples, 0.07%)</title><rect x="40.1" y="69" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="43.07" y="79.5" ></text>
</g>
<g >
<title>net_rx_action (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="309" width="6.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1149.98" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (6,412,275 samples, 0.25%)</title><rect x="113.6" y="837" width="3.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="116.63" y="847.5" ></text>
</g>
<g >
<title>kfree (1,222,690 samples, 0.05%)</title><rect x="10.5" y="709" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="13.45" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (23,899,963 samples, 0.94%)</title><rect x="271.8" y="869" width="11.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="274.83" y="879.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,581,410 samples, 0.06%)</title><rect x="268.3" y="709" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="271.35" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (2,003,341 samples, 0.08%)</title><rect x="1180.4" y="885" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1183.36" y="895.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="549" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1168.89" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (4,416,180 samples, 0.17%)</title><rect x="282.9" y="853" width="2.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="285.88" y="863.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (7,020,853 samples, 0.28%)</title><rect x="632.5" y="789" width="3.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="635.55" y="799.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (5,889,332 samples, 0.23%)</title><rect x="1150.0" y="69" width="2.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1153.04" y="79.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (110,451,758 samples, 4.33%)</title><rect x="62.5" y="821" width="51.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="65.55" y="831.5" >__asa..</text>
</g>
<g >
<title>do_softirq (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="405" width="6.8" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1149.98" y="415.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="165" width="6.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1149.98" y="175.5" ></text>
</g>
<g >
<title>ip_finish_output (19,458,509 samples, 0.76%)</title><rect x="1145.9" y="501" width="9.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1148.87" y="511.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (3,820,044 samples, 0.15%)</title><rect x="674.7" y="789" width="1.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="677.67" y="799.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,222,690 samples, 0.05%)</title><rect x="10.5" y="885" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="13.45" y="895.5" ></text>
</g>
<g >
<title>get_random_u16 (3,933,643 samples, 0.15%)</title><rect x="42.1" y="773" width="1.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="45.06" y="783.5" ></text>
</g>
<g >
<title>el0_da (2,584,445 samples, 0.10%)</title><rect x="634.6" y="677" width="1.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="637.60" y="687.5" ></text>
</g>
<g >
<title>tcp_rcv_established (5,720,952 samples, 0.22%)</title><rect x="1043.1" y="101" width="2.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1046.06" y="111.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,917,790 samples, 0.08%)</title><rect x="26.0" y="629" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="29.01" y="639.5" ></text>
</g>
<g >
<title>aa_inet_msg_perm (1,497,975 samples, 0.06%)</title><rect x="1058.0" y="613" width="0.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1060.96" y="623.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (3,990,464 samples, 0.16%)</title><rect x="266.5" y="805" width="1.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="269.50" y="815.5" ></text>
</g>
<g >
<title>do_el0_svc (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="757" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1163.99" y="767.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="469" width="0.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1168.89" y="479.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (18,839,261 samples, 0.74%)</title><rect x="1181.3" y="885" width="8.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1184.29" y="895.5" ></text>
</g>
<g >
<title>char const* fmt::v9::detail::parse_replacement_field&lt;char, fmt::v9::detail::vformat_to&lt;char&gt; (2,194,200 samples, 0.09%)</title><rect x="1166.8" y="789" width="1.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1169.84" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (11,923,335 samples, 0.47%)</title><rect x="674.7" y="869" width="5.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="677.67" y="879.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1,819,783 samples, 0.07%)</title><rect x="40.1" y="485" width="0.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="43.07" y="495.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (2,201,820 samples, 0.09%)</title><rect x="1189.0" y="773" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.98" y="783.5" ></text>
</g>
<g >
<title>el0_da (2,035,202 samples, 0.08%)</title><rect x="410.0" y="645" width="0.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="412.99" y="655.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (2,476,376 samples, 0.10%)</title><rect x="40.9" y="693" width="1.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="43.92" y="703.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (77,059,664 samples, 3.02%)</title><rect x="1025.8" y="773" width="35.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1028.81" y="783.5" >el0..</text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (1,053,495 samples, 0.04%)</title><rect x="410.9" y="805" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="413.93" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,201,820 samples, 0.09%)</title><rect x="1189.0" y="725" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1191.98" y="735.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (18,496,250 samples, 0.72%)</title><rect x="1037.6" y="517" width="8.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1040.64" y="527.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (35,925,269 samples, 1.41%)</title><rect x="1143.4" y="853" width="16.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1146.37" y="863.5" ></text>
</g>
<g >
<title>do_pte_missing (2,097,375 samples, 0.08%)</title><rect x="281.9" y="693" width="1.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="284.91" y="703.5" ></text>
</g>
<g >
<title>tcp_push (36,000,722 samples, 1.41%)</title><rect x="1035.4" y="597" width="16.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1038.44" y="607.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (8,116,831 samples, 0.32%)</title><rect x="1150.0" y="149" width="3.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1153.04" y="159.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,973,834 samples, 0.08%)</title><rect x="11.4" y="853" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="14.37" y="863.5" ></text>
</g>
<g >
<title>check_heap_object (4,574,637 samples, 0.18%)</title><rect x="1033.3" y="549" width="2.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1036.33" y="559.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender, int, 0&gt; (2,194,200 samples, 0.09%)</title><rect x="1166.8" y="757" width="1.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1169.84" y="767.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;::begin (78,503,384 samples, 3.08%)</title><rect x="875.8" y="853" width="36.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="878.76" y="863.5" >std..</text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (12,135,165 samples, 0.48%)</title><rect x="10.0" y="997" width="5.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (5,720,952 samples, 0.22%)</title><rect x="1043.1" y="117" width="2.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1046.06" y="127.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,143,692 samples, 0.08%)</title><rect x="1167.9" y="757" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1170.85" y="767.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (2,166,002 samples, 0.08%)</title><rect x="1023.6" y="805" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1026.61" y="815.5" ></text>
</g>
<g >
<title>el0_interrupt (2,234,244 samples, 0.09%)</title><rect x="471.3" y="773" width="1.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="474.28" y="783.5" ></text>
</g>
<g >
<title>inet_sendmsg (24,854,961 samples, 0.97%)</title><rect x="1143.4" y="661" width="11.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1146.37" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (71,487,282 samples, 2.80%)</title><rect x="377.9" y="837" width="33.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="380.87" y="847.5" >st..</text>
</g>
<g >
<title>__asan::GetCurrentThread (2,231,502 samples, 0.09%)</title><rect x="115.6" y="789" width="1.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="118.57" y="799.5" ></text>
</g>
<g >
<title>fmt::v9::detail::format_decimal_result&lt;char*&gt; fmt::v9::detail::format_decimal&lt;char, unsigned int&gt; (2,194,200 samples, 0.09%)</title><rect x="1166.8" y="741" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1169.84" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,996,686 samples, 0.08%)</title><rect x="114.6" y="677" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="117.64" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (71,487,282 samples, 2.80%)</title><rect x="377.9" y="853" width="33.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="380.87" y="863.5" >st..</text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,194,200 samples, 0.09%)</title><rect x="1166.8" y="725" width="1.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1169.84" y="735.5" ></text>
</g>
<g >
<title>ip_finish_output (1,819,783 samples, 0.07%)</title><rect x="40.1" y="517" width="0.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="43.07" y="527.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="789" width="0.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1168.89" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (129,455,269 samples, 5.07%)</title><rect x="412.4" y="853" width="59.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="415.43" y="863.5" >__asan..</text>
</g>
<g >
<title>__send (24,854,961 samples, 0.97%)</title><rect x="1143.4" y="821" width="11.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1146.37" y="831.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2,228,090 samples, 0.09%)</title><rect x="26.9" y="869" width="1.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="29.90" y="879.5" ></text>
</g>
<g >
<title>__ip_finish_output (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="485" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1168.89" y="495.5" ></text>
</g>
<g >
<title>do_page_fault (4,670,797 samples, 0.18%)</title><rect x="280.7" y="757" width="2.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="283.72" y="767.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,035,202 samples, 0.08%)</title><rect x="410.0" y="661" width="0.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="412.99" y="671.5" ></text>
</g>
<g >
<title>__asan::AsanThread::ClearShadowForThreadStackAndTLS (1,973,834 samples, 0.08%)</title><rect x="11.4" y="901" width="0.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="14.37" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (11,070,308 samples, 0.43%)</title><rect x="1154.9" y="837" width="5.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1157.87" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (209,249,107 samples, 8.20%)</title><rect x="172.3" y="853" width="96.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="175.30" y="863.5" >__asan_stac..</text>
</g>
<g >
<title>__dev_queue_xmit (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="437" width="0.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1168.89" y="447.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (107,339,020 samples, 4.21%)</title><rect x="116.6" y="853" width="49.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="119.60" y="863.5" >__asa..</text>
</g>
<g >
<title>__dev_queue_xmit (1,819,783 samples, 0.07%)</title><rect x="40.1" y="453" width="0.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="43.07" y="463.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2,049,904 samples, 0.08%)</title><rect x="168.2" y="821" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="171.16" y="831.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (2,220,466 samples, 0.09%)</title><rect x="22.0" y="725" width="1.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="24.96" y="735.5" ></text>
</g>
<g >
<title>void spdlog::details::fmt_helper::append_int&lt;int&gt; (2,201,820 samples, 0.09%)</title><rect x="1189.0" y="789" width="1.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1191.98" y="799.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,410,228 samples, 0.09%)</title><rect x="169.1" y="821" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="172.10" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,053,794 samples, 0.08%)</title><rect x="1170.7" y="709" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1173.68" y="719.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,917,790 samples, 0.08%)</title><rect x="26.0" y="757" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="29.01" y="767.5" ></text>
</g>
<g >
<title>char const* std::addressof&lt;char const&gt; (1,679,392 samples, 0.07%)</title><rect x="679.4" y="789" width="0.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="682.40" y="799.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,978,499 samples, 0.08%)</title><rect x="14.6" y="693" width="0.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="17.63" y="703.5" ></text>
</g>
<g >
<title>tcp_poll (2,517,309 samples, 0.10%)</title><rect x="20.8" y="693" width="1.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="23.79" y="703.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,917,790 samples, 0.08%)</title><rect x="26.0" y="613" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="29.01" y="623.5" ></text>
</g>
<g >
<title>__sys_sendto (70,700,609 samples, 2.77%)</title><rect x="1026.9" y="677" width="32.7" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1029.91" y="687.5" >__..</text>
</g>
<g >
<title>void spdlog::logger::log_&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (27,169,022 samples, 1.06%)</title><rect x="1166.8" y="837" width="12.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1169.84" y="847.5" ></text>
</g>
<g >
<title>el0_da (754,412 samples, 0.03%)</title><rect x="11.0" y="805" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="14.02" y="815.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (4,178,279 samples, 0.16%)</title><rect x="1175.5" y="725" width="1.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1178.50" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (32,138,183 samples, 1.26%)</title><rect x="559.0" y="821" width="14.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="561.99" y="831.5" ></text>
</g>
<g >
<title>do_notify_resume (2,202,772 samples, 0.09%)</title><rect x="266.5" y="757" width="1.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="269.50" y="767.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (1,595,926 samples, 0.06%)</title><rect x="1057.2" y="581" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1060.22" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2,049,904 samples, 0.08%)</title><rect x="168.2" y="789" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="171.16" y="799.5" ></text>
</g>
<g >
<title>tcp_sendmsg (24,854,961 samples, 0.97%)</title><rect x="1143.4" y="645" width="11.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1146.37" y="655.5" ></text>
</g>
<g >
<title>el0t_64_irq (3,990,464 samples, 0.16%)</title><rect x="266.5" y="821" width="1.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="269.50" y="831.5" ></text>
</g>
<g >
<title>invoke_syscall (1,996,686 samples, 0.08%)</title><rect x="114.6" y="597" width="1.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="117.64" y="607.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="437" width="6.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1149.98" y="447.5" ></text>
</g>
<g >
<title>_start (2,539,105,157 samples, 99.52%)</title><rect x="15.6" y="997" width="1174.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="18.62" y="1007.5" >_start</text>
</g>
<g >
<title>el0_svc (20,424,944 samples, 0.80%)</title><rect x="15.6" y="869" width="9.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="18.62" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,118,553 samples, 0.08%)</title><rect x="1164.0" y="789" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1167.03" y="799.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2,234,244 samples, 0.09%)</title><rect x="471.3" y="741" width="1.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="474.28" y="751.5" ></text>
</g>
<g >
<title>___interceptor_memcmp (2,435,400 samples, 0.10%)</title><rect x="269.1" y="837" width="1.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="272.08" y="847.5" ></text>
</g>
<g >
<title>el0_da (1,581,410 samples, 0.06%)</title><rect x="268.3" y="789" width="0.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="271.35" y="799.5" ></text>
</g>
<g >
<title>__arm64_sys_read (22,287,558 samples, 0.87%)</title><rect x="31.8" y="773" width="10.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="34.75" y="783.5" ></text>
</g>
<g >
<title>sock_recvmsg (16,660,838 samples, 0.65%)</title><rect x="34.4" y="709" width="7.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="37.36" y="719.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (754,412 samples, 0.03%)</title><rect x="11.0" y="821" width="0.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="14.02" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;int, false&gt;::_M_next (1,590,159 samples, 0.06%)</title><rect x="875.0" y="821" width="0.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="878.02" y="831.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (5,720,952 samples, 0.22%)</title><rect x="1043.1" y="37" width="2.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1046.06" y="47.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (2,091,674 samples, 0.08%)</title><rect x="1177.4" y="661" width="1.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1180.43" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,173,257 samples, 0.09%)</title><rect x="1178.4" y="757" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1181.40" y="767.5" ></text>
</g>
<g >
<title>process_backlog (1,819,783 samples, 0.07%)</title><rect x="40.1" y="293" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="43.07" y="303.5" ></text>
</g>
<g >
<title>void spdlog::details::fmt_helper::append_int&lt;int&gt; (2,091,674 samples, 0.08%)</title><rect x="1177.4" y="741" width="1.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1180.43" y="751.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1,819,783 samples, 0.07%)</title><rect x="40.1" y="229" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="43.07" y="239.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (4,022,455 samples, 0.16%)</title><rect x="1170.7" y="757" width="1.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1173.68" y="767.5" ></text>
</g>
<g >
<title>__send (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="821" width="1.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1163.99" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,917,790 samples, 0.08%)</title><rect x="26.0" y="709" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="29.01" y="719.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2,035,202 samples, 0.08%)</title><rect x="410.0" y="421" width="0.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="412.99" y="431.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,298,956 samples, 0.09%)</title><rect x="1187.9" y="757" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1190.92" y="767.5" ></text>
</g>
<g >
<title>spdlog::details::full_formatter::format (6,269,953 samples, 0.25%)</title><rect x="1175.5" y="757" width="2.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1178.50" y="767.5" ></text>
</g>
<g >
<title>_dl_exception_create_format (1,736,505 samples, 0.07%)</title><rect x="13.1" y="789" width="0.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="16.13" y="799.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,222,690 samples, 0.05%)</title><rect x="10.5" y="901" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.45" y="911.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (1,968,661 samples, 0.08%)</title><rect x="1171.6" y="677" width="0.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1174.63" y="687.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (2,439,170 samples, 0.10%)</title><rect x="632.5" y="517" width="1.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="635.55" y="527.5" ></text>
</g>
<g >
<title>__alloc_skb (7,605,183 samples, 0.30%)</title><rect x="1053.7" y="581" width="3.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1056.71" y="591.5" ></text>
</g>
<g >
<title>do_mprotect_pkey.constprop.0 (1,222,690 samples, 0.05%)</title><rect x="10.5" y="773" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.45" y="783.5" ></text>
</g>
<g >
<title>mmap_region (1,996,686 samples, 0.08%)</title><rect x="114.6" y="517" width="1.0" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="117.64" y="527.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (21,584,947 samples, 0.85%)</title><rect x="1144.9" y="533" width="10.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1147.89" y="543.5" ></text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (203,171,447 samples, 7.96%)</title><rect x="282.9" y="869" width="94.0" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="285.88" y="879.5" >fmt::v9::fo..</text>
</g>
<g >
<title>do_translation_fault (1,581,410 samples, 0.06%)</title><rect x="268.3" y="757" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="271.35" y="767.5" ></text>
</g>
<g >
<title>lock_sock_nested (2,284,319 samples, 0.09%)</title><rect x="34.4" y="661" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="37.36" y="671.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (3,587,115 samples, 0.14%)</title><rect x="12.3" y="869" width="1.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="15.28" y="879.5" ></text>
</g>
<g >
<title>spdlog::details::registry::instance (1,917,790 samples, 0.08%)</title><rect x="26.0" y="901" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="29.01" y="911.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (2,476,376 samples, 0.10%)</title><rect x="40.9" y="677" width="1.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="43.92" y="687.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (8,364,932 samples, 0.33%)</title><rect x="1182.2" y="821" width="3.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1185.18" y="831.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (8,539,204 samples, 0.33%)</title><rect x="1186.1" y="869" width="3.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1189.05" y="879.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,035,202 samples, 0.08%)</title><rect x="410.0" y="677" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="412.99" y="687.5" ></text>
</g>
<g >
<title>ip_queue_xmit (21,584,947 samples, 0.85%)</title><rect x="1144.9" y="549" width="10.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1147.89" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (78,173,693 samples, 3.06%)</title><rect x="912.1" y="821" width="36.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="915.06" y="831.5" >__a..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="245" width="6.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1149.98" y="255.5" ></text>
</g>
<g >
<title>memset (2,235,544 samples, 0.09%)</title><rect x="1059.6" y="677" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1062.61" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,381,023 samples, 0.09%)</title><rect x="1172.5" y="741" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1175.54" y="751.5" ></text>
</g>
<g >
<title>__napi_poll (13,149,277 samples, 0.52%)</title><rect x="1040.1" y="277" width="6.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1043.11" y="287.5" ></text>
</g>
<g >
<title>update_blocked_averages (1,787,692 samples, 0.07%)</title><rect x="267.5" y="629" width="0.8" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="270.52" y="639.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,439,170 samples, 0.10%)</title><rect x="632.5" y="709" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="635.55" y="719.5" ></text>
</g>
<g >
<title>invoke_syscall (1,222,690 samples, 0.05%)</title><rect x="10.5" y="805" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="13.45" y="815.5" ></text>
</g>
<g >
<title>el0_svc (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="773" width="1.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1163.99" y="783.5" ></text>
</g>
<g >
<title>____do_softirq (1,787,692 samples, 0.07%)</title><rect x="267.5" y="693" width="0.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="270.52" y="703.5" ></text>
</g>
<g >
<title>perf_event_mmap_event (1,222,690 samples, 0.05%)</title><rect x="10.5" y="725" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="13.45" y="735.5" ></text>
</g>
<g >
<title>mas_wr_end_piv (1,996,686 samples, 0.08%)</title><rect x="114.6" y="453" width="1.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="117.64" y="463.5" ></text>
</g>
<g >
<title>tcp_skb_entail (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="613" width="1.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1163.99" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_key_equals (166,116,688 samples, 6.51%)</title><rect x="785.2" y="789" width="76.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="788.16" y="799.5" >std::__d..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2,273,088 samples, 0.09%)</title><rect x="166.2" y="837" width="1.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="169.24" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (4,224,804 samples, 0.17%)</title><rect x="542.8" y="837" width="1.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="545.76" y="847.5" ></text>
</g>
<g >
<title>operator new (7,020,853 samples, 0.28%)</title><rect x="632.5" y="773" width="3.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="635.55" y="783.5" ></text>
</g>
<g >
<title>__asan::AsanThread::Init (1,973,834 samples, 0.08%)</title><rect x="11.4" y="917" width="0.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="14.37" y="927.5" ></text>
</g>
<g >
<title>__sanitizer::internal_allocator (1,736,505 samples, 0.07%)</title><rect x="13.1" y="741" width="0.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="16.13" y="751.5" ></text>
</g>
<g >
<title>el0_svc (24,854,961 samples, 0.97%)</title><rect x="1143.4" y="773" width="11.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1146.37" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (20,561,602 samples, 0.81%)</title><rect x="600.4" y="821" width="9.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="603.41" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (198,755,267 samples, 7.79%)</title><rect x="284.9" y="821" width="92.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="287.93" y="831.5" >__asan_sta..</text>
</g>
<g >
<title>tcp_established_options (1,808,409 samples, 0.07%)</title><rect x="1052.9" y="565" width="0.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1055.87" y="575.5" ></text>
</g>
<g >
<title>sock_def_readable (5,720,952 samples, 0.22%)</title><rect x="1043.1" y="53" width="2.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1046.06" y="63.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (20,424,944 samples, 0.80%)</title><rect x="15.6" y="885" width="9.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="18.62" y="895.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (3,990,464 samples, 0.16%)</title><rect x="266.5" y="789" width="1.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="269.50" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,060,152 samples, 0.08%)</title><rect x="1162.0" y="805" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.01" y="815.5" ></text>
</g>
<g >
<title>vma_alloc_folio (2,035,202 samples, 0.08%)</title><rect x="410.0" y="469" width="0.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="412.99" y="479.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,291,674 samples, 0.09%)</title><rect x="1163.0" y="773" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.97" y="783.5" ></text>
</g>
<g >
<title>fmt::v9::detail::parse_format_string&lt;false, char, fmt::v9::detail::vformat_to&lt;char&gt; (12,517,510 samples, 0.49%)</title><rect x="1167.9" y="789" width="5.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1170.85" y="799.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (13,149,277 samples, 0.52%)</title><rect x="1040.1" y="229" width="6.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1043.11" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (55,948,459 samples, 2.19%)</title><rect x="609.9" y="821" width="25.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="612.92" y="831.5" >s..</text>
</g>
<g >
<title>get_random_u16 (1,871,442 samples, 0.07%)</title><rect x="23.8" y="805" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="26.81" y="815.5" ></text>
</g>
<g >
<title>handle_softirqs (15,421,377 samples, 0.60%)</title><rect x="1039.1" y="309" width="7.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1042.06" y="319.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1,819,783 samples, 0.07%)</title><rect x="40.1" y="581" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="43.07" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (1,978,499 samples, 0.08%)</title><rect x="14.6" y="741" width="0.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="17.63" y="751.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,036,311 samples, 0.08%)</title><rect x="36.8" y="613" width="1.0" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="39.83" y="623.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2,299,190 samples, 0.09%)</title><rect x="557.9" y="757" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="560.92" y="767.5" ></text>
</g>
<g >
<title>inet_sendmsg (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="661" width="1.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1163.99" y="671.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1,819,783 samples, 0.07%)</title><rect x="40.1" y="277" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="43.07" y="287.5" ></text>
</g>
<g >
<title>__do_softirq (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="341" width="6.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1149.98" y="351.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (16,760,663 samples, 0.66%)</title><rect x="948.2" y="789" width="7.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="951.22" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,153,310 samples, 0.08%)</title><rect x="1160.0" y="789" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1162.99" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (67,360,465 samples, 2.64%)</title><rect x="377.9" y="805" width="31.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="380.87" y="815.5" >__..</text>
</g>
<g >
<title>el0_svc_common.constprop.0 (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="741" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1163.99" y="751.5" ></text>
</g>
<g >
<title>InitializeCommonInterceptors (3,587,115 samples, 0.14%)</title><rect x="12.3" y="933" width="1.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="15.28" y="943.5" ></text>
</g>
<g >
<title>dlsym (1,978,499 samples, 0.08%)</title><rect x="14.6" y="933" width="0.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="17.63" y="943.5" ></text>
</g>
<g >
<title>__netif_rx (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="389" width="0.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1168.89" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (4,351,826 samples, 0.17%)</title><rect x="1162.0" y="837" width="2.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1165.01" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,026,495 samples, 0.08%)</title><rect x="1186.1" y="789" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1189.05" y="799.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1,978,499 samples, 0.08%)</title><rect x="14.6" y="885" width="0.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="17.63" y="895.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (2,159,411 samples, 0.08%)</title><rect x="556.9" y="757" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="559.92" y="767.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (8,539,204 samples, 0.33%)</title><rect x="1186.1" y="853" width="3.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1189.05" y="863.5" ></text>
</g>
<g >
<title>__asan::InitializeAsanInterceptors (3,587,115 samples, 0.14%)</title><rect x="12.3" y="949" width="1.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="15.28" y="959.5" ></text>
</g>
<g >
<title>el0_svc (77,059,664 samples, 3.02%)</title><rect x="1025.8" y="757" width="35.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1028.81" y="767.5" >el0..</text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (754,412 samples, 0.03%)</title><rect x="11.0" y="885" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.02" y="895.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,453,300 samples, 0.06%)</title><rect x="609.2" y="773" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="612.25" y="783.5" ></text>
</g>
<g >
<title>__inet_lookup_established (6,374,830 samples, 0.25%)</title><rect x="1040.1" y="101" width="3.0" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1043.11" y="111.5" ></text>
</g>
<g >
<title>do_el0_svc (28,257,879 samples, 1.11%)</title><rect x="30.8" y="821" width="13.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="33.81" y="831.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (1,977,714 samples, 0.08%)</title><rect x="1031.2" y="597" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1034.23" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::end (2,173,257 samples, 0.09%)</title><rect x="1178.4" y="789" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1181.40" y="799.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::shared_ptr&lt;spdlog::logger&gt; &gt;, true&gt; &gt;::allocate (1,917,790 samples, 0.08%)</title><rect x="26.0" y="805" width="0.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="29.01" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (32,138,183 samples, 1.26%)</title><rect x="559.0" y="837" width="14.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="561.99" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (2,003,341 samples, 0.08%)</title><rect x="1180.4" y="837" width="0.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1183.36" y="847.5" ></text>
</g>
<g >
<title>__ip_finish_output (17,123,675 samples, 0.67%)</title><rect x="1145.9" y="485" width="7.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1148.87" y="495.5" ></text>
</g>
<g >
<title>arch_counter_get_cntvct (2,309,451 samples, 0.09%)</title><rect x="1050.0" y="533" width="1.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1052.96" y="543.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (1,996,686 samples, 0.08%)</title><rect x="114.6" y="693" width="1.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="117.64" y="703.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (4,033,981 samples, 0.16%)</title><rect x="1164.0" y="853" width="1.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1167.03" y="863.5" ></text>
</g>
<g >
<title>call_on_irq_stack (15,421,377 samples, 0.60%)</title><rect x="1039.1" y="357" width="7.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1042.06" y="367.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (6,039,010 samples, 0.24%)</title><rect x="1183.3" y="805" width="2.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1186.26" y="815.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (2,036,311 samples, 0.08%)</title><rect x="36.8" y="645" width="1.0" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="39.83" y="655.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (1,787,692 samples, 0.07%)</title><rect x="267.5" y="741" width="0.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="270.52" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (1,996,686 samples, 0.08%)</title><rect x="114.6" y="773" width="1.0" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="117.64" y="783.5" ></text>
</g>
<g >
<title>spdlog::details::short_filename_formatter&lt;spdlog::details::null_scoped_padder&gt;::basename (2,298,956 samples, 0.09%)</title><rect x="1187.9" y="789" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1190.92" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (395,326,492 samples, 15.50%)</title><rect x="680.2" y="853" width="182.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="683.18" y="863.5" >std::__detail::_Map_bas..</text>
</g>
<g >
<title>spdlog::details::registry::registry (1,917,790 samples, 0.08%)</title><rect x="26.0" y="885" width="0.9" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="29.01" y="895.5" ></text>
</g>
<g >
<title>el0_svc (1,222,690 samples, 0.05%)</title><rect x="10.5" y="853" width="0.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="13.45" y="863.5" ></text>
</g>
<g >
<title>alloc_pages (1,977,714 samples, 0.08%)</title><rect x="1031.2" y="565" width="0.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1034.23" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,970,340 samples, 0.16%)</title><rect x="1168.8" y="741" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1171.84" y="751.5" ></text>
</g>
<g >
<title>el0_da (1,736,505 samples, 0.07%)</title><rect x="13.1" y="677" width="0.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="16.13" y="687.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (862,144 samples, 0.03%)</title><rect x="24.7" y="821" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="27.67" y="831.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2,166,002 samples, 0.08%)</title><rect x="1023.6" y="789" width="1.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1026.61" y="799.5" ></text>
</g>
<g >
<title>__send (79,655,462 samples, 3.12%)</title><rect x="1024.6" y="805" width="36.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1027.61" y="815.5" >__s..</text>
</g>
<g >
<title>[libfmt.so.9.1.0] (1,053,495 samples, 0.04%)</title><rect x="410.9" y="821" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="413.93" y="831.5" ></text>
</g>
<g >
<title>[libfmt.so.9.1.0] (1,053,495 samples, 0.04%)</title><rect x="410.9" y="837" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="413.93" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (32,138,183 samples, 1.26%)</title><rect x="559.0" y="805" width="14.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="561.99" y="815.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (169,378,172 samples, 6.64%)</title><rect x="783.7" y="821" width="78.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="786.65" y="831.5" >std::_Has..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,053,794 samples, 0.08%)</title><rect x="1170.7" y="725" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1173.68" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,003,341 samples, 0.08%)</title><rect x="1180.4" y="789" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1183.36" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (174,066,106 samples, 6.82%)</title><rect x="1061.5" y="821" width="80.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1064.45" y="831.5" >__asan_st..</text>
</g>
<g >
<title>__arm64_sys_mprotect (1,222,690 samples, 0.05%)</title><rect x="10.5" y="789" width="0.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="13.45" y="799.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (21,584,947 samples, 0.85%)</title><rect x="1144.9" y="565" width="10.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1147.89" y="575.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2,068,596 samples, 0.08%)</title><rect x="1058.7" y="661" width="0.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1061.66" y="671.5" ></text>
</g>
<g >
<title>fpsimd_restore_current_state (862,144 samples, 0.03%)</title><rect x="24.7" y="837" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="27.67" y="847.5" ></text>
</g>
<g >
<title>do_el0_svc (17,246,398 samples, 0.68%)</title><rect x="16.7" y="853" width="8.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="19.69" y="863.5" ></text>
</g>
<g >
<title>do_wp_page (1,917,790 samples, 0.08%)</title><rect x="26.0" y="581" width="0.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="29.01" y="591.5" ></text>
</g>
<g >
<title>do_mem_abort (4,670,797 samples, 0.18%)</title><rect x="280.7" y="789" width="2.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="283.72" y="799.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (1,917,790 samples, 0.08%)</title><rect x="26.0" y="773" width="0.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="29.01" y="783.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1,819,783 samples, 0.07%)</title><rect x="40.1" y="405" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="43.07" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3,760,378 samples, 0.15%)</title><rect x="678.4" y="837" width="1.8" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="681.44" y="847.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (1,053,495 samples, 0.04%)</title><rect x="1045.7" y="149" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1048.71" y="159.5" ></text>
</g>
<g >
<title>ip_local_deliver (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="197" width="6.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1149.98" y="207.5" ></text>
</g>
<g >
<title>ksys_read (20,892,712 samples, 0.82%)</title><rect x="32.4" y="757" width="9.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="35.40" y="767.5" ></text>
</g>
<g >
<title>handle_softirqs (1,819,783 samples, 0.07%)</title><rect x="40.1" y="341" width="0.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="43.07" y="351.5" ></text>
</g>
<g >
<title>___interceptor_read.part.0 (36,718,410 samples, 1.44%)</title><rect x="26.9" y="901" width="17.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="29.90" y="911.5" ></text>
</g>
<g >
<title>handle_softirqs (1,787,692 samples, 0.07%)</title><rect x="267.5" y="661" width="0.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="270.52" y="671.5" ></text>
</g>
<g >
<title>__netif_receive_skb (13,149,277 samples, 0.52%)</title><rect x="1040.1" y="245" width="6.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1043.11" y="255.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,299,190 samples, 0.09%)</title><rect x="557.9" y="773" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="560.92" y="783.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,978,499 samples, 0.08%)</title><rect x="14.6" y="773" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="17.63" y="783.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (2,097,375 samples, 0.08%)</title><rect x="281.9" y="645" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="284.91" y="655.5" ></text>
</g>
<g >
<title>spdlog::details::full_formatter::format (4,500,776 samples, 0.18%)</title><rect x="1187.9" y="805" width="2.1" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1190.92" y="815.5" ></text>
</g>
<g >
<title>post_alloc_hook (2,262,510 samples, 0.09%)</title><rect x="632.6" y="453" width="1.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="635.63" y="463.5" ></text>
</g>
<g >
<title>tcp_push (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="613" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1168.89" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,325,922 samples, 0.09%)</title><rect x="1182.2" y="773" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1185.18" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (71,507,488 samples, 2.80%)</title><rect x="956.0" y="773" width="33.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="958.97" y="783.5" >__..</text>
</g>
<g >
<title>__local_bh_enable_ip (1,819,783 samples, 0.07%)</title><rect x="40.1" y="437" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="43.07" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,439,170 samples, 0.10%)</title><rect x="632.5" y="725" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="635.55" y="735.5" ></text>
</g>
<g >
<title>__alloc_pages (1,977,714 samples, 0.08%)</title><rect x="1031.2" y="533" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1034.23" y="543.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (1,996,686 samples, 0.08%)</title><rect x="114.6" y="757" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="117.64" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (16,760,663 samples, 0.66%)</title><rect x="948.2" y="805" width="7.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="951.22" y="815.5" ></text>
</g>
<g >
<title>std::hash&lt;int&gt;::operator (2,229,317 samples, 0.09%)</title><rect x="862.0" y="821" width="1.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="864.99" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (46,924,261 samples, 1.84%)</title><rect x="610.8" y="773" width="21.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="613.84" y="783.5" >_..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,060,152 samples, 0.08%)</title><rect x="1162.0" y="821" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.01" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,917,790 samples, 0.08%)</title><rect x="26.0" y="693" width="0.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="29.01" y="703.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,819,783 samples, 0.07%)</title><rect x="40.1" y="85" width="0.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="43.07" y="95.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="389" width="6.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1149.98" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,973,834 samples, 0.08%)</title><rect x="11.4" y="757" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="14.37" y="767.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2,049,904 samples, 0.08%)</title><rect x="168.2" y="805" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="171.16" y="815.5" ></text>
</g>
<g >
<title>lock_sock_nested (2,238,156 samples, 0.09%)</title><rect x="1026.9" y="613" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1029.91" y="623.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1,819,783 samples, 0.07%)</title><rect x="40.1" y="133" width="0.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="43.07" y="143.5" ></text>
</g>
<g >
<title>do_anonymous_page (2,035,202 samples, 0.08%)</title><rect x="410.0" y="517" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="412.99" y="527.5" ></text>
</g>
<g >
<title>rw_verify_area (4,231,874 samples, 0.17%)</title><rect x="32.4" y="725" width="2.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="35.40" y="735.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (24,854,961 samples, 0.97%)</title><rect x="1143.4" y="709" width="11.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1146.37" y="719.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (2,091,615 samples, 0.08%)</title><rect x="409.0" y="757" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="412.03" y="767.5" ></text>
</g>
<g >
<title>__sanitizer_internal_memset (1,736,505 samples, 0.07%)</title><rect x="13.1" y="725" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="16.13" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,587,115 samples, 0.14%)</title><rect x="12.3" y="885" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.28" y="895.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (6,512,709 samples, 0.26%)</title><rect x="1187.0" y="821" width="3.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1189.99" y="831.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::base_iterator&lt;fmt::v9::appender&gt; (2,053,794 samples, 0.08%)</title><rect x="1170.7" y="741" width="0.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1173.68" y="751.5" ></text>
</g>
<g >
<title>spdlog::default_logger_raw (1,917,790 samples, 0.08%)</title><rect x="26.0" y="917" width="0.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="29.01" y="927.5" ></text>
</g>
<g >
<title>__fdget (2,068,596 samples, 0.08%)</title><rect x="1058.7" y="645" width="0.9" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1061.66" y="655.5" ></text>
</g>
<g >
<title>ip_output (21,584,947 samples, 0.85%)</title><rect x="1144.9" y="517" width="10.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1147.89" y="527.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_5 (1,250,874 samples, 0.05%)</title><rect x="43.9" y="901" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="46.88" y="911.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (74,728,029 samples, 2.93%)</title><rect x="989.0" y="805" width="34.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="992.05" y="815.5" >st..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (26,393,506 samples, 1.03%)</title><rect x="544.7" y="789" width="12.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="547.72" y="799.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (7,137,511 samples, 0.28%)</title><rect x="1032.1" y="597" width="3.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1035.14" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (57,417,412 samples, 2.25%)</title><rect x="573.9" y="821" width="26.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="576.85" y="831.5" >_..</text>
</g>
<g >
<title>spdlog::pattern_formatter::format (8,382,836 samples, 0.33%)</title><rect x="1174.5" y="773" width="3.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1177.52" y="783.5" ></text>
</g>
<g >
<title>fmt::v9::detail::vformat_to&lt;char&gt; (8,364,932 samples, 0.33%)</title><rect x="1182.2" y="837" width="3.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1185.18" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,173,257 samples, 0.09%)</title><rect x="1178.4" y="773" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1181.40" y="783.5" ></text>
</g>
<g >
<title>do_mmap (1,996,686 samples, 0.08%)</title><rect x="114.6" y="533" width="1.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="117.64" y="543.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (64,895,882 samples, 2.54%)</title><rect x="1027.9" y="613" width="30.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1030.95" y="623.5" >tc..</text>
</g>
<g >
<title>__asan_stack_malloc_3 (2,069,647 samples, 0.08%)</title><rect x="1179.4" y="901" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1182.40" y="911.5" ></text>
</g>
<g >
<title>___interceptor_memcmp (2,435,400 samples, 0.10%)</title><rect x="269.1" y="821" width="1.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="272.08" y="831.5" ></text>
</g>
<g >
<title>tcp_data_queue (5,720,952 samples, 0.22%)</title><rect x="1043.1" y="85" width="2.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1046.06" y="95.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (35,925,269 samples, 1.41%)</title><rect x="1143.4" y="869" width="16.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1146.37" y="879.5" ></text>
</g>
<g >
<title>__ip_finish_output (1,819,783 samples, 0.07%)</title><rect x="40.1" y="501" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="43.07" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_key_equals (2,003,341 samples, 0.08%)</title><rect x="1180.4" y="821" width="0.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1183.36" y="831.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (3,820,044 samples, 0.15%)</title><rect x="674.7" y="773" width="1.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="677.67" y="783.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (1,595,926 samples, 0.06%)</title><rect x="1057.2" y="565" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1060.22" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (166,116,688 samples, 6.51%)</title><rect x="785.2" y="805" width="76.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="788.16" y="815.5" >std::__d..</text>
</g>
<g >
<title>___interceptor_send.part.0 (81,821,464 samples, 3.21%)</title><rect x="1023.6" y="821" width="37.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1026.61" y="831.5" >___..</text>
</g>
<g >
<title>filemap_map_pages (754,412 samples, 0.03%)</title><rect x="11.0" y="661" width="0.4" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="14.02" y="671.5" ></text>
</g>
<g >
<title>tcp_write_xmit (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="581" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1168.89" y="591.5" ></text>
</g>
<g >
<title>el0_da (1,973,834 samples, 0.08%)</title><rect x="11.4" y="821" width="0.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="14.37" y="831.5" ></text>
</g>
<g >
<title>do_mem_abort (1,581,410 samples, 0.06%)</title><rect x="268.3" y="773" width="0.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="271.35" y="783.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator[] (162,996,180 samples, 6.39%)</title><rect x="948.2" y="837" width="75.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="951.22" y="847.5" >std::uno..</text>
</g>
<g >
<title>___interceptor_send.part.0 (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="837" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1163.99" y="847.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (11,982,515 samples, 0.47%)</title><rect x="10.0" y="981" width="5.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="991.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (4,978,409 samples, 0.20%)</title><rect x="37.8" y="629" width="2.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="40.77" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (57,417,412 samples, 2.25%)</title><rect x="573.9" y="837" width="26.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="576.85" y="847.5" >_..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,381,023 samples, 0.09%)</title><rect x="1172.5" y="725" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1175.54" y="735.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="837" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1168.89" y="847.5" ></text>
</g>
<g >
<title>__pi_clear_page (2,035,202 samples, 0.08%)</title><rect x="410.0" y="405" width="0.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="412.99" y="415.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; fmt::v9::detail::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (198,755,267 samples, 7.79%)</title><rect x="284.9" y="853" width="92.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="287.93" y="863.5" >fmt::v9::b..</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (169,378,172 samples, 6.64%)</title><rect x="783.7" y="837" width="78.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="786.65" y="847.5" >std::_Has..</text>
</g>
<g >
<title>void spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (18,839,261 samples, 0.74%)</title><rect x="1181.3" y="901" width="8.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1184.29" y="911.5" ></text>
</g>
<g >
<title>__ip_finish_output (18,496,250 samples, 0.72%)</title><rect x="1037.6" y="469" width="8.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1040.64" y="479.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (24,854,961 samples, 0.97%)</title><rect x="1143.4" y="789" width="11.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1146.37" y="799.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (67,215,094 samples, 2.63%)</title><rect x="542.8" y="853" width="31.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="545.76" y="863.5" >vo..</text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;int, false&gt;::_M_incr (5,693,196 samples, 0.22%)</title><rect x="873.1" y="837" width="2.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="876.12" y="847.5" ></text>
</g>
<g >
<title>do_wp_page (1,973,834 samples, 0.08%)</title><rect x="11.4" y="725" width="0.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="14.37" y="735.5" ></text>
</g>
<g >
<title>perf_event_mmap (1,222,690 samples, 0.05%)</title><rect x="10.5" y="741" width="0.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="13.45" y="751.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,917,790 samples, 0.08%)</title><rect x="26.0" y="597" width="0.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="29.01" y="607.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::assign_username (37,597,691 samples, 1.47%)</title><rect x="1162.0" y="869" width="17.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1165.01" y="879.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="709" width="0.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1168.89" y="719.5" ></text>
</g>
<g >
<title>release_sock (2,076,041 samples, 0.08%)</title><rect x="35.4" y="661" width="1.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="38.41" y="671.5" ></text>
</g>
<g >
<title>el0_svc (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="773" width="0.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1168.89" y="783.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2,299,190 samples, 0.09%)</title><rect x="557.9" y="741" width="1.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="560.92" y="751.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,439,170 samples, 0.10%)</title><rect x="632.5" y="581" width="1.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="635.55" y="591.5" ></text>
</g>
<g >
<title>neigh_hh_output (18,496,250 samples, 0.72%)</title><rect x="1037.6" y="437" width="8.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1040.64" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,973,834 samples, 0.08%)</title><rect x="11.4" y="869" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.37" y="879.5" ></text>
</g>
<g >
<title>el0t_64_sync (24,854,961 samples, 0.97%)</title><rect x="1143.4" y="805" width="11.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1146.37" y="815.5" ></text>
</g>
<g >
<title>neigh_hh_output (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="453" width="6.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1149.98" y="463.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,949,765 samples, 0.12%)</title><rect x="10.0" y="933" width="1.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="943.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (1,310,886 samples, 0.05%)</title><rect x="1143.4" y="581" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1146.37" y="591.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2,228,090 samples, 0.09%)</title><rect x="26.9" y="885" width="1.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="29.90" y="895.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (2,035,202 samples, 0.08%)</title><rect x="410.0" y="725" width="0.9" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="412.99" y="735.5" ></text>
</g>
<g >
<title>ip_local_deliver (1,819,783 samples, 0.07%)</title><rect x="40.1" y="213" width="0.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="43.07" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,978,499 samples, 0.08%)</title><rect x="14.6" y="853" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.63" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,112,883 samples, 0.08%)</title><rect x="1174.5" y="725" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1177.52" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,080,986 samples, 0.08%)</title><rect x="678.4" y="821" width="1.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="681.44" y="831.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,453,300 samples, 0.06%)</title><rect x="609.2" y="629" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="612.25" y="639.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (1,996,686 samples, 0.08%)</title><rect x="114.6" y="741" width="1.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="117.64" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,584,445 samples, 0.10%)</title><rect x="634.6" y="709" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="637.60" y="719.5" ></text>
</g>
<g >
<title>__split_vma (1,996,686 samples, 0.08%)</title><rect x="114.6" y="469" width="1.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="117.64" y="479.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="357" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1168.89" y="367.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (1,968,661 samples, 0.08%)</title><rect x="1171.6" y="741" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1174.63" y="751.5" ></text>
</g>
<g >
<title>tcp_sendmsg (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="645" width="1.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1163.99" y="655.5" ></text>
</g>
<g >
<title>ip_output (1,819,783 samples, 0.07%)</title><rect x="40.1" y="533" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="43.07" y="543.5" ></text>
</g>
<g >
<title>do_mem_abort (2,035,202 samples, 0.08%)</title><rect x="410.0" y="629" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="412.99" y="639.5" ></text>
</g>
<g >
<title>do_page_fault (1,453,300 samples, 0.06%)</title><rect x="609.2" y="709" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="612.25" y="719.5" ></text>
</g>
<g >
<title>__alloc_pages (2,439,170 samples, 0.10%)</title><rect x="632.5" y="469" width="1.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="635.55" y="479.5" ></text>
</g>
<g >
<title>invoke_syscall (2,219,768 samples, 0.09%)</title><rect x="1161.0" y="725" width="1.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1163.99" y="735.5" ></text>
</g>
<g >
<title>tt::chat::server::ChannelManager::get_members (162,996,180 samples, 6.39%)</title><rect x="948.2" y="853" width="75.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="951.22" y="863.5" >tt::chat..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (74,728,029 samples, 2.93%)</title><rect x="989.0" y="789" width="34.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="992.05" y="799.5" >st..</text>
</g>
<g >
<title>do_epoll_wait (11,287,954 samples, 0.44%)</title><rect x="17.8" y="773" width="5.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="20.76" y="783.5" ></text>
</g>
<g >
<title>tcp_data_ready (5,720,952 samples, 0.22%)</title><rect x="1043.1" y="69" width="2.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1046.06" y="79.5" ></text>
</g>
<g >
<title>___interceptor_memcpy (2,273,088 samples, 0.09%)</title><rect x="166.2" y="805" width="1.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="169.24" y="815.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (754,412 samples, 0.03%)</title><rect x="11.0" y="869" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.02" y="879.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1,787,692 samples, 0.07%)</title><rect x="267.5" y="645" width="0.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="270.52" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (2,229,317 samples, 0.09%)</title><rect x="862.0" y="837" width="1.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="864.99" y="847.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (395,326,492 samples, 15.50%)</title><rect x="680.2" y="869" width="182.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="683.18" y="879.5" >std::unordered_map&lt;int,..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (283,972,877 samples, 11.13%)</title><rect x="411.4" y="869" width="131.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="414.42" y="879.5" >std::__cxx11::ba..</text>
</g>
<g >
<title>__asan::AsanInitInternal (9,032,750 samples, 0.35%)</title><rect x="11.4" y="965" width="4.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="14.37" y="975.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::vformat_to&lt;fmt::v9::appender, 0&gt; (10,300,057 samples, 0.40%)</title><rect x="1181.3" y="869" width="4.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1184.29" y="879.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (13,149,277 samples, 0.52%)</title><rect x="1040.1" y="165" width="6.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1043.11" y="175.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="533" width="0.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1168.89" y="543.5" ></text>
</g>
<g >
<title>do_page_fault (2,439,170 samples, 0.10%)</title><rect x="632.5" y="629" width="1.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="635.55" y="639.5" ></text>
</g>
<g >
<title>____do_softirq (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="357" width="6.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1149.98" y="367.5" ></text>
</g>
<g >
<title>___slab_alloc (2,236,725 samples, 0.09%)</title><rect x="1053.7" y="549" width="1.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1056.71" y="559.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (2,026,495 samples, 0.08%)</title><rect x="1186.1" y="821" width="0.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1189.05" y="831.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (2,234,244 samples, 0.09%)</title><rect x="471.3" y="789" width="1.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="474.28" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (185,164,459 samples, 7.26%)</title><rect x="698.0" y="821" width="85.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="701.01" y="831.5" >std::__det..</text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::vformat_to&lt;fmt::v9::appender, 0&gt; (14,711,710 samples, 0.58%)</title><rect x="1166.8" y="821" width="6.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1169.84" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (185,164,459 samples, 7.26%)</title><rect x="698.0" y="805" width="85.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="701.01" y="815.5" >__asan_sta..</text>
</g>
<g >
<title>tcp_recvmsg (14,184,462 samples, 0.56%)</title><rect x="34.4" y="677" width="6.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="37.36" y="687.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (4,180,773 samples, 0.16%)</title><rect x="113.6" y="805" width="2.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="116.63" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (116,864,033 samples, 4.58%)</title><rect x="62.5" y="853" width="54.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="65.55" y="863.5" >std::..</text>
</g>
<g >
<title>aa_inet_msg_perm (2,476,376 samples, 0.10%)</title><rect x="40.9" y="661" width="1.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="43.92" y="671.5" ></text>
</g>
<g >
<title>ktime_get (7,874,022 samples, 0.31%)</title><rect x="1047.4" y="549" width="3.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1050.38" y="559.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (2,764,999 samples, 0.11%)</title><rect x="38.8" y="581" width="1.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="41.80" y="591.5" ></text>
</g>
<g >
<title>operator new (1,917,790 samples, 0.08%)</title><rect x="26.0" y="789" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="29.01" y="799.5" ></text>
</g>
<g >
<title>security_file_permission (2,034,390 samples, 0.08%)</title><rect x="33.4" y="709" width="1.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="36.41" y="719.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (258,942,940 samples, 10.15%)</title><rect x="1023.6" y="853" width="119.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1026.61" y="863.5" >tt::chat::serv..</text>
</g>
<g >
<title>tcp_v4_rcv (1,819,783 samples, 0.07%)</title><rect x="40.1" y="165" width="0.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="43.07" y="175.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (2,042,862 samples, 0.08%)</title><rect x="1165.9" y="853" width="0.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1168.89" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (4,224,804 samples, 0.17%)</title><rect x="542.8" y="821" width="1.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="545.76" y="831.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (2,159,411 samples, 0.08%)</title><rect x="556.9" y="741" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="559.92" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,973,834 samples, 0.08%)</title><rect x="11.4" y="837" width="0.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="14.37" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,968,661 samples, 0.08%)</title><rect x="1171.6" y="581" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1174.63" y="591.5" ></text>
</g>
<g >
<title>__alloc_pages (2,035,202 samples, 0.08%)</title><rect x="410.0" y="437" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="412.99" y="447.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::run (2,539,105,157 samples, 99.52%)</title><rect x="15.6" y="933" width="1174.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="18.62" y="943.5" >tt::chat::server::EpollServer::run</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1,819,783 samples, 0.07%)</title><rect x="40.1" y="181" width="0.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="43.07" y="191.5" ></text>
</g>
<g >
<title>call_on_irq_stack (1,819,783 samples, 0.07%)</title><rect x="40.1" y="389" width="0.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="43.07" y="399.5" ></text>
</g>
<g >
<title>__fget_light (2,068,596 samples, 0.08%)</title><rect x="1058.7" y="629" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1061.66" y="639.5" ></text>
</g>
<g >
<title>handle_mm_fault (4,670,797 samples, 0.18%)</title><rect x="280.7" y="741" width="2.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="283.72" y="751.5" ></text>
</g>
<g >
<title>do_softirq (1,819,783 samples, 0.07%)</title><rect x="40.1" y="421" width="0.8" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="43.07" y="431.5" ></text>
</g>
<g >
<title>__kfree_skb (1,819,783 samples, 0.07%)</title><rect x="40.1" y="117" width="0.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="43.07" y="127.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (2,035,202 samples, 0.08%)</title><rect x="410.0" y="741" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="412.99" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (1,917,790 samples, 0.08%)</title><rect x="26.0" y="741" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="29.01" y="751.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (4,126,817 samples, 0.16%)</title><rect x="409.0" y="789" width="1.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="412.03" y="799.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (18,496,250 samples, 0.72%)</title><rect x="1037.6" y="421" width="8.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1040.64" y="431.5" ></text>
</g>
<g >
<title>____do_softirq (1,819,783 samples, 0.07%)</title><rect x="40.1" y="373" width="0.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="43.07" y="383.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,035,202 samples, 0.08%)</title><rect x="410.0" y="565" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="412.99" y="575.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (1,968,661 samples, 0.08%)</title><rect x="1171.6" y="645" width="0.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1174.63" y="655.5" ></text>
</g>
<g >
<title>do_mem_abort (2,439,170 samples, 0.10%)</title><rect x="632.5" y="661" width="1.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="635.55" y="671.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (2,439,170 samples, 0.10%)</title><rect x="632.5" y="485" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="635.55" y="495.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (74,681,482 samples, 2.93%)</title><rect x="1026.9" y="725" width="34.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1029.91" y="735.5" >el..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (162,996,180 samples, 6.39%)</title><rect x="948.2" y="821" width="75.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="951.22" y="831.5" >std::__d..</text>
</g>
<g >
<title>kmem_cache_alloc_node (2,871,457 samples, 0.11%)</title><rect x="1054.7" y="549" width="1.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1057.74" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (2,118,553 samples, 0.08%)</title><rect x="1164.0" y="821" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1167.03" y="831.5" ></text>
</g>
<g >
<title>process_backlog (14,725,058 samples, 0.58%)</title><rect x="1147.0" y="277" width="6.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1149.98" y="287.5" ></text>
</g>
<g >
<title>operator delete (8,162,957 samples, 0.32%)</title><rect x="674.7" y="805" width="3.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="677.67" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (121,354,639 samples, 4.76%)</title><rect x="485.5" y="821" width="56.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="488.50" y="831.5" >__asa..</text>
</g>
<g >
<title>__asan_stack_malloc_3 (4,416,180 samples, 0.17%)</title><rect x="282.9" y="837" width="2.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="285.88" y="847.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (2,091,674 samples, 0.08%)</title><rect x="1177.4" y="677" width="1.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1180.43" y="687.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (9,824,102 samples, 0.39%)</title><rect x="36.4" y="661" width="4.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="39.37" y="671.5" ></text>
</g>
<g >
<title>inet_sendmsg (67,134,038 samples, 2.63%)</title><rect x="1026.9" y="645" width="31.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1029.91" y="655.5" >in..</text>
</g>
<g >
<title>__asan::AsanThread::ThreadStart (1,973,834 samples, 0.08%)</title><rect x="11.4" y="933" width="0.9" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="14.37" y="943.5" ></text>
</g>
<g >
<title>sock_def_readable (5,889,332 samples, 0.23%)</title><rect x="1150.0" y="85" width="2.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1153.04" y="95.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,231,502 samples, 0.09%)</title><rect x="115.6" y="805" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="118.57" y="815.5" ></text>
</g>
<g >
<title>____do_softirq (15,421,377 samples, 0.60%)</title><rect x="1039.1" y="341" width="7.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1042.06" y="351.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,325,922 samples, 0.09%)</title><rect x="1182.2" y="789" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1185.18" y="799.5" ></text>
</g>
</g>
</svg>
