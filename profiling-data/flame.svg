<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1078.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1061" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1061" > </text>
<g id="frames">
<g >
<title>__asan_stack_malloc_0 (22,658,729 samples, 0.03%)</title><rect x="1145.3" y="693" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1148.25" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (12,544,591 samples, 0.02%)</title><rect x="1131.9" y="741" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1134.92" y="751.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (70,120,034 samples, 0.10%)</title><rect x="1046.1" y="37" width="1.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1049.08" y="47.5" ></text>
</g>
<g >
<title>handle_softirqs (12,048,243 samples, 0.02%)</title><rect x="1028.6" y="581" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1031.60" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (14,126,448 samples, 0.02%)</title><rect x="1142.2" y="693" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1145.22" y="703.5" ></text>
</g>
<g >
<title>__usecs_to_jiffies (10,801,444 samples, 0.02%)</title><rect x="1069.9" y="69" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1072.86" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (89,398,914 samples, 0.13%)</title><rect x="967.0" y="853" width="1.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="969.99" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (108,265,604 samples, 0.16%)</title><rect x="963.2" y="789" width="1.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="966.16" y="799.5" ></text>
</g>
<g >
<title>____do_softirq (7,552,234 samples, 0.01%)</title><rect x="670.6" y="645" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="673.64" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (13,956,225 samples, 0.02%)</title><rect x="968.3" y="821" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="971.27" y="831.5" ></text>
</g>
<g >
<title>__fget_light (12,143,297 samples, 0.02%)</title><rect x="27.4" y="741" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="30.40" y="751.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (10,697,592 samples, 0.02%)</title><rect x="1070.2" y="85" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1073.19" y="95.5" ></text>
</g>
<g >
<title>tcp_ack (52,440,991 samples, 0.08%)</title><rect x="1069.5" y="101" width="0.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1072.48" y="111.5" ></text>
</g>
<g >
<title>ip_send_check (10,540,586 samples, 0.02%)</title><rect x="1048.3" y="501" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1051.34" y="511.5" ></text>
</g>
<g >
<title>tcp_ack (21,754,535 samples, 0.03%)</title><rect x="1045.5" y="85" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1048.54" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (268,864,460 samples, 0.39%)</title><rect x="1092.7" y="837" width="4.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1095.74" y="847.5" ></text>
</g>
<g >
<title>do_pte_missing (19,584,204 samples, 0.03%)</title><rect x="757.9" y="613" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="760.89" y="623.5" ></text>
</g>
<g >
<title>el0t_64_irq (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="629" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1186.71" y="639.5" ></text>
</g>
<g >
<title>do_notify_resume (11,829,163 samples, 0.02%)</title><rect x="734.2" y="773" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="737.16" y="783.5" ></text>
</g>
<g >
<title>____do_softirq (12,016,552 samples, 0.02%)</title><rect x="966.8" y="645" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="969.79" y="655.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::chrono::__is_duration&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::value, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::type std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (11,796,614 samples, 0.02%)</title><rect x="1184.6" y="789" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1187.63" y="799.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (45,670,837 samples, 0.07%)</title><rect x="1098.8" y="789" width="0.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1101.81" y="799.5" ></text>
</g>
<g >
<title>ip_rcv_finish (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="357" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1186.71" y="367.5" ></text>
</g>
<g >
<title>__asan::AsanInitIsRunning (12,178,506 samples, 0.02%)</title><rect x="194.0" y="885" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="196.99" y="895.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (10,164,126 samples, 0.01%)</title><rect x="965.0" y="789" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="968.00" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (32,506,850 samples, 0.05%)</title><rect x="1150.5" y="869" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1153.53" y="879.5" ></text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (58,829,137 samples, 0.08%)</title><rect x="1174.1" y="869" width="1.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1177.14" y="879.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,408,513 samples, 0.01%)</title><rect x="960.8" y="501" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="963.78" y="511.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="613" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1130.59" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1,440,431,578 samples, 2.07%)</title><rect x="734.4" y="869" width="24.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="737.36" y="879.5" >s..</text>
</g>
<g >
<title>el0_svc_common.constprop.0 (11,056,620 samples, 0.02%)</title><rect x="1097.3" y="741" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1100.30" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (10,519,195 samples, 0.02%)</title><rect x="1167.4" y="789" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1170.36" y="799.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (13,359,149 samples, 0.02%)</title><rect x="1074.6" y="357" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1077.63" y="367.5" ></text>
</g>
<g >
<title>__ip_finish_output (182,753,248 samples, 0.26%)</title><rect x="1045.1" y="469" width="3.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1048.06" y="479.5" ></text>
</g>
<g >
<title>__sock_sendmsg (11,056,620 samples, 0.02%)</title><rect x="1097.3" y="677" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1100.30" y="687.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (12,048,243 samples, 0.02%)</title><rect x="1028.6" y="709" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1031.60" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (43,292,209 samples, 0.06%)</title><rect x="1149.8" y="837" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1152.79" y="847.5" ></text>
</g>
<g >
<title>__aarch64_cas1_acq_rel (10,046,701 samples, 0.01%)</title><rect x="784.2" y="805" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="787.22" y="815.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (798,074,861 samples, 1.15%)</title><rect x="1159.9" y="853" width="13.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1162.87" y="863.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (11,561,780 samples, 0.02%)</title><rect x="1049.7" y="661" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1052.66" y="671.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (11,174,451 samples, 0.02%)</title><rect x="853.5" y="789" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="856.49" y="799.5" ></text>
</g>
<g >
<title>fmt::v9::detail::count_digits (44,430,276 samples, 0.06%)</title><rect x="1102.6" y="725" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1105.63" y="735.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (44,915,710 samples, 0.06%)</title><rect x="1184.8" y="773" width="0.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1187.83" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (80,619,712 samples, 0.12%)</title><rect x="1160.1" y="805" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1163.05" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,712,842,706 samples, 2.46%)</title><rect x="973.9" y="789" width="29.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="976.92" y="799.5" >__..</text>
</g>
<g >
<title>__irq_exit_rcu (23,780,708 samples, 0.03%)</title><rect x="1063.6" y="709" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1066.59" y="719.5" ></text>
</g>
<g >
<title>tcp_send_ack (7,552,234 samples, 0.01%)</title><rect x="670.6" y="501" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="673.64" y="511.5" ></text>
</g>
<g >
<title>expire_timers (11,638,897 samples, 0.02%)</title><rect x="842.4" y="613" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="845.38" y="623.5" ></text>
</g>
<g >
<title>kfree_skbmem (10,310,866 samples, 0.01%)</title><rect x="575.7" y="629" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="578.74" y="639.5" ></text>
</g>
<g >
<title>tcp_ack (12,530,041 samples, 0.02%)</title><rect x="1043.4" y="549" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1046.44" y="559.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (16,564,072 samples, 0.02%)</title><rect x="783.2" y="725" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="786.19" y="735.5" ></text>
</g>
<g >
<title>void tt::chat::check_error&lt;bool, char const*&gt; (10,908,684 samples, 0.02%)</title><rect x="1189.8" y="901" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1192.81" y="911.5" ></text>
</g>
<g >
<title>sock_recvmsg (8,920,581,394 samples, 12.82%)</title><rect x="490.8" y="709" width="151.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="493.83" y="719.5" >sock_recvmsg</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="565" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1130.59" y="575.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="677" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1121.18" y="687.5" ></text>
</g>
<g >
<title>fmt::v9::detail::format_decimal_result&lt;char*&gt; fmt::v9::detail::format_decimal&lt;char, unsigned int&gt; (66,396,176 samples, 0.10%)</title><rect x="1102.3" y="741" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1105.26" y="751.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;::try_reserve (55,401,603 samples, 0.08%)</title><rect x="1140.9" y="709" width="0.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1143.90" y="719.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (8,784,434 samples, 0.01%)</title><rect x="757.9" y="565" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="760.89" y="575.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (37,382,260 samples, 0.05%)</title><rect x="1177.6" y="709" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1180.62" y="719.5" ></text>
</g>
<g >
<title>___interceptor_read (12,383,079 samples, 0.02%)</title><rect x="189.6" y="901" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="192.65" y="911.5" ></text>
</g>
<g >
<title>rw_verify_area (4,915,287,207 samples, 7.06%)</title><rect x="390.7" y="725" width="83.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="393.71" y="735.5" >rw_verify..</text>
</g>
<g >
<title>__tcp_transmit_skb (563,798,004 samples, 0.81%)</title><rect x="1065.8" y="565" width="9.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1068.83" y="575.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (12,048,243 samples, 0.02%)</title><rect x="1028.6" y="725" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1031.60" y="735.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,552,234 samples, 0.01%)</title><rect x="670.6" y="709" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="673.64" y="719.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (7,552,234 samples, 0.01%)</title><rect x="670.6" y="693" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="673.64" y="703.5" ></text>
</g>
<g >
<title>pty_write (11,047,934 samples, 0.02%)</title><rect x="1147.7" y="421" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1150.74" y="431.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (108,548,805 samples, 0.16%)</title><rect x="961.3" y="821" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="964.32" y="831.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (25,270,079 samples, 0.04%)</title><rect x="1078.8" y="581" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1081.76" y="591.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (25,024,647 samples, 0.04%)</title><rect x="1068.1" y="101" width="0.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1071.09" y="111.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (34,749,956 samples, 0.05%)</title><rect x="1161.6" y="773" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1164.60" y="783.5" ></text>
</g>
<g >
<title>aa_inet_msg_perm (82,367,786 samples, 0.12%)</title><rect x="588.4" y="677" width="1.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="591.43" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (6,892,739 samples, 0.01%)</title><rect x="1176.2" y="805" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1179.24" y="815.5" ></text>
</g>
<g >
<title>__begin_current_label_crit_section (374,393,946 samples, 0.54%)</title><rect x="444.3" y="693" width="6.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="447.31" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (55,152,995 samples, 0.08%)</title><rect x="1187.7" y="645" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1190.69" y="655.5" ></text>
</g>
<g >
<title>do_anonymous_page (19,584,204 samples, 0.03%)</title><rect x="757.9" y="597" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="760.89" y="607.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="613" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1186.71" y="623.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; fmt::v9::detail::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (23,806,231 samples, 0.03%)</title><rect x="1087.9" y="837" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1090.91" y="847.5" ></text>
</g>
<g >
<title>rcu_core (10,397,576 samples, 0.01%)</title><rect x="961.0" y="597" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="963.96" y="607.5" ></text>
</g>
<g >
<title>el0t_64_irq (11,829,163 samples, 0.02%)</title><rect x="734.2" y="837" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="737.16" y="847.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (35,150,443 samples, 0.05%)</title><rect x="582.3" y="165" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="585.31" y="175.5" ></text>
</g>
<g >
<title>tcp_release_cb (22,142,195 samples, 0.03%)</title><rect x="541.5" y="645" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="544.52" y="655.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (151,893,592 samples, 0.22%)</title><rect x="1138.3" y="661" width="2.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1141.32" y="671.5" ></text>
</g>
<g >
<title>call_on_irq_stack (10,475,808 samples, 0.02%)</title><rect x="853.3" y="677" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="856.31" y="687.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (33,048,410 samples, 0.05%)</title><rect x="1075.6" y="565" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1078.57" y="575.5" ></text>
</g>
<g >
<title>mod_timer (22,241,193 samples, 0.03%)</title><rect x="1069.1" y="53" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1072.11" y="63.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (11,759,169 samples, 0.02%)</title><rect x="1131.1" y="805" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1134.14" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,165,369 samples, 0.02%)</title><rect x="1109.2" y="629" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1112.15" y="639.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (10,534,622 samples, 0.02%)</title><rect x="1185.4" y="741" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1188.42" y="751.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char*, char*&gt; (11,069,662 samples, 0.02%)</title><rect x="1140.9" y="677" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1143.90" y="687.5" ></text>
</g>
<g >
<title>do_page_fault (9,130,414 samples, 0.01%)</title><rect x="842.6" y="741" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="845.58" y="751.5" ></text>
</g>
<g >
<title>process_backlog (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="469" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1067.93" y="479.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (11,753,563 samples, 0.02%)</title><rect x="1085.9" y="853" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1088.86" y="863.5" ></text>
</g>
<g >
<title>do_el0_svc (8,913,380,091 samples, 12.81%)</title><rect x="26.2" y="853" width="151.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="29.16" y="863.5" >do_el0_svc</text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (141,533,499 samples, 0.20%)</title><rect x="1181.7" y="741" width="2.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1184.68" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (11,321,101 samples, 0.02%)</title><rect x="1144.3" y="709" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1147.32" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,468,019,802 samples, 2.11%)</title><rect x="758.8" y="869" width="24.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="761.79" y="879.5" >s..</text>
</g>
<g >
<title>process_backlog (162,354,855 samples, 0.23%)</title><rect x="1045.1" y="261" width="2.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1048.06" y="271.5" ></text>
</g>
<g >
<title>write (12,141,826 samples, 0.02%)</title><rect x="1189.0" y="709" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1192.01" y="719.5" ></text>
</g>
<g >
<title>el0_svc (892,623,093 samples, 1.28%)</title><rect x="1064.9" y="773" width="15.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1067.93" y="783.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (31,077,283 samples, 0.04%)</title><rect x="783.7" y="837" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="786.69" y="847.5" ></text>
</g>
<g >
<title>tcp_sendmsg (840,776,318 samples, 1.21%)</title><rect x="1064.9" y="645" width="14.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1067.93" y="655.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (437,513,995 samples, 0.63%)</title><rect x="1066.8" y="245" width="7.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1069.79" y="255.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (69,590,117 samples, 0.10%)</title><rect x="1124.5" y="677" width="1.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1127.48" y="687.5" ></text>
</g>
<g >
<title>el0_svc (11,056,620 samples, 0.02%)</title><rect x="1097.3" y="773" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1100.30" y="783.5" ></text>
</g>
<g >
<title>handle_pte_fault (19,584,204 samples, 0.03%)</title><rect x="757.9" y="629" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="760.89" y="639.5" ></text>
</g>
<g >
<title>sock_def_readable (6,738,333 samples, 0.01%)</title><rect x="783.2" y="405" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="786.19" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (31,077,283 samples, 0.04%)</title><rect x="783.7" y="869" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="786.69" y="879.5" ></text>
</g>
<g >
<title>__send (903,083,946 samples, 1.30%)</title><rect x="1064.8" y="821" width="15.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1067.76" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (43,292,209 samples, 0.06%)</title><rect x="1149.8" y="885" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1152.79" y="895.5" ></text>
</g>
<g >
<title>security_file_permission (1,911,711,663 samples, 2.75%)</title><rect x="441.7" y="709" width="32.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="444.65" y="719.5" >se..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (112,247,608 samples, 0.16%)</title><rect x="1179.8" y="741" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1182.77" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (11,116,079 samples, 0.02%)</title><rect x="967.7" y="789" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="970.72" y="799.5" ></text>
</g>
<g >
<title>handle_softirqs (20,806,089 samples, 0.03%)</title><rect x="960.8" y="629" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="963.78" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (32,517,221 samples, 0.05%)</title><rect x="1089.9" y="805" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1092.90" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (10,075,502 samples, 0.01%)</title><rect x="1091.6" y="805" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1094.56" y="815.5" ></text>
</g>
<g >
<title>invoke_syscall (19,392,813,661 samples, 27.87%)</title><rect x="342.5" y="789" width="328.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="345.48" y="799.5" >invoke_syscall</text>
</g>
<g >
<title>___interceptor_memcmp (11,736,731 samples, 0.02%)</title><rect x="842.9" y="837" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="845.92" y="847.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (169,663,805 samples, 0.24%)</title><rect x="168.8" y="677" width="2.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="171.80" y="687.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (259,630,297 samples, 0.37%)</title><rect x="1044.5" y="581" width="4.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1047.50" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (11,759,169 samples, 0.02%)</title><rect x="1131.1" y="789" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1134.14" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,387,337,659 samples, 1.99%)</title><rect x="734.4" y="837" width="23.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="737.36" y="847.5" >_..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,727,804,149 samples, 2.48%)</title><rect x="881.6" y="805" width="29.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="884.56" y="815.5" >__..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,534,622 samples, 0.02%)</title><rect x="1185.4" y="661" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1188.42" y="671.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (24,538,465 samples, 0.04%)</title><rect x="582.5" y="149" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="585.49" y="159.5" ></text>
</g>
<g >
<title>sk_reset_timer (9,160,355 samples, 0.01%)</title><rect x="1045.4" y="69" width="0.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1048.38" y="79.5" ></text>
</g>
<g >
<title>char* fmt::v9::format_int::format_signed&lt;int&gt; (54,406,174 samples, 0.08%)</title><rect x="1186.0" y="757" width="0.9" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1189.00" y="767.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (196,048,536 samples, 0.28%)</title><rect x="1161.4" y="805" width="3.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1164.42" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (56,342,742 samples, 0.08%)</title><rect x="1146.4" y="741" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1149.40" y="751.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (76,481,764 samples, 0.11%)</title><rect x="1086.4" y="837" width="1.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1089.42" y="847.5" ></text>
</g>
<g >
<title>handle_softirqs (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="533" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1121.18" y="543.5" ></text>
</g>
<g >
<title>schedule (11,829,163 samples, 0.02%)</title><rect x="734.2" y="757" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="737.16" y="767.5" ></text>
</g>
<g >
<title>ip_rcv (162,354,855 samples, 0.23%)</title><rect x="1045.1" y="213" width="2.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1048.06" y="223.5" ></text>
</g>
<g >
<title>invoke_syscall (11,056,620 samples, 0.02%)</title><rect x="1097.3" y="725" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1100.30" y="735.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (21,802,686 samples, 0.03%)</title><rect x="1153.6" y="853" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1156.64" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (66,204,571 samples, 0.10%)</title><rect x="1151.1" y="853" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1154.08" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (27,209,856 samples, 0.04%)</title><rect x="846.7" y="853" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="849.74" y="863.5" ></text>
</g>
<g >
<title>__release_sock (10,632,249 samples, 0.02%)</title><rect x="1065.1" y="613" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1068.11" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (146,459,920 samples, 0.21%)</title><rect x="1154.0" y="869" width="2.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1157.01" y="879.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (23,780,708 samples, 0.03%)</title><rect x="1063.6" y="757" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1066.59" y="767.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (11,693,349 samples, 0.02%)</title><rect x="1074.0" y="165" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1077.01" y="175.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (22,173,861 samples, 0.03%)</title><rect x="1002.6" y="741" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1005.59" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (93,354,298 samples, 0.13%)</title><rect x="1088.3" y="805" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1091.32" y="815.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (78,998,149 samples, 0.11%)</title><rect x="1077.9" y="613" width="1.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1080.85" y="623.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (809,288,645 samples, 1.16%)</title><rect x="1065.5" y="629" width="13.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1068.47" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (10,075,502 samples, 0.01%)</title><rect x="1091.6" y="789" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1094.56" y="799.5" ></text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;int&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, int&amp;&gt; (11,135,049 samples, 0.02%)</title><rect x="1149.4" y="901" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1152.42" y="911.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (11,056,620 samples, 0.02%)</title><rect x="1097.3" y="853" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1100.30" y="863.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="341" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1121.18" y="351.5" ></text>
</g>
<g >
<title>alloc_pages (11,464,969 samples, 0.02%)</title><rect x="1044.0" y="565" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1046.96" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (22,294,434 samples, 0.03%)</title><rect x="1141.8" y="709" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1144.84" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (67,550,024 samples, 0.10%)</title><rect x="1170.1" y="757" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1173.07" y="767.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (336,312,931 samples, 0.48%)</title><rect x="1122.1" y="709" width="5.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1125.08" y="719.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (332,269,657 samples, 0.48%)</title><rect x="577.7" y="645" width="5.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="580.66" y="655.5" ></text>
</g>
<g >
<title>__arm64_sys_read (108,814,945 samples, 0.16%)</title><rect x="340.0" y="789" width="1.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="343.02" y="799.5" ></text>
</g>
<g >
<title>mutex_unlock (30,507,334 samples, 0.04%)</title><rect x="176.2" y="741" width="0.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="179.20" y="751.5" ></text>
</g>
<g >
<title>operator new (10,293,760 samples, 0.01%)</title><rect x="1087.2" y="773" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1090.16" y="783.5" ></text>
</g>
<g >
<title>inet_accept (10,703,330 samples, 0.02%)</title><rect x="1149.0" y="725" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1152.05" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (33,072,238 samples, 0.05%)</title><rect x="1147.9" y="757" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1150.93" y="767.5" ></text>
</g>
<g >
<title>call_on_irq_stack (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="581" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1121.18" y="591.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (11,805,172 samples, 0.02%)</title><rect x="1064.6" y="821" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1067.56" y="831.5" ></text>
</g>
<g >
<title>el0_interrupt (10,475,808 samples, 0.02%)</title><rect x="853.3" y="741" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="856.31" y="751.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char*, char*&gt; (68,052,041 samples, 0.10%)</title><rect x="1125.9" y="661" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1128.87" y="671.5" ></text>
</g>
<g >
<title>tcp_write_xmit (663,482,810 samples, 0.95%)</title><rect x="1065.8" y="581" width="11.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1068.83" y="591.5" ></text>
</g>
<g >
<title>invoke_syscall (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="421" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1130.59" y="431.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,793,681 samples, 0.02%)</title><rect x="1132.3" y="725" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1135.31" y="735.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (819,403,146 samples, 1.18%)</title><rect x="1175.3" y="837" width="13.9" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1178.31" y="847.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (21,954,316 samples, 0.03%)</title><rect x="842.2" y="789" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="845.21" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (100,413,449 samples, 0.14%)</title><rect x="1135.4" y="709" width="1.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1138.37" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_5 (60,738,872 samples, 0.09%)</title><rect x="786.0" y="885" width="1.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="789.03" y="895.5" ></text>
</g>
<g >
<title>sock_def_readable (12,526,271 samples, 0.02%)</title><rect x="1047.3" y="69" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1050.27" y="79.5" ></text>
</g>
<g >
<title>call_on_irq_stack (16,564,072 samples, 0.02%)</title><rect x="783.2" y="709" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="786.19" y="719.5" ></text>
</g>
<g >
<title>tcp_rcv_established (10,632,249 samples, 0.02%)</title><rect x="1065.1" y="581" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1068.11" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (37,382,260 samples, 0.05%)</title><rect x="1177.6" y="661" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1180.62" y="671.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (21,954,316 samples, 0.03%)</title><rect x="842.2" y="741" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="845.21" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (143,243,076 samples, 0.21%)</title><rect x="1127.8" y="741" width="2.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1130.78" y="751.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (555,590,863 samples, 0.80%)</title><rect x="1118.4" y="725" width="9.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1121.36" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (43,708,557 samples, 0.06%)</title><rect x="1186.2" y="693" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1189.18" y="703.5" ></text>
</g>
<g >
<title>ip_queue_xmit (7,552,234 samples, 0.01%)</title><rect x="670.6" y="453" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="673.64" y="463.5" ></text>
</g>
<g >
<title>void spdlog::details::fmt_helper::append_int&lt;int&gt; (178,976,475 samples, 0.26%)</title><rect x="1185.6" y="789" width="3.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1188.59" y="799.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (10,534,622 samples, 0.02%)</title><rect x="1185.4" y="757" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1188.42" y="767.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::base_iterator&lt;fmt::v9::appender&gt; (80,716,106 samples, 0.12%)</title><rect x="1167.5" y="805" width="1.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1170.53" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (10,749,839 samples, 0.02%)</title><rect x="1184.5" y="741" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1187.45" y="751.5" ></text>
</g>
<g >
<title>__sys_sendto (11,056,620 samples, 0.02%)</title><rect x="1097.3" y="693" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1100.30" y="703.5" ></text>
</g>
<g >
<title>spdlog::details::full_formatter::format (650,567,774 samples, 0.94%)</title><rect x="1135.2" y="757" width="11.0" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1138.17" y="767.5" ></text>
</g>
<g >
<title>free_unref_page_prepare (6,288,202 samples, 0.01%)</title><rect x="575.9" y="565" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="578.91" y="575.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::base_iterator&lt;fmt::v9::appender&gt; (80,650,204 samples, 0.12%)</title><rect x="1114.4" y="741" width="1.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1117.42" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (13,798,683 samples, 0.02%)</title><rect x="1100.5" y="757" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1103.54" y="767.5" ></text>
</g>
<g >
<title>__ip_finish_output (7,552,234 samples, 0.01%)</title><rect x="670.6" y="389" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="673.64" y="399.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (16,564,072 samples, 0.02%)</title><rect x="783.2" y="485" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="786.19" y="495.5" ></text>
</g>
<g >
<title>__fdget_pos (36,028,924 samples, 0.05%)</title><rect x="355.2" y="757" width="0.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="358.19" y="767.5" ></text>
</g>
<g >
<title>neigh_hh_output (7,552,234 samples, 0.01%)</title><rect x="670.6" y="357" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="673.64" y="367.5" ></text>
</g>
<g >
<title>run_timer_softirq (10,344,549 samples, 0.01%)</title><rect x="1002.8" y="597" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1005.79" y="607.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10,408,513 samples, 0.01%)</title><rect x="960.8" y="453" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="963.78" y="463.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,016,709 samples, 0.02%)</title><rect x="1172.2" y="645" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1175.21" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,659,688 samples, 0.03%)</title><rect x="1134.8" y="677" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1137.81" y="687.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (1,928,185,008 samples, 2.77%)</title><rect x="1157.1" y="885" width="32.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1160.11" y="895.5" >vo..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (22,767,010 samples, 0.03%)</title><rect x="1133.4" y="629" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1136.40" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (21,172,693 samples, 0.03%)</title><rect x="1143.0" y="693" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1146.03" y="703.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (22,847,632 samples, 0.03%)</title><rect x="1145.6" y="693" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1148.64" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (31,651,793 samples, 0.05%)</title><rect x="1163.3" y="709" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1166.31" y="719.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (11,016,709 samples, 0.02%)</title><rect x="1172.2" y="741" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1175.21" y="751.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (43,426,339 samples, 0.06%)</title><rect x="1173.4" y="869" width="0.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1176.41" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt;::end (12,675,459 samples, 0.02%)</title><rect x="1147.4" y="757" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1150.35" y="767.5" ></text>
</g>
<g >
<title>____do_softirq (12,048,243 samples, 0.02%)</title><rect x="1028.6" y="613" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1031.60" y="623.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (20,806,089 samples, 0.03%)</title><rect x="960.8" y="757" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="963.78" y="767.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="613" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1067.93" y="623.5" ></text>
</g>
<g >
<title>std::is_constant_evaluated (11,405,565 samples, 0.02%)</title><rect x="911.0" y="837" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="914.05" y="847.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::default_arg_formatter&lt;char&gt;::operator (276,668,248 samples, 0.40%)</title><rect x="1160.1" y="821" width="4.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1163.05" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (100,413,449 samples, 0.14%)</title><rect x="1135.4" y="725" width="1.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1138.37" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (87,887,218 samples, 0.13%)</title><rect x="1165.9" y="821" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1168.87" y="831.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (123,799,544 samples, 0.18%)</title><rect x="1045.4" y="117" width="2.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1048.38" y="127.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,475,808 samples, 0.02%)</title><rect x="853.3" y="725" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="856.31" y="735.5" ></text>
</g>
<g >
<title>__arm64_sys_write (11,047,934 samples, 0.02%)</title><rect x="1147.7" y="549" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1150.74" y="559.5" ></text>
</g>
<g >
<title>__do_softirq (162,354,855 samples, 0.23%)</title><rect x="1045.1" y="325" width="2.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1048.06" y="335.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (37,382,260 samples, 0.05%)</title><rect x="1177.6" y="693" width="0.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1180.62" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (21,802,686 samples, 0.03%)</title><rect x="1153.6" y="837" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1156.64" y="847.5" ></text>
</g>
<g >
<title>aa_file_perm (24,207,363 samples, 0.03%)</title><rect x="450.7" y="693" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="453.66" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (66,016,134 samples, 0.09%)</title><rect x="1164.7" y="789" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1167.75" y="799.5" ></text>
</g>
<g >
<title>__wake_up (9,825,739 samples, 0.01%)</title><rect x="783.3" y="357" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="786.30" y="367.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator[] (248,430,482 samples, 0.36%)</title><rect x="1037.3" y="837" width="4.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1040.26" y="847.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (21,954,316 samples, 0.03%)</title><rect x="842.2" y="805" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="845.21" y="815.5" ></text>
</g>
<g >
<title>____do_softirq (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="501" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1186.71" y="511.5" ></text>
</g>
<g >
<title>net_rx_action (162,354,855 samples, 0.23%)</title><rect x="1045.1" y="293" width="2.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1048.06" y="303.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a2&lt;false, char const*, char*&gt; (11,069,345 samples, 0.02%)</title><rect x="1183.9" y="645" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1186.89" y="655.5" ></text>
</g>
<g >
<title>tcp_sendmsg (11,056,620 samples, 0.02%)</title><rect x="1097.3" y="645" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1100.30" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (12,544,591 samples, 0.02%)</title><rect x="1131.9" y="757" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1134.92" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (13,798,683 samples, 0.02%)</title><rect x="1100.5" y="741" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1103.54" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="581" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1130.59" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,444,486 samples, 0.03%)</title><rect x="1100.8" y="725" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1103.78" y="735.5" ></text>
</g>
<g >
<title>el0_interrupt (10,492,890 samples, 0.02%)</title><rect x="1120.2" y="629" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1123.23" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (50,871,311 samples, 0.07%)</title><rect x="1106.0" y="693" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1109.04" y="703.5" ></text>
</g>
<g >
<title>do_el0_svc (12,136,868 samples, 0.02%)</title><rect x="232.5" y="837" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="235.45" y="847.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (12,040,418 samples, 0.02%)</title><rect x="1124.3" y="629" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1127.27" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (113,557,429 samples, 0.16%)</title><rect x="1035.3" y="805" width="2.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1038.33" y="815.5" ></text>
</g>
<g >
<title>__sanitizer::MmapFixedImpl (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="533" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1130.59" y="543.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (130,464,154 samples, 0.19%)</title><rect x="1181.7" y="645" width="2.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1184.68" y="655.5" ></text>
</g>
<g >
<title>do_wp_page (11,966,517 samples, 0.02%)</title><rect x="758.4" y="645" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="761.41" y="655.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (8,913,380,091 samples, 12.81%)</title><rect x="26.2" y="837" width="151.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="29.16" y="847.5" >el0_svc_common.cons..</text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (11,174,451 samples, 0.02%)</title><rect x="853.5" y="821" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="856.49" y="831.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (11,056,620 samples, 0.02%)</title><rect x="1097.3" y="709" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1100.30" y="719.5" ></text>
</g>
<g >
<title>tcp_ack (24,538,465 samples, 0.04%)</title><rect x="582.5" y="117" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="585.49" y="127.5" ></text>
</g>
<g >
<title>__netif_receive_skb (162,354,855 samples, 0.23%)</title><rect x="1045.1" y="245" width="2.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1048.06" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (106,576,927 samples, 0.15%)</title><rect x="1039.7" y="789" width="1.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1042.67" y="799.5" ></text>
</g>
<g >
<title>call_on_irq_stack (12,048,243 samples, 0.02%)</title><rect x="1028.6" y="629" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1031.60" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (146,459,920 samples, 0.21%)</title><rect x="1154.0" y="853" width="2.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1157.01" y="863.5" ></text>
</g>
<g >
<title>operator new (10,164,126 samples, 0.01%)</title><rect x="965.0" y="773" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="968.00" y="783.5" ></text>
</g>
<g >
<title>free_unref_page (6,288,202 samples, 0.01%)</title><rect x="575.9" y="581" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="578.91" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (12,292,791 samples, 0.02%)</title><rect x="1125.7" y="645" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1128.66" y="655.5" ></text>
</g>
<g >
<title>el0_interrupt (23,780,708 samples, 0.03%)</title><rect x="1063.6" y="741" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1066.59" y="751.5" ></text>
</g>
<g >
<title>__run_timers (11,638,897 samples, 0.02%)</title><rect x="842.4" y="629" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="845.38" y="639.5" ></text>
</g>
<g >
<title>inet_recvmsg (5,418,378,564 samples, 7.79%)</title><rect x="493.7" y="693" width="91.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="496.66" y="703.5" >inet_recvmsg</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (89,043,414 samples, 0.13%)</title><rect x="1038.2" y="789" width="1.5" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="1041.16" y="799.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (448,219,908 samples, 0.64%)</title><rect x="1042.4" y="773" width="7.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1045.39" y="783.5" ></text>
</g>
<g >
<title>do_el0_svc (408,122,267 samples, 0.59%)</title><rect x="1042.9" y="741" width="7.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1045.93" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (23,806,231 samples, 0.03%)</title><rect x="1087.9" y="805" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1090.91" y="815.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (324,099,113 samples, 0.47%)</title><rect x="1068.5" y="133" width="5.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1071.52" y="143.5" ></text>
</g>
<g >
<title>skb_release_data (8,400,528 samples, 0.01%)</title><rect x="1070.0" y="69" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1073.05" y="79.5" ></text>
</g>
<g >
<title>handle_softirqs (7,552,234 samples, 0.01%)</title><rect x="670.6" y="613" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="673.64" y="623.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (22,767,010 samples, 0.03%)</title><rect x="1133.4" y="677" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1136.40" y="687.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="357" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1121.18" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (11,642,556 samples, 0.02%)</title><rect x="1153.4" y="821" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1156.44" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (34,381,088 samples, 0.05%)</title><rect x="1184.8" y="741" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1187.83" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3@plt (10,720,702 samples, 0.02%)</title><rect x="1159.9" y="821" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1162.87" y="831.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (31,519,111 samples, 0.05%)</title><rect x="935.6" y="773" width="0.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="938.59" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,464,364,909 samples, 2.10%)</title><rect x="936.3" y="805" width="24.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="939.30" y="815.5" >_..</text>
</g>
<g >
<title>fmt::v9::detail::count_digits (43,708,557 samples, 0.06%)</title><rect x="1186.2" y="709" width="0.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1189.18" y="719.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::end (21,893,776 samples, 0.03%)</title><rect x="1148.5" y="789" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1151.49" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (22,441,955 samples, 0.03%)</title><rect x="1142.5" y="693" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1145.46" y="703.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (10,293,760 samples, 0.01%)</title><rect x="1087.2" y="789" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1090.16" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (10,749,839 samples, 0.02%)</title><rect x="1184.5" y="725" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1187.45" y="735.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (113,557,429 samples, 0.16%)</title><rect x="1035.3" y="837" width="2.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1038.33" y="847.5" ></text>
</g>
<g >
<title>handle_pte_fault (10,940,349 samples, 0.02%)</title><rect x="935.8" y="613" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="938.75" y="623.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (3,310,974,147 samples, 4.76%)</title><rect x="728.1" y="885" width="56.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="731.06" y="895.5" >void ..</text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (151,893,592 samples, 0.22%)</title><rect x="1138.3" y="677" width="2.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1141.32" y="687.5" ></text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::advance_to (143,243,076 samples, 0.21%)</title><rect x="1127.8" y="757" width="2.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1130.78" y="767.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="373" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1121.18" y="383.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (106,502,049 samples, 0.15%)</title><rect x="1162.9" y="773" width="1.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1165.94" y="783.5" ></text>
</g>
<g >
<title>__run_timers (7,552,234 samples, 0.01%)</title><rect x="670.6" y="581" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="673.64" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (11,075,633 samples, 0.02%)</title><rect x="1149.6" y="885" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1152.61" y="895.5" ></text>
</g>
<g >
<title>el0t_64_irq (10,475,808 samples, 0.02%)</title><rect x="853.3" y="789" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="856.31" y="799.5" ></text>
</g>
<g >
<title>server (69,573,640,716 samples, 100.00%)</title><rect x="10.0" y="1013" width="1180.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" >server</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (89,398,914 samples, 0.13%)</title><rect x="967.0" y="869" width="1.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="969.99" y="879.5" ></text>
</g>
<g >
<title>call_on_irq_stack (23,780,708 samples, 0.03%)</title><rect x="1063.6" y="677" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1066.59" y="687.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (76,163,991 samples, 0.11%)</title><rect x="1132.5" y="725" width="1.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1135.49" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (93,354,298 samples, 0.13%)</title><rect x="1088.3" y="789" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1091.32" y="799.5" ></text>
</g>
<g >
<title>do_notify_resume (10,492,890 samples, 0.02%)</title><rect x="1120.2" y="613" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1123.23" y="623.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (79,877,141 samples, 0.11%)</title><rect x="1107.1" y="645" width="1.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1110.10" y="655.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (22,241,193 samples, 0.03%)</title><rect x="1069.1" y="101" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1072.11" y="111.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (27,209,856 samples, 0.04%)</title><rect x="846.7" y="837" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="849.74" y="847.5" ></text>
</g>
<g >
<title>__arch_copy_from_user (10,913,041 samples, 0.02%)</title><rect x="1065.5" y="597" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1068.47" y="607.5" ></text>
</g>
<g >
<title>do_el0_svc (19,846,551,991 samples, 28.53%)</title><rect x="336.0" y="821" width="336.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="339.01" y="831.5" >do_el0_svc</text>
</g>
<g >
<title>rcu_report_qs_rdp (11,516,680 samples, 0.02%)</title><rect x="935.4" y="565" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="938.40" y="575.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::default_arg_formatter&lt;char&gt;::operator (518,772,871 samples, 0.75%)</title><rect x="1100.5" y="773" width="8.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1103.54" y="783.5" ></text>
</g>
<g >
<title>el0_svc (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="469" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1130.59" y="479.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (318,914,234 samples, 0.46%)</title><rect x="968.5" y="821" width="5.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="971.51" y="831.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (24,035,263 samples, 0.03%)</title><rect x="541.1" y="645" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="544.11" y="655.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (9,160,355 samples, 0.01%)</title><rect x="1045.4" y="85" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1048.38" y="95.5" ></text>
</g>
<g >
<title>el0t_64_sync (892,623,093 samples, 1.28%)</title><rect x="1064.9" y="805" width="15.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1067.93" y="815.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (20,806,089 samples, 0.03%)</title><rect x="960.8" y="693" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="963.78" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (33,189,390 samples, 0.05%)</title><rect x="1093.7" y="773" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1096.68" y="783.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (10,164,126 samples, 0.01%)</title><rect x="965.0" y="725" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="968.00" y="735.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (20,806,089 samples, 0.03%)</title><rect x="960.8" y="773" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="963.78" y="783.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (141,533,499 samples, 0.20%)</title><rect x="1181.7" y="693" width="2.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1184.68" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (341,064,240 samples, 0.49%)</title><rect x="1080.1" y="821" width="5.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1083.07" y="831.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (11,829,312 samples, 0.02%)</title><rect x="1002.6" y="549" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1005.59" y="559.5" ></text>
</g>
<g >
<title>__sys_sendto (408,122,267 samples, 0.59%)</title><rect x="1042.9" y="677" width="7.0" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1045.93" y="687.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.0 (33,048,410 samples, 0.05%)</title><rect x="1075.6" y="533" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1078.57" y="543.5" ></text>
</g>
<g >
<title>inode_init_always (11,018,926 samples, 0.02%)</title><rect x="1149.2" y="677" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1152.23" y="687.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (10,534,622 samples, 0.02%)</title><rect x="1185.4" y="693" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1188.42" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,464,364,909 samples, 2.10%)</title><rect x="936.3" y="837" width="24.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="939.30" y="847.5" >s..</text>
</g>
<g >
<title>__sys_sendto (859,007,147 samples, 1.23%)</title><rect x="1064.9" y="693" width="14.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1067.93" y="703.5" ></text>
</g>
<g >
<title>el0_interrupt (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="581" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1186.71" y="591.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (26,001,185,921 samples, 37.37%)</title><rect x="232.5" y="853" width="440.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="235.45" y="863.5" >el0t_64_sync_handler</text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (273,371,480 samples, 0.39%)</title><rect x="846.7" y="869" width="4.7" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="849.74" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (11,135,049 samples, 0.02%)</title><rect x="1149.4" y="869" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1152.42" y="879.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (11,568,337 samples, 0.02%)</title><rect x="582.7" y="101" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="585.71" y="111.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (86,429,891 samples, 0.12%)</title><rect x="1093.3" y="821" width="1.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1096.31" y="831.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (151,893,592 samples, 0.22%)</title><rect x="1138.3" y="693" width="2.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1141.32" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,169,888 samples, 0.02%)</title><rect x="1188.8" y="789" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1191.82" y="799.5" ></text>
</g>
<g >
<title>ip_local_deliver (425,509,203 samples, 0.61%)</title><rect x="1067.0" y="197" width="7.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1069.99" y="207.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (37,481,546 samples, 0.05%)</title><rect x="1152.2" y="805" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1155.20" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::begin (33,072,238 samples, 0.05%)</title><rect x="1147.9" y="789" width="0.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1150.93" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (44,107,353 samples, 0.06%)</title><rect x="1154.4" y="821" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1157.38" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (167,635,250 samples, 0.24%)</title><rect x="1089.9" y="837" width="2.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1092.90" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (24,449,272 samples, 0.04%)</title><rect x="1156.1" y="757" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1159.08" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (44,430,276 samples, 0.06%)</title><rect x="1102.6" y="709" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1105.63" y="719.5" ></text>
</g>
<g >
<title>tcp_ack (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="293" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1067.93" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (2,952,813,470 samples, 4.24%)</title><rect x="911.2" y="869" width="50.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="914.24" y="879.5" >std::..</text>
</g>
<g >
<title>ip_local_deliver (16,564,072 samples, 0.02%)</title><rect x="783.2" y="533" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="786.19" y="543.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (150,764,116 samples, 0.22%)</title><rect x="1162.2" y="789" width="2.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1165.19" y="799.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (20,225,274 samples, 0.03%)</title><rect x="1044.2" y="597" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1047.16" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_key_equals (106,576,927 samples, 0.15%)</title><rect x="1039.7" y="757" width="1.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1042.67" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (21,902,507 samples, 0.03%)</title><rect x="1144.5" y="645" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1147.51" y="655.5" ></text>
</g>
<g >
<title>sock_poll (60,706,695 samples, 0.09%)</title><rect x="175.2" y="725" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="178.17" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (53,278,259 samples, 0.08%)</title><rect x="1163.8" y="645" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1166.84" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,169,888 samples, 0.02%)</title><rect x="1188.8" y="773" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1191.82" y="783.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (10,799,770 samples, 0.02%)</title><rect x="758.0" y="565" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="761.04" y="575.5" ></text>
</g>
<g >
<title>__mod_timer (22,241,193 samples, 0.03%)</title><rect x="1069.1" y="37" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1072.11" y="47.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; spdlog::details::fmt_helper::time_fraction&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (10,749,839 samples, 0.02%)</title><rect x="1184.5" y="789" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1187.45" y="799.5" ></text>
</g>
<g >
<title>kmalloc_reserve (33,394,173 samples, 0.05%)</title><rect x="1078.0" y="581" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1081.02" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (816,517,355 samples, 1.17%)</title><rect x="1050.1" y="821" width="13.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1053.15" y="831.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (21,172,693 samples, 0.03%)</title><rect x="1143.0" y="725" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1146.03" y="735.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (11,829,163 samples, 0.02%)</title><rect x="734.2" y="805" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="737.16" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (98,579,647 samples, 0.14%)</title><rect x="1120.4" y="677" width="1.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1123.40" y="687.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (10,475,808 samples, 0.02%)</title><rect x="853.3" y="773" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="856.31" y="783.5" ></text>
</g>
<g >
<title>___interceptor_memcmp (11,736,731 samples, 0.02%)</title><rect x="842.9" y="821" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="845.92" y="831.5" ></text>
</g>
<g >
<title>process_backlog (16,564,072 samples, 0.02%)</title><rect x="783.2" y="613" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="786.19" y="623.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (13,302,391 samples, 0.02%)</title><rect x="193.8" y="869" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="196.76" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (10,172,770 samples, 0.01%)</title><rect x="1175.1" y="837" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1178.14" y="847.5" ></text>
</g>
<g >
<title>call_on_irq_stack (12,016,552 samples, 0.02%)</title><rect x="966.8" y="661" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="969.79" y="671.5" ></text>
</g>
<g >
<title>operator delete (53,165,113 samples, 0.08%)</title><rect x="967.2" y="805" width="0.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="970.20" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (10,046,701 samples, 0.01%)</title><rect x="784.2" y="885" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="787.22" y="895.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char*, char*&gt; (11,069,662 samples, 0.02%)</title><rect x="1140.9" y="645" width="0.2" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1143.90" y="655.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::parse_client_command (21,332,000,111 samples, 30.66%)</title><rect x="787.1" y="901" width="361.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="790.06" y="911.5" >tt::chat::server::EpollServer::parse_client_command</text>
</g>
<g >
<title>el0_svc_common.constprop.0 (19,762,617,611 samples, 28.41%)</title><rect x="336.2" y="805" width="335.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="339.20" y="815.5" >el0_svc_common.constprop.0</text>
</g>
<g >
<title>__napi_poll (474,856,127 samples, 0.68%)</title><rect x="1066.6" y="293" width="8.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1069.58" y="303.5" ></text>
</g>
<g >
<title>aa_file_perm (982,483,926 samples, 1.41%)</title><rect x="457.4" y="677" width="16.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="460.41" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (37,481,546 samples, 0.05%)</title><rect x="1152.2" y="853" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1155.20" y="863.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (54,928,623 samples, 0.08%)</title><rect x="1130.2" y="821" width="0.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1133.21" y="831.5" ></text>
</g>
<g >
<title>ip_rcv (16,564,072 samples, 0.02%)</title><rect x="783.2" y="565" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="786.19" y="575.5" ></text>
</g>
<g >
<title>ep_poll (8,791,825,026 samples, 12.64%)</title><rect x="27.6" y="757" width="149.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="30.61" y="767.5" >ep_poll</text>
</g>
<g >
<title>__asan_stack_malloc_0 (56,342,742 samples, 0.08%)</title><rect x="1146.4" y="725" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1149.40" y="735.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (271,793,278 samples, 0.39%)</title><rect x="578.7" y="629" width="4.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="581.68" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (21,172,693 samples, 0.03%)</title><rect x="1143.0" y="709" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1146.03" y="719.5" ></text>
</g>
<g >
<title>el0t_64_irq (23,780,708 samples, 0.03%)</title><rect x="1063.6" y="789" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1066.59" y="799.5" ></text>
</g>
<g >
<title>aa_inet_msg_perm (2,215,139,926 samples, 3.18%)</title><rect x="599.6" y="661" width="37.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="602.64" y="671.5" >aa_..</text>
</g>
<g >
<title>sk_reset_timer (33,048,410 samples, 0.05%)</title><rect x="1075.6" y="517" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1078.57" y="527.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (31,530,631 samples, 0.05%)</title><rect x="1030.4" y="773" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1033.45" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_5 (1,584,209,890 samples, 2.28%)</title><rect x="700.2" y="901" width="26.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="703.16" y="911.5" >_..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (31,530,631 samples, 0.05%)</title><rect x="1030.4" y="757" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1033.45" y="767.5" ></text>
</g>
<g >
<title>call_on_irq_stack (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="517" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1186.71" y="527.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (114,292,135 samples, 0.16%)</title><rect x="1033.4" y="821" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1036.40" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (21,802,686 samples, 0.03%)</title><rect x="1153.6" y="821" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1156.64" y="831.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (351,651,788 samples, 0.51%)</title><rect x="1150.5" y="901" width="6.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1153.53" y="911.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char*, char*&gt; (48,274,506 samples, 0.07%)</title><rect x="1134.0" y="645" width="0.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1136.99" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (12,111,427 samples, 0.02%)</title><rect x="1133.8" y="677" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1136.78" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (52,810,141 samples, 0.08%)</title><rect x="1037.3" y="789" width="0.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1040.26" y="799.5" ></text>
</g>
<g >
<title>__cond_resched (24,252,706 samples, 0.03%)</title><rect x="174.8" y="709" width="0.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="177.76" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (10,046,701 samples, 0.01%)</title><rect x="784.2" y="869" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="787.22" y="879.5" ></text>
</g>
<g >
<title>neigh_hh_output (57,703,390 samples, 0.08%)</title><rect x="582.3" y="469" width="1.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="585.31" y="479.5" ></text>
</g>
<g >
<title>__arm64_sys_accept (21,722,256 samples, 0.03%)</title><rect x="1149.0" y="773" width="0.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1152.05" y="783.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (22,847,632 samples, 0.03%)</title><rect x="1145.6" y="661" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1148.64" y="671.5" ></text>
</g>
<g >
<title>mas_walk (9,130,414 samples, 0.01%)</title><rect x="842.6" y="709" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="845.58" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,455,016,361 samples, 2.09%)</title><rect x="758.8" y="853" width="24.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="761.79" y="863.5" >_..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (44,953,456 samples, 0.06%)</title><rect x="582.3" y="261" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="585.31" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1,324,655,791 samples, 1.90%)</title><rect x="913.8" y="837" width="22.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="916.83" y="847.5" >s..</text>
</g>
<g >
<title>do_softirq_own_stack (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="581" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1067.93" y="591.5" ></text>
</g>
<g >
<title>el1h_64_irq (7,552,234 samples, 0.01%)</title><rect x="670.6" y="757" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="673.64" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (21,478,509 samples, 0.03%)</title><rect x="1093.7" y="741" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1096.68" y="751.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (809,396,597 samples, 1.16%)</title><rect x="1114.1" y="757" width="13.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1117.05" y="767.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (79,877,141 samples, 0.11%)</title><rect x="1107.1" y="661" width="1.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1110.10" y="671.5" ></text>
</g>
<g >
<title>irq_exit_rcu (12,040,418 samples, 0.02%)</title><rect x="1124.3" y="581" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1127.27" y="591.5" ></text>
</g>
<g >
<title>tcp_delack_timer (10,344,549 samples, 0.01%)</title><rect x="1002.8" y="533" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1005.79" y="543.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (44,342,244 samples, 0.06%)</title><rect x="1143.6" y="645" width="0.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1146.57" y="655.5" ></text>
</g>
<g >
<title>tcp_parse_aligned_timestamp.part.0 (10,408,513 samples, 0.01%)</title><rect x="960.8" y="421" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="963.78" y="431.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (21,483,191 samples, 0.03%)</title><rect x="1114.1" y="741" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1117.05" y="751.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="293" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1186.71" y="303.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,793,681 samples, 0.02%)</title><rect x="1132.3" y="741" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1135.31" y="751.5" ></text>
</g>
<g >
<title>____do_softirq (486,140,055 samples, 0.70%)</title><rect x="1066.4" y="357" width="8.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1069.38" y="367.5" ></text>
</g>
<g >
<title>el0_svc (8,974,068,514 samples, 12.90%)</title><rect x="25.1" y="869" width="152.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="28.13" y="879.5" >el0_svc</text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_client_data (57,281,979,177 samples, 82.33%)</title><rect x="177.3" y="917" width="971.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="180.34" y="927.5" >tt::chat::server::EpollServer::handle_client_data</text>
</g>
<g >
<title>__asan_stack_malloc_0 (54,851,179 samples, 0.08%)</title><rect x="1175.3" y="805" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1178.31" y="815.5" ></text>
</g>
<g >
<title>tcp_rcv_established (24,538,465 samples, 0.04%)</title><rect x="582.5" y="133" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="585.49" y="143.5" ></text>
</g>
<g >
<title>swake_up_one_online (11,516,680 samples, 0.02%)</title><rect x="935.4" y="517" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="938.40" y="527.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (22,294,434 samples, 0.03%)</title><rect x="1141.8" y="725" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1144.84" y="735.5" ></text>
</g>
<g >
<title>el0t_64_sync (11,966,517 samples, 0.02%)</title><rect x="758.4" y="757" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="761.41" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,659,688 samples, 0.03%)</title><rect x="1134.8" y="661" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1137.81" y="671.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (22,822,612 samples, 0.03%)</title><rect x="1076.3" y="565" width="0.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1079.30" y="575.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (408,122,267 samples, 0.59%)</title><rect x="1042.9" y="693" width="7.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1045.93" y="703.5" ></text>
</g>
<g >
<title>rcu_core_si (10,397,576 samples, 0.01%)</title><rect x="961.0" y="613" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="963.96" y="623.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (19,201,972 samples, 0.03%)</title><rect x="1069.9" y="85" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1072.86" y="95.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (22,847,632 samples, 0.03%)</title><rect x="1145.6" y="677" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1148.64" y="687.5" ></text>
</g>
<g >
<title>rcu_gp_kthread_wake (11,516,680 samples, 0.02%)</title><rect x="935.4" y="533" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="938.40" y="543.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (55,139,204 samples, 0.08%)</title><rect x="1097.7" y="789" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1100.67" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (34,536,232 samples, 0.05%)</title><rect x="1168.9" y="773" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1171.90" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (12,516,087 samples, 0.02%)</title><rect x="1029.9" y="805" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1032.91" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (45,794,155 samples, 0.07%)</title><rect x="1186.9" y="741" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1189.92" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (66,309,796 samples, 0.10%)</title><rect x="1109.3" y="741" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1112.34" y="751.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (1,544,940,239 samples, 2.22%)</title><rect x="1003.0" y="837" width="26.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1005.97" y="847.5" >s..</text>
</g>
<g >
<title>tcp_data_ready (6,738,333 samples, 0.01%)</title><rect x="783.2" y="421" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="786.19" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::rfind (3,315,807,159 samples, 4.77%)</title><rect x="787.2" y="885" width="56.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="790.24" y="895.5" >std::..</text>
</g>
<g >
<title>__asan_region_is_poisoned (9,480,310 samples, 0.01%)</title><rect x="1041.9" y="789" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1044.88" y="799.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; spdlog::details::fmt_helper::time_fraction&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (47,960,264 samples, 0.07%)</title><rect x="1142.2" y="741" width="0.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1145.22" y="751.5" ></text>
</g>
<g >
<title>kmem_cache_free (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="261" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1121.18" y="271.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,444,486 samples, 0.03%)</title><rect x="1100.8" y="709" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1103.78" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (10,908,684 samples, 0.02%)</title><rect x="1189.8" y="885" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.81" y="895.5" ></text>
</g>
<g >
<title>ip_rcv (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="437" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1121.18" y="447.5" ></text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::advance_to (66,016,134 samples, 0.09%)</title><rect x="1164.7" y="821" width="1.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1167.75" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (11,104,815 samples, 0.02%)</title><rect x="1146.2" y="709" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1149.21" y="719.5" ></text>
</g>
<g >
<title>skb_release_data (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="245" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1067.93" y="255.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (999,169,843 samples, 1.44%)</title><rect x="1131.9" y="805" width="17.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1134.92" y="815.5" ></text>
</g>
<g >
<title>____do_softirq (162,354,855 samples, 0.23%)</title><rect x="1045.1" y="341" width="2.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1048.06" y="351.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (53,093,919 samples, 0.08%)</title><rect x="757.9" y="837" width="0.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="760.89" y="847.5" ></text>
</g>
<g >
<title>tcp_data_queue (80,358,383 samples, 0.12%)</title><rect x="1045.9" y="85" width="1.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1048.90" y="95.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,075,633 samples, 0.02%)</title><rect x="1149.6" y="869" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1152.61" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (73,354,674 samples, 0.11%)</title><rect x="1137.1" y="677" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1140.08" y="687.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (11,104,815 samples, 0.02%)</title><rect x="1146.2" y="741" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1149.21" y="751.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (53,278,259 samples, 0.08%)</title><rect x="1163.8" y="725" width="0.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1166.84" y="735.5" ></text>
</g>
<g >
<title>__sk_mem_schedule (11,375,838 samples, 0.02%)</title><rect x="1049.3" y="581" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1052.31" y="591.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::chrono::__is_duration&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::value, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::type std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (11,391,861 samples, 0.02%)</title><rect x="1142.8" y="725" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1145.84" y="735.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; spdlog::details::to_string_view&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (36,513,302 samples, 0.05%)</title><rect x="1156.5" y="885" width="0.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1159.49" y="895.5" ></text>
</g>
<g >
<title>el0t_64_sync (12,141,826 samples, 0.02%)</title><rect x="1189.0" y="693" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1192.01" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (35,151,022 samples, 0.05%)</title><rect x="1103.8" y="725" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1106.75" y="735.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9,803,013 samples, 0.01%)</title><rect x="582.9" y="181" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="585.91" y="191.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (192,301,452 samples, 0.28%)</title><rect x="843.5" y="869" width="3.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="846.48" y="879.5" ></text>
</g>
<g >
<title>el0t_64_irq (10,492,890 samples, 0.02%)</title><rect x="1120.2" y="677" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1123.23" y="687.5" ></text>
</g>
<g >
<title>__sk_mem_raise_allocated (11,375,838 samples, 0.02%)</title><rect x="1049.3" y="565" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1052.31" y="575.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (142,874,196 samples, 0.21%)</title><rect x="1045.1" y="149" width="2.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1048.06" y="159.5" ></text>
</g>
<g >
<title>el0_da (19,584,204 samples, 0.03%)</title><rect x="757.9" y="725" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="760.89" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (31,077,283 samples, 0.04%)</title><rect x="783.7" y="853" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="786.69" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (89,303,140 samples, 0.13%)</title><rect x="1178.3" y="773" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1181.26" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (11,710,881 samples, 0.02%)</title><rect x="1094.0" y="757" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1097.04" y="767.5" ></text>
</g>
<g >
<title>__netif_receive_skb (462,142,376 samples, 0.66%)</title><rect x="1066.8" y="261" width="7.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1069.79" y="271.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (21,802,686 samples, 0.03%)</title><rect x="1153.6" y="805" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1156.64" y="815.5" ></text>
</g>
<g >
<title>___interceptor_read.part.0 (28,512,399,768 samples, 40.98%)</title><rect x="189.9" y="901" width="483.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="192.86" y="911.5" >___interceptor_read.part.0</text>
</g>
<g >
<title>__asan::asan_memalign (53,093,919 samples, 0.08%)</title><rect x="757.9" y="805" width="0.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="760.89" y="815.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (12,530,041 samples, 0.02%)</title><rect x="1043.4" y="581" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1046.44" y="591.5" ></text>
</g>
<g >
<title>nf_hook_slow (10,938,460 samples, 0.02%)</title><rect x="1048.2" y="485" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1051.16" y="495.5" ></text>
</g>
<g >
<title>netif_skb_features (11,049,059 samples, 0.02%)</title><rect x="1075.2" y="405" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1078.20" y="415.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (12,079,547 samples, 0.02%)</title><rect x="1098.6" y="773" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1101.60" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (151,672,339 samples, 0.22%)</title><rect x="1115.8" y="725" width="2.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1118.78" y="735.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (86,529,067 samples, 0.12%)</title><rect x="576.0" y="645" width="1.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="579.02" y="655.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1l&gt; &gt; (11,391,861 samples, 0.02%)</title><rect x="1142.8" y="709" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1145.84" y="719.5" ></text>
</g>
<g >
<title>ip_output (553,403,881 samples, 0.80%)</title><rect x="1066.0" y="517" width="9.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1069.00" y="527.5" ></text>
</g>
<g >
<title>__alloc_pages (11,464,969 samples, 0.02%)</title><rect x="1044.0" y="533" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1046.96" y="543.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="325" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1067.93" y="335.5" ></text>
</g>
<g >
<title>el0t_64_sync (11,047,934 samples, 0.02%)</title><rect x="1147.7" y="645" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1150.74" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,738,555 samples, 0.03%)</title><rect x="1144.9" y="629" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1147.88" y="639.5" ></text>
</g>
<g >
<title>do_el0_svc (12,141,826 samples, 0.02%)</title><rect x="1189.0" y="645" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1192.01" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (24,449,272 samples, 0.04%)</title><rect x="1156.1" y="773" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1159.08" y="783.5" ></text>
</g>
<g >
<title>__fget_light (1,199,246,452 samples, 1.72%)</title><rect x="358.7" y="725" width="20.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="361.68" y="735.5" ></text>
</g>
<g >
<title>net_rx_action (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="501" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1067.93" y="511.5" ></text>
</g>
<g >
<title>fmt::v9::detail::abort_fuzzing_if (33,703,662 samples, 0.05%)</title><rect x="1127.0" y="661" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1130.02" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (24,165,842 samples, 0.03%)</title><rect x="1031.8" y="741" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1034.76" y="751.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (52,168,668 samples, 0.07%)</title><rect x="576.6" y="613" width="0.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="579.60" y="623.5" ></text>
</g>
<g >
<title>read (12,142,964 samples, 0.02%)</title><rect x="727.4" y="901" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="730.44" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (142,675,668 samples, 0.21%)</title><rect x="911.4" y="821" width="2.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="914.41" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (53,396,981 samples, 0.08%)</title><rect x="1132.5" y="709" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1135.49" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (95,120,523 samples, 0.14%)</title><rect x="1157.3" y="821" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1160.29" y="831.5" ></text>
</g>
<g >
<title>handle_softirqs (22,173,861 samples, 0.03%)</title><rect x="1002.6" y="613" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1005.59" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (45,154,324 samples, 0.06%)</title><rect x="1032.2" y="853" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1035.17" y="863.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (22,173,861 samples, 0.03%)</title><rect x="1002.6" y="677" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1005.59" y="687.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (44,915,710 samples, 0.06%)</title><rect x="1184.8" y="789" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1187.83" y="799.5" ></text>
</g>
<g >
<title>tcp_wfree (8,673,571 samples, 0.01%)</title><rect x="1047.8" y="373" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1050.81" y="383.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (44,331,941 samples, 0.06%)</title><rect x="1141.1" y="645" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1144.09" y="655.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (752,410,141 samples, 1.08%)</title><rect x="1176.2" y="821" width="12.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1179.24" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (142,675,668 samples, 0.21%)</title><rect x="911.4" y="837" width="2.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="914.41" y="847.5" ></text>
</g>
<g >
<title>call_timer_fn (10,344,549 samples, 0.01%)</title><rect x="1002.8" y="549" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1005.79" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (10,385,548 samples, 0.01%)</title><rect x="1132.1" y="741" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1135.13" y="751.5" ></text>
</g>
<g >
<title>el0t_64_irq (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="693" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1121.18" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (53,278,259 samples, 0.08%)</title><rect x="1163.8" y="629" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1166.84" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (10,172,770 samples, 0.01%)</title><rect x="1175.1" y="821" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1178.14" y="831.5" ></text>
</g>
<g >
<title>__napi_poll (44,953,456 samples, 0.06%)</title><rect x="582.3" y="309" width="0.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="585.31" y="319.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,484,910 samples, 0.03%)</title><rect x="1086.1" y="821" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1089.06" y="831.5" ></text>
</g>
<g >
<title>ip_output (57,703,390 samples, 0.08%)</title><rect x="582.3" y="533" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="585.31" y="543.5" ></text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;int&amp;&gt;::type&gt;::type, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (45,853,064 samples, 0.07%)</title><rect x="1131.1" y="821" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1134.14" y="831.5" ></text>
</g>
<g >
<title>mod_timer (33,048,410 samples, 0.05%)</title><rect x="1075.6" y="501" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1078.57" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,736,750,458 samples, 2.50%)</title><rect x="881.4" y="837" width="29.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="884.41" y="847.5" >st..</text>
</g>
<g >
<title>el0t_64_sync_handler (8,974,068,514 samples, 12.90%)</title><rect x="25.1" y="885" width="152.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="28.13" y="895.5" >el0t_64_sync_handler</text>
</g>
<g >
<title>ip_output (193,691,708 samples, 0.28%)</title><rect x="1045.1" y="501" width="3.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1048.06" y="511.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,971,494 samples, 0.03%)</title><rect x="1154.0" y="821" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1157.01" y="831.5" ></text>
</g>
<g >
<title>apparmor_file_permission (84,477,184 samples, 0.12%)</title><rect x="440.2" y="709" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="443.22" y="719.5" ></text>
</g>
<g >
<title>sock_read_iter (85,543,825 samples, 0.12%)</title><rect x="380.7" y="741" width="1.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="383.66" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="549" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1130.59" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (31,387,154 samples, 0.05%)</title><rect x="1094.2" y="773" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1097.24" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,497,569 samples, 0.02%)</title><rect x="1106.9" y="677" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1109.91" y="687.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (60,919,297 samples, 0.09%)</title><rect x="541.9" y="661" width="1.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="544.90" y="671.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (12,689,068 samples, 0.02%)</title><rect x="1049.1" y="549" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1052.10" y="559.5" ></text>
</g>
<g >
<title>handle_softirqs (10,475,808 samples, 0.02%)</title><rect x="853.3" y="629" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="856.31" y="639.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3,018,575,213 samples, 4.34%)</title><rect x="1097.7" y="837" width="51.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1100.67" y="847.5" >void ..</text>
</g>
<g >
<title>std::enable_if&lt;std::chrono::__is_duration&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::value, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::type std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (22,441,955 samples, 0.03%)</title><rect x="1142.5" y="725" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1145.46" y="735.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (11,102,278 samples, 0.02%)</title><rect x="576.9" y="597" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="579.94" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (36,513,302 samples, 0.05%)</title><rect x="1156.5" y="869" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1159.49" y="879.5" ></text>
</g>
<g >
<title>el0_interrupt (20,806,089 samples, 0.03%)</title><rect x="960.8" y="741" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="963.78" y="751.5" ></text>
</g>
<g >
<title>rcu_all_qs (11,826,382 samples, 0.02%)</title><rect x="526.3" y="645" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="529.31" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,387,337,659 samples, 1.99%)</title><rect x="734.4" y="821" width="23.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="737.36" y="831.5" >_..</text>
</g>
<g >
<title>tcp_poll (60,296,320 samples, 0.09%)</title><rect x="172.5" y="709" width="1.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="175.50" y="719.5" ></text>
</g>
<g >
<title>_IO_file_write (21,579,607 samples, 0.03%)</title><rect x="1147.6" y="677" width="0.3" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1150.57" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (80,619,712 samples, 0.12%)</title><rect x="1160.1" y="789" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1163.05" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,258,998,187 samples, 1.81%)</title><rect x="914.2" y="789" width="21.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="917.24" y="799.5" >_..</text>
</g>
<g >
<title>do_el0_svc (32,631,526 samples, 0.05%)</title><rect x="1148.9" y="821" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1151.86" y="831.5" ></text>
</g>
<g >
<title>tcp_poll (1,553,370,690 samples, 2.23%)</title><rect x="145.3" y="693" width="26.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="148.33" y="703.5" >t..</text>
</g>
<g >
<title>__asan_stack_malloc_1 (23,623,151 samples, 0.03%)</title><rect x="1185.6" y="773" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1188.59" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,977,559 samples, 0.02%)</title><rect x="1188.6" y="773" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1191.63" y="783.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::broadcast_to_channel (1,876,235,389 samples, 2.70%)</title><rect x="1032.2" y="869" width="31.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1035.17" y="879.5" >tt..</text>
</g>
<g >
<title>void spdlog::logger::log&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3,029,084,938 samples, 4.35%)</title><rect x="1097.5" y="853" width="51.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1100.49" y="863.5" >void ..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,075,502 samples, 0.01%)</title><rect x="1091.6" y="757" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1094.56" y="767.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (11,380,918 samples, 0.02%)</title><rect x="1048.9" y="549" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1051.90" y="559.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (98,579,647 samples, 0.14%)</title><rect x="1120.4" y="709" width="1.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1123.40" y="719.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (21,579,607 samples, 0.03%)</title><rect x="1147.6" y="725" width="0.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1150.57" y="735.5" ></text>
</g>
<g >
<title>__napi_poll (162,354,855 samples, 0.23%)</title><rect x="1045.1" y="277" width="2.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1048.06" y="287.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (33,703,662 samples, 0.05%)</title><rect x="1127.0" y="629" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1130.02" y="639.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (392,684,898 samples, 0.56%)</title><rect x="1067.4" y="149" width="6.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1070.35" y="159.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (351,320,582 samples, 0.50%)</title><rect x="1103.4" y="757" width="5.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1106.38" y="767.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (673,852,398 samples, 0.97%)</title><rect x="1065.7" y="597" width="11.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1068.65" y="607.5" ></text>
</g>
<g >
<title>[libc.so.6] (19,584,204 samples, 0.03%)</title><rect x="757.9" y="773" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="760.89" y="783.5" ></text>
</g>
<g >
<title>ip_rcv (10,408,513 samples, 0.01%)</title><rect x="960.8" y="533" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="963.78" y="543.5" ></text>
</g>
<g >
<title>tcp_push (259,630,297 samples, 0.37%)</title><rect x="1044.5" y="597" width="4.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1047.50" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (22,126,751 samples, 0.03%)</title><rect x="1087.0" y="805" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1089.96" y="815.5" ></text>
</g>
<g >
<title>__interceptor_read@plt (12,167,044 samples, 0.02%)</title><rect x="727.0" y="901" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="730.03" y="911.5" ></text>
</g>
<g >
<title>__sys_accept4 (21,722,256 samples, 0.03%)</title><rect x="1149.0" y="757" width="0.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1152.05" y="767.5" ></text>
</g>
<g >
<title>__cond_resched (9,176,306 samples, 0.01%)</title><rect x="1043.3" y="581" width="0.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1046.29" y="591.5" ></text>
</g>
<g >
<title>__send (448,219,908 samples, 0.64%)</title><rect x="1042.4" y="805" width="7.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1045.39" y="815.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (114,292,135 samples, 0.16%)</title><rect x="1033.4" y="837" width="1.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1036.40" y="847.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (7,552,234 samples, 0.01%)</title><rect x="670.6" y="469" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="673.64" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt;::begin (10,977,559 samples, 0.02%)</title><rect x="1188.6" y="805" width="0.2" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="1191.63" y="815.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe (12,793,299 samples, 0.02%)</title><rect x="1073.8" y="101" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1076.80" y="111.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (11,016,709 samples, 0.02%)</title><rect x="1172.2" y="725" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1175.21" y="735.5" ></text>
</g>
<g >
<title>__napi_poll (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="485" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1067.93" y="495.5" ></text>
</g>
<g >
<title>neigh_hh_output (171,028,426 samples, 0.25%)</title><rect x="1045.1" y="437" width="2.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1048.06" y="447.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Put (11,772,232 samples, 0.02%)</title><rect x="967.9" y="773" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="970.91" y="783.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char*, char*&gt; (41,143,241 samples, 0.06%)</title><rect x="1108.5" y="661" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1111.46" y="671.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (1,327,807,586 samples, 1.91%)</title><rect x="1041.5" y="837" width="22.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1044.47" y="847.5" >t..</text>
</g>
<g >
<title>el0_svc (32,631,526 samples, 0.05%)</title><rect x="1148.9" y="837" width="0.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1151.86" y="847.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (16,564,072 samples, 0.02%)</title><rect x="783.2" y="517" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="786.19" y="527.5" ></text>
</g>
<g >
<title>____do_softirq (16,564,072 samples, 0.02%)</title><rect x="783.2" y="693" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="786.19" y="703.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (33,871,956 samples, 0.05%)</title><rect x="1074.6" y="421" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1077.63" y="431.5" ></text>
</g>
<g >
<title>__do_softirq (23,780,708 samples, 0.03%)</title><rect x="1063.6" y="645" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1066.59" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (35,553,659 samples, 0.05%)</title><rect x="1152.8" y="837" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1155.84" y="847.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (12,016,552 samples, 0.02%)</title><rect x="966.8" y="741" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="969.79" y="751.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (12,141,826 samples, 0.02%)</title><rect x="1189.0" y="629" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1192.01" y="639.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (12,141,826 samples, 0.02%)</title><rect x="1189.0" y="773" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1192.01" y="783.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (272,758,072 samples, 0.39%)</title><rect x="1104.7" y="725" width="4.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1107.72" y="735.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (7,552,234 samples, 0.01%)</title><rect x="670.6" y="437" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="673.64" y="447.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (10,749,839 samples, 0.02%)</title><rect x="1184.5" y="757" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1187.45" y="767.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="613" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1121.18" y="623.5" ></text>
</g>
<g >
<title>el0t_64_sync (9,130,414 samples, 0.01%)</title><rect x="842.6" y="821" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="845.58" y="831.5" ></text>
</g>
<g >
<title>__inet_lookup_established (19,074,652 samples, 0.03%)</title><rect x="1045.1" y="101" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1048.06" y="111.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (79,877,141 samples, 0.11%)</title><rect x="1107.1" y="597" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1110.10" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (10,046,701 samples, 0.01%)</title><rect x="784.2" y="901" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="787.22" y="911.5" ></text>
</g>
<g >
<title>net_rx_action (44,953,456 samples, 0.06%)</title><rect x="582.3" y="325" width="0.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="585.31" y="335.5" ></text>
</g>
<g >
<title>__slab_free (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="245" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1121.18" y="255.5" ></text>
</g>
<g >
<title>rw_verify_area (84,698,414 samples, 0.12%)</title><rect x="379.2" y="741" width="1.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="382.22" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (22,392,530 samples, 0.03%)</title><rect x="1155.7" y="757" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1158.70" y="767.5" ></text>
</g>
<g >
<title>__alloc_skb (24,069,986 samples, 0.03%)</title><rect x="1048.9" y="581" width="0.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1051.90" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (46,724,568 samples, 0.07%)</title><rect x="1095.6" y="773" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1098.55" y="783.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (10,913,041 samples, 0.02%)</title><rect x="1065.5" y="613" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1068.47" y="623.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,806,089 samples, 0.03%)</title><rect x="960.8" y="725" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="963.78" y="735.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::grow (52,308,610 samples, 0.08%)</title><rect x="1108.5" y="677" width="0.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1111.46" y="687.5" ></text>
</g>
<g >
<title>ip_rcv_finish (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="421" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1121.18" y="431.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (10,408,513 samples, 0.01%)</title><rect x="960.8" y="549" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="963.78" y="559.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::get_buffer&lt;char&gt; (57,750,384 samples, 0.08%)</title><rect x="1098.6" y="805" width="1.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1101.60" y="815.5" ></text>
</g>
<g >
<title>ip_finish_output2 (171,028,426 samples, 0.25%)</title><rect x="1045.1" y="453" width="2.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1048.06" y="463.5" ></text>
</g>
<g >
<title>all (69,573,641,598 samples, 100%)</title><rect x="10.0" y="1029" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" ></text>
</g>
<g >
<title>el0_interrupt (12,040,418 samples, 0.02%)</title><rect x="1124.3" y="597" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1127.27" y="607.5" ></text>
</g>
<g >
<title>el0t_64_sync (26,001,185,921 samples, 37.37%)</title><rect x="232.5" y="869" width="440.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="235.45" y="879.5" >el0t_64_sync</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (43,512,399 samples, 0.06%)</title><rect x="1029.2" y="837" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1032.17" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (10,925,678 samples, 0.02%)</title><rect x="910.9" y="821" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="913.86" y="831.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (58,479,566 samples, 0.08%)</title><rect x="1070.4" y="53" width="1.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1073.37" y="63.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (6,738,333 samples, 0.01%)</title><rect x="783.2" y="389" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="786.19" y="399.5" ></text>
</g>
<g >
<title>el0t_64_sync (448,219,908 samples, 0.64%)</title><rect x="1042.4" y="789" width="7.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1045.39" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (334,267,955 samples, 0.48%)</title><rect x="961.3" y="869" width="5.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="964.32" y="879.5" ></text>
</g>
<g >
<title>__pi_clear_page (11,464,969 samples, 0.02%)</title><rect x="1044.0" y="501" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1046.96" y="511.5" ></text>
</g>
<g >
<title>apparmor_file_permission (1,356,544,687 samples, 1.95%)</title><rect x="451.1" y="693" width="23.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="454.07" y="703.5" >a..</text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (79,877,141 samples, 0.11%)</title><rect x="1107.1" y="629" width="1.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1110.10" y="639.5" ></text>
</g>
<g >
<title>char const* fmt::v9::detail::parse_replacement_field&lt;char, fmt::v9::detail::vformat_to&lt;char&gt; (585,082,667 samples, 0.84%)</title><rect x="1100.5" y="789" width="10.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1103.54" y="799.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_skmem (11,375,838 samples, 0.02%)</title><rect x="1049.3" y="549" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1052.31" y="559.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (12,016,552 samples, 0.02%)</title><rect x="966.8" y="677" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="969.79" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (23,365,638 samples, 0.03%)</title><rect x="1029.2" y="805" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1032.17" y="815.5" ></text>
</g>
<g >
<title>el0_da (9,130,414 samples, 0.01%)</title><rect x="842.6" y="789" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="845.58" y="799.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (20,628,380 samples, 0.03%)</title><rect x="1042.0" y="805" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1045.04" y="815.5" ></text>
</g>
<g >
<title>begin_current_label_crit_section (24,104,665 samples, 0.03%)</title><rect x="637.2" y="661" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="640.21" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (33,072,238 samples, 0.05%)</title><rect x="1147.9" y="773" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1150.93" y="783.5" ></text>
</g>
<g >
<title>cubictcp_acked (12,109,275 samples, 0.02%)</title><rect x="1069.5" y="85" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1072.48" y="95.5" ></text>
</g>
<g >
<title>__cond_resched (60,392,341 samples, 0.09%)</title><rect x="635.4" y="629" width="1.0" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="638.36" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (108,548,805 samples, 0.16%)</title><rect x="961.3" y="837" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="964.32" y="847.5" ></text>
</g>
<g >
<title>__cond_resched (48,491,875 samples, 0.07%)</title><rect x="504.3" y="661" width="0.8" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="507.31" y="671.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_name_command (3,714,921,272 samples, 5.34%)</title><rect x="1085.9" y="885" width="63.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1088.86" y="895.5" >tt::ch..</text>
</g>
<g >
<title>char* std::copy&lt;char*, char*&gt; (48,274,506 samples, 0.07%)</title><rect x="1134.0" y="661" width="0.8" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1136.99" y="671.5" ></text>
</g>
<g >
<title>kmem_cache_free (10,310,866 samples, 0.01%)</title><rect x="575.7" y="613" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="578.74" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (76,230,077 samples, 0.11%)</title><rect x="1112.8" y="741" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1115.76" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (12,675,459 samples, 0.02%)</title><rect x="1147.4" y="725" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1150.35" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (31,790,255 samples, 0.05%)</title><rect x="1086.4" y="821" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1089.42" y="831.5" ></text>
</g>
<g >
<title>__do_softirq (12,048,243 samples, 0.02%)</title><rect x="1028.6" y="597" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1031.60" y="607.5" ></text>
</g>
<g >
<title>inet_recvmsg (133,433,571 samples, 0.19%)</title><rect x="488.0" y="709" width="2.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="490.98" y="719.5" ></text>
</g>
<g >
<title>decltype  (103,199,998 samples, 0.15%)</title><rect x="1095.6" y="789" width="1.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1098.55" y="799.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (11,174,451 samples, 0.02%)</title><rect x="853.5" y="757" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="856.49" y="767.5" ></text>
</g>
<g >
<title>release_sock (12,129,855 samples, 0.02%)</title><rect x="500.8" y="677" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="503.82" y="687.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; fmt::v9::detail::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (46,959,225 samples, 0.07%)</title><rect x="1174.3" y="853" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1177.35" y="863.5" ></text>
</g>
<g >
<title>decltype  (124,488,426 samples, 0.18%)</title><rect x="1154.4" y="837" width="2.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1157.38" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (67,550,024 samples, 0.10%)</title><rect x="1170.1" y="741" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1173.07" y="751.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::grow (55,401,603 samples, 0.08%)</title><rect x="1140.9" y="693" width="0.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1143.90" y="703.5" ></text>
</g>
<g >
<title>__fdget_pos (1,223,488,968 samples, 1.76%)</title><rect x="358.3" y="741" width="20.7" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="361.27" y="751.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (294,377,109 samples, 0.42%)</title><rect x="1104.3" y="741" width="5.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1107.35" y="751.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="597" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1186.71" y="607.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (141,533,499 samples, 0.20%)</title><rect x="1181.7" y="725" width="2.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1184.68" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (114,292,135 samples, 0.16%)</title><rect x="1033.4" y="805" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1036.40" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (1,532,623,803 samples, 2.20%)</title><rect x="1003.2" y="805" width="26.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1006.17" y="815.5" >s..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,832,991 samples, 0.02%)</title><rect x="1087.0" y="773" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1089.96" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (22,847,632 samples, 0.03%)</title><rect x="1145.6" y="613" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1148.64" y="623.5" ></text>
</g>
<g >
<title>get_random_u16 (1,568,479,321 samples, 2.25%)</title><rect x="644.2" y="773" width="26.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="647.17" y="783.5" >g..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (34,749,956 samples, 0.05%)</title><rect x="1161.6" y="757" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1164.60" y="767.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (10,344,549 samples, 0.01%)</title><rect x="1002.8" y="517" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1005.79" y="527.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (11,375,838 samples, 0.02%)</title><rect x="1049.3" y="533" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1052.31" y="543.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="565" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1186.71" y="575.5" ></text>
</g>
<g >
<title>tcp_tso_segs (11,166,685 samples, 0.02%)</title><rect x="1076.9" y="565" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1079.89" y="575.5" ></text>
</g>
<g >
<title>_IO_fwrite (12,141,826 samples, 0.02%)</title><rect x="1189.0" y="789" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1192.01" y="799.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char*, char*&gt; (68,052,041 samples, 0.10%)</title><rect x="1125.9" y="629" width="1.1" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1128.87" y="639.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (16,564,072 samples, 0.02%)</title><rect x="783.2" y="789" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="786.19" y="799.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (10,217,293 samples, 0.01%)</title><rect x="936.1" y="773" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="939.13" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,509,725 samples, 0.02%)</title><rect x="1097.5" y="805" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1100.49" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,921,575 samples, 0.02%)</title><rect x="1158.9" y="805" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1161.90" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,738,555 samples, 0.03%)</title><rect x="1144.9" y="645" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1147.88" y="655.5" ></text>
</g>
<g >
<title>el0_svc (25,989,049,053 samples, 37.35%)</title><rect x="232.7" y="837" width="440.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="235.66" y="847.5" >el0_svc</text>
</g>
<g >
<title>__asan_stack_malloc_1 (10,697,617 samples, 0.02%)</title><rect x="1186.0" y="693" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.00" y="703.5" ></text>
</g>
<g >
<title>do_wp_page (10,940,349 samples, 0.02%)</title><rect x="935.8" y="597" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="938.75" y="607.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Put (30,276,802 samples, 0.04%)</title><rect x="967.2" y="789" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="970.20" y="799.5" ></text>
</g>
<g >
<title>__interceptor_trampoline_read (12,134,232 samples, 0.02%)</title><rect x="727.2" y="901" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="730.24" y="911.5" ></text>
</g>
<g >
<title>memset (9,800,314 samples, 0.01%)</title><rect x="1079.5" y="693" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1082.50" y="703.5" ></text>
</g>
<g >
<title>do_translation_fault (19,584,204 samples, 0.03%)</title><rect x="757.9" y="693" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="760.89" y="703.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt;::begin (56,342,742 samples, 0.08%)</title><rect x="1146.4" y="757" width="1.0" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="1149.40" y="767.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; fmt::v9::detail::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (34,093,895 samples, 0.05%)</title><rect x="1131.3" y="805" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1134.34" y="815.5" ></text>
</g>
<g >
<title>run_timer_softirq (10,745,220 samples, 0.02%)</title><rect x="1063.8" y="613" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1066.81" y="623.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;, 0ul&gt; (70,289,424 samples, 0.10%)</title><rect x="1031.0" y="773" width="1.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1033.98" y="783.5" ></text>
</g>
<g >
<title>__fget_light (11,561,780 samples, 0.02%)</title><rect x="1049.7" y="629" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1052.66" y="639.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (55,152,995 samples, 0.08%)</title><rect x="1187.7" y="725" width="0.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1190.69" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (22,847,632 samples, 0.03%)</title><rect x="1145.6" y="597" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1148.64" y="607.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (48,449,727 samples, 0.07%)</title><rect x="672.6" y="821" width="0.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="675.62" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (11,056,620 samples, 0.02%)</title><rect x="1097.3" y="789" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1100.30" y="799.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="341" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1186.71" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;int, true, false&gt;::operator++ (16,571,898 samples, 0.02%)</title><rect x="1033.1" y="853" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1036.12" y="863.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a1&lt;false, char const*, char*&gt; (11,069,345 samples, 0.02%)</title><rect x="1183.9" y="661" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1186.89" y="671.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (57,705,383 samples, 0.08%)</title><rect x="1171.4" y="757" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1174.42" y="767.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;::end (113,557,429 samples, 0.16%)</title><rect x="1035.3" y="853" width="2.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1038.33" y="863.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;::try_reserve (52,308,610 samples, 0.08%)</title><rect x="1108.5" y="693" width="0.8" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1111.46" y="703.5" ></text>
</g>
<g >
<title>tcp_push (673,852,398 samples, 0.97%)</title><rect x="1065.7" y="613" width="11.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1068.65" y="623.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="453" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1121.18" y="463.5" ></text>
</g>
<g >
<title>el0t_64_irq (21,954,316 samples, 0.03%)</title><rect x="842.2" y="821" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="845.21" y="831.5" ></text>
</g>
<g >
<title>call_on_irq_stack (20,806,089 samples, 0.03%)</title><rect x="960.8" y="677" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="963.78" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (80,716,106 samples, 0.12%)</title><rect x="1167.5" y="773" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1170.53" y="783.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (12,141,826 samples, 0.02%)</title><rect x="1189.0" y="677" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1192.01" y="687.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (9,176,306 samples, 0.01%)</title><rect x="1043.3" y="549" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1046.29" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (22,564,758 samples, 0.03%)</title><rect x="1087.3" y="789" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1090.34" y="799.5" ></text>
</g>
<g >
<title>ip_rcv_finish (16,564,072 samples, 0.02%)</title><rect x="783.2" y="549" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="786.19" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (45,670,837 samples, 0.07%)</title><rect x="1098.8" y="773" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1101.81" y="783.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (865,152,878 samples, 1.24%)</title><rect x="1175.1" y="853" width="14.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1178.14" y="863.5" ></text>
</g>
<g >
<title>ip_local_deliver (44,953,456 samples, 0.06%)</title><rect x="582.3" y="213" width="0.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="585.31" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (89,043,414 samples, 0.13%)</title><rect x="1038.2" y="805" width="1.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1041.16" y="815.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (10,692,645 samples, 0.02%)</title><rect x="1065.3" y="629" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1068.29" y="639.5" ></text>
</g>
<g >
<title>tcp_sendmsg (376,470,148 samples, 0.54%)</title><rect x="1043.1" y="629" width="6.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1046.12" y="639.5" ></text>
</g>
<g >
<title>__do_softirq (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="485" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1186.71" y="495.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (22,767,010 samples, 0.03%)</title><rect x="1133.4" y="661" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1136.40" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (11,399,238 samples, 0.02%)</title><rect x="1087.7" y="821" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1090.72" y="831.5" ></text>
</g>
<g >
<title>tcp_data_queue (69,858,030 samples, 0.10%)</title><rect x="1070.4" y="101" width="1.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1073.37" y="111.5" ></text>
</g>
<g >
<title>tcp_reset (9,825,739 samples, 0.01%)</title><rect x="783.3" y="421" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="786.30" y="431.5" ></text>
</g>
<g >
<title>call_on_irq_stack (486,140,055 samples, 0.70%)</title><rect x="1066.4" y="373" width="8.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1069.38" y="383.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,408,513 samples, 0.01%)</title><rect x="960.8" y="485" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="963.78" y="495.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,509,725 samples, 0.02%)</title><rect x="1097.5" y="821" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1100.49" y="831.5" ></text>
</g>
<g >
<title>fmt::v9::detail::count_digits (21,738,555 samples, 0.03%)</title><rect x="1144.9" y="661" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1147.88" y="671.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (1,289,054,913 samples, 1.85%)</title><rect x="1064.0" y="869" width="21.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1066.99" y="879.5" >t..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,893,776 samples, 0.03%)</title><rect x="1148.5" y="757" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1151.49" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (33,382,350 samples, 0.05%)</title><rect x="1092.7" y="789" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1095.74" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (1,712,842,706 samples, 2.46%)</title><rect x="973.9" y="821" width="29.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="976.92" y="831.5" >st..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (46,959,225 samples, 0.07%)</title><rect x="1174.3" y="837" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1177.35" y="847.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (881,363,792 samples, 1.27%)</title><rect x="1064.9" y="709" width="15.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1067.93" y="719.5" ></text>
</g>
<g >
<title>net_rx_action (474,856,127 samples, 0.68%)</title><rect x="1066.6" y="309" width="8.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1069.58" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (10,046,701 samples, 0.01%)</title><rect x="784.2" y="853" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="787.22" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (22,658,729 samples, 0.03%)</title><rect x="1145.3" y="677" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1148.25" y="687.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (8,673,571 samples, 0.01%)</title><rect x="1047.8" y="405" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1050.81" y="415.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (22,173,861 samples, 0.03%)</title><rect x="1002.6" y="757" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1005.59" y="767.5" ></text>
</g>
<g >
<title>apparmor_socket_sock_rcv_skb (10,812,644 samples, 0.02%)</title><rect x="1067.9" y="101" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1070.91" y="111.5" ></text>
</g>
<g >
<title>run_timer_softirq (7,552,234 samples, 0.01%)</title><rect x="670.6" y="597" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="673.64" y="607.5" ></text>
</g>
<g >
<title>handle_mm_fault (11,966,517 samples, 0.02%)</title><rect x="758.4" y="677" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="761.41" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (10,883,703 samples, 0.02%)</title><rect x="961.1" y="821" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="964.14" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync (8,974,068,514 samples, 12.90%)</title><rect x="25.1" y="901" width="152.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="28.13" y="911.5" >el0t_64_sync</text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,464,364,909 samples, 2.10%)</title><rect x="936.3" y="821" width="24.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="939.30" y="831.5" >_..</text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_range_ (12,141,826 samples, 0.02%)</title><rect x="1189.0" y="821" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1192.01" y="831.5" ></text>
</g>
<g >
<title>__netif_receive_skb (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="405" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1186.71" y="415.5" ></text>
</g>
<g >
<title>tcp_done_with_error (9,825,739 samples, 0.01%)</title><rect x="783.3" y="405" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="786.30" y="415.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;::try_reserve (82,045,621 samples, 0.12%)</title><rect x="1133.8" y="725" width="1.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1136.78" y="735.5" ></text>
</g>
<g >
<title>get_random_u16 (11,259,301 samples, 0.02%)</title><rect x="1079.9" y="709" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1082.88" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (35,151,022 samples, 0.05%)</title><rect x="1103.8" y="709" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1106.75" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (68,998,901 samples, 0.10%)</title><rect x="1152.8" y="869" width="1.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1155.84" y="879.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (32,631,526 samples, 0.05%)</title><rect x="1148.9" y="805" width="0.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1151.86" y="815.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (11,069,662 samples, 0.02%)</title><rect x="1140.9" y="661" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1143.90" y="671.5" ></text>
</g>
<g >
<title>std::conditional&lt;std::is_same&lt;char, char&gt;::value, fmt::v9::appender, std::back_insert_iterator&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; &gt;::type fmt::v9::detail::get_iterator&lt;char&gt; (45,340,535 samples, 0.07%)</title><rect x="1159.1" y="853" width="0.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1162.10" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (23,095,284 samples, 0.03%)</title><rect x="1189.4" y="821" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1192.42" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (44,331,941 samples, 0.06%)</title><rect x="1141.1" y="661" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1144.09" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (97,966,674 samples, 0.14%)</title><rect x="1086.1" y="853" width="1.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1089.06" y="863.5" ></text>
</g>
<g >
<title>do_page_fault (10,293,760 samples, 0.01%)</title><rect x="1087.2" y="629" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1090.16" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (120,698,285 samples, 0.17%)</title><rect x="1118.4" y="709" width="2.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1121.36" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (248,430,482 samples, 0.36%)</title><rect x="1037.3" y="821" width="4.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1040.26" y="831.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (11,378,464 samples, 0.02%)</title><rect x="1071.4" y="85" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1074.36" y="95.5" ></text>
</g>
<g >
<title>expire_timers (10,745,220 samples, 0.02%)</title><rect x="1063.8" y="581" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1066.81" y="591.5" ></text>
</g>
<g >
<title>arch_counter_get_cntvct (10,748,040 samples, 0.02%)</title><rect x="1048.7" y="533" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1051.72" y="543.5" ></text>
</g>
<g >
<title>__do_softirq (486,140,055 samples, 0.70%)</title><rect x="1066.4" y="341" width="8.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1069.38" y="351.5" ></text>
</g>
<g >
<title>_IO_do_write (12,141,826 samples, 0.02%)</title><rect x="1189.0" y="757" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1192.01" y="767.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (20,997,978 samples, 0.03%)</title><rect x="843.1" y="869" width="0.4" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="846.12" y="879.5" ></text>
</g>
<g >
<title>page_counter_try_charge (11,158,142 samples, 0.02%)</title><rect x="1079.0" y="549" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1082.00" y="559.5" ></text>
</g>
<g >
<title>__inet_lookup_skb (10,611,978 samples, 0.02%)</title><rect x="582.3" y="149" width="0.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="585.31" y="159.5" ></text>
</g>
<g >
<title>validate_xmit_skb (12,749,934 samples, 0.02%)</title><rect x="583.1" y="437" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="586.08" y="447.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (48,274,506 samples, 0.07%)</title><rect x="1134.0" y="613" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1136.99" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (107,289,420 samples, 0.15%)</title><rect x="965.2" y="821" width="1.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="968.17" y="831.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::get_buffer&lt;char&gt; (107,042,098 samples, 0.15%)</title><rect x="1157.3" y="853" width="1.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1160.29" y="863.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (182,825,369 samples, 0.26%)</title><rect x="505.1" y="661" width="3.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="508.13" y="671.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (11,516,680 samples, 0.02%)</title><rect x="935.4" y="693" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="938.40" y="703.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (25,270,079 samples, 0.04%)</title><rect x="1078.8" y="597" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1081.76" y="607.5" ></text>
</g>
<g >
<title>handle_softirqs (486,140,055 samples, 0.70%)</title><rect x="1066.4" y="325" width="8.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1069.38" y="335.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (21,483,191 samples, 0.03%)</title><rect x="1114.1" y="725" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1117.05" y="735.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (413,815,854 samples, 0.59%)</title><rect x="1067.0" y="165" width="7.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1069.99" y="175.5" ></text>
</g>
<g >
<title>apparmor_inode_alloc_security (11,018,926 samples, 0.02%)</title><rect x="1149.2" y="661" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="1152.23" y="671.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (151,893,592 samples, 0.22%)</title><rect x="1138.3" y="629" width="2.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1141.32" y="639.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::vformat_to&lt;fmt::v9::appender, 0&gt; (1,918,623,683 samples, 2.76%)</title><rect x="1097.7" y="821" width="32.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1100.67" y="831.5" >fm..</text>
</g>
<g >
<title>__handle_mm_fault (11,966,517 samples, 0.02%)</title><rect x="758.4" y="661" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="761.41" y="671.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (68,052,041 samples, 0.10%)</title><rect x="1125.9" y="645" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1128.87" y="655.5" ></text>
</g>
<g >
<title>do_epoll_wait (8,840,477,677 samples, 12.71%)</title><rect x="27.0" y="773" width="149.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="29.99" y="783.5" >do_epoll_wait</text>
</g>
<g >
<title>ip_finish_output (7,552,234 samples, 0.01%)</title><rect x="670.6" y="405" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="673.64" y="415.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,566,644 samples, 0.02%)</title><rect x="1143.4" y="693" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1146.39" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,319,160 samples, 0.01%)</title><rect x="1157.1" y="837" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1160.11" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (130,464,154 samples, 0.19%)</title><rect x="1181.7" y="661" width="2.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1184.68" y="671.5" ></text>
</g>
<g >
<title>__arm64_sys_mmap (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="405" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1130.59" y="415.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (21,792,451 samples, 0.03%)</title><rect x="1103.4" y="725" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1106.38" y="735.5" ></text>
</g>
<g >
<title>__alloc_skb (53,728,070 samples, 0.08%)</title><rect x="1077.9" y="597" width="0.9" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1080.85" y="607.5" ></text>
</g>
<g >
<title>rcu_report_qs_rnp (11,516,680 samples, 0.02%)</title><rect x="935.4" y="549" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="938.40" y="559.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char*, char*&gt; (41,143,241 samples, 0.06%)</title><rect x="1108.5" y="629" width="0.7" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1111.46" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (22,564,758 samples, 0.03%)</title><rect x="1087.3" y="821" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1090.34" y="831.5" ></text>
</g>
<g >
<title>operator delete (11,772,232 samples, 0.02%)</title><rect x="967.9" y="789" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="970.91" y="799.5" ></text>
</g>
<g >
<title>tcp_send_mss (45,525,057 samples, 0.07%)</title><rect x="1077.1" y="613" width="0.8" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="1080.08" y="623.5" ></text>
</g>
<g >
<title>ip_rcv (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="373" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1186.71" y="383.5" ></text>
</g>
<g >
<title>do_accept (21,722,256 samples, 0.03%)</title><rect x="1149.0" y="741" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1152.05" y="751.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (53,165,113 samples, 0.08%)</title><rect x="967.2" y="821" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="970.20" y="831.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::grow (82,045,621 samples, 0.12%)</title><rect x="1133.8" y="709" width="1.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1136.78" y="719.5" ></text>
</g>
<g >
<title>___interceptor_memcpy (12,048,552 samples, 0.02%)</title><rect x="784.0" y="821" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="787.01" y="831.5" ></text>
</g>
<g >
<title>void spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (1,964,698,310 samples, 2.82%)</title><rect x="1156.5" y="901" width="33.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1159.49" y="911.5" >vo..</text>
</g>
<g >
<title>__asan_stack_malloc_1 (23,623,151 samples, 0.03%)</title><rect x="1185.6" y="757" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1188.59" y="767.5" ></text>
</g>
<g >
<title>do_mem_abort (19,584,204 samples, 0.03%)</title><rect x="757.9" y="709" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="760.89" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (43,292,209 samples, 0.06%)</title><rect x="1149.8" y="853" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1152.79" y="863.5" ></text>
</g>
<g >
<title>sock_alloc (11,018,926 samples, 0.02%)</title><rect x="1149.2" y="725" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1152.23" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (95,120,523 samples, 0.14%)</title><rect x="1157.3" y="837" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1160.29" y="847.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (57,703,390 samples, 0.08%)</title><rect x="582.3" y="549" width="1.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="585.31" y="559.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (44,953,456 samples, 0.06%)</title><rect x="582.3" y="437" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="585.31" y="447.5" ></text>
</g>
<g >
<title>tcp_write_xmit (259,630,297 samples, 0.37%)</title><rect x="1044.5" y="565" width="4.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1047.50" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (10,534,464 samples, 0.02%)</title><rect x="1161.4" y="789" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1164.42" y="799.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (44,342,244 samples, 0.06%)</title><rect x="1143.6" y="693" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1146.57" y="703.5" ></text>
</g>
<g >
<title>net_rx_action (10,408,513 samples, 0.01%)</title><rect x="960.8" y="613" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="963.78" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (11,753,563 samples, 0.02%)</title><rect x="1085.9" y="869" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1088.86" y="879.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (10,475,808 samples, 0.02%)</title><rect x="853.3" y="757" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="856.31" y="767.5" ></text>
</g>
<g >
<title>call_on_irq_stack (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="565" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1067.93" y="575.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (84,930,052 samples, 0.12%)</title><rect x="1163.3" y="741" width="1.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1166.31" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (65,447,930 samples, 0.09%)</title><rect x="1090.5" y="789" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1093.45" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (11,129,573 samples, 0.02%)</title><rect x="1092.6" y="821" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1095.55" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,619,037 samples, 0.03%)</title><rect x="1104.3" y="709" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1107.35" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,484,910 samples, 0.03%)</title><rect x="1086.1" y="837" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1089.06" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (44,430,276 samples, 0.06%)</title><rect x="1102.6" y="693" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1105.63" y="703.5" ></text>
</g>
<g >
<title>__netif_receive_skb (16,564,072 samples, 0.02%)</title><rect x="783.2" y="597" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="786.19" y="607.5" ></text>
</g>
<g >
<title>handle_softirqs (12,040,418 samples, 0.02%)</title><rect x="1124.3" y="485" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1127.27" y="495.5" ></text>
</g>
<g >
<title>tcp_data_queue (6,738,333 samples, 0.01%)</title><rect x="783.2" y="437" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="786.19" y="447.5" ></text>
</g>
<g >
<title>sock_recvmsg (58,695,677 samples, 0.08%)</title><rect x="642.1" y="725" width="1.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="645.13" y="735.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (10,492,890 samples, 0.02%)</title><rect x="1120.2" y="661" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1123.23" y="671.5" ></text>
</g>
<g >
<title>el0t_64_irq (12,016,552 samples, 0.02%)</title><rect x="966.8" y="773" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="969.79" y="783.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="661" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1130.59" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (11,895,432 samples, 0.02%)</title><rect x="1135.2" y="741" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1138.17" y="751.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (345,011,563 samples, 0.50%)</title><rect x="1043.7" y="613" width="5.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1046.65" y="623.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (12,084,585 samples, 0.02%)</title><rect x="1076.7" y="565" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1079.69" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (54,851,179 samples, 0.08%)</title><rect x="1175.3" y="789" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1178.31" y="799.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char*, char*&gt; (48,274,506 samples, 0.07%)</title><rect x="1134.0" y="693" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1136.99" y="703.5" ></text>
</g>
<g >
<title>vfs_read (15,389,527,542 samples, 22.12%)</title><rect x="382.1" y="741" width="261.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="385.11" y="751.5" >vfs_read</text>
</g>
<g >
<title>__asan_stack_malloc_0 (151,893,592 samples, 0.22%)</title><rect x="1138.3" y="613" width="2.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1141.32" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (52,810,141 samples, 0.08%)</title><rect x="1037.3" y="805" width="0.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1040.26" y="815.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (553,403,881 samples, 0.80%)</title><rect x="1066.0" y="533" width="9.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1069.00" y="543.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (98,579,647 samples, 0.14%)</title><rect x="1120.4" y="693" width="1.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1123.40" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,589,182 samples, 0.01%)</title><rect x="967.2" y="773" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="970.20" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (34,381,088 samples, 0.05%)</title><rect x="1184.8" y="757" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1187.83" y="767.5" ></text>
</g>
<g >
<title>handle_softirqs (44,953,456 samples, 0.06%)</title><rect x="582.3" y="341" width="0.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="585.31" y="351.5" ></text>
</g>
<g >
<title>tcp_data_ready (132,045,027 samples, 0.19%)</title><rect x="1071.6" y="101" width="2.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1074.56" y="111.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (100,947,150 samples, 0.15%)</title><rect x="1186.9" y="757" width="1.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1189.92" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (36,513,302 samples, 0.05%)</title><rect x="1156.5" y="853" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1159.49" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (35,045,620 samples, 0.05%)</title><rect x="1176.4" y="789" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1179.36" y="799.5" ></text>
</g>
<g >
<title>___interceptor_read.part.0 (219,022,798 samples, 0.31%)</title><rect x="190.3" y="885" width="3.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="193.27" y="895.5" ></text>
</g>
<g >
<title>el0t_64_irq (20,806,089 samples, 0.03%)</title><rect x="960.8" y="789" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="963.78" y="799.5" ></text>
</g>
<g >
<title>___interceptor_read (48,644,158 samples, 0.07%)</title><rect x="673.4" y="885" width="0.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="676.44" y="895.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="341" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1067.93" y="351.5" ></text>
</g>
<g >
<title>sock_def_readable (132,045,027 samples, 0.19%)</title><rect x="1071.6" y="85" width="2.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1074.56" y="95.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (120,698,285 samples, 0.17%)</title><rect x="1118.4" y="693" width="2.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1121.36" y="703.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (10,492,890 samples, 0.02%)</title><rect x="1120.2" y="597" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1123.23" y="607.5" ></text>
</g>
<g >
<title>_IO_fwrite (21,579,607 samples, 0.03%)</title><rect x="1147.6" y="741" width="0.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1150.57" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_key_equals (37,481,546 samples, 0.05%)</title><rect x="1152.2" y="821" width="0.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1155.20" y="831.5" ></text>
</g>
<g >
<title>tcp_rcv_established (16,564,072 samples, 0.02%)</title><rect x="783.2" y="453" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="786.19" y="463.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (45,794,155 samples, 0.07%)</title><rect x="1186.9" y="725" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1189.92" y="735.5" ></text>
</g>
<g >
<title>__inet_lookup_skb (10,366,805 samples, 0.01%)</title><rect x="1067.4" y="133" width="0.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1070.35" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (12,141,826 samples, 0.02%)</title><rect x="1189.0" y="741" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1192.01" y="751.5" ></text>
</g>
<g >
<title>fmt::v9::vformat[abi:cxx11] (93,354,298 samples, 0.13%)</title><rect x="1088.3" y="853" width="1.6" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1091.32" y="863.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_client_data (10,217,293 samples, 0.01%)</title><rect x="936.1" y="757" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="939.13" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,069,662 samples, 0.02%)</title><rect x="1140.9" y="613" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1143.90" y="623.5" ></text>
</g>
<g >
<title>tcp_stream_memory_free (48,763,651 samples, 0.07%)</title><rect x="171.7" y="693" width="0.8" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="174.68" y="703.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (10,204,881 samples, 0.01%)</title><rect x="577.5" y="613" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="580.48" y="623.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (11,464,969 samples, 0.02%)</title><rect x="1044.0" y="549" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1046.96" y="559.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (10,233,399 samples, 0.01%)</title><rect x="911.2" y="853" width="0.2" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="914.24" y="863.5" ></text>
</g>
<g >
<title>call_on_irq_stack (11,516,680 samples, 0.02%)</title><rect x="935.4" y="661" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="938.40" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,165,369 samples, 0.02%)</title><rect x="1109.2" y="645" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1112.15" y="655.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (1,289,054,913 samples, 1.85%)</title><rect x="1064.0" y="853" width="21.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1066.99" y="863.5" >t..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (68,052,041 samples, 0.10%)</title><rect x="1125.9" y="597" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1128.87" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (6,892,739 samples, 0.01%)</title><rect x="1176.2" y="789" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1179.24" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (351,651,788 samples, 0.51%)</title><rect x="1150.5" y="885" width="6.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1153.53" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (23,095,284 samples, 0.03%)</title><rect x="1189.4" y="805" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1192.42" y="815.5" ></text>
</g>
<g >
<title>new_inode_pseudo (11,018,926 samples, 0.02%)</title><rect x="1149.2" y="709" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1152.23" y="719.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (68,927,979 samples, 0.10%)</title><rect x="582.1" y="581" width="1.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="585.12" y="591.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (22,173,861 samples, 0.03%)</title><rect x="1002.6" y="693" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1005.59" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (22,441,955 samples, 0.03%)</title><rect x="1142.5" y="677" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1145.46" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (141,712,323 samples, 0.20%)</title><rect x="1122.1" y="661" width="2.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1125.08" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (23,365,638 samples, 0.03%)</title><rect x="1029.2" y="821" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1032.17" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (32,631,526 samples, 0.05%)</title><rect x="1148.9" y="853" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1151.86" y="863.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (12,016,552 samples, 0.02%)</title><rect x="966.8" y="693" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="969.79" y="703.5" ></text>
</g>
<g >
<title>___interceptor_read (24,308,355 samples, 0.03%)</title><rect x="784.4" y="885" width="0.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="787.39" y="895.5" ></text>
</g>
<g >
<title>do_el0_svc (11,056,620 samples, 0.02%)</title><rect x="1097.3" y="757" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1100.30" y="767.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (12,016,552 samples, 0.02%)</title><rect x="966.8" y="757" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="969.79" y="767.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (149,052,219 samples, 0.21%)</title><rect x="1094.8" y="821" width="2.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1097.77" y="831.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="373" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1130.59" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (149,052,219 samples, 0.21%)</title><rect x="1094.8" y="805" width="2.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1097.77" y="815.5" ></text>
</g>
<g >
<title>ip_finish_output2 (57,703,390 samples, 0.08%)</title><rect x="582.3" y="485" width="1.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="585.31" y="495.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (8,784,434 samples, 0.01%)</title><rect x="757.9" y="533" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="760.89" y="543.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (341,064,240 samples, 0.49%)</title><rect x="1080.1" y="837" width="5.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1083.07" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (46,688,674 samples, 0.07%)</title><rect x="1171.4" y="741" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1174.42" y="751.5" ></text>
</g>
<g >
<title>__arm64_sys_epoll_pwait (8,840,477,677 samples, 12.71%)</title><rect x="27.0" y="805" width="149.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="29.99" y="815.5" >__arm64_sys_epoll_p..</text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (22,767,010 samples, 0.03%)</title><rect x="1133.4" y="693" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1136.40" y="703.5" ></text>
</g>
<g >
<title>sock_poll (4,953,826,756 samples, 7.12%)</title><rect x="88.5" y="709" width="84.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="91.48" y="719.5" >sock_poll</text>
</g>
<g >
<title>__asan_stack_malloc_0 (41,143,241 samples, 0.06%)</title><rect x="1108.5" y="597" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1111.46" y="607.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (35,150,443 samples, 0.05%)</title><rect x="582.3" y="181" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="585.31" y="191.5" ></text>
</g>
<g >
<title>fmt::v9::vformat[abi:cxx11] (135,587,775 samples, 0.19%)</title><rect x="851.4" y="869" width="2.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="854.38" y="879.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (37,382,260 samples, 0.05%)</title><rect x="1177.6" y="757" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1180.62" y="767.5" ></text>
</g>
<g >
<title>__sock_sendmsg (851,252,573 samples, 1.22%)</title><rect x="1064.9" y="677" width="14.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1067.93" y="687.5" ></text>
</g>
<g >
<title>sock_def_wakeup (9,825,739 samples, 0.01%)</title><rect x="783.3" y="373" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="786.30" y="383.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (34,331,826 samples, 0.05%)</title><rect x="1169.5" y="773" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1172.49" y="783.5" ></text>
</g>
<g >
<title>irq_exit_rcu (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="629" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1121.18" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,497,569 samples, 0.02%)</title><rect x="1106.9" y="661" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1109.91" y="671.5" ></text>
</g>
<g >
<title>invoke_syscall (72,810,233 samples, 0.10%)</title><rect x="671.4" y="805" width="1.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="674.39" y="815.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (10,293,760 samples, 0.01%)</title><rect x="1087.2" y="757" width="0.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1090.16" y="767.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (53,278,259 samples, 0.08%)</title><rect x="1163.8" y="677" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1166.84" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (31,387,154 samples, 0.05%)</title><rect x="1094.2" y="789" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1097.24" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (45,340,535 samples, 0.07%)</title><rect x="1159.1" y="821" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1162.10" y="831.5" ></text>
</g>
<g >
<title>vfs_write (11,047,934 samples, 0.02%)</title><rect x="1147.7" y="517" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1150.74" y="527.5" ></text>
</g>
<g >
<title>__ip_finish_output (57,703,390 samples, 0.08%)</title><rect x="582.3" y="501" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="585.31" y="511.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (343,084,247 samples, 0.49%)</title><rect x="1178.3" y="789" width="5.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1181.26" y="799.5" ></text>
</g>
<g >
<title>___interceptor_fwrite.part.0 (21,579,607 samples, 0.03%)</title><rect x="1147.6" y="757" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1150.57" y="767.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (45,506,361 samples, 0.07%)</title><rect x="1145.3" y="725" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1148.25" y="735.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (12,526,271 samples, 0.02%)</title><rect x="1047.3" y="53" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1050.27" y="63.5" ></text>
</g>
<g >
<title>sk_free (8,673,571 samples, 0.01%)</title><rect x="1047.8" y="357" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1050.81" y="367.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::vformat_to&lt;fmt::v9::appender, 0&gt; (960,776,654 samples, 1.38%)</title><rect x="1157.1" y="869" width="16.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1160.11" y="879.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (11,921,575 samples, 0.02%)</title><rect x="1158.9" y="837" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1161.90" y="847.5" ></text>
</g>
<g >
<title>skb_release_data (6,288,202 samples, 0.01%)</title><rect x="575.9" y="629" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="578.91" y="639.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (10,534,622 samples, 0.02%)</title><rect x="1185.4" y="709" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1188.42" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (46,959,225 samples, 0.07%)</title><rect x="1174.3" y="821" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1177.35" y="831.5" ></text>
</g>
<g >
<title>tcp_release_cb (60,629,423 samples, 0.09%)</title><rect x="583.3" y="661" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="586.29" y="671.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="389" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1067.93" y="399.5" ></text>
</g>
<g >
<title>rcu_core_si (11,829,312 samples, 0.02%)</title><rect x="1002.6" y="597" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1005.59" y="607.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (10,293,760 samples, 0.01%)</title><rect x="1087.2" y="725" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1090.16" y="735.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (142,874,196 samples, 0.21%)</title><rect x="1045.1" y="165" width="2.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1048.06" y="175.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (162,354,855 samples, 0.23%)</title><rect x="1045.1" y="405" width="2.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1048.06" y="415.5" ></text>
</g>
<g >
<title>memset (179,051,273 samples, 0.26%)</title><rect x="387.7" y="725" width="3.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="390.67" y="735.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (43,905,677 samples, 0.06%)</title><rect x="1101.1" y="725" width="0.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1104.14" y="735.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (35,034,888 samples, 0.05%)</title><rect x="490.2" y="709" width="0.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="493.24" y="719.5" ></text>
</g>
<g >
<title>el0t_64_irq (12,048,243 samples, 0.02%)</title><rect x="1028.6" y="741" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1031.60" y="751.5" ></text>
</g>
<g >
<title>ip_rcv (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="421" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1067.93" y="431.5" ></text>
</g>
<g >
<title>__send (11,056,620 samples, 0.02%)</title><rect x="1097.3" y="821" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1100.30" y="831.5" ></text>
</g>
<g >
<title>call_on_irq_stack (21,954,316 samples, 0.03%)</title><rect x="842.2" y="709" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="845.21" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (56,686,007 samples, 0.08%)</title><rect x="1099.6" y="789" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1102.58" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (118,429,730 samples, 0.17%)</title><rect x="963.2" y="821" width="2.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="966.16" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (45,852,221 samples, 0.07%)</title><rect x="1094.8" y="789" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1097.77" y="799.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="437" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1130.59" y="447.5" ></text>
</g>
<g >
<title>tcp_filter (58,218,980 samples, 0.08%)</title><rect x="1067.5" y="133" width="1.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1070.53" y="143.5" ></text>
</g>
<g >
<title>___interceptor_send (11,973,552 samples, 0.02%)</title><rect x="1064.4" y="837" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1067.35" y="847.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (106,576,927 samples, 0.15%)</title><rect x="1039.7" y="805" width="1.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1042.67" y="815.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::chrono::__is_duration&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::value, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::type std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (11,104,815 samples, 0.02%)</title><rect x="1146.2" y="757" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1149.21" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (360,736,530 samples, 0.52%)</title><rect x="728.2" y="853" width="6.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="731.24" y="863.5" ></text>
</g>
<g >
<title>____do_softirq (12,040,418 samples, 0.02%)</title><rect x="1124.3" y="517" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1127.27" y="527.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (10,519,195 samples, 0.02%)</title><rect x="1167.4" y="805" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1170.36" y="815.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (16,564,072 samples, 0.02%)</title><rect x="783.2" y="501" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="786.19" y="511.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (10,476,255 samples, 0.02%)</title><rect x="1079.2" y="645" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1082.19" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,319,160 samples, 0.01%)</title><rect x="1157.1" y="853" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1160.11" y="863.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;&gt; (80,381,073 samples, 0.12%)</title><rect x="1155.1" y="821" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1158.13" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (23,806,231 samples, 0.03%)</title><rect x="1087.9" y="821" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1090.91" y="831.5" ></text>
</g>
<g >
<title>____do_softirq (11,516,680 samples, 0.02%)</title><rect x="935.4" y="645" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="938.40" y="655.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (23,780,708 samples, 0.03%)</title><rect x="1063.6" y="693" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1066.59" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (43,905,677 samples, 0.06%)</title><rect x="1101.1" y="709" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1104.14" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,566,644 samples, 0.02%)</title><rect x="1143.4" y="709" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1146.39" y="719.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (11,464,969 samples, 0.02%)</title><rect x="1044.0" y="597" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1046.96" y="607.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (72,779,791 samples, 0.10%)</title><rect x="28.2" y="741" width="1.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="31.20" y="751.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (13,003,441 samples, 0.02%)</title><rect x="783.5" y="853" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="786.47" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (76,230,077 samples, 0.11%)</title><rect x="1112.8" y="757" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1115.76" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (56,475,430 samples, 0.08%)</title><rect x="1096.3" y="757" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1099.34" y="767.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (50,871,311 samples, 0.07%)</title><rect x="1106.0" y="709" width="0.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1109.04" y="719.5" ></text>
</g>
<g >
<title>char* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char const, char&gt; (11,069,345 samples, 0.02%)</title><rect x="1183.9" y="629" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1186.89" y="639.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (486,140,055 samples, 0.70%)</title><rect x="1066.4" y="389" width="8.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1069.38" y="399.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,455,016,361 samples, 2.09%)</title><rect x="758.8" y="837" width="24.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="761.79" y="847.5" >_..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (10,883,703 samples, 0.02%)</title><rect x="961.1" y="805" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="964.14" y="815.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::chrono::__is_duration&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::value, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::type std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (10,749,839 samples, 0.02%)</title><rect x="1184.5" y="773" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1187.45" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (19,258,350 samples, 0.03%)</title><rect x="1030.1" y="789" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1033.12" y="799.5" ></text>
</g>
<g >
<title>schedule (8,036,241 samples, 0.01%)</title><rect x="1049.9" y="725" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1052.86" y="735.5" ></text>
</g>
<g >
<title>___interceptor_strlen.part.0 (10,233,399 samples, 0.01%)</title><rect x="911.2" y="837" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="914.24" y="847.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (33,382,350 samples, 0.05%)</title><rect x="1092.7" y="821" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1095.74" y="831.5" ></text>
</g>
<g >
<title>___interceptor_strlen.part.0 (9,169,900 samples, 0.01%)</title><rect x="843.3" y="837" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="846.32" y="847.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,408,513 samples, 0.01%)</title><rect x="960.8" y="469" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="963.78" y="479.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (11,796,614 samples, 0.02%)</title><rect x="1184.6" y="741" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1187.63" y="751.5" ></text>
</g>
<g >
<title>read@plt (24,211,233 samples, 0.03%)</title><rect x="727.6" y="901" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="730.65" y="911.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (280,649,869 samples, 0.40%)</title><rect x="1137.1" y="725" width="4.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1140.08" y="735.5" ></text>
</g>
<g >
<title>el1h_64_irq_handler (7,552,234 samples, 0.01%)</title><rect x="670.6" y="741" width="0.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="673.64" y="751.5" ></text>
</g>
<g >
<title>lock_sock_nested (12,145,198 samples, 0.02%)</title><rect x="500.6" y="677" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="503.61" y="687.5" ></text>
</g>
<g >
<title>__do_softirq (10,475,808 samples, 0.02%)</title><rect x="853.3" y="645" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="856.31" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (59,634,625 samples, 0.09%)</title><rect x="1172.4" y="789" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1175.40" y="799.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.isra.0 (19,480,659 samples, 0.03%)</title><rect x="1047.5" y="181" width="0.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1050.48" y="191.5" ></text>
</g>
<g >
<title>cubictcp_cwnd_event (10,796,677 samples, 0.02%)</title><rect x="1075.4" y="565" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1078.39" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_5 (1,536,742,272 samples, 2.21%)</title><rect x="701.0" y="885" width="26.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="703.97" y="895.5" >_..</text>
</g>
<g >
<title>sock_def_readable (58,479,566 samples, 0.08%)</title><rect x="1070.4" y="69" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1073.37" y="79.5" ></text>
</g>
<g >
<title>call_on_irq_stack (12,040,418 samples, 0.02%)</title><rect x="1124.3" y="533" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1127.27" y="543.5" ></text>
</g>
<g >
<title>__arm64_sys_read (17,159,393,603 samples, 24.66%)</title><rect x="353.1" y="773" width="291.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="356.14" y="783.5" >__arm64_sys_read</text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::begin (12,481,678 samples, 0.02%)</title><rect x="1189.2" y="837" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1192.21" y="847.5" ></text>
</g>
<g >
<title>get_page_from_freelist (11,464,969 samples, 0.02%)</title><rect x="1044.0" y="517" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1046.96" y="527.5" ></text>
</g>
<g >
<title>process_backlog (10,408,513 samples, 0.01%)</title><rect x="960.8" y="581" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="963.78" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="597" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1130.59" y="607.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (11,016,709 samples, 0.02%)</title><rect x="1172.2" y="693" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1175.21" y="703.5" ></text>
</g>
<g >
<title>el0t_64_sync (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="501" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1130.59" y="511.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (10,908,684 samples, 0.02%)</title><rect x="1189.8" y="869" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.81" y="879.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (10,164,126 samples, 0.01%)</title><rect x="965.0" y="757" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="968.00" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (89,303,140 samples, 0.13%)</title><rect x="1178.3" y="757" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1181.26" y="767.5" ></text>
</g>
<g >
<title>fmt::v9::format_int::format_int (43,641,062 samples, 0.06%)</title><rect x="1144.5" y="725" width="0.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1147.51" y="735.5" ></text>
</g>
<g >
<title>tt::chat::server::ChannelManager::get_members (248,430,482 samples, 0.36%)</title><rect x="1037.3" y="853" width="4.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1040.26" y="863.5" ></text>
</g>
<g >
<title>ip_queue_xmit (57,703,390 samples, 0.08%)</title><rect x="582.3" y="565" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="585.31" y="575.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (10,632,249 samples, 0.02%)</title><rect x="1065.1" y="597" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1068.11" y="607.5" ></text>
</g>
<g >
<title>char const* fmt::v9::detail::parse_replacement_field&lt;char, fmt::v9::detail::vformat_to&lt;char&gt; (353,405,084 samples, 0.51%)</title><rect x="1159.9" y="837" width="6.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1162.87" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (37,382,260 samples, 0.05%)</title><rect x="1177.6" y="677" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1180.62" y="687.5" ></text>
</g>
<g >
<title>rcu_core_si (12,016,552 samples, 0.02%)</title><rect x="966.8" y="597" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="969.79" y="607.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="485" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1130.59" y="495.5" ></text>
</g>
<g >
<title>void spdlog::details::fmt_helper::pad3&lt;unsigned int&gt; (10,804,221 samples, 0.02%)</title><rect x="1146.0" y="741" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1149.02" y="751.5" ></text>
</g>
<g >
<title>__cond_resched (36,354,760 samples, 0.05%)</title><rect x="634.3" y="645" width="0.6" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="637.33" y="655.5" ></text>
</g>
<g >
<title>raw_v4_input (9,552,956 samples, 0.01%)</title><rect x="1067.0" y="149" width="0.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1069.99" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (48,465,024 samples, 0.07%)</title><rect x="1091.7" y="805" width="0.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1094.73" y="815.5" ></text>
</g>
<g >
<title>fput (533,185,622 samples, 0.77%)</title><rect x="79.4" y="709" width="9.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="82.44" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,075,633 samples, 0.02%)</title><rect x="1149.6" y="853" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1152.61" y="863.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (11,829,163 samples, 0.02%)</title><rect x="734.2" y="725" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="737.16" y="735.5" ></text>
</g>
<g >
<title>el0_svc (448,219,908 samples, 0.64%)</title><rect x="1042.4" y="757" width="7.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1045.39" y="767.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (892,623,093 samples, 1.28%)</title><rect x="1064.9" y="741" width="15.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1067.93" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (12,481,678 samples, 0.02%)</title><rect x="1189.2" y="805" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1192.21" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (44,342,244 samples, 0.06%)</title><rect x="1143.6" y="613" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1146.57" y="623.5" ></text>
</g>
<g >
<title>____do_softirq (23,780,708 samples, 0.03%)</title><rect x="1063.6" y="661" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1066.59" y="671.5" ></text>
</g>
<g >
<title>loopback_xmit (8,673,571 samples, 0.01%)</title><rect x="1047.8" y="389" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1050.81" y="399.5" ></text>
</g>
<g >
<title>rcu_all_qs (11,988,114 samples, 0.02%)</title><rect x="636.2" y="613" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="639.18" y="623.5" ></text>
</g>
<g >
<title>el0_interrupt (12,016,552 samples, 0.02%)</title><rect x="966.8" y="725" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="969.79" y="735.5" ></text>
</g>
<g >
<title>release_sock (31,458,585 samples, 0.05%)</title><rect x="1043.1" y="613" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1046.12" y="623.5" ></text>
</g>
<g >
<title>call_on_irq_stack (22,173,861 samples, 0.03%)</title><rect x="1002.6" y="661" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1005.59" y="671.5" ></text>
</g>
<g >
<title>__run_timers (10,344,549 samples, 0.01%)</title><rect x="1002.8" y="581" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1005.79" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (80,650,204 samples, 0.12%)</title><rect x="1114.4" y="709" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1117.42" y="719.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;&gt; (101,820,055 samples, 0.15%)</title><rect x="1030.4" y="789" width="1.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1033.45" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (11,077,475 samples, 0.02%)</title><rect x="842.7" y="853" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="845.73" y="863.5" ></text>
</g>
<g >
<title>_start (69,572,571,424 samples, 100.00%)</title><rect x="10.0" y="997" width="1180.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.02" y="1007.5" >_start</text>
</g>
<g >
<title>__asan_stack_malloc_0 (113,557,429 samples, 0.16%)</title><rect x="1035.3" y="821" width="2.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1038.33" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (9,130,414 samples, 0.01%)</title><rect x="842.6" y="805" width="0.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="845.58" y="815.5" ></text>
</g>
<g >
<title>ip_output (7,552,234 samples, 0.01%)</title><rect x="670.6" y="421" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="673.64" y="431.5" ></text>
</g>
<g >
<title>do_translation_fault (9,130,414 samples, 0.01%)</title><rect x="842.6" y="757" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="845.58" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (41,143,241 samples, 0.06%)</title><rect x="1108.5" y="581" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1111.46" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (246,161,624 samples, 0.35%)</title><rect x="847.2" y="837" width="4.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="850.20" y="847.5" ></text>
</g>
<g >
<title>main (69,572,571,424 samples, 100.00%)</title><rect x="10.0" y="949" width="1180.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.02" y="959.5" >main</text>
</g>
<g >
<title>__asan_stack_malloc_1 (10,804,221 samples, 0.02%)</title><rect x="1146.0" y="725" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1149.02" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,619,037 samples, 0.03%)</title><rect x="1104.3" y="725" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1107.35" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,500,593,138 samples, 2.16%)</title><rect x="1003.4" y="773" width="25.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1006.35" y="783.5" >_..</text>
</g>
<g >
<title>handle_softirqs (23,780,708 samples, 0.03%)</title><rect x="1063.6" y="629" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1066.59" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (3,753,804,070 samples, 5.40%)</title><rect x="968.5" y="853" width="63.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="971.51" y="863.5" >std::_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (22,126,751 samples, 0.03%)</title><rect x="1087.0" y="821" width="0.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1089.96" y="831.5" ></text>
</g>
<g >
<title>epoll_pwait (9,010,520,743 samples, 12.95%)</title><rect x="24.5" y="917" width="152.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="27.51" y="927.5" >epoll_pwait</text>
</g>
<g >
<title>el0t_64_sync (10,940,349 samples, 0.02%)</title><rect x="935.8" y="725" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="938.75" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (22,564,758 samples, 0.03%)</title><rect x="1087.3" y="805" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1090.34" y="815.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender, int, 0&gt; (153,653,606 samples, 0.22%)</title><rect x="1100.8" y="757" width="2.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1103.78" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (10,697,617 samples, 0.02%)</title><rect x="1186.0" y="709" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.00" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (43,426,339 samples, 0.06%)</title><rect x="1173.4" y="853" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1176.41" y="863.5" ></text>
</g>
<g >
<title>net_rx_action (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="453" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1186.71" y="463.5" ></text>
</g>
<g >
<title>ip_skb_dst_mtu (11,724,822 samples, 0.02%)</title><rect x="1048.0" y="453" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1050.96" y="463.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (10,745,220 samples, 0.02%)</title><rect x="1063.8" y="549" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1066.81" y="559.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (10,204,881 samples, 0.01%)</title><rect x="577.5" y="629" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="580.48" y="639.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2,029,389,305 samples, 2.92%)</title><rect x="876.8" y="853" width="34.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="879.82" y="863.5" >vo..</text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (707,263,202 samples, 1.02%)</title><rect x="1115.8" y="741" width="12.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1118.78" y="751.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; spdlog::details::to_string_view&lt;char, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (10,509,725 samples, 0.02%)</title><rect x="1097.5" y="837" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1100.49" y="847.5" ></text>
</g>
<g >
<title>spdlog::details::short_filename_formatter&lt;spdlog::details::null_scoped_padder&gt;::basename (22,040,046 samples, 0.03%)</title><rect x="1184.1" y="789" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1187.08" y="799.5" ></text>
</g>
<g >
<title>do_softirq (486,140,055 samples, 0.70%)</title><rect x="1066.4" y="405" width="8.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1069.38" y="415.5" ></text>
</g>
<g >
<title>____do_softirq (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="565" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1121.18" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (11,895,432 samples, 0.02%)</title><rect x="1135.2" y="725" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1138.17" y="735.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (11,016,709 samples, 0.02%)</title><rect x="1172.2" y="709" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1175.21" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (135,587,775 samples, 0.19%)</title><rect x="851.4" y="853" width="2.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="854.38" y="863.5" ></text>
</g>
<g >
<title>___interceptor_fwrite.part.0 (12,141,826 samples, 0.02%)</title><rect x="1189.0" y="805" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1192.01" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (106,576,927 samples, 0.15%)</title><rect x="1039.7" y="773" width="1.8" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1042.67" y="783.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (55,152,995 samples, 0.08%)</title><rect x="1187.7" y="741" width="0.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1190.69" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (73,354,674 samples, 0.11%)</title><rect x="1137.1" y="693" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1140.08" y="703.5" ></text>
</g>
<g >
<title>tcp_check_space (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="245" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1186.71" y="255.5" ></text>
</g>
<g >
<title>__folio_put (6,288,202 samples, 0.01%)</title><rect x="575.9" y="613" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="578.91" y="623.5" ></text>
</g>
<g >
<title>fmt::v9::detail::count_digits (21,907,267 samples, 0.03%)</title><rect x="1101.9" y="741" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1104.89" y="751.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="549" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1186.71" y="559.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (10,475,808 samples, 0.02%)</title><rect x="853.3" y="693" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="856.31" y="703.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (502,206,158 samples, 0.72%)</title><rect x="1041.5" y="821" width="8.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1044.47" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (10,293,760 samples, 0.01%)</title><rect x="1087.2" y="693" width="0.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1090.16" y="703.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (7,552,234 samples, 0.01%)</title><rect x="670.6" y="677" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="673.64" y="687.5" ></text>
</g>
<g >
<title>__netif_rx (13,359,149 samples, 0.02%)</title><rect x="1074.6" y="389" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1077.63" y="399.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (11,399,238 samples, 0.02%)</title><rect x="1087.7" y="837" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1090.72" y="847.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (11,056,620 samples, 0.02%)</title><rect x="1097.3" y="629" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1100.30" y="639.5" ></text>
</g>
<g >
<title>rcu_do_batch (11,829,312 samples, 0.02%)</title><rect x="1002.6" y="565" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1005.59" y="575.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (225,248,266 samples, 0.32%)</title><rect x="1137.1" y="709" width="3.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1140.08" y="719.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;&gt; (56,475,430 samples, 0.08%)</title><rect x="1096.3" y="773" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1099.34" y="783.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (12,556,331 samples, 0.02%)</title><rect x="1079.7" y="693" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1082.67" y="703.5" ></text>
</g>
<g >
<title>do_page_fault (11,966,517 samples, 0.02%)</title><rect x="758.4" y="693" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="761.41" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3,394,062,406 samples, 4.88%)</title><rect x="853.7" y="869" width="57.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="856.68" y="879.5" >std::_..</text>
</g>
<g >
<title>_IO_do_write (21,579,607 samples, 0.03%)</title><rect x="1147.6" y="709" width="0.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1150.57" y="719.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (158,209,612 samples, 0.23%)</title><rect x="1132.5" y="741" width="2.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1135.49" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (12,079,547 samples, 0.02%)</title><rect x="1098.6" y="789" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1101.60" y="799.5" ></text>
</g>
<g >
<title>vma_alloc_folio (8,784,434 samples, 0.01%)</title><rect x="757.9" y="549" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="760.89" y="559.5" ></text>
</g>
<g >
<title>__netif_receive_skb (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="469" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1121.18" y="479.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,516,680 samples, 0.02%)</title><rect x="935.4" y="709" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="938.40" y="719.5" ></text>
</g>
<g >
<title>__sock_sendmsg (385,542,104 samples, 0.55%)</title><rect x="1043.1" y="661" width="6.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1046.12" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (21,902,507 samples, 0.03%)</title><rect x="1144.5" y="661" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1147.51" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (21,792,451 samples, 0.03%)</title><rect x="1103.4" y="741" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1106.38" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (12,675,459 samples, 0.02%)</title><rect x="1147.4" y="741" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1150.35" y="751.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_client_data (157,932,247 samples, 0.23%)</title><rect x="784.4" y="901" width="2.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="787.39" y="911.5" ></text>
</g>
<g >
<title>el0t_64_irq (22,173,861 samples, 0.03%)</title><rect x="1002.6" y="773" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1005.59" y="783.5" ></text>
</g>
<g >
<title>iterate_tty_write (11,047,934 samples, 0.02%)</title><rect x="1147.7" y="469" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1150.74" y="479.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (44,953,456 samples, 0.06%)</title><rect x="582.3" y="197" width="0.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="585.31" y="207.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,352,504,532 samples, 1.94%)</title><rect x="853.7" y="853" width="22.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="856.68" y="863.5" >_..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (34,093,895 samples, 0.05%)</title><rect x="1131.3" y="773" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1134.34" y="783.5" ></text>
</g>
<g >
<title>___interceptor_read.part.0 (72,885,020 samples, 0.10%)</title><rect x="784.8" y="885" width="1.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="787.80" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (56,686,007 samples, 0.08%)</title><rect x="1099.6" y="773" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1102.58" y="783.5" ></text>
</g>
<g >
<title>sock_rfree (10,204,881 samples, 0.01%)</title><rect x="577.5" y="645" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="580.48" y="655.5" ></text>
</g>
<g >
<title>___interceptor_send (9,084,073 samples, 0.01%)</title><rect x="1050.0" y="805" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1052.99" y="815.5" ></text>
</g>
<g >
<title>handle_softirqs (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="469" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1186.71" y="479.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (7,552,234 samples, 0.01%)</title><rect x="670.6" y="325" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="673.64" y="335.5" ></text>
</g>
<g >
<title>__do_softirq (11,516,680 samples, 0.02%)</title><rect x="935.4" y="629" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="938.40" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (22,392,530 samples, 0.03%)</title><rect x="1155.7" y="773" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1158.70" y="783.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (11,966,517 samples, 0.02%)</title><rect x="758.4" y="741" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="761.41" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (270,307,604 samples, 0.39%)</title><rect x="876.8" y="837" width="4.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="879.82" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (44,262,067 samples, 0.06%)</title><rect x="1162.2" y="773" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.19" y="783.5" ></text>
</g>
<g >
<title>tcp_sendmsg (9,071,956 samples, 0.01%)</title><rect x="1049.5" y="645" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1052.51" y="655.5" ></text>
</g>
<g >
<title>_IO_file_write (12,141,826 samples, 0.02%)</title><rect x="1189.0" y="725" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1192.01" y="735.5" ></text>
</g>
<g >
<title>el0t_64_sync (32,631,526 samples, 0.05%)</title><rect x="1148.9" y="869" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1151.86" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (65,447,930 samples, 0.09%)</title><rect x="1090.5" y="805" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1093.45" y="815.5" ></text>
</g>
<g >
<title>ip_finish_output (57,703,390 samples, 0.08%)</title><rect x="582.3" y="517" width="1.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="585.31" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt;::end (11,169,888 samples, 0.02%)</title><rect x="1188.8" y="805" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1191.82" y="815.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (16,564,072 samples, 0.02%)</title><rect x="783.2" y="805" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="786.19" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (78,203,441 samples, 0.11%)</title><rect x="1104.7" y="709" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1107.72" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (11,135,049 samples, 0.02%)</title><rect x="1149.4" y="885" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1152.42" y="895.5" ></text>
</g>
<g >
<title>free_tail_page_prepare (6,288,202 samples, 0.01%)</title><rect x="575.9" y="549" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="578.91" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (19,258,350 samples, 0.03%)</title><rect x="1030.1" y="773" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1033.12" y="783.5" ></text>
</g>
<g >
<title>ip_rcv (437,513,995 samples, 0.63%)</title><rect x="1066.8" y="229" width="7.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1069.79" y="239.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (45,506,361 samples, 0.07%)</title><rect x="1145.3" y="709" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1148.25" y="719.5" ></text>
</g>
<g >
<title>alloc_anon_folio (8,784,434 samples, 0.01%)</title><rect x="757.9" y="581" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="760.89" y="591.5" ></text>
</g>
<g >
<title>__do_softirq (20,806,089 samples, 0.03%)</title><rect x="960.8" y="645" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="963.78" y="655.5" ></text>
</g>
<g >
<title>__lsan::DisabledInThisThread (10,337,268 samples, 0.01%)</title><rect x="758.6" y="773" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="761.61" y="783.5" ></text>
</g>
<g >
<title>tcp_data_ready (58,479,566 samples, 0.08%)</title><rect x="1070.4" y="85" width="1.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1073.37" y="95.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (124,413,324 samples, 0.18%)</title><rect x="851.4" y="805" width="2.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="854.38" y="815.5" ></text>
</g>
<g >
<title>begin_current_label_crit_section (133,267,598 samples, 0.19%)</title><rect x="634.9" y="645" width="2.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="637.95" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,907,267 samples, 0.03%)</title><rect x="1101.9" y="709" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1104.89" y="719.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (37,481,546 samples, 0.05%)</title><rect x="1152.2" y="837" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1155.20" y="847.5" ></text>
</g>
<g >
<title>__libc_start_main (69,572,571,424 samples, 100.00%)</title><rect x="10.0" y="981" width="1180.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="13.02" y="991.5" >__libc_start_main</text>
</g>
<g >
<title>handle_softirqs (16,564,072 samples, 0.02%)</title><rect x="783.2" y="661" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="786.19" y="671.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (205,912,633 samples, 0.30%)</title><rect x="1168.9" y="805" width="3.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1171.90" y="815.5" ></text>
</g>
<g >
<title>handle_softirqs (162,354,855 samples, 0.23%)</title><rect x="1045.1" y="309" width="2.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1048.06" y="319.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (22,767,010 samples, 0.03%)</title><rect x="1133.4" y="709" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1136.40" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (66,309,796 samples, 0.10%)</title><rect x="1109.3" y="757" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1112.34" y="767.5" ></text>
</g>
<g >
<title>tcp_rate_gen (10,632,249 samples, 0.02%)</title><rect x="1065.1" y="549" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1068.11" y="559.5" ></text>
</g>
<g >
<title>fmt::v9::detail::abort_fuzzing_if (44,331,941 samples, 0.06%)</title><rect x="1141.1" y="677" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1144.09" y="687.5" ></text>
</g>
<g >
<title>__handle_mm_fault (19,584,204 samples, 0.03%)</title><rect x="757.9" y="645" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="760.89" y="655.5" ></text>
</g>
<g >
<title>ip_rcv (44,953,456 samples, 0.06%)</title><rect x="582.3" y="245" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="585.31" y="255.5" ></text>
</g>
<g >
<title>ip_rcv_finish (162,354,855 samples, 0.23%)</title><rect x="1045.1" y="197" width="2.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1048.06" y="207.5" ></text>
</g>
<g >
<title>____do_softirq (22,173,861 samples, 0.03%)</title><rect x="1002.6" y="645" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1005.59" y="655.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (892,623,093 samples, 1.28%)</title><rect x="1064.9" y="789" width="15.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1067.93" y="799.5" ></text>
</g>
<g >
<title>handle_softirqs (21,954,316 samples, 0.03%)</title><rect x="842.2" y="661" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="845.21" y="671.5" ></text>
</g>
<g >
<title>operator new (53,093,919 samples, 0.08%)</title><rect x="757.9" y="821" width="0.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="760.89" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (167,635,250 samples, 0.24%)</title><rect x="1089.9" y="853" width="2.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1092.90" y="863.5" ></text>
</g>
<g >
<title>spdlog::details::full_formatter::format (611,562,931 samples, 0.88%)</title><rect x="1178.3" y="805" width="10.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1181.26" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (816,517,355 samples, 1.17%)</title><rect x="1050.1" y="805" width="13.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1053.15" y="815.5" ></text>
</g>
<g >
<title>fmt::v9::detail::vformat_to&lt;char&gt; (444,669,777 samples, 0.64%)</title><rect x="1165.9" y="837" width="7.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1168.87" y="847.5" ></text>
</g>
<g >
<title>run_timer_softirq (11,638,897 samples, 0.02%)</title><rect x="842.4" y="645" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="845.38" y="655.5" ></text>
</g>
<g >
<title>___interceptor_strlen.part.0 (20,997,978 samples, 0.03%)</title><rect x="843.1" y="853" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="846.12" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (14,126,448 samples, 0.02%)</title><rect x="1142.2" y="709" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1145.22" y="719.5" ></text>
</g>
<g >
<title>spdlog::details::short_filename_formatter&lt;spdlog::details::null_scoped_padder&gt;::basename (22,294,434 samples, 0.03%)</title><rect x="1141.8" y="741" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1144.84" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (318,914,234 samples, 0.46%)</title><rect x="968.5" y="837" width="5.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="971.51" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (20,146,761 samples, 0.03%)</title><rect x="1029.6" y="773" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1032.57" y="783.5" ></text>
</g>
<g >
<title>ip_local_deliver (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="405" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1121.18" y="415.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (89,043,414 samples, 0.13%)</title><rect x="1038.2" y="773" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1041.16" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,939,437 samples, 0.02%)</title><rect x="1163.1" y="725" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1166.12" y="735.5" ></text>
</g>
<g >
<title>release_sock (20,795,028 samples, 0.03%)</title><rect x="1064.9" y="629" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1067.93" y="639.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (11,829,163 samples, 0.02%)</title><rect x="734.2" y="821" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="737.16" y="831.5" ></text>
</g>
<g >
<title>el0_da (11,966,517 samples, 0.02%)</title><rect x="758.4" y="725" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="761.41" y="735.5" ></text>
</g>
<g >
<title>__fget_light (12,064,601 samples, 0.02%)</title><rect x="379.0" y="741" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="382.02" y="751.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char*, char*&gt; (68,052,041 samples, 0.10%)</title><rect x="1125.9" y="613" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1128.87" y="623.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (910,079,631 samples, 1.31%)</title><rect x="1132.1" y="773" width="15.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1135.13" y="783.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (33,382,350 samples, 0.05%)</title><rect x="1092.7" y="805" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1095.74" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (56,767,292 samples, 0.08%)</title><rect x="1124.7" y="597" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1127.70" y="607.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (23,172,447 samples, 0.03%)</title><rect x="758.2" y="773" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="761.22" y="783.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (10,736,056 samples, 0.02%)</title><rect x="1078.4" y="565" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1081.40" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_free_5@plt (24,303,503 samples, 0.03%)</title><rect x="699.7" y="901" width="0.5" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="702.75" y="911.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (72,682,168 samples, 0.10%)</title><rect x="584.3" y="677" width="1.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="587.32" y="687.5" ></text>
</g>
<g >
<title>inet_sendmsg (11,056,620 samples, 0.02%)</title><rect x="1097.3" y="661" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1100.30" y="671.5" ></text>
</g>
<g >
<title>tcp_recvmsg (84,863,735 samples, 0.12%)</title><rect x="640.7" y="693" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="643.69" y="703.5" ></text>
</g>
<g >
<title>char* fmt::v9::format_int::format_unsigned&lt;unsigned int&gt; (54,406,174 samples, 0.08%)</title><rect x="1186.0" y="741" width="0.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1189.00" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (11,047,934 samples, 0.02%)</title><rect x="1147.7" y="629" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1150.74" y="639.5" ></text>
</g>
<g >
<title>handle_mm_fault (19,584,204 samples, 0.03%)</title><rect x="757.9" y="661" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="760.89" y="671.5" ></text>
</g>
<g >
<title>do_el0_svc (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="453" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1130.59" y="463.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (151,672,339 samples, 0.22%)</title><rect x="1115.8" y="709" width="2.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1118.78" y="719.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (111,807,024 samples, 0.16%)</title><rect x="1176.4" y="805" width="1.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1179.36" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (21,478,509 samples, 0.03%)</title><rect x="1093.7" y="757" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1096.68" y="767.5" ></text>
</g>
<g >
<title>tcp_data_ready (80,358,383 samples, 0.12%)</title><rect x="1045.9" y="69" width="1.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1048.90" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;int, false&gt;::_M_next (6,774,495 samples, 0.01%)</title><rect x="1033.3" y="821" width="0.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1036.28" y="831.5" ></text>
</g>
<g >
<title>fmt::v9::detail::format_decimal_result&lt;char*&gt; fmt::v9::detail::format_decimal&lt;char, unsigned int&gt; (43,641,062 samples, 0.06%)</title><rect x="1144.5" y="677" width="0.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1147.51" y="687.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::chrono::__is_duration&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::value, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::type std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (21,172,693 samples, 0.03%)</title><rect x="1143.0" y="741" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1146.03" y="751.5" ></text>
</g>
<g >
<title>validate_xmit_skb (11,049,059 samples, 0.02%)</title><rect x="1075.2" y="421" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1078.20" y="431.5" ></text>
</g>
<g >
<title>get_random_u16 (36,146,175 samples, 0.05%)</title><rect x="341.9" y="789" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="344.86" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (46,123,582 samples, 0.07%)</title><rect x="1031.0" y="725" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1033.98" y="735.5" ></text>
</g>
<g >
<title>netif_rx_internal (13,359,149 samples, 0.02%)</title><rect x="1074.6" y="373" width="0.3" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1077.63" y="383.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (31,790,255 samples, 0.05%)</title><rect x="1086.4" y="805" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1089.42" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (59,634,625 samples, 0.09%)</title><rect x="1172.4" y="805" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1175.40" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (141,712,323 samples, 0.20%)</title><rect x="1122.1" y="677" width="2.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1125.08" y="687.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_new_connection (2,425,393,199 samples, 3.49%)</title><rect x="1148.9" y="917" width="41.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1151.86" y="927.5" >tt:..</text>
</g>
<g >
<title>arch_local_irq_enable (8,036,241 samples, 0.01%)</title><rect x="1049.9" y="693" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1052.86" y="703.5" ></text>
</g>
<g >
<title>check_stack_object (20,927,822 samples, 0.03%)</title><rect x="577.1" y="581" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="580.13" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,534,622 samples, 0.02%)</title><rect x="1185.4" y="677" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1188.42" y="687.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (10,765,735 samples, 0.02%)</title><rect x="1078.6" y="581" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1081.58" y="591.5" ></text>
</g>
<g >
<title>do_mem_abort (10,940,349 samples, 0.02%)</title><rect x="935.8" y="677" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="938.75" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::rfind (3,294,809,181 samples, 4.74%)</title><rect x="787.2" y="869" width="55.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="790.24" y="879.5" >std::..</text>
</g>
<g >
<title>ip_finish_output2 (553,403,881 samples, 0.80%)</title><rect x="1066.0" y="469" width="9.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1069.00" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (33,189,390 samples, 0.05%)</title><rect x="1093.7" y="789" width="0.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1096.68" y="799.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (54,851,179 samples, 0.08%)</title><rect x="1175.3" y="821" width="0.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1178.31" y="831.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (1,749,048,088 samples, 2.51%)</title><rect x="1100.5" y="805" width="29.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1103.54" y="815.5" >vo..</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1,544,940,239 samples, 2.22%)</title><rect x="1003.0" y="821" width="26.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1005.97" y="831.5" >s..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (246,161,624 samples, 0.35%)</title><rect x="847.2" y="821" width="4.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="850.20" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (10,940,349 samples, 0.02%)</title><rect x="935.8" y="709" width="0.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="938.75" y="719.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,806,089 samples, 0.03%)</title><rect x="960.8" y="709" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="963.78" y="719.5" ></text>
</g>
<g >
<title>handle_softirqs (11,516,680 samples, 0.02%)</title><rect x="935.4" y="613" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="938.40" y="623.5" ></text>
</g>
<g >
<title>ep_done_scan (48,550,935 samples, 0.07%)</title><rect x="48.0" y="725" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="51.02" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (118,429,730 samples, 0.17%)</title><rect x="963.2" y="805" width="2.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="966.16" y="815.5" ></text>
</g>
<g >
<title>tcp_data_ready (12,526,271 samples, 0.02%)</title><rect x="1047.3" y="85" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1050.27" y="95.5" ></text>
</g>
<g >
<title>try_charge_memcg (25,270,079 samples, 0.04%)</title><rect x="1078.8" y="565" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1081.76" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (87,887,218 samples, 0.13%)</title><rect x="1165.9" y="805" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1168.87" y="815.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_and_push_buffer (11,047,934 samples, 0.02%)</title><rect x="1147.7" y="405" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1150.74" y="415.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (16,564,072 samples, 0.02%)</title><rect x="783.2" y="469" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="786.19" y="479.5" ></text>
</g>
<g >
<title>should_fail_alloc_page (8,784,434 samples, 0.01%)</title><rect x="757.9" y="517" width="0.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="760.89" y="527.5" ></text>
</g>
<g >
<title>__handle_mm_fault (10,940,349 samples, 0.02%)</title><rect x="935.8" y="629" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="938.75" y="639.5" ></text>
</g>
<g >
<title>ip_finish_output (553,403,881 samples, 0.80%)</title><rect x="1066.0" y="501" width="9.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1069.00" y="511.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,258,998,187 samples, 1.81%)</title><rect x="914.2" y="805" width="21.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="917.24" y="815.5" >_..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (108,265,604 samples, 0.16%)</title><rect x="963.2" y="773" width="1.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="966.16" y="783.5" ></text>
</g>
<g >
<title>tcp_v4_fill_cb (11,578,000 samples, 0.02%)</title><rect x="1067.2" y="149" width="0.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1070.16" y="159.5" ></text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (35,205,469 samples, 0.05%)</title><rect x="1087.7" y="853" width="0.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1090.72" y="863.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (79,877,141 samples, 0.11%)</title><rect x="1107.1" y="677" width="1.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1110.10" y="687.5" ></text>
</g>
<g >
<title>tcp_rcv_state_process (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="325" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1121.18" y="335.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (21,965,900 samples, 0.03%)</title><rect x="1102.3" y="725" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1105.26" y="735.5" ></text>
</g>
<g >
<title>std::conditional&lt;std::is_same&lt;char, char&gt;::value, fmt::v9::appender, std::back_insert_iterator&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; &gt;::type fmt::v9::detail::get_iterator&lt;char&gt; (56,686,007 samples, 0.08%)</title><rect x="1099.6" y="805" width="0.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1102.58" y="815.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (10,475,808 samples, 0.02%)</title><rect x="853.3" y="709" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="856.31" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (53,165,113 samples, 0.08%)</title><rect x="967.2" y="837" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="970.20" y="847.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="437" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1067.93" y="447.5" ></text>
</g>
<g >
<title>ip_rcv (24,628,381 samples, 0.04%)</title><rect x="1074.2" y="245" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1077.21" y="255.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (10,630,149 samples, 0.02%)</title><rect x="1042.2" y="789" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1045.21" y="799.5" ></text>
</g>
<g >
<title>[libc.so.6] (21,579,607 samples, 0.03%)</title><rect x="1147.6" y="693" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1150.57" y="703.5" ></text>
</g>
<g >
<title>el0t_64_irq (12,040,418 samples, 0.02%)</title><rect x="1124.3" y="645" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1127.27" y="655.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (142,874,196 samples, 0.21%)</title><rect x="1045.1" y="133" width="2.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1048.06" y="143.5" ></text>
</g>
<g >
<title>irq_exit_rcu (21,954,316 samples, 0.03%)</title><rect x="842.2" y="757" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="845.21" y="767.5" ></text>
</g>
<g >
<title>fmt::v9::detail::parse_format_string&lt;false, char, fmt::v9::detail::vformat_to&lt;char&gt; (1,163,965,421 samples, 1.67%)</title><rect x="1110.5" y="789" width="19.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1113.47" y="799.5" ></text>
</g>
<g >
<title>lock_sock_nested (1,077,886,623 samples, 1.55%)</title><rect x="508.2" y="661" width="18.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="511.23" y="671.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="373" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1067.93" y="383.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (10,293,760 samples, 0.01%)</title><rect x="1087.2" y="741" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1090.16" y="751.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (20,458,869 samples, 0.03%)</title><rect x="935.6" y="741" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="938.59" y="751.5" ></text>
</g>
<g >
<title>invoke_syscall (408,122,267 samples, 0.59%)</title><rect x="1042.9" y="709" width="7.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1045.93" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (11,391,861 samples, 0.02%)</title><rect x="1142.8" y="693" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1145.84" y="703.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (253,781,107 samples, 0.36%)</title><rect x="1179.8" y="757" width="4.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1182.77" y="767.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (69,590,117 samples, 0.10%)</title><rect x="1124.5" y="645" width="1.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1127.48" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (22,040,046 samples, 0.03%)</title><rect x="1184.1" y="773" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1187.08" y="783.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (22,767,010 samples, 0.03%)</title><rect x="1133.4" y="645" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1136.40" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (54,928,623 samples, 0.08%)</title><rect x="1130.2" y="789" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1133.21" y="799.5" ></text>
</g>
<g >
<title>___interceptor_strlen.part.0 (10,233,399 samples, 0.01%)</title><rect x="911.2" y="821" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="914.24" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (12,168,569 samples, 0.02%)</title><rect x="876.6" y="853" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="879.61" y="863.5" ></text>
</g>
<g >
<title>accept (32,631,526 samples, 0.05%)</title><rect x="1148.9" y="885" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1151.86" y="895.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::base_iterator&lt;fmt::v9::appender&gt; (35,151,022 samples, 0.05%)</title><rect x="1103.8" y="741" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1106.75" y="751.5" ></text>
</g>
<g >
<title>irq_exit_rcu (23,780,708 samples, 0.03%)</title><rect x="1063.6" y="725" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1066.59" y="735.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="533" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1186.71" y="543.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (425,509,203 samples, 0.61%)</title><rect x="1067.0" y="181" width="7.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1069.99" y="191.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (11,796,614 samples, 0.02%)</title><rect x="1184.6" y="757" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1187.63" y="767.5" ></text>
</g>
<g >
<title>rcu_all_qs (48,575,427 samples, 0.07%)</title><rect x="636.4" y="629" width="0.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="639.38" y="639.5" ></text>
</g>
<g >
<title>el0_interrupt (12,048,243 samples, 0.02%)</title><rect x="1028.6" y="693" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1031.60" y="703.5" ></text>
</g>
<g >
<title>sock_read_iter (9,896,434,004 samples, 14.22%)</title><rect x="474.3" y="725" width="167.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="477.28" y="735.5" >sock_read_iter</text>
</g>
<g >
<title>irq_exit_rcu (12,016,552 samples, 0.02%)</title><rect x="966.8" y="709" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="969.79" y="719.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (122,592,634 samples, 0.18%)</title><rect x="1071.7" y="69" width="2.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1074.72" y="79.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Put (20,687,620 samples, 0.03%)</title><rect x="967.4" y="773" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="970.37" y="783.5" ></text>
</g>
<g >
<title>__do_softirq (7,552,234 samples, 0.01%)</title><rect x="670.6" y="629" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="673.64" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,907,267 samples, 0.03%)</title><rect x="1101.9" y="725" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1104.89" y="735.5" ></text>
</g>
<g >
<title>net_rx_action (16,564,072 samples, 0.02%)</title><rect x="783.2" y="645" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="786.19" y="655.5" ></text>
</g>
<g >
<title>tcp_send_ack (68,927,979 samples, 0.10%)</title><rect x="582.1" y="613" width="1.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="585.12" y="623.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (13,956,225 samples, 0.02%)</title><rect x="968.3" y="805" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="971.27" y="815.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (171,376,401 samples, 0.25%)</title><rect x="1169.5" y="789" width="2.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1172.49" y="799.5" ></text>
</g>
<g >
<title>__cond_resched (169,563,545 samples, 0.24%)</title><rect x="523.0" y="645" width="2.9" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="526.01" y="655.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;::begin (114,292,135 samples, 0.16%)</title><rect x="1033.4" y="853" width="1.9" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1036.40" y="863.5" ></text>
</g>
<g >
<title>sk_reset_timer (12,084,585 samples, 0.02%)</title><rect x="1076.7" y="549" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1079.69" y="559.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (11,016,709 samples, 0.02%)</title><rect x="1172.2" y="677" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1175.21" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (12,292,791 samples, 0.02%)</title><rect x="1125.7" y="661" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1128.66" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (21,965,900 samples, 0.03%)</title><rect x="1102.3" y="709" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1105.26" y="719.5" ></text>
</g>
<g >
<title>__do_softirq (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="533" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1067.93" y="543.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (11,642,556 samples, 0.02%)</title><rect x="1153.4" y="789" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1156.44" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (46,724,568 samples, 0.07%)</title><rect x="1095.6" y="757" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1098.55" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (12,111,427 samples, 0.02%)</title><rect x="1133.8" y="693" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1136.78" y="703.5" ></text>
</g>
<g >
<title>rb_erase (10,432,152 samples, 0.01%)</title><rect x="1069.7" y="85" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1072.69" y="95.5" ></text>
</g>
<g >
<title>__fdget (12,143,297 samples, 0.02%)</title><rect x="27.4" y="757" width="0.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="30.40" y="767.5" ></text>
</g>
<g >
<title>el0t_64_irq (16,564,072 samples, 0.02%)</title><rect x="783.2" y="821" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="786.19" y="831.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (11,516,680 samples, 0.02%)</title><rect x="935.4" y="741" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="938.40" y="751.5" ></text>
</g>
<g >
<title>inet_sendmsg (7,754,574 samples, 0.01%)</title><rect x="1079.4" y="677" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1082.37" y="687.5" ></text>
</g>
<g >
<title>cap_mmap_file (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="357" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1130.59" y="367.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (44,262,067 samples, 0.06%)</title><rect x="1162.2" y="757" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.19" y="767.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (11,796,614 samples, 0.02%)</title><rect x="1184.6" y="773" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1187.63" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (46,123,582 samples, 0.07%)</title><rect x="1031.0" y="741" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1033.98" y="751.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (69,590,117 samples, 0.10%)</title><rect x="1124.5" y="629" width="1.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1127.48" y="639.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="517" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1130.59" y="527.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (3,271,994,975 samples, 4.70%)</title><rect x="787.2" y="837" width="55.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="790.24" y="847.5" >__asa..</text>
</g>
<g >
<title>do_mem_abort (9,130,414 samples, 0.01%)</title><rect x="842.6" y="773" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="845.58" y="783.5" ></text>
</g>
<g >
<title>process_output_block (11,047,934 samples, 0.02%)</title><rect x="1147.7" y="437" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1150.74" y="447.5" ></text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::advance_to (59,634,625 samples, 0.09%)</title><rect x="1172.4" y="821" width="1.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1175.40" y="831.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (100,947,150 samples, 0.15%)</title><rect x="1186.9" y="773" width="1.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1189.92" y="783.5" ></text>
</g>
<g >
<title>skb_clone_tx_timestamp (10,613,273 samples, 0.02%)</title><rect x="1074.9" y="405" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1077.86" y="415.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (192,301,452 samples, 0.28%)</title><rect x="843.5" y="853" width="3.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="846.48" y="863.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="629" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1130.59" y="639.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (10,939,437 samples, 0.02%)</title><rect x="1163.1" y="757" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1166.12" y="767.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (22,241,193 samples, 0.03%)</title><rect x="1069.1" y="85" width="0.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1072.11" y="95.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (11,516,680 samples, 0.02%)</title><rect x="935.4" y="677" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="938.40" y="687.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (169,003,293 samples, 0.24%)</title><rect x="1132.3" y="757" width="2.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1135.31" y="767.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (19,584,204 samples, 0.03%)</title><rect x="757.9" y="741" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="760.89" y="751.5" ></text>
</g>
<g >
<title>____do_softirq (21,954,316 samples, 0.03%)</title><rect x="842.2" y="693" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="845.21" y="703.5" ></text>
</g>
<g >
<title>__do_softirq (12,016,552 samples, 0.02%)</title><rect x="966.8" y="629" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="969.79" y="639.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (11,056,620 samples, 0.02%)</title><rect x="1097.3" y="837" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1100.30" y="847.5" ></text>
</g>
<g >
<title>ip_queue_xmit (204,232,294 samples, 0.29%)</title><rect x="1045.1" y="533" width="3.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1048.06" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (1,440,431,578 samples, 2.07%)</title><rect x="734.4" y="853" width="24.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="737.36" y="863.5" >s..</text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (22,847,632 samples, 0.03%)</title><rect x="1145.6" y="645" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1148.64" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (56,475,430 samples, 0.08%)</title><rect x="1096.3" y="741" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1099.34" y="751.5" ></text>
</g>
<g >
<title>do_page_fault (10,940,349 samples, 0.02%)</title><rect x="935.8" y="661" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="938.75" y="671.5" ></text>
</g>
<g >
<title>el0_svc (11,047,934 samples, 0.02%)</title><rect x="1147.7" y="613" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1150.74" y="623.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (68,927,979 samples, 0.10%)</title><rect x="582.1" y="597" width="1.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="585.12" y="607.5" ></text>
</g>
<g >
<title>sock_def_readable (80,358,383 samples, 0.12%)</title><rect x="1045.9" y="53" width="1.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1048.90" y="63.5" ></text>
</g>
<g >
<title>release_sock (907,192,302 samples, 1.30%)</title><rect x="526.5" y="661" width="15.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="529.51" y="671.5" ></text>
</g>
<g >
<title>tcp_done (9,825,739 samples, 0.01%)</title><rect x="783.3" y="389" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="786.30" y="399.5" ></text>
</g>
<g >
<title>invoke_syscall (892,623,093 samples, 1.28%)</title><rect x="1064.9" y="725" width="15.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1067.93" y="735.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (408,122,267 samples, 0.59%)</title><rect x="1042.9" y="725" width="7.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1045.93" y="735.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (253,781,107 samples, 0.36%)</title><rect x="1179.8" y="773" width="4.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1182.77" y="783.5" ></text>
</g>
<g >
<title>__run_timers (10,745,220 samples, 0.02%)</title><rect x="1063.8" y="597" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1066.81" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (44,342,244 samples, 0.06%)</title><rect x="1143.6" y="629" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1146.57" y="639.5" ></text>
</g>
<g >
<title>char* fmt::v9::detail::to_pointer&lt;char&gt; (65,350,163 samples, 0.09%)</title><rect x="1100.8" y="741" width="1.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1103.78" y="751.5" ></text>
</g>
<g >
<title>do_page_fault (19,584,204 samples, 0.03%)</title><rect x="757.9" y="677" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="760.89" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (123,988,456 samples, 0.18%)</title><rect x="1090.5" y="821" width="2.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1093.45" y="831.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_channel_message (11,174,451 samples, 0.02%)</title><rect x="853.5" y="773" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="856.49" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (66,204,571 samples, 0.10%)</title><rect x="1151.1" y="821" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1154.08" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (80,650,204 samples, 0.12%)</title><rect x="1114.4" y="725" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1117.42" y="735.5" ></text>
</g>
<g >
<title>__schedule (8,036,241 samples, 0.01%)</title><rect x="1049.9" y="709" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1052.86" y="719.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (12,048,243 samples, 0.02%)</title><rect x="1028.6" y="661" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1031.60" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;int, false&gt;::_M_incr (6,774,495 samples, 0.01%)</title><rect x="1033.3" y="837" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1036.28" y="847.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (171,028,426 samples, 0.25%)</title><rect x="1045.1" y="421" width="2.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1048.06" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (10,883,703 samples, 0.02%)</title><rect x="961.1" y="837" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="964.14" y="847.5" ></text>
</g>
<g >
<title>process_backlog (44,953,456 samples, 0.06%)</title><rect x="582.3" y="293" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="585.31" y="303.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2,942,580,071 samples, 4.23%)</title><rect x="911.4" y="853" width="49.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="914.41" y="863.5" >void ..</text>
</g>
<g >
<title>__asan_stack_free_5 (1,478,195,339 samples, 2.12%)</title><rect x="674.7" y="901" width="25.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="677.68" y="911.5" >_..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,971,494 samples, 0.03%)</title><rect x="1154.0" y="837" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1157.01" y="847.5" ></text>
</g>
<g >
<title>__netif_receive_skb (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="453" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1067.93" y="463.5" ></text>
</g>
<g >
<title>sk_reset_timer (22,241,193 samples, 0.03%)</title><rect x="1069.1" y="69" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1072.11" y="79.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (44,342,244 samples, 0.06%)</title><rect x="1143.6" y="709" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1146.57" y="719.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (7,552,234 samples, 0.01%)</title><rect x="670.6" y="517" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="673.64" y="527.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (43,708,557 samples, 0.06%)</title><rect x="1186.2" y="677" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1189.18" y="687.5" ></text>
</g>
<g >
<title>process_backlog (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="421" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1186.71" y="431.5" ></text>
</g>
<g >
<title>__sanitizer::RunMallocHooks (11,060,242 samples, 0.02%)</title><rect x="935.9" y="725" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="938.94" y="735.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (297,147,934 samples, 0.43%)</title><rect x="1167.4" y="821" width="5.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1170.36" y="831.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (16,564,072 samples, 0.02%)</title><rect x="783.2" y="741" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="786.19" y="751.5" ></text>
</g>
<g >
<title>__napi_poll (16,564,072 samples, 0.02%)</title><rect x="783.2" y="629" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="786.19" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (3,271,994,975 samples, 4.70%)</title><rect x="787.2" y="853" width="55.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="790.24" y="863.5" >__asa..</text>
</g>
<g >
<title>operator new (11,174,451 samples, 0.02%)</title><rect x="853.5" y="805" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="856.49" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (45,852,221 samples, 0.07%)</title><rect x="1094.8" y="773" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1097.77" y="783.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (55,152,995 samples, 0.08%)</title><rect x="1187.7" y="709" width="0.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1190.69" y="719.5" ></text>
</g>
<g >
<title>do_notify_resume (8,036,241 samples, 0.01%)</title><rect x="1049.9" y="741" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1052.86" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (46,841,802 samples, 0.07%)</title><rect x="1155.7" y="789" width="0.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1158.70" y="799.5" ></text>
</g>
<g >
<title>tcp_rcv_established (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="309" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1067.93" y="319.5" ></text>
</g>
<g >
<title>__napi_poll (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="501" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1121.18" y="511.5" ></text>
</g>
<g >
<title>el0_svc (12,141,826 samples, 0.02%)</title><rect x="1189.0" y="661" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1192.01" y="671.5" ></text>
</g>
<g >
<title>n_tty_write (11,047,934 samples, 0.02%)</title><rect x="1147.7" y="453" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1150.74" y="463.5" ></text>
</g>
<g >
<title>__inet_lookup_established (10,611,978 samples, 0.02%)</title><rect x="582.3" y="133" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="585.31" y="143.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (66,204,571 samples, 0.10%)</title><rect x="1151.1" y="837" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1154.08" y="847.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (7,552,234 samples, 0.01%)</title><rect x="670.6" y="485" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="673.64" y="495.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,727,804,149 samples, 2.48%)</title><rect x="881.6" y="821" width="29.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="884.56" y="831.5" >__..</text>
</g>
<g >
<title>std::common_type&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::type std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (14,126,448 samples, 0.02%)</title><rect x="1142.2" y="725" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1145.22" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (35,045,620 samples, 0.05%)</title><rect x="1176.4" y="773" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1179.36" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (360,736,530 samples, 0.52%)</title><rect x="728.2" y="869" width="6.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="731.24" y="879.5" ></text>
</g>
<g >
<title>irq_exit_rcu (22,173,861 samples, 0.03%)</title><rect x="1002.6" y="709" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1005.59" y="719.5" ></text>
</g>
<g >
<title>decltype  (121,078,405 samples, 0.17%)</title><rect x="1030.1" y="805" width="2.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1033.12" y="815.5" ></text>
</g>
<g >
<title>kmalloc_reserve (11,380,918 samples, 0.02%)</title><rect x="1048.9" y="565" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1051.90" y="575.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (11,464,969 samples, 0.02%)</title><rect x="1044.0" y="581" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1046.96" y="591.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (25,180,214 samples, 0.04%)</title><rect x="525.9" y="645" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="528.88" y="655.5" ></text>
</g>
<g >
<title>tcp_validate_incoming (9,825,739 samples, 0.01%)</title><rect x="783.3" y="437" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="786.30" y="447.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (35,553,659 samples, 0.05%)</title><rect x="1152.8" y="853" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1155.84" y="863.5" ></text>
</g>
<g >
<title>do_translation_fault (10,293,760 samples, 0.01%)</title><rect x="1087.2" y="645" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1090.16" y="655.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::assign_username (3,605,201,035 samples, 5.18%)</title><rect x="1087.7" y="869" width="61.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1090.72" y="879.5" >tt::ch..</text>
</g>
<g >
<title>___interceptor_send.part.0 (914,889,118 samples, 1.31%)</title><rect x="1064.6" y="837" width="15.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1067.56" y="847.5" ></text>
</g>
<g >
<title>__arch_copy_from_user (20,225,274 samples, 0.03%)</title><rect x="1044.2" y="581" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1047.16" y="591.5" ></text>
</g>
<g >
<title>wp_page_copy (10,940,349 samples, 0.02%)</title><rect x="935.8" y="581" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="938.75" y="591.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, std::ratio&lt;1l, 1000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (22,441,955 samples, 0.03%)</title><rect x="1142.5" y="709" width="0.3" height="15.0" fill="rgb(239,158,38)" rx="2" ry="2" />
<text  x="1145.46" y="719.5" ></text>
</g>
<g >
<title>handle_softirqs (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="517" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1067.93" y="527.5" ></text>
</g>
<g >
<title>get_random_u16 (24,233,494 samples, 0.03%)</title><rect x="176.9" y="805" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="179.93" y="815.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="277" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1067.93" y="287.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (10,534,622 samples, 0.02%)</title><rect x="1185.4" y="725" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1188.42" y="735.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_channel_message (14,290,897,824 samples, 20.54%)</title><rect x="843.5" y="885" width="242.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="846.48" y="895.5" >tt::chat::server::EpollServer::h..</text>
</g>
<g >
<title>memset (181,165,791 samples, 0.26%)</title><rect x="637.6" y="661" width="3.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="640.62" y="671.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (76,761,404 samples, 0.11%)</title><rect x="1177.0" y="789" width="1.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1179.96" y="799.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (3,250,839,548 samples, 4.67%)</title><rect x="585.6" y="693" width="55.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="588.55" y="703.5" >secur..</text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (12,544,591 samples, 0.02%)</title><rect x="1131.9" y="773" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1134.92" y="783.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (10,492,890 samples, 0.02%)</title><rect x="1120.2" y="645" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1123.23" y="655.5" ></text>
</g>
<g >
<title>do_softirq (162,354,855 samples, 0.23%)</title><rect x="1045.1" y="389" width="2.7" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1048.06" y="399.5" ></text>
</g>
<g >
<title>rcu_core_si (11,516,680 samples, 0.02%)</title><rect x="935.4" y="597" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="938.40" y="607.5" ></text>
</g>
<g >
<title>tcp_rcv_established (12,530,041 samples, 0.02%)</title><rect x="1043.4" y="565" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1046.44" y="575.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (53,278,259 samples, 0.08%)</title><rect x="1163.8" y="693" width="0.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1166.84" y="703.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (2,379,799,044 samples, 3.42%)</title><rect x="542.9" y="661" width="40.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="545.93" y="671.5" >tcp..</text>
</g>
<g >
<title>__schedule (9,176,306 samples, 0.01%)</title><rect x="1043.3" y="565" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1046.29" y="575.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (79,877,141 samples, 0.11%)</title><rect x="1107.1" y="613" width="1.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1110.10" y="623.5" ></text>
</g>
<g >
<title>ipv4_mtu (11,639,796 samples, 0.02%)</title><rect x="1077.1" y="597" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1080.08" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (11,321,101 samples, 0.02%)</title><rect x="1144.3" y="725" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1147.32" y="735.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (553,403,881 samples, 0.80%)</title><rect x="1066.0" y="437" width="9.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1069.00" y="447.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (33,382,350 samples, 0.05%)</title><rect x="1092.7" y="773" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1095.74" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (45,154,324 samples, 0.06%)</title><rect x="1032.2" y="837" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1035.17" y="847.5" ></text>
</g>
<g >
<title>el0t_64_irq (11,516,680 samples, 0.02%)</title><rect x="935.4" y="773" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="938.40" y="783.5" ></text>
</g>
<g >
<title>loopback_xmit (13,359,149 samples, 0.02%)</title><rect x="1074.6" y="405" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1077.63" y="415.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (143,243,076 samples, 0.21%)</title><rect x="1127.8" y="725" width="2.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1130.78" y="735.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (12,040,418 samples, 0.02%)</title><rect x="1124.3" y="549" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1127.27" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (43,292,209 samples, 0.06%)</title><rect x="1149.8" y="869" width="0.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1152.79" y="879.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (91,374,710 samples, 0.13%)</title><rect x="1106.9" y="693" width="1.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1109.91" y="703.5" ></text>
</g>
<g >
<title>security_file_permission (12,072,099 samples, 0.02%)</title><rect x="474.1" y="725" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="477.08" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (20,146,761 samples, 0.03%)</title><rect x="1029.6" y="805" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1032.57" y="815.5" ></text>
</g>
<g >
<title>ktime_get (10,748,040 samples, 0.02%)</title><rect x="1048.7" y="549" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1051.72" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (93,223,856 samples, 0.13%)</title><rect x="1039.7" y="741" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1042.67" y="751.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (10,164,126 samples, 0.01%)</title><rect x="965.0" y="741" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="968.00" y="751.5" ></text>
</g>
<g >
<title>ksys_read (36,416,701 samples, 0.05%)</title><rect x="670.8" y="773" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="673.77" y="783.5" ></text>
</g>
<g >
<title>__inet_lookup_skb (19,074,652 samples, 0.03%)</title><rect x="1045.1" y="117" width="0.3" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1048.06" y="127.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (12,040,418 samples, 0.02%)</title><rect x="1124.3" y="613" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1127.27" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (11,642,556 samples, 0.02%)</title><rect x="1153.4" y="837" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1156.44" y="847.5" ></text>
</g>
<g >
<title>ip_rcv_finish (437,513,995 samples, 0.63%)</title><rect x="1066.8" y="213" width="7.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1069.79" y="223.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (86,529,067 samples, 0.12%)</title><rect x="576.0" y="629" width="1.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="579.02" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (39,379,144 samples, 0.06%)</title><rect x="1177.0" y="757" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1179.96" y="767.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (54,908,888 samples, 0.08%)</title><rect x="1143.4" y="725" width="0.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1146.39" y="735.5" ></text>
</g>
<g >
<title>el0t_64_sync (10,293,760 samples, 0.01%)</title><rect x="1087.2" y="709" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1090.16" y="719.5" ></text>
</g>
<g >
<title>___interceptor_read (72,883,742 samples, 0.10%)</title><rect x="673.4" y="901" width="1.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="676.44" y="911.5" ></text>
</g>
<g >
<title>el0_interrupt (11,829,163 samples, 0.02%)</title><rect x="734.2" y="789" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="737.16" y="799.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (211,302,440 samples, 0.30%)</title><rect x="1122.1" y="693" width="3.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1125.08" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;int, true, false&gt;::operator* (10,421,535 samples, 0.01%)</title><rect x="1032.9" y="853" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1035.94" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (68,052,041 samples, 0.10%)</title><rect x="1125.9" y="581" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1128.87" y="591.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (31,519,111 samples, 0.05%)</title><rect x="935.6" y="757" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="938.59" y="767.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (53,278,259 samples, 0.08%)</title><rect x="1163.8" y="661" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1166.84" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (46,688,674 samples, 0.07%)</title><rect x="1171.4" y="725" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1174.42" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (78,203,441 samples, 0.11%)</title><rect x="1104.7" y="693" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1107.72" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (55,152,995 samples, 0.08%)</title><rect x="1187.7" y="661" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1190.69" y="671.5" ></text>
</g>
<g >
<title>ep_done_scan (10,859,973 samples, 0.02%)</title><rect x="28.0" y="741" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="31.02" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (10,925,678 samples, 0.02%)</title><rect x="910.9" y="837" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="913.86" y="847.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (143,683,320 samples, 0.21%)</title><rect x="1106.9" y="709" width="2.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1109.91" y="719.5" ></text>
</g>
<g >
<title>ip_queue_xmit (553,403,881 samples, 0.80%)</title><rect x="1066.0" y="549" width="9.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1069.00" y="559.5" ></text>
</g>
<g >
<title>arch_local_irq_save (12,016,552 samples, 0.02%)</title><rect x="966.8" y="565" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="969.79" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (97,966,674 samples, 0.14%)</title><rect x="1086.1" y="869" width="1.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1089.06" y="879.5" ></text>
</g>
<g >
<title>irq_exit_rcu (12,048,243 samples, 0.02%)</title><rect x="1028.6" y="677" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1031.60" y="687.5" ></text>
</g>
<g >
<title>ip_rcv_finish (44,953,456 samples, 0.06%)</title><rect x="582.3" y="229" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="585.31" y="239.5" ></text>
</g>
<g >
<title>apparmor_socket_sock_rcv_skb (12,806,076 samples, 0.02%)</title><rect x="1068.3" y="85" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1071.30" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (1,312,235,704 samples, 1.89%)</title><rect x="914.0" y="821" width="22.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="917.04" y="831.5" >s..</text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char*, char*&gt; (11,069,662 samples, 0.02%)</title><rect x="1140.9" y="629" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1143.90" y="639.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (41,736,404 samples, 0.06%)</title><rect x="935.6" y="805" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="938.59" y="815.5" ></text>
</g>
<g >
<title>invoke_syscall (11,047,934 samples, 0.02%)</title><rect x="1147.7" y="565" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1150.74" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (11,642,556 samples, 0.02%)</title><rect x="1153.4" y="805" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1156.44" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (270,307,604 samples, 0.39%)</title><rect x="876.8" y="821" width="4.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="879.82" y="831.5" ></text>
</g>
<g >
<title>__check_object_size (20,927,822 samples, 0.03%)</title><rect x="577.1" y="597" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="580.13" y="607.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (84,930,052 samples, 0.12%)</title><rect x="1163.3" y="757" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1166.31" y="767.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (11,047,934 samples, 0.02%)</title><rect x="1147.7" y="581" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1150.74" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (124,413,324 samples, 0.18%)</title><rect x="851.4" y="821" width="2.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="854.38" y="831.5" ></text>
</g>
<g >
<title>__kfree_skb (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="261" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1067.93" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (31,387,154 samples, 0.05%)</title><rect x="1094.2" y="805" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1097.24" y="815.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (141,533,499 samples, 0.20%)</title><rect x="1181.7" y="709" width="2.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1184.68" y="719.5" ></text>
</g>
<g >
<title>fmt::v9::format_int::format_int (54,406,174 samples, 0.08%)</title><rect x="1186.0" y="773" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1189.00" y="783.5" ></text>
</g>
<g >
<title>tty_write (11,047,934 samples, 0.02%)</title><rect x="1147.7" y="501" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1150.74" y="511.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (865,152,878 samples, 1.24%)</title><rect x="1175.1" y="869" width="14.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1178.14" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (33,539,271 samples, 0.05%)</title><rect x="1155.1" y="789" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1158.13" y="799.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (33,357,870 samples, 0.05%)</title><rect x="1041.5" y="805" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1044.47" y="815.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (44,342,244 samples, 0.06%)</title><rect x="1143.6" y="677" width="0.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1146.57" y="687.5" ></text>
</g>
<g >
<title>swake_up_one (11,516,680 samples, 0.02%)</title><rect x="935.4" y="501" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="938.40" y="511.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (93,223,856 samples, 0.13%)</title><rect x="1039.7" y="725" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1042.67" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (107,289,420 samples, 0.15%)</title><rect x="965.2" y="805" width="1.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="968.17" y="815.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (9,130,414 samples, 0.01%)</title><rect x="842.6" y="725" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="845.58" y="735.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (204,232,294 samples, 0.29%)</title><rect x="1045.1" y="517" width="3.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1048.06" y="527.5" ></text>
</g>
<g >
<title>operator new (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="645" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1130.59" y="655.5" ></text>
</g>
<g >
<title>do_softirq (44,953,456 samples, 0.06%)</title><rect x="582.3" y="421" width="0.8" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="585.31" y="431.5" ></text>
</g>
<g >
<title>____do_softirq (44,953,456 samples, 0.06%)</title><rect x="582.3" y="373" width="0.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="585.31" y="383.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (89,043,414 samples, 0.13%)</title><rect x="1038.2" y="757" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1041.16" y="767.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (11,736,731 samples, 0.02%)</title><rect x="842.9" y="805" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="845.92" y="815.5" ></text>
</g>
<g >
<title>call_timer_fn (10,745,220 samples, 0.02%)</title><rect x="1063.8" y="565" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1066.81" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (53,396,981 samples, 0.08%)</title><rect x="1132.5" y="693" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1135.49" y="703.5" ></text>
</g>
<g >
<title>rcu_all_qs (108,884,385 samples, 0.16%)</title><rect x="524.0" y="629" width="1.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="527.04" y="639.5" ></text>
</g>
<g >
<title>irq_exit_rcu (16,564,072 samples, 0.02%)</title><rect x="783.2" y="757" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="786.19" y="767.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;::try_reserve (125,010,491 samples, 0.18%)</title><rect x="1125.7" y="693" width="2.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1128.66" y="703.5" ></text>
</g>
<g >
<title>expire_timers (10,344,549 samples, 0.01%)</title><rect x="1002.8" y="565" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1005.79" y="575.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (35,445,824 samples, 0.05%)</title><rect x="1048.9" y="597" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1051.90" y="607.5" ></text>
</g>
<g >
<title>fput (48,477,317 samples, 0.07%)</title><rect x="173.5" y="725" width="0.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="176.53" y="735.5" ></text>
</g>
<g >
<title>skb_free_head (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="277" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1121.18" y="287.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (22,767,010 samples, 0.03%)</title><rect x="1133.4" y="613" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1136.40" y="623.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; fmt::v9::detail::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (246,161,624 samples, 0.35%)</title><rect x="847.2" y="853" width="4.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="850.20" y="863.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="277" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1186.71" y="287.5" ></text>
</g>
<g >
<title>____do_softirq (10,475,808 samples, 0.02%)</title><rect x="853.3" y="661" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="856.31" y="671.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::grow (125,010,491 samples, 0.18%)</title><rect x="1125.7" y="677" width="2.1" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1128.66" y="687.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (53,093,919 samples, 0.08%)</title><rect x="757.9" y="789" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="760.89" y="799.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (55,152,995 samples, 0.08%)</title><rect x="1187.7" y="677" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1190.69" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (24,165,842 samples, 0.03%)</title><rect x="1031.8" y="725" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1034.76" y="735.5" ></text>
</g>
<g >
<title>__do_softirq (22,173,861 samples, 0.03%)</title><rect x="1002.6" y="629" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1005.59" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (66,204,571 samples, 0.10%)</title><rect x="1151.1" y="869" width="1.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1154.08" y="879.5" ></text>
</g>
<g >
<title>tcp_ack (10,632,249 samples, 0.02%)</title><rect x="1065.1" y="565" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1068.11" y="575.5" ></text>
</g>
<g >
<title>ip_local_deliver (142,874,196 samples, 0.21%)</title><rect x="1045.1" y="181" width="2.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1048.06" y="191.5" ></text>
</g>
<g >
<title>char* fmt::v9::format_int::format_unsigned&lt;unsigned int&gt; (43,641,062 samples, 0.06%)</title><rect x="1144.5" y="693" width="0.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1147.51" y="703.5" ></text>
</g>
<g >
<title>__netif_receive_skb (10,408,513 samples, 0.01%)</title><rect x="960.8" y="565" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="963.78" y="575.5" ></text>
</g>
<g >
<title>ksys_write (12,141,826 samples, 0.02%)</title><rect x="1189.0" y="597" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1192.01" y="607.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (53,278,259 samples, 0.08%)</title><rect x="1163.8" y="709" width="0.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1166.84" y="719.5" ></text>
</g>
<g >
<title>ep_send_events (8,653,395,894 samples, 12.44%)</title><rect x="29.4" y="741" width="146.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="32.44" y="751.5" >ep_send_events</text>
</g>
<g >
<title>call_on_irq_stack (162,354,855 samples, 0.23%)</title><rect x="1045.1" y="357" width="2.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1048.06" y="367.5" ></text>
</g>
<g >
<title>inet_sendmsg (851,252,573 samples, 1.22%)</title><rect x="1064.9" y="661" width="14.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1067.93" y="671.5" ></text>
</g>
<g >
<title>process_backlog (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="485" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1121.18" y="495.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (37,382,260 samples, 0.05%)</title><rect x="1177.6" y="741" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1180.62" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3,310,974,147 samples, 4.76%)</title><rect x="728.1" y="901" width="56.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="731.06" y="911.5" >std::..</text>
</g>
<g >
<title>do_softirq_own_stack (12,048,243 samples, 0.02%)</title><rect x="1028.6" y="645" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1031.60" y="655.5" ></text>
</g>
<g >
<title>____do_softirq (20,806,089 samples, 0.03%)</title><rect x="960.8" y="661" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="963.78" y="671.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="389" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1121.18" y="399.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (39,379,144 samples, 0.06%)</title><rect x="1177.0" y="741" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1179.96" y="751.5" ></text>
</g>
<g >
<title>skb_release_data (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="293" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1121.18" y="303.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (37,382,260 samples, 0.05%)</title><rect x="1177.6" y="725" width="0.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1180.62" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (93,354,298 samples, 0.13%)</title><rect x="1088.3" y="821" width="1.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1091.32" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (44,107,353 samples, 0.06%)</title><rect x="1154.4" y="805" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1157.38" y="815.5" ></text>
</g>
<g >
<title>invoke_syscall (8,913,380,091 samples, 12.81%)</title><rect x="26.2" y="821" width="151.1" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="29.16" y="831.5" >invoke_syscall</text>
</g>
<g >
<title>__asan_stack_malloc_0 (45,340,535 samples, 0.07%)</title><rect x="1159.1" y="837" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1162.10" y="847.5" ></text>
</g>
<g >
<title>__do_softirq (16,564,072 samples, 0.02%)</title><rect x="783.2" y="677" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="786.19" y="687.5" ></text>
</g>
<g >
<title>char* std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;char const, char&gt; (11,069,345 samples, 0.02%)</title><rect x="1183.9" y="613" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1186.89" y="623.5" ></text>
</g>
<g >
<title>rcu_core (12,016,552 samples, 0.02%)</title><rect x="966.8" y="581" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="969.79" y="591.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::run (69,572,571,424 samples, 100.00%)</title><rect x="10.0" y="933" width="1180.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.02" y="943.5" >tt::chat::server::EpollServer::run</text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,712,842,706 samples, 2.46%)</title><rect x="973.9" y="805" width="29.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="976.92" y="815.5" >__..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="389" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1186.71" y="399.5" ></text>
</g>
<g >
<title>neigh_hh_output (553,403,881 samples, 0.80%)</title><rect x="1066.0" y="453" width="9.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1069.00" y="463.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="325" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1186.71" y="335.5" ></text>
</g>
<g >
<title>__mod_timer (33,048,410 samples, 0.05%)</title><rect x="1075.6" y="485" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1078.57" y="495.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (21,853,347 samples, 0.03%)</title><rect x="1093.3" y="789" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1096.31" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (334,267,955 samples, 0.48%)</title><rect x="961.3" y="853" width="5.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="964.32" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (151,893,592 samples, 0.22%)</title><rect x="1138.3" y="597" width="2.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1141.32" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (34,093,895 samples, 0.05%)</title><rect x="1131.3" y="789" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1134.34" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (48,465,024 samples, 0.07%)</title><rect x="1091.7" y="789" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1094.73" y="799.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;, 0ul&gt; (46,841,802 samples, 0.07%)</title><rect x="1155.7" y="805" width="0.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1158.70" y="815.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (216,154,107 samples, 0.31%)</title><rect x="1045.1" y="549" width="3.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1048.06" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,500,593,138 samples, 2.16%)</title><rect x="1003.4" y="757" width="25.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1006.35" y="767.5" >_..</text>
</g>
<g >
<title>__asan_stack_malloc_1 (20,146,761 samples, 0.03%)</title><rect x="1029.6" y="789" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1032.57" y="799.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (76,761,404 samples, 0.11%)</title><rect x="1177.0" y="773" width="1.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1179.96" y="783.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char*, char*&gt; (41,143,241 samples, 0.06%)</title><rect x="1108.5" y="613" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1111.46" y="623.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (268,864,460 samples, 0.39%)</title><rect x="1092.7" y="853" width="4.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1095.74" y="863.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (162,354,855 samples, 0.23%)</title><rect x="1045.1" y="229" width="2.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1048.06" y="239.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (31,651,793 samples, 0.05%)</title><rect x="1163.3" y="725" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1166.31" y="735.5" ></text>
</g>
<g >
<title>write (21,579,607 samples, 0.03%)</title><rect x="1147.6" y="661" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1150.57" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,921,575 samples, 0.02%)</title><rect x="1158.9" y="821" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1161.90" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (56,767,292 samples, 0.08%)</title><rect x="1124.7" y="581" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1127.70" y="591.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (12,530,041 samples, 0.02%)</title><rect x="1043.4" y="533" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1046.44" y="543.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (67,550,024 samples, 0.10%)</title><rect x="1170.1" y="773" width="1.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1173.07" y="783.5" ></text>
</g>
<g >
<title>__napi_poll (10,408,513 samples, 0.01%)</title><rect x="960.8" y="597" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="963.78" y="607.5" ></text>
</g>
<g >
<title>rcu_core (11,516,680 samples, 0.02%)</title><rect x="935.4" y="581" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="938.40" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (45,670,837 samples, 0.07%)</title><rect x="1098.8" y="757" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1101.81" y="767.5" ></text>
</g>
<g >
<title>__do_softirq (44,953,456 samples, 0.06%)</title><rect x="582.3" y="357" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="585.31" y="367.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (151,893,592 samples, 0.22%)</title><rect x="1138.3" y="645" width="2.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1141.32" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (54,928,623 samples, 0.08%)</title><rect x="1130.2" y="805" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1133.21" y="815.5" ></text>
</g>
<g >
<title>tcp_current_mss (33,885,261 samples, 0.05%)</title><rect x="1077.3" y="597" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1080.28" y="607.5" ></text>
</g>
<g >
<title>net_rx_action (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="517" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1121.18" y="527.5" ></text>
</g>
<g >
<title>____do_softirq (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="549" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1067.93" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (22,040,046 samples, 0.03%)</title><rect x="1184.1" y="757" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1187.08" y="767.5" ></text>
</g>
<g >
<title>el0t_64_sync (19,584,204 samples, 0.03%)</title><rect x="757.9" y="757" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="760.89" y="767.5" ></text>
</g>
<g >
<title>el0_interrupt (22,173,861 samples, 0.03%)</title><rect x="1002.6" y="725" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1005.59" y="735.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (999,169,843 samples, 1.44%)</title><rect x="1131.9" y="821" width="17.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1134.92" y="831.5" ></text>
</g>
<g >
<title>folio_add_new_anon_rmap (10,799,770 samples, 0.02%)</title><rect x="758.0" y="581" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="761.04" y="591.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (23,780,708 samples, 0.03%)</title><rect x="1063.6" y="773" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1066.59" y="783.5" ></text>
</g>
<g >
<title>__mod_timer (12,084,585 samples, 0.02%)</title><rect x="1076.7" y="517" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1079.69" y="527.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (79,877,141 samples, 0.11%)</title><rect x="1107.1" y="581" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1110.10" y="591.5" ></text>
</g>
<g >
<title>handle_mm_fault (10,940,349 samples, 0.02%)</title><rect x="935.8" y="645" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="938.75" y="655.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (10,046,701 samples, 0.01%)</title><rect x="784.2" y="821" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="787.22" y="831.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (944,203,829 samples, 1.36%)</title><rect x="1131.9" y="789" width="16.0" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1134.92" y="799.5" ></text>
</g>
<g >
<title>inet_csk_accept (10,703,330 samples, 0.02%)</title><rect x="1149.0" y="709" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1152.05" y="719.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (21,460,659 samples, 0.03%)</title><rect x="1028.8" y="773" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1031.80" y="783.5" ></text>
</g>
<g >
<title>expire_timers (7,552,234 samples, 0.01%)</title><rect x="670.6" y="565" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="673.64" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (34,331,826 samples, 0.05%)</title><rect x="1169.5" y="757" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1172.49" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (133,594,492 samples, 0.19%)</title><rect x="1029.9" y="821" width="2.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1032.91" y="831.5" ></text>
</g>
<g >
<title>el0_da (10,293,760 samples, 0.01%)</title><rect x="1087.2" y="677" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1090.16" y="687.5" ></text>
</g>
<g >
<title>ip_rcv_finish (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="405" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1067.93" y="415.5" ></text>
</g>
<g >
<title>ksys_write (11,047,934 samples, 0.02%)</title><rect x="1147.7" y="533" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1150.74" y="543.5" ></text>
</g>
<g >
<title>__do_softirq (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="549" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1121.18" y="559.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (40,453,927 samples, 0.06%)</title><rect x="575.3" y="645" width="0.7" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="578.33" y="655.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (56,767,292 samples, 0.08%)</title><rect x="1124.7" y="613" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1127.70" y="623.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (2,999,030,729 samples, 4.31%)</title><rect x="589.8" y="677" width="50.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="592.83" y="687.5" >appar..</text>
</g>
<g >
<title>fmt::v9::detail::abort_fuzzing_if (21,659,688 samples, 0.03%)</title><rect x="1134.8" y="693" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1137.81" y="703.5" ></text>
</g>
<g >
<title>read (28,256,888,870 samples, 40.61%)</title><rect x="194.2" y="885" width="479.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="197.19" y="895.5" >read</text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,016,709 samples, 0.02%)</title><rect x="1172.2" y="661" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1175.21" y="671.5" ></text>
</g>
<g >
<title>call_on_irq_stack (44,953,456 samples, 0.06%)</title><rect x="582.3" y="389" width="0.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="585.31" y="399.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (107,289,420 samples, 0.15%)</title><rect x="965.2" y="789" width="1.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="968.17" y="799.5" ></text>
</g>
<g >
<title>call_timer_fn (7,552,234 samples, 0.01%)</title><rect x="670.6" y="549" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="673.64" y="559.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (7,552,234 samples, 0.01%)</title><rect x="670.6" y="341" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="673.64" y="351.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,069,662 samples, 0.02%)</title><rect x="1140.9" y="597" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1143.90" y="607.5" ></text>
</g>
<g >
<title>call_on_irq_stack (7,552,234 samples, 0.01%)</title><rect x="670.6" y="661" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="673.64" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (135,587,775 samples, 0.19%)</title><rect x="851.4" y="837" width="2.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="854.38" y="847.5" ></text>
</g>
<g >
<title>vfs_read (61,391,015 samples, 0.09%)</title><rect x="643.1" y="757" width="1.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="646.12" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::end (23,095,284 samples, 0.03%)</title><rect x="1189.4" y="837" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1192.42" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (54,367,842 samples, 0.08%)</title><rect x="1149.6" y="901" width="0.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1152.61" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (11,391,861 samples, 0.02%)</title><rect x="1142.8" y="677" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1145.84" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (133,594,492 samples, 0.19%)</title><rect x="1029.9" y="837" width="2.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1032.91" y="847.5" ></text>
</g>
<g >
<title>operator new (41,736,404 samples, 0.06%)</title><rect x="935.6" y="789" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="938.59" y="799.5" ></text>
</g>
<g >
<title>char const* std::addressof&lt;char const&gt; (13,956,225 samples, 0.02%)</title><rect x="968.3" y="789" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="971.27" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (21,853,347 samples, 0.03%)</title><rect x="1093.3" y="805" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1096.31" y="815.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (20,146,761 samples, 0.03%)</title><rect x="1029.6" y="821" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1032.57" y="831.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (162,354,855 samples, 0.23%)</title><rect x="1045.1" y="373" width="2.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1048.06" y="383.5" ></text>
</g>
<g >
<title>invoke_syscall (12,141,826 samples, 0.02%)</title><rect x="1189.0" y="613" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1192.01" y="623.5" ></text>
</g>
<g >
<title>tcp_rate_skb_sent (9,765,837 samples, 0.01%)</title><rect x="1076.1" y="565" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1079.13" y="575.5" ></text>
</g>
<g >
<title>el1_interrupt (7,552,234 samples, 0.01%)</title><rect x="670.6" y="725" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="673.64" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (10,534,464 samples, 0.02%)</title><rect x="1161.4" y="773" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1164.42" y="783.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (10,217,293 samples, 0.01%)</title><rect x="936.1" y="741" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="939.13" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (50,871,311 samples, 0.07%)</title><rect x="1106.0" y="677" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1109.04" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (31,387,154 samples, 0.05%)</title><rect x="1094.2" y="757" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1097.24" y="767.5" ></text>
</g>
<g >
<title>do_mem_abort (10,293,760 samples, 0.01%)</title><rect x="1087.2" y="661" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1090.16" y="671.5" ></text>
</g>
<g >
<title>___interceptor_send (9,084,073 samples, 0.01%)</title><rect x="1050.0" y="821" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1052.99" y="831.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (486,140,055 samples, 0.70%)</title><rect x="1066.4" y="421" width="8.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1069.38" y="431.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (10,385,548 samples, 0.01%)</title><rect x="1132.1" y="757" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1135.13" y="767.5" ></text>
</g>
<g >
<title>invoke_syscall (32,631,526 samples, 0.05%)</title><rect x="1148.9" y="789" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1151.86" y="799.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (44,953,456 samples, 0.06%)</title><rect x="582.3" y="405" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="585.31" y="415.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (12,516,087 samples, 0.02%)</title><rect x="1029.9" y="789" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1032.91" y="799.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (37,481,546 samples, 0.05%)</title><rect x="1152.2" y="869" width="0.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1155.20" y="879.5" ></text>
</g>
<g >
<title>fmt::v9::detail::vformat_to&lt;char&gt; (1,028,869,750 samples, 1.48%)</title><rect x="1112.8" y="773" width="17.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1115.76" y="783.5" ></text>
</g>
<g >
<title>el0_interrupt (11,516,680 samples, 0.02%)</title><rect x="935.4" y="725" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="938.40" y="735.5" ></text>
</g>
<g >
<title>ip_finish_output (182,753,248 samples, 0.26%)</title><rect x="1045.1" y="485" width="3.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1048.06" y="495.5" ></text>
</g>
<g >
<title>__fdget (11,561,780 samples, 0.02%)</title><rect x="1049.7" y="645" width="0.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1052.66" y="655.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (44,342,244 samples, 0.06%)</title><rect x="1143.6" y="661" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1146.57" y="671.5" ></text>
</g>
<g >
<title>do_epoll_pwait.part.0 (8,840,477,677 samples, 12.71%)</title><rect x="27.0" y="789" width="149.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="29.99" y="799.5" >do_epoll_pwait.part.0</text>
</g>
<g >
<title>rcu_core (11,829,312 samples, 0.02%)</title><rect x="1002.6" y="581" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1005.59" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,893,776 samples, 0.03%)</title><rect x="1148.5" y="773" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1151.49" y="783.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (33,189,390 samples, 0.05%)</title><rect x="1093.7" y="805" width="0.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1096.68" y="815.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_ptr (13,353,071 samples, 0.02%)</title><rect x="1041.2" y="741" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1044.25" y="751.5" ></text>
</g>
<g >
<title>__update_cpu_freelist_fast (9,568,162 samples, 0.01%)</title><rect x="1077.9" y="581" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1080.85" y="591.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (48,274,506 samples, 0.07%)</title><rect x="1134.0" y="677" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1136.99" y="687.5" ></text>
</g>
<g >
<title>___interceptor_accept.part.0 (32,631,526 samples, 0.05%)</title><rect x="1148.9" y="901" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1151.86" y="911.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (10,961,997 samples, 0.02%)</title><rect x="1127.6" y="389" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1130.59" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,828,078 samples, 0.02%)</title><rect x="843.1" y="837" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="846.12" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (34,536,232 samples, 0.05%)</title><rect x="1168.9" y="789" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1171.90" y="799.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (1,327,807,586 samples, 1.91%)</title><rect x="1041.5" y="853" width="22.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1044.47" y="863.5" >t..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (37,481,546 samples, 0.05%)</title><rect x="1152.2" y="789" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1155.20" y="799.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (225,719,150 samples, 0.32%)</title><rect x="963.2" y="837" width="3.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="966.16" y="847.5" ></text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::advance_to (66,309,796 samples, 0.10%)</title><rect x="1109.3" y="773" width="1.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1112.34" y="783.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (16,564,072 samples, 0.02%)</title><rect x="783.2" y="581" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="786.19" y="591.5" ></text>
</g>
<g >
<title>__kfree_skb (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="309" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1121.18" y="319.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,832,991 samples, 0.02%)</title><rect x="1087.0" y="789" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1089.96" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,977,559 samples, 0.02%)</title><rect x="1188.6" y="789" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1191.63" y="799.5" ></text>
</g>
<g >
<title>[libc.so.6] (69,572,571,424 samples, 100.00%)</title><rect x="10.0" y="965" width="1180.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.02" y="975.5" >[libc.so.6]</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (1,712,842,706 samples, 2.46%)</title><rect x="973.9" y="837" width="29.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="976.92" y="847.5" >st..</text>
</g>
<g >
<title>ep_item_poll.isra.0 (7,351,180,487 samples, 10.57%)</title><rect x="48.8" y="725" width="124.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="51.85" y="735.5" >ep_item_poll.is..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (24,165,842 samples, 0.03%)</title><rect x="1031.8" y="709" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1034.76" y="719.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="597" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1121.18" y="607.5" ></text>
</g>
<g >
<title>__do_softirq (21,954,316 samples, 0.03%)</title><rect x="842.2" y="677" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="845.21" y="687.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::base_iterator&lt;fmt::v9::appender&gt; (34,749,956 samples, 0.05%)</title><rect x="1161.6" y="789" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1164.60" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (48,465,024 samples, 0.07%)</title><rect x="1091.7" y="773" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1094.73" y="783.5" ></text>
</g>
<g >
<title>__ip_finish_output (553,403,881 samples, 0.80%)</title><rect x="1066.0" y="485" width="9.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1069.00" y="495.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (58,218,980 samples, 0.08%)</title><rect x="1067.5" y="117" width="1.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1070.53" y="127.5" ></text>
</g>
<g >
<title>el0_interrupt (21,954,316 samples, 0.03%)</title><rect x="842.2" y="773" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="845.21" y="783.5" ></text>
</g>
<g >
<title>__do_softirq (12,040,418 samples, 0.02%)</title><rect x="1124.3" y="501" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1127.27" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_key_equals (1,532,623,803 samples, 2.20%)</title><rect x="1003.2" y="789" width="26.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1006.17" y="799.5" >s..</text>
</g>
<g >
<title>el0t_64_irq_handler (11,516,680 samples, 0.02%)</title><rect x="935.4" y="757" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="938.40" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,939,437 samples, 0.02%)</title><rect x="1163.1" y="741" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1166.12" y="751.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt (11,568,337 samples, 0.02%)</title><rect x="582.7" y="85" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="585.71" y="95.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,632,560 samples, 0.02%)</title><rect x="1162.9" y="741" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.94" y="751.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="357" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1067.93" y="367.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (69,494,551 samples, 0.10%)</title><rect x="1171.2" y="773" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1174.22" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,632,560 samples, 0.02%)</title><rect x="1162.9" y="757" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.94" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (135,095,671 samples, 0.19%)</title><rect x="1110.5" y="773" width="2.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1113.47" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (70,289,424 samples, 0.10%)</title><rect x="1031.0" y="757" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1033.98" y="767.5" ></text>
</g>
<g >
<title>tcp_established_options (23,028,773 samples, 0.03%)</title><rect x="1077.5" y="581" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1080.46" y="591.5" ></text>
</g>
<g >
<title>__netif_receive_skb (44,953,456 samples, 0.06%)</title><rect x="582.3" y="277" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="585.31" y="287.5" ></text>
</g>
<g >
<title>char* fmt::v9::format_int::format_signed&lt;int&gt; (43,641,062 samples, 0.06%)</title><rect x="1144.5" y="709" width="0.8" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1147.51" y="719.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="661" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1121.18" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (48,274,506 samples, 0.07%)</title><rect x="1134.0" y="629" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1136.99" y="639.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (69,590,117 samples, 0.10%)</title><rect x="1124.5" y="661" width="1.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1127.48" y="671.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (54,908,888 samples, 0.08%)</title><rect x="1143.4" y="741" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1146.39" y="751.5" ></text>
</g>
<g >
<title>__asan::AsanInitIsRunning (24,239,584 samples, 0.03%)</title><rect x="674.3" y="885" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="677.27" y="895.5" ></text>
</g>
<g >
<title>inet_sendmsg (376,470,148 samples, 0.54%)</title><rect x="1043.1" y="645" width="6.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1046.12" y="655.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_range_ (21,579,607 samples, 0.03%)</title><rect x="1147.6" y="773" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1150.57" y="783.5" ></text>
</g>
<g >
<title>tcp_rcv_established (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="261" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1186.71" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (7,167,514 samples, 0.01%)</title><rect x="783.9" y="821" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="786.89" y="831.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (11,642,556 samples, 0.02%)</title><rect x="1153.4" y="853" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1156.44" y="863.5" ></text>
</g>
<g >
<title>tcp_mtu_probe (10,369,588 samples, 0.01%)</title><rect x="1065.7" y="581" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1068.65" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (32,517,221 samples, 0.05%)</title><rect x="1089.9" y="821" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1092.90" y="831.5" ></text>
</g>
<g >
<title>ip_finish_output2 (7,552,234 samples, 0.01%)</title><rect x="670.6" y="373" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="673.64" y="383.5" ></text>
</g>
<g >
<title>reqsk_put (10,703,330 samples, 0.02%)</title><rect x="1149.0" y="693" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1152.05" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (66,016,134 samples, 0.09%)</title><rect x="1164.7" y="805" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1167.75" y="815.5" ></text>
</g>
<g >
<title>__inet_lookup_established (10,366,805 samples, 0.01%)</title><rect x="1067.4" y="117" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1070.35" y="127.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (135,095,671 samples, 0.19%)</title><rect x="1110.5" y="757" width="2.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1113.47" y="767.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (12,689,068 samples, 0.02%)</title><rect x="1049.1" y="565" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1052.10" y="575.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (41,143,241 samples, 0.06%)</title><rect x="1108.5" y="645" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1111.46" y="655.5" ></text>
</g>
<g >
<title>ip_rcv_finish (10,408,513 samples, 0.01%)</title><rect x="960.8" y="517" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="963.78" y="527.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (22,847,632 samples, 0.03%)</title><rect x="1145.6" y="629" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1148.64" y="639.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (11,736,731 samples, 0.02%)</title><rect x="842.9" y="853" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="845.92" y="863.5" ></text>
</g>
<g >
<title>el0_interrupt (10,582,892 samples, 0.02%)</title><rect x="1118.2" y="645" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1121.18" y="655.5" ></text>
</g>
<g >
<title>el0t_64_sync (11,056,620 samples, 0.02%)</title><rect x="1097.3" y="805" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1100.30" y="815.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (12,040,418 samples, 0.02%)</title><rect x="1124.3" y="565" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1127.27" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (33,703,662 samples, 0.05%)</title><rect x="1127.0" y="645" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1130.02" y="655.5" ></text>
</g>
<g >
<title>tcp_rcv_established (324,099,113 samples, 0.47%)</title><rect x="1068.5" y="117" width="5.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1071.52" y="127.5" ></text>
</g>
<g >
<title>tcp_recvmsg (4,911,169,302 samples, 7.06%)</title><rect x="501.0" y="677" width="83.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="504.03" y="687.5" >tcp_recvmsg</text>
</g>
<g >
<title>__asan_stack_malloc_0 (80,716,106 samples, 0.12%)</title><rect x="1167.5" y="789" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1170.53" y="799.5" ></text>
</g>
<g >
<title>el0_da (10,940,349 samples, 0.02%)</title><rect x="935.8" y="693" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="938.75" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (93,354,298 samples, 0.13%)</title><rect x="1088.3" y="837" width="1.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1091.32" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (33,539,271 samples, 0.05%)</title><rect x="1155.1" y="805" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1158.13" y="815.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (24,197,794 samples, 0.03%)</title><rect x="493.2" y="693" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="496.25" y="703.5" ></text>
</g>
<g >
<title>fmt::v9::detail::abort_fuzzing_if (11,165,369 samples, 0.02%)</title><rect x="1109.2" y="661" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1112.15" y="671.5" ></text>
</g>
<g >
<title>handle_softirqs (12,016,552 samples, 0.02%)</title><rect x="966.8" y="613" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="969.79" y="623.5" ></text>
</g>
<g >
<title>ksys_read (16,940,716,957 samples, 24.35%)</title><rect x="355.8" y="757" width="287.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="358.80" y="767.5" >ksys_read</text>
</g>
<g >
<title>do_softirq_own_stack (21,954,316 samples, 0.03%)</title><rect x="842.2" y="725" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="845.21" y="735.5" ></text>
</g>
<g >
<title>__napi_poll (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="437" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1186.71" y="447.5" ></text>
</g>
<g >
<title>do_el0_svc (892,623,093 samples, 1.28%)</title><rect x="1064.9" y="757" width="15.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1067.93" y="767.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (3,753,804,070 samples, 5.40%)</title><rect x="968.5" y="869" width="63.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="971.51" y="879.5" >std::u..</text>
</g>
<g >
<title>mod_timer (12,084,585 samples, 0.02%)</title><rect x="1076.7" y="533" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1079.69" y="543.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,352,504,532 samples, 1.94%)</title><rect x="853.7" y="837" width="22.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="856.68" y="847.5" >_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (23,661,812 samples, 0.03%)</title><rect x="968.1" y="837" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="971.11" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (12,481,678 samples, 0.02%)</title><rect x="1189.2" y="821" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1192.21" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (43,426,339 samples, 0.06%)</title><rect x="1173.4" y="837" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1176.41" y="847.5" ></text>
</g>
<g >
<title>alloc_inode (11,018,926 samples, 0.02%)</title><rect x="1149.2" y="693" width="0.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="1152.23" y="703.5" ></text>
</g>
<g >
<title>__sanitizer::RunMallocHooks (11,060,242 samples, 0.02%)</title><rect x="935.9" y="741" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="938.94" y="751.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (33,048,410 samples, 0.05%)</title><rect x="1075.6" y="549" width="0.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1078.57" y="559.5" ></text>
</g>
<g >
<title>cubictcp_acked (12,970,128 samples, 0.02%)</title><rect x="582.5" y="101" width="0.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="585.49" y="111.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,075,502 samples, 0.01%)</title><rect x="1091.6" y="773" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1094.56" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (112,247,608 samples, 0.16%)</title><rect x="1179.8" y="725" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1182.77" y="735.5" ></text>
</g>
<g >
<title>do_mem_abort (11,966,517 samples, 0.02%)</title><rect x="758.4" y="709" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="761.41" y="719.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (10,473,230 samples, 0.02%)</title><rect x="1183.7" y="309" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1186.71" y="319.5" ></text>
</g>
<g >
<title>tcp_rcv_established (123,799,544 samples, 0.18%)</title><rect x="1045.4" y="101" width="2.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1048.38" y="111.5" ></text>
</g>
<g >
<title>do_el0_svc (11,047,934 samples, 0.02%)</title><rect x="1147.7" y="597" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1150.74" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (11,104,815 samples, 0.02%)</title><rect x="1146.2" y="725" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1149.21" y="735.5" ></text>
</g>
<g >
<title>___interceptor_memmove (11,069,345 samples, 0.02%)</title><rect x="1183.9" y="597" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1186.89" y="607.5" ></text>
</g>
<g >
<title>tcp_delack_timer (7,552,234 samples, 0.01%)</title><rect x="670.6" y="533" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="673.64" y="543.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (55,152,995 samples, 0.08%)</title><rect x="1187.7" y="693" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1190.69" y="703.5" ></text>
</g>
<g >
<title>__schedule (11,829,163 samples, 0.02%)</title><rect x="734.2" y="741" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="737.16" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (32,506,850 samples, 0.05%)</title><rect x="1150.5" y="853" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1153.53" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (55,139,204 samples, 0.08%)</title><rect x="1097.7" y="805" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1100.67" y="815.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (381,063,318 samples, 0.55%)</title><rect x="1135.4" y="741" width="6.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1138.37" y="751.5" ></text>
</g>
<g >
<title>void spdlog::details::fmt_helper::append_int&lt;int&gt; (100,468,524 samples, 0.14%)</title><rect x="1144.3" y="741" width="1.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1147.32" y="751.5" ></text>
</g>
<g >
<title>fmt::v9::detail::format_decimal_result&lt;char*&gt; fmt::v9::detail::format_decimal&lt;char, unsigned int&gt; (54,406,174 samples, 0.08%)</title><rect x="1186.0" y="725" width="0.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1189.00" y="735.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (10,408,513 samples, 0.01%)</title><rect x="960.8" y="437" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="963.78" y="447.5" ></text>
</g>
<g >
<title>skb_release_data (12,530,041 samples, 0.02%)</title><rect x="1043.4" y="517" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1046.44" y="527.5" ></text>
</g>
<g >
<title>__arch_copy_to_user (20,138,568 samples, 0.03%)</title><rect x="576.6" y="597" width="0.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="579.60" y="607.5" ></text>
</g>
<g >
<title>destroy_large_folio (6,288,202 samples, 0.01%)</title><rect x="575.9" y="597" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="578.91" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (24,449,272 samples, 0.04%)</title><rect x="1156.1" y="741" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1159.08" y="751.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (49,717,426 samples, 0.07%)</title><rect x="574.5" y="645" width="0.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="577.49" y="655.5" ></text>
</g>
<g >
<title>tcp_wfree (9,899,534 samples, 0.01%)</title><rect x="1075.0" y="405" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1078.04" y="415.5" ></text>
</g>
<g >
<title>mutex_lock (48,526,559 samples, 0.07%)</title><rect x="174.3" y="725" width="0.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="177.35" y="735.5" ></text>
</g>
<g >
<title>__release_sock (21,706,347 samples, 0.03%)</title><rect x="1043.3" y="597" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1046.29" y="607.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (141,533,499 samples, 0.20%)</title><rect x="1181.7" y="677" width="2.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1184.68" y="687.5" ></text>
</g>
<g >
<title>tcp_select_window (11,921,813 samples, 0.02%)</title><rect x="1048.5" y="533" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1051.52" y="543.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (10,804,221 samples, 0.02%)</title><rect x="1146.0" y="709" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1149.02" y="719.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (11,047,934 samples, 0.02%)</title><rect x="1147.7" y="485" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1150.74" y="495.5" ></text>
</g>
<g >
<title>process_backlog (474,856,127 samples, 0.68%)</title><rect x="1066.6" y="277" width="8.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1069.58" y="287.5" ></text>
</g>
<g >
<title>do_softirq (10,162,779 samples, 0.01%)</title><rect x="1064.9" y="597" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1067.93" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (43,905,677 samples, 0.06%)</title><rect x="1101.1" y="693" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1104.14" y="703.5" ></text>
</g>
<g >
<title>ep_send_events (12,186,211 samples, 0.02%)</title><rect x="176.7" y="757" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="179.72" y="767.5" ></text>
</g>
<g >
<title>operator delete (10,046,701 samples, 0.01%)</title><rect x="784.2" y="837" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="787.22" y="847.5" ></text>
</g>
<g >
<title>el0_interrupt (16,564,072 samples, 0.02%)</title><rect x="783.2" y="773" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="786.19" y="783.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (57,703,390 samples, 0.08%)</title><rect x="582.3" y="453" width="1.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="585.31" y="463.5" ></text>
</g>
</g>
</svg>
