<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1206" onload="init(evt)" viewBox="0 0 1200 1206" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1206.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1189" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1189" > </text>
<g id="frames">
<g >
<title>__tcp_ack_snd_check (5,849,666 samples, 0.05%)</title><rect x="923.4" y="213" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="926.42" y="223.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (4,517,761 samples, 0.04%)</title><rect x="1110.7" y="853" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1113.69" y="863.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="645" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1103.99" y="655.5" ></text>
</g>
<g >
<title>tcp_rcv_established (107,915,335 samples, 0.92%)</title><rect x="1075.4" y="245" width="10.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1078.45" y="255.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (8,052,589 samples, 0.07%)</title><rect x="1171.7" y="869" width="0.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1174.67" y="879.5" ></text>
</g>
<g >
<title>main (2,252,039 samples, 0.02%)</title><rect x="375.1" y="901" width="0.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="378.15" y="911.5" ></text>
</g>
<g >
<title>__schedule (2,239,361 samples, 0.02%)</title><rect x="817.9" y="773" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="820.93" y="783.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (362,959,064 samples, 3.09%)</title><rect x="617.2" y="965" width="36.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="620.20" y="975.5" >voi..</text>
</g>
<g >
<title>do_mem_abort (1,535,561 samples, 0.01%)</title><rect x="1064.5" y="869" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1067.52" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (15,961,840 samples, 0.14%)</title><rect x="1126.9" y="821" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1129.91" y="831.5" ></text>
</g>
<g >
<title>do_anonymous_page (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="581" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1143.11" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,362,817 samples, 0.02%)</title><rect x="1183.3" y="869" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1186.34" y="879.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (1,802,168 samples, 0.02%)</title><rect x="24.8" y="741" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="27.78" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,234,437 samples, 0.02%)</title><rect x="1139.7" y="805" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1142.65" y="815.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::run (11,735,661,425 samples, 99.90%)</title><rect x="11.2" y="1061" width="1178.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="14.15" y="1071.5" >tt::chat::server::EpollServer::run</text>
</g>
<g >
<title>alloc_pages (11,578,641 samples, 0.10%)</title><rect x="913.2" y="693" width="1.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="916.17" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,471,029 samples, 0.06%)</title><rect x="373.6" y="885" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="376.63" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (4,025,535 samples, 0.03%)</title><rect x="898.8" y="933" width="0.4" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="901.84" y="943.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (2,144,875 samples, 0.02%)</title><rect x="13.7" y="773" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="16.67" y="783.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (2,163,265 samples, 0.02%)</title><rect x="377.1" y="693" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="380.11" y="703.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (2,105,951 samples, 0.02%)</title><rect x="296.6" y="613" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="299.55" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (101,544,075 samples, 0.86%)</title><rect x="444.0" y="949" width="10.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="447.04" y="959.5" ></text>
</g>
<g >
<title>__do_softirq (2,530,129 samples, 0.02%)</title><rect x="862.2" y="773" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="865.16" y="783.5" ></text>
</g>
<g >
<title>alloc_anon_folio (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="645" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1125.11" y="655.5" ></text>
</g>
<g >
<title>tcp_rcv_established (110,439,597 samples, 0.94%)</title><rect x="923.4" y="229" width="11.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="926.42" y="239.5" ></text>
</g>
<g >
<title>__do_softirq (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="469" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1151.64" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (671,262,517 samples, 5.71%)</title><rect x="751.7" y="933" width="67.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="754.67" y="943.5" >std::__..</text>
</g>
<g >
<title>alloc_file (2,174,049 samples, 0.02%)</title><rect x="1154.0" y="821" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1156.96" y="831.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator[] (366,669,215 samples, 3.12%)</title><rect x="862.4" y="965" width="36.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="865.42" y="975.5" >std..</text>
</g>
<g >
<title>el0t_64_sync_handler (1,896,715 samples, 0.02%)</title><rect x="169.1" y="901" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="172.08" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash (2,202,104 samples, 0.02%)</title><rect x="822.2" y="949" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="825.21" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (9,058,169 samples, 0.08%)</title><rect x="1100.1" y="965" width="0.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1103.08" y="975.5" ></text>
</g>
<g >
<title>ip_local_deliver (127,232,753 samples, 1.08%)</title><rect x="1073.5" y="325" width="12.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1076.51" y="335.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2,617,348 samples, 0.02%)</title><rect x="1064.1" y="581" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1067.10" y="591.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (9,969,659 samples, 0.08%)</title><rect x="913.3" y="677" width="1.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="916.33" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2,494,945 samples, 0.02%)</title><rect x="512.2" y="949" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="515.24" y="959.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (159,847,303 samples, 1.36%)</title><rect x="1071.6" y="565" width="16.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1074.56" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,865,220 samples, 0.04%)</title><rect x="10.3" y="1013" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.29" y="1023.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (1,918,677 samples, 0.02%)</title><rect x="952.4" y="805" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="955.42" y="815.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (4,567,542 samples, 0.04%)</title><rect x="1156.7" y="997" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1159.67" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (640,674,069 samples, 5.45%)</title><rect x="43.2" y="981" width="64.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="46.20" y="991.5" >std::__..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,304,222 samples, 0.05%)</title><rect x="820.1" y="901" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="823.05" y="911.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,937,631 samples, 0.02%)</title><rect x="28.3" y="901" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="31.34" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,567,542 samples, 0.04%)</title><rect x="1156.7" y="917" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1159.67" y="927.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (2,023,248 samples, 0.02%)</title><rect x="1111.6" y="853" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1114.60" y="863.5" ></text>
</g>
<g >
<title>do_page_fault (6,471,029 samples, 0.06%)</title><rect x="373.6" y="789" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="376.63" y="799.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (9,124,568 samples, 0.08%)</title><rect x="750.1" y="885" width="0.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="753.08" y="895.5" ></text>
</g>
<g >
<title>el0t_64_sync (3,681,385 samples, 0.03%)</title><rect x="376.1" y="837" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="379.13" y="847.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="885" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1103.99" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,023,248 samples, 0.02%)</title><rect x="1111.6" y="821" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1114.60" y="831.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (1,811,437 samples, 0.02%)</title><rect x="16.1" y="981" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="19.05" y="991.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (757,349,925 samples, 6.45%)</title><rect x="674.9" y="917" width="76.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="677.92" y="927.5" >__asan_s..</text>
</g>
<g >
<title>__arm64_sys_write (6,370,553 samples, 0.05%)</title><rect x="1152.0" y="677" width="0.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1154.98" y="687.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (540,655,207 samples, 4.60%)</title><rect x="899.7" y="949" width="54.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="902.70" y="959.5" >___in..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,023,248 samples, 0.02%)</title><rect x="1111.6" y="837" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1114.60" y="847.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (15,943,312 samples, 0.14%)</title><rect x="1075.4" y="229" width="1.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1078.45" y="239.5" ></text>
</g>
<g >
<title>do_mem_abort (1,883,141 samples, 0.02%)</title><rect x="306.6" y="917" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="309.57" y="927.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (167,754,297 samples, 1.43%)</title><rect x="1070.8" y="661" width="16.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1073.76" y="671.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (4,571,442 samples, 0.04%)</title><rect x="101.7" y="661" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="104.66" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,511,279 samples, 0.04%)</title><rect x="1143.4" y="725" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1146.44" y="735.5" ></text>
</g>
<g >
<title>_start (11,735,661,425 samples, 99.90%)</title><rect x="11.2" y="1125" width="1178.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="14.15" y="1135.5" >_start</text>
</g>
<g >
<title>alloc_pages_mpol (2,337,193 samples, 0.02%)</title><rect x="104.2" y="693" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="107.21" y="703.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2,148,701 samples, 0.02%)</title><rect x="107.3" y="917" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="110.34" y="927.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (2,260,114 samples, 0.02%)</title><rect x="1116.3" y="773" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1119.31" y="783.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,944,255 samples, 0.02%)</title><rect x="1163.7" y="821" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1166.73" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,999,694 samples, 0.02%)</title><rect x="1121.0" y="869" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1124.02" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,262,702,955 samples, 10.75%)</title><rect x="169.9" y="965" width="126.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="172.92" y="975.5" >__asan_stack_ma..</text>
</g>
<g >
<title>tcp_write_xmit (1,837,691 samples, 0.02%)</title><rect x="910.2" y="661" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="913.22" y="671.5" ></text>
</g>
<g >
<title>arch_counter_read (1,698,830 samples, 0.01%)</title><rect x="937.4" y="677" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="940.36" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,323,075 samples, 0.02%)</title><rect x="1187.9" y="901" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1190.86" y="911.5" ></text>
</g>
<g >
<title>char* fmt::v9::format_int::format_unsigned&lt;unsigned int&gt; (3,883,368 samples, 0.03%)</title><rect x="1184.3" y="869" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1187.25" y="879.5" ></text>
</g>
<g >
<title>tcp_rcv_established (4,939,643 samples, 0.04%)</title><rect x="750.3" y="533" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="753.28" y="543.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,853,490 samples, 0.02%)</title><rect x="376.9" y="677" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="379.93" y="687.5" ></text>
</g>
<g >
<title>operator new (16,700,601 samples, 0.14%)</title><rect x="375.9" y="901" width="1.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="378.93" y="911.5" ></text>
</g>
<g >
<title>tcp_delack_timer (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="645" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1190.56" y="655.5" ></text>
</g>
<g >
<title>ksys_write (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="709" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1191.51" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,953,583 samples, 0.05%)</title><rect x="1120.4" y="869" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1123.43" y="879.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,104,501 samples, 0.02%)</title><rect x="635.8" y="677" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="638.84" y="687.5" ></text>
</g>
<g >
<title>ip_local_deliver (2,131,230 samples, 0.02%)</title><rect x="900.3" y="613" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="903.33" y="623.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::grow (6,949,550 samples, 0.06%)</title><rect x="1139.7" y="837" width="0.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1142.65" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1,329,539,733 samples, 11.32%)</title><rect x="378.9" y="997" width="133.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="381.94" y="1007.5" >std::__cxx11::ba..</text>
</g>
<g >
<title>__alloc_pages (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="581" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1125.11" y="591.5" ></text>
</g>
<g >
<title>do_mem_abort (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="661" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1136.68" y="671.5" ></text>
</g>
<g >
<title>__asan::AsanThread::stack_bottom (1,826,454 samples, 0.02%)</title><rect x="375.0" y="885" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="377.96" y="895.5" ></text>
</g>
<g >
<title>__sk_mem_raise_allocated (2,217,614 samples, 0.02%)</title><rect x="930.6" y="165" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="933.58" y="175.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="741" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1136.68" y="751.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (4,590,971 samples, 0.04%)</title><rect x="636.1" y="629" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="639.05" y="639.5" ></text>
</g>
<g >
<title>char const* fmt::v9::detail::parse_replacement_field&lt;char, fmt::v9::detail::vformat_to&lt;char&gt; (39,867,111 samples, 0.34%)</title><rect x="1163.9" y="965" width="4.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1166.93" y="975.5" ></text>
</g>
<g >
<title>__sk_mem_schedule (2,110,755 samples, 0.02%)</title><rect x="945.7" y="709" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="948.70" y="719.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32LocalCache&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt; &gt;::Refill (1,813,257 samples, 0.02%)</title><rect x="10.8" y="949" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="13.78" y="959.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="533" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1151.64" y="543.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (2,395,092 samples, 0.02%)</title><rect x="1100.8" y="885" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1103.75" y="895.5" ></text>
</g>
<g >
<title>__interceptor_trampoline_send (2,302,516 samples, 0.02%)</title><rect x="1098.0" y="965" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1100.96" y="975.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (2,034,048 samples, 0.02%)</title><rect x="373.9" y="677" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="376.89" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,355,797 samples, 0.02%)</title><rect x="821.6" y="869" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="824.60" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,168,606 samples, 0.02%)</title><rect x="1157.8" y="949" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1160.76" y="959.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (1,930,295 samples, 0.02%)</title><rect x="635.6" y="837" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="638.65" y="847.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4,339,647 samples, 0.04%)</title><rect x="105.8" y="709" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="108.75" y="719.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (127,232,753 samples, 1.08%)</title><rect x="1073.5" y="293" width="12.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1076.51" y="303.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,288,914 samples, 0.10%)</title><rect x="1135.6" y="917" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1138.63" y="927.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (4,155,031 samples, 0.04%)</title><rect x="1107.5" y="981" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1110.55" y="991.5" ></text>
</g>
<g >
<title>el1_interrupt (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="565" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1151.64" y="575.5" ></text>
</g>
<g >
<title>operator delete (2,035,615 samples, 0.02%)</title><rect x="1102.9" y="917" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1105.87" y="927.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (144,476,671 samples, 1.23%)</title><rect x="1071.8" y="549" width="14.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1074.78" y="559.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (4,530,154 samples, 0.04%)</title><rect x="1091.1" y="709" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1094.15" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,232,715 samples, 0.04%)</title><rect x="1156.2" y="965" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1159.24" y="975.5" ></text>
</g>
<g >
<title>do_notify_resume (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="661" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1151.64" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (18,875,858 samples, 0.16%)</title><rect x="1098.2" y="981" width="1.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1101.19" y="991.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (15,083,434 samples, 0.13%)</title><rect x="1149.4" y="837" width="1.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1152.42" y="847.5" ></text>
</g>
<g >
<title>_IO_do_write (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="805" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1154.76" y="815.5" ></text>
</g>
<g >
<title>do_pte_missing (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="693" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1103.99" y="703.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (2,617,348 samples, 0.02%)</title><rect x="1064.1" y="517" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1067.10" y="527.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,341,511 samples, 0.04%)</title><rect x="1114.4" y="837" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1117.38" y="847.5" ></text>
</g>
<g >
<title>tcp_grow_window (2,102,423 samples, 0.02%)</title><rect x="934.3" y="213" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="937.30" y="223.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (15,961,840 samples, 0.14%)</title><rect x="1126.9" y="837" width="1.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1129.91" y="847.5" ></text>
</g>
<g >
<title>do_el0_svc (2,163,265 samples, 0.02%)</title><rect x="377.1" y="709" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="380.11" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (1,955,832 samples, 0.02%)</title><rect x="819.3" y="949" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="822.30" y="959.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (4,237,563 samples, 0.04%)</title><rect x="1132.8" y="773" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1135.82" y="783.5" ></text>
</g>
<g >
<title>el0_svc (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="709" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1154.76" y="719.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (2,250,425 samples, 0.02%)</title><rect x="1109.2" y="917" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1112.17" y="927.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2,131,230 samples, 0.02%)</title><rect x="900.3" y="565" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="903.33" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,528,909 samples, 0.06%)</title><rect x="1161.0" y="981" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1164.03" y="991.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (6,772,712 samples, 0.06%)</title><rect x="1066.3" y="693" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1069.29" y="703.5" ></text>
</g>
<g >
<title>__do_softirq (5,744,633 samples, 0.05%)</title><rect x="1063.9" y="773" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1066.94" y="783.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1,519,827 samples, 0.01%)</title><rect x="1064.4" y="677" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1067.36" y="687.5" ></text>
</g>
<g >
<title>tcp_ack_update_window.isra.0 (2,293,575 samples, 0.02%)</title><rect x="910.4" y="661" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="913.41" y="671.5" ></text>
</g>
<g >
<title>neigh_hh_output (2,294,067 samples, 0.02%)</title><rect x="924.0" y="69" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="927.00" y="79.5" ></text>
</g>
<g >
<title>do_softirq (2,153,366 samples, 0.02%)</title><rect x="1086.5" y="549" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1089.53" y="559.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,853,490 samples, 0.02%)</title><rect x="376.9" y="757" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="379.93" y="767.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (6,344,080 samples, 0.05%)</title><rect x="656.0" y="917" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="659.05" y="927.5" ></text>
</g>
<g >
<title>__tcp_retransmit_skb.part.0 (2,383,792 samples, 0.02%)</title><rect x="818.2" y="565" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="821.16" y="575.5" ></text>
</g>
<g >
<title>el0_da (1,820,225 samples, 0.02%)</title><rect x="10.6" y="869" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="13.59" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,295,610 samples, 0.02%)</title><rect x="1139.9" y="805" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1142.88" y="815.5" ></text>
</g>
<g >
<title>____do_softirq (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="757" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1190.56" y="767.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (4,056,441 samples, 0.03%)</title><rect x="882.0" y="789" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="885.01" y="799.5" ></text>
</g>
<g >
<title>inet_sendmsg (252,014,425 samples, 2.15%)</title><rect x="1066.3" y="789" width="25.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1069.29" y="799.5" >i..</text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,106,062 samples, 0.02%)</title><rect x="1114.0" y="853" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1116.97" y="863.5" ></text>
</g>
<g >
<title>el0_interrupt (5,890,921 samples, 0.05%)</title><rect x="674.1" y="885" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="677.06" y="895.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,853,490 samples, 0.02%)</title><rect x="376.9" y="613" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="379.93" y="623.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,853,490 samples, 0.02%)</title><rect x="376.9" y="645" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="379.93" y="655.5" ></text>
</g>
<g >
<title>process_output_block (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="533" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1154.76" y="543.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (26,097,818 samples, 0.22%)</title><rect x="1067.2" y="725" width="2.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1070.22" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,989,263 samples, 0.02%)</title><rect x="1151.1" y="837" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1154.14" y="847.5" ></text>
</g>
<g >
<title>expire_timers (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="677" width="0.3" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1190.56" y="687.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (2,373,698 samples, 0.02%)</title><rect x="1135.4" y="821" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1138.39" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,629,187 samples, 0.06%)</title><rect x="1098.2" y="965" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1101.19" y="975.5" ></text>
</g>
<g >
<title>fmt::v9::detail::count_digits (6,054,928 samples, 0.05%)</title><rect x="1148.8" y="789" width="0.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1151.82" y="799.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="853" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1190.56" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,111,008 samples, 0.02%)</title><rect x="1175.1" y="965" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1178.12" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,995,247 samples, 0.02%)</title><rect x="1182.9" y="869" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1185.93" y="879.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (2,163,265 samples, 0.02%)</title><rect x="377.1" y="645" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="380.11" y="655.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (2,058,555 samples, 0.02%)</title><rect x="750.1" y="821" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="753.08" y="831.5" ></text>
</g>
<g >
<title>ip_rcv (1,837,691 samples, 0.02%)</title><rect x="910.2" y="309" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="913.22" y="319.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::vformat_to&lt;fmt::v9::appender, 0&gt; (269,202,043 samples, 2.29%)</title><rect x="1108.6" y="949" width="27.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1111.59" y="959.5" >f..</text>
</g>
<g >
<title>do_softirq (148,690,189 samples, 1.27%)</title><rect x="919.8" y="517" width="14.9" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="922.80" y="527.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (681,434,443 samples, 5.80%)</title><rect x="444.0" y="981" width="68.5" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="447.04" y="991.5" >void st..</text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,872,740 samples, 0.02%)</title><rect x="10.0" y="1093" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" ></text>
</g>
<g >
<title>call_on_irq_stack (2,373,698 samples, 0.02%)</title><rect x="1135.4" y="725" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1138.39" y="735.5" ></text>
</g>
<g >
<title>do_page_fault (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="629" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1136.68" y="639.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (2,063,998 samples, 0.02%)</title><rect x="915.7" y="709" width="0.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="918.71" y="719.5" ></text>
</g>
<g >
<title>do_page_fault (1,896,715 samples, 0.02%)</title><rect x="169.1" y="837" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="172.08" y="847.5" ></text>
</g>
<g >
<title>decltype  (17,783,982 samples, 0.15%)</title><rect x="820.1" y="933" width="1.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="823.05" y="943.5" ></text>
</g>
<g >
<title>alloc_anon_folio (9,254,861 samples, 0.08%)</title><rect x="101.4" y="709" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="104.41" y="719.5" ></text>
</g>
<g >
<title>_IO_fwrite (4,554,831 samples, 0.04%)</title><rect x="1188.3" y="917" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1191.29" y="927.5" ></text>
</g>
<g >
<title>do_mem_abort (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="773" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1125.11" y="783.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (93,137,898 samples, 0.79%)</title><rect x="1124.5" y="853" width="9.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1127.52" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,332,823 samples, 0.04%)</title><rect x="1105.4" y="885" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1108.40" y="895.5" ></text>
</g>
<g >
<title>do_pte_missing (1,695,581 samples, 0.01%)</title><rect x="635.3" y="693" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="638.27" y="703.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (7,154,882 samples, 0.06%)</title><rect x="106.2" y="693" width="0.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="109.19" y="703.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1,837,691 samples, 0.02%)</title><rect x="910.2" y="229" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="913.22" y="239.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2,342,238 samples, 0.02%)</title><rect x="374.5" y="869" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="377.50" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (601,896,380 samples, 5.12%)</title><rect x="107.7" y="965" width="60.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="110.74" y="975.5" >__asan..</text>
</g>
<g >
<title>do_el0_svc (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="693" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1154.76" y="703.5" ></text>
</g>
<g >
<title>[libfmt.so.9.1.0] (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="917" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1103.99" y="927.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::grow (9,788,393 samples, 0.08%)</title><rect x="1116.5" y="805" width="1.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1119.54" y="815.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,104,501 samples, 0.02%)</title><rect x="635.8" y="757" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="638.84" y="767.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (2,252,039 samples, 0.02%)</title><rect x="375.1" y="885" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="378.15" y="895.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (2,105,951 samples, 0.02%)</title><rect x="296.6" y="661" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="299.55" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (14,730,518 samples, 0.13%)</title><rect x="307.0" y="981" width="1.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="309.96" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (171,235,530 samples, 1.46%)</title><rect x="358.6" y="965" width="17.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="361.58" y="975.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (1,811,437 samples, 0.02%)</title><rect x="16.1" y="917" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="19.05" y="927.5" ></text>
</g>
<g >
<title>lock_timer_base (1,663,076 samples, 0.01%)</title><rect x="923.8" y="133" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="926.84" y="143.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (6,937,425 samples, 0.06%)</title><rect x="1076.4" y="181" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1079.35" y="191.5" ></text>
</g>
<g >
<title>tcp_push (216,943,555 samples, 1.85%)</title><rect x="917.8" y="725" width="21.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="920.76" y="735.5" >t..</text>
</g>
<g >
<title>__napi_poll (1,837,691 samples, 0.02%)</title><rect x="910.2" y="373" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="913.22" y="383.5" ></text>
</g>
<g >
<title>ip_local_deliver (2,617,348 samples, 0.02%)</title><rect x="1064.1" y="629" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1067.10" y="639.5" ></text>
</g>
<g >
<title>mmap_region (2,163,265 samples, 0.02%)</title><rect x="377.1" y="597" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="380.11" y="607.5" ></text>
</g>
<g >
<title>read (118,494,389 samples, 1.01%)</title><rect x="15.7" y="1013" width="11.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="18.66" y="1023.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2,193,841 samples, 0.02%)</title><rect x="847.5" y="517" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="850.50" y="527.5" ></text>
</g>
<g >
<title>[libfmt.so.9.1.0] (31,457,898 samples, 0.27%)</title><rect x="375.8" y="965" width="3.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="378.78" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,451,273 samples, 0.07%)</title><rect x="1101.2" y="933" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1104.18" y="943.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,329,552 samples, 0.02%)</title><rect x="603.5" y="917" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="606.46" y="927.5" ></text>
</g>
<g >
<title>el0_interrupt (5,744,633 samples, 0.05%)</title><rect x="1063.9" y="869" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1066.94" y="879.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="805" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1190.56" y="815.5" ></text>
</g>
<g >
<title>tcp_write_xmit (203,128,546 samples, 1.73%)</title><rect x="1070.3" y="709" width="20.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1073.32" y="719.5" ></text>
</g>
<g >
<title>__sk_mem_raise_allocated (2,291,913 samples, 0.02%)</title><rect x="882.2" y="437" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="885.18" y="447.5" ></text>
</g>
<g >
<title>_IO_do_write (4,554,831 samples, 0.04%)</title><rect x="1188.3" y="885" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1191.29" y="895.5" ></text>
</g>
<g >
<title>do_page_fault (2,196,541 samples, 0.02%)</title><rect x="100.3" y="821" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="103.31" y="831.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (342,629,291 samples, 2.92%)</title><rect x="911.5" y="741" width="34.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="914.50" y="751.5" >tc..</text>
</g>
<g >
<title>call_on_irq_stack (144,476,671 samples, 1.23%)</title><rect x="1071.8" y="501" width="14.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1074.78" y="511.5" ></text>
</g>
<g >
<title>el0_da (1,618,079 samples, 0.01%)</title><rect x="10.3" y="709" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="13.29" y="719.5" ></text>
</g>
<g >
<title>std::mutex::lock (2,225,652 samples, 0.02%)</title><rect x="1188.7" y="933" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1191.74" y="943.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="581" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1154.76" y="591.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (16,745,202 samples, 0.14%)</title><rect x="1184.6" y="901" width="1.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1187.64" y="911.5" ></text>
</g>
<g >
<title>filemap_map_pages (1,085,595 samples, 0.01%)</title><rect x="10.1" y="853" width="0.1" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="13.09" y="863.5" ></text>
</g>
<g >
<title>security_mmap_file (2,282,752 samples, 0.02%)</title><rect x="106.7" y="661" width="0.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="109.68" y="671.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::broadcast_to_channel (2,411,307,920 samples, 20.53%)</title><rect x="822.6" y="997" width="242.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="825.64" y="1007.5" >tt::chat::server::EpollServer::b..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,277,417 samples, 0.04%)</title><rect x="1102.0" y="901" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1105.03" y="911.5" ></text>
</g>
<g >
<title>____do_softirq (144,476,671 samples, 1.23%)</title><rect x="1071.8" y="485" width="14.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1074.78" y="495.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,663,077 samples, 0.06%)</title><rect x="1100.1" y="917" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1103.08" y="927.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; spdlog::details::to_string_view&lt;char, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (6,256,158 samples, 0.05%)</title><rect x="1108.0" y="965" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1110.96" y="975.5" ></text>
</g>
<g >
<title>sock_def_readable (72,696,212 samples, 0.62%)</title><rect x="1078.1" y="197" width="7.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1081.06" y="207.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (2,126,370 samples, 0.02%)</title><rect x="750.8" y="693" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="753.78" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (146,309,609 samples, 1.25%)</title><rect x="847.7" y="949" width="14.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="850.72" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,236,388 samples, 0.02%)</title><rect x="1181.4" y="901" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1184.40" y="911.5" ></text>
</g>
<g >
<title>tcp_data_ready (2,129,527 samples, 0.02%)</title><rect x="750.6" y="501" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="753.56" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,875,603 samples, 0.02%)</title><rect x="11.0" y="1045" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.96" y="1055.5" ></text>
</g>
<g >
<title>__arm64_sys_mmap (2,163,265 samples, 0.02%)</title><rect x="377.1" y="661" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="380.11" y="671.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (261,476,663 samples, 2.23%)</title><rect x="1065.6" y="965" width="26.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1068.60" y="975.5" >_..</text>
</g>
<g >
<title>__asan::asan_memalign (12,421,075 samples, 0.11%)</title><rect x="561.9" y="901" width="1.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="564.89" y="911.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (1,792,900 samples, 0.02%)</title><rect x="898.5" y="869" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="901.51" y="879.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (35,028,757 samples, 0.30%)</title><rect x="1142.2" y="853" width="3.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1145.17" y="863.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2,617,348 samples, 0.02%)</title><rect x="1064.1" y="549" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1067.10" y="559.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (254,580,658 samples, 2.17%)</title><rect x="1066.3" y="869" width="25.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1069.29" y="879.5" >e..</text>
</g>
<g >
<title>el0t_64_irq (2,131,230 samples, 0.02%)</title><rect x="900.3" y="901" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="903.33" y="911.5" ></text>
</g>
<g >
<title>rb_first (2,400,573 samples, 0.02%)</title><rect x="938.2" y="677" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="941.18" y="687.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,535,561 samples, 0.01%)</title><rect x="1064.5" y="757" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1067.52" y="767.5" ></text>
</g>
<g >
<title>do_el0_svc (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="773" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1191.51" y="783.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (11,414,523 samples, 0.10%)</title><rect x="1144.1" y="789" width="1.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1147.09" y="799.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (36,608,834 samples, 0.31%)</title><rect x="1103.9" y="949" width="3.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1106.87" y="959.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,104,501 samples, 0.02%)</title><rect x="635.8" y="661" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="638.84" y="671.5" ></text>
</g>
<g >
<title>kmalloc_reserve (2,306,556 samples, 0.02%)</title><rect x="1076.1" y="165" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1079.12" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (8,320,554 samples, 0.07%)</title><rect x="1154.8" y="1029" width="0.8" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1157.79" y="1039.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,508,886 samples, 0.04%)</title><rect x="1145.2" y="789" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1148.24" y="799.5" ></text>
</g>
<g >
<title>__sanitizer_internal_memmove (9,201,109 samples, 0.08%)</title><rect x="377.6" y="917" width="0.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="380.61" y="927.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (13,220,620 samples, 0.11%)</title><rect x="25.6" y="821" width="1.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="28.62" y="831.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (107,915,335 samples, 0.92%)</title><rect x="1075.4" y="261" width="10.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1078.45" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,681,385 samples, 0.03%)</title><rect x="376.1" y="853" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="379.13" y="863.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (6,474,014 samples, 0.06%)</title><rect x="1153.7" y="933" width="0.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1156.74" y="943.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,827,821 samples, 0.02%)</title><rect x="376.5" y="853" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="379.50" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,663,077 samples, 0.06%)</title><rect x="1100.1" y="933" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1103.08" y="943.5" ></text>
</g>
<g >
<title>__run_timers (2,193,841 samples, 0.02%)</title><rect x="847.5" y="725" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="850.50" y="735.5" ></text>
</g>
<g >
<title>__schedule (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="629" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1151.64" y="639.5" ></text>
</g>
<g >
<title>operator new (79,022,363 samples, 0.67%)</title><rect x="99.6" y="949" width="8.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="102.62" y="959.5" ></text>
</g>
<g >
<title>tcp_push (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="741" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1110.55" y="751.5" ></text>
</g>
<g >
<title>ip_output (2,294,067 samples, 0.02%)</title><rect x="924.0" y="133" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="927.00" y="143.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,716,985 samples, 0.06%)</title><rect x="1183.6" y="885" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1186.58" y="895.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1,993,742 samples, 0.02%)</title><rect x="939.3" y="709" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="942.35" y="719.5" ></text>
</g>
<g >
<title>__alloc_pages (1,557,568 samples, 0.01%)</title><rect x="308.3" y="709" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="311.28" y="719.5" ></text>
</g>
<g >
<title>rebalance_domains (2,163,452 samples, 0.02%)</title><rect x="674.4" y="741" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="677.44" y="751.5" ></text>
</g>
<g >
<title>fmt::v9::format_int::format_int (3,883,368 samples, 0.03%)</title><rect x="1184.3" y="901" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1187.25" y="911.5" ></text>
</g>
<g >
<title>alloc_empty_file (2,174,049 samples, 0.02%)</title><rect x="1154.0" y="805" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1156.96" y="815.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_channel_message (7,944,638,400 samples, 67.63%)</title><rect x="300.1" y="1013" width="798.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="303.15" y="1023.5" >tt::chat::server::EpollServer::handle_channel_message</text>
</g>
<g >
<title>__irq_exit_rcu (8,780,280 samples, 0.07%)</title><rect x="295.9" y="869" width="0.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="298.88" y="879.5" ></text>
</g>
<g >
<title>rmqueue (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="565" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1103.99" y="575.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (76,873,662 samples, 0.65%)</title><rect x="99.6" y="917" width="7.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="102.62" y="927.5" ></text>
</g>
<g >
<title>do_page_fault (1,481,757 samples, 0.01%)</title><rect x="376.4" y="757" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="379.35" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (149,863,620 samples, 1.28%)</title><rect x="358.6" y="949" width="15.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="361.58" y="959.5" ></text>
</g>
<g >
<title>tcp_sendmsg (369,386,457 samples, 3.14%)</title><rect x="908.8" y="757" width="37.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="911.81" y="767.5" >tcp..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2,190,230 samples, 0.02%)</title><rect x="168.6" y="981" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="171.65" y="991.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1,837,691 samples, 0.02%)</title><rect x="910.2" y="245" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="913.22" y="255.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::min&lt;unsigned long&gt; (2,179,135 samples, 0.02%)</title><rect x="299.2" y="981" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="302.15" y="991.5" ></text>
</g>
<g >
<title>send@plt (1,870,642 samples, 0.02%)</title><rect x="1064.7" y="949" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1067.67" y="959.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt;::begin (8,955,250 samples, 0.08%)</title><rect x="1187.0" y="933" width="0.9" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="1189.96" y="943.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (36,608,834 samples, 0.31%)</title><rect x="1103.9" y="933" width="3.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1106.87" y="943.5" ></text>
</g>
<g >
<title>skb_release_head_state (2,221,427 samples, 0.02%)</title><rect x="1067.9" y="693" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1070.87" y="703.5" ></text>
</g>
<g >
<title>__arch_copy_to_user (9,836,597 samples, 0.08%)</title><rect x="23.1" y="725" width="1.0" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="26.13" y="735.5" ></text>
</g>
<g >
<title>skb_free_head (2,280,431 samples, 0.02%)</title><rect x="1067.6" y="661" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1070.64" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (4,277,417 samples, 0.04%)</title><rect x="1102.0" y="917" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1105.03" y="927.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (26,726,203 samples, 0.23%)</title><rect x="1178.7" y="901" width="2.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1181.72" y="911.5" ></text>
</g>
<g >
<title>server (11,747,108,958 samples, 100.00%)</title><rect x="10.0" y="1141" width="1180.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="13.00" y="1151.5" >server</text>
</g>
<g >
<title>handle_mm_fault (6,471,029 samples, 0.06%)</title><rect x="373.6" y="773" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="376.63" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,414,523 samples, 0.10%)</title><rect x="1144.1" y="725" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1147.09" y="735.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2,294,067 samples, 0.02%)</title><rect x="924.0" y="85" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="927.00" y="95.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,114,364 samples, 0.05%)</title><rect x="1168.9" y="917" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1171.93" y="927.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,651,144 samples, 0.01%)</title><rect x="43.0" y="837" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="46.03" y="847.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::default_arg_formatter&lt;char&gt;::operator (36,344,008 samples, 0.31%)</title><rect x="1164.1" y="949" width="3.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1167.08" y="959.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="709" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1103.99" y="719.5" ></text>
</g>
<g >
<title>tcp_wmem_schedule (4,434,544 samples, 0.04%)</title><rect x="945.5" y="725" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="948.47" y="735.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (6,474,014 samples, 0.06%)</title><rect x="1153.7" y="981" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1156.74" y="991.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (4,227,653 samples, 0.04%)</title><rect x="934.7" y="533" width="0.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="937.73" y="543.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (3,975,758 samples, 0.03%)</title><rect x="1132.4" y="789" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1135.42" y="799.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (14,524,627 samples, 0.12%)</title><rect x="1166.3" y="885" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1169.27" y="895.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (101,308,765 samples, 0.86%)</title><rect x="17.4" y="933" width="10.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="20.39" y="943.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char*, char*&gt; (5,906,722 samples, 0.05%)</title><rect x="1116.7" y="757" width="0.6" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1119.73" y="767.5" ></text>
</g>
<g >
<title>run_timer_softirq (1,519,827 samples, 0.01%)</title><rect x="1064.4" y="741" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1067.36" y="751.5" ></text>
</g>
<g >
<title>all (11,747,112,030 samples, 100%)</title><rect x="10.0" y="1157" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1167.5" ></text>
</g>
<g >
<title>ena_io_poll (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="405" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1151.64" y="415.5" ></text>
</g>
<g >
<title>el0_interrupt (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="837" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1190.56" y="847.5" ></text>
</g>
<g >
<title>validate_xmit_skb (2,294,067 samples, 0.02%)</title><rect x="924.0" y="37" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="927.00" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (1,640,166,070 samples, 13.96%)</title><rect x="657.9" y="981" width="164.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="660.89" y="991.5" >std::__detail::_Map_b..</text>
</g>
<g >
<title>[libc.so.6] (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="757" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1143.11" y="767.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,373,698 samples, 0.02%)</title><rect x="1135.4" y="773" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1138.39" y="783.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="661" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1191.51" y="671.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (2,319,663 samples, 0.02%)</title><rect x="1090.1" y="693" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1093.06" y="703.5" ></text>
</g>
<g >
<title>skb_release_data (6,119,487 samples, 0.05%)</title><rect x="21.2" y="757" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="24.15" y="767.5" ></text>
</g>
<g >
<title>page_counter_cancel (2,042,202 samples, 0.02%)</title><rect x="674.2" y="613" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="677.23" y="623.5" ></text>
</g>
<g >
<title>tcp_send_delayed_ack (1,663,076 samples, 0.01%)</title><rect x="923.8" y="197" width="0.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="926.84" y="207.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (12,251,459 samples, 0.10%)</title><rect x="1147.6" y="821" width="1.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1150.58" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,208,832 samples, 0.02%)</title><rect x="1151.5" y="869" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1154.53" y="879.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (169,012,969 samples, 1.44%)</title><rect x="1136.8" y="949" width="16.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1139.77" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (3,594,174 samples, 0.03%)</title><rect x="1164.3" y="917" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1167.28" y="927.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="725" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1136.68" y="735.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (6,411,890 samples, 0.05%)</title><rect x="1150.3" y="805" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1153.29" y="815.5" ></text>
</g>
<g >
<title>el0t_64_irq (5,890,921 samples, 0.05%)</title><rect x="674.1" y="933" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="677.06" y="943.5" ></text>
</g>
<g >
<title>tcp_current_mss (4,245,887 samples, 0.04%)</title><rect x="1090.7" y="725" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1093.72" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="789" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.76" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2,782,516 samples, 0.02%)</title><rect x="653.2" y="949" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="656.19" y="959.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (2,269,054 samples, 0.02%)</title><rect x="906.1" y="837" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="909.10" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,567,542 samples, 0.04%)</title><rect x="1156.7" y="933" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1159.67" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,309,945 samples, 0.04%)</title><rect x="1115.9" y="805" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1118.88" y="815.5" ></text>
</g>
<g >
<title>ip_rcv_finish (135,585,356 samples, 1.15%)</title><rect x="921.1" y="325" width="13.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="924.11" y="335.5" ></text>
</g>
<g >
<title>el0_interrupt (2,193,841 samples, 0.02%)</title><rect x="847.5" y="869" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="850.50" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,523,746 samples, 0.06%)</title><rect x="1169.5" y="917" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1172.54" y="927.5" ></text>
</g>
<g >
<title>do_pte_missing (6,471,029 samples, 0.06%)</title><rect x="373.6" y="725" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="376.63" y="735.5" ></text>
</g>
<g >
<title>tcp_ack (2,617,348 samples, 0.02%)</title><rect x="1064.1" y="533" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1067.10" y="543.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,954,010 samples, 0.02%)</title><rect x="1151.3" y="837" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1154.34" y="847.5" ></text>
</g>
<g >
<title>rcu_core (2,530,129 samples, 0.02%)</title><rect x="862.2" y="725" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="865.16" y="735.5" ></text>
</g>
<g >
<title>__alloc_pages (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="501" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1143.11" y="511.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (21,146,384 samples, 0.18%)</title><rect x="950.1" y="789" width="2.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="953.07" y="799.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (2,105,951 samples, 0.02%)</title><rect x="296.6" y="693" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="299.55" y="703.5" ></text>
</g>
<g >
<title>bool std::chrono::operator==&lt;long, std::ratio&lt;1l, 1l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (2,887,478 samples, 0.02%)</title><rect x="1140.6" y="869" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1143.56" y="879.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (4,530,437 samples, 0.04%)</title><rect x="295.9" y="741" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="298.88" y="751.5" ></text>
</g>
<g >
<title>neigh_hh_output (159,847,303 samples, 1.36%)</title><rect x="1071.6" y="581" width="16.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1074.56" y="591.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (16,306,184 samples, 0.14%)</title><rect x="1179.8" y="869" width="1.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1182.77" y="879.5" ></text>
</g>
<g >
<title>char const* fmt::v9::detail::parse_replacement_field&lt;char, fmt::v9::detail::vformat_to&lt;char&gt; (87,964,122 samples, 0.75%)</title><rect x="1110.1" y="917" width="8.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1113.07" y="927.5" ></text>
</g>
<g >
<title>__kfree_skb (2,810,116 samples, 0.02%)</title><rect x="750.3" y="501" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="753.28" y="511.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="485" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1154.76" y="495.5" ></text>
</g>
<g >
<title>el0_interrupt (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="677" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1151.64" y="687.5" ></text>
</g>
<g >
<title>__interceptor_memcpy@plt (2,190,230 samples, 0.02%)</title><rect x="168.6" y="949" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="171.65" y="959.5" ></text>
</g>
<g >
<title>__do_softirq (2,383,792 samples, 0.02%)</title><rect x="818.2" y="725" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="821.16" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,511,279 samples, 0.04%)</title><rect x="1143.4" y="741" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1146.44" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (1,813,257 samples, 0.02%)</title><rect x="10.8" y="917" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.78" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,996,181 samples, 0.02%)</title><rect x="1103.9" y="901" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1106.87" y="911.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (4,196,380 samples, 0.04%)</title><rect x="1077.4" y="197" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1080.44" y="207.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;::try_reserve (9,788,393 samples, 0.08%)</title><rect x="1116.5" y="821" width="1.0" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1119.54" y="831.5" ></text>
</g>
<g >
<title>net_rx_action (144,354,148 samples, 1.23%)</title><rect x="920.2" y="421" width="14.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="923.23" y="431.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (12,421,075 samples, 0.11%)</title><rect x="561.9" y="933" width="1.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="564.89" y="943.5" ></text>
</g>
<g >
<title>el1h_64_irq_handler (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="581" width="0.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1151.64" y="591.5" ></text>
</g>
<g >
<title>do_translation_fault (1,535,561 samples, 0.01%)</title><rect x="1064.5" y="853" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1067.52" y="863.5" ></text>
</g>
<g >
<title>move_addr_to_user (2,133,604 samples, 0.02%)</title><rect x="1153.7" y="853" width="0.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1156.74" y="863.5" ></text>
</g>
<g >
<title>tcp_send_ack (13,782,365 samples, 0.12%)</title><rect x="1075.7" y="213" width="1.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1078.66" y="223.5" ></text>
</g>
<g >
<title>ip_local_deliver (1,837,691 samples, 0.02%)</title><rect x="910.2" y="277" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="913.22" y="287.5" ></text>
</g>
<g >
<title>el0_da (8,868,108 samples, 0.08%)</title><rect x="104.0" y="853" width="0.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="106.99" y="863.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (140,323,148 samples, 1.19%)</title><rect x="1072.2" y="373" width="14.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1075.19" y="383.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="757" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1191.51" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,017,230 samples, 0.02%)</title><rect x="1176.8" y="885" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1179.84" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,819,659 samples, 0.02%)</title><rect x="1174.7" y="981" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1177.72" y="991.5" ></text>
</g>
<g >
<title>__folio_throttle_swaprate (1,948,551 samples, 0.02%)</title><rect x="101.0" y="709" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="104.00" y="719.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,764,528 samples, 0.02%)</title><rect x="882.0" y="437" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="885.01" y="447.5" ></text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::advance_to (17,455,550 samples, 0.15%)</title><rect x="1133.9" y="885" width="1.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1136.88" y="895.5" ></text>
</g>
<g >
<title>__lsan::InitializePlatformSpecificModules (1,813,257 samples, 0.02%)</title><rect x="10.8" y="1077" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="13.78" y="1087.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (2,427,793 samples, 0.02%)</title><rect x="106.4" y="549" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="109.43" y="559.5" ></text>
</g>
<g >
<title>do_el0_svc (254,580,658 samples, 2.17%)</title><rect x="1066.3" y="885" width="25.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1069.29" y="895.5" >d..</text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,101,632,598 samples, 9.38%)</title><rect x="954.0" y="933" width="110.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="957.01" y="943.5" >__asan_stack_..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,054,928 samples, 0.05%)</title><rect x="1148.8" y="773" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1151.82" y="783.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (14,524,627 samples, 0.12%)</title><rect x="1166.3" y="869" width="1.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1169.27" y="879.5" ></text>
</g>
<g >
<title>__arm64_sys_read (92,983,678 samples, 0.79%)</title><rect x="17.8" y="901" width="9.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="20.79" y="911.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (8,639,454 samples, 0.07%)</title><rect x="1151.8" y="853" width="0.8" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1154.76" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0@plt (4,438,584 samples, 0.04%)</title><rect x="168.2" y="981" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="171.20" y="991.5" ></text>
</g>
<g >
<title>kmem_cache_free (6,263,705 samples, 0.05%)</title><rect x="926.6" y="149" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="929.62" y="159.5" ></text>
</g>
<g >
<title>do_translation_fault (4,339,647 samples, 0.04%)</title><rect x="105.8" y="757" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="108.75" y="767.5" ></text>
</g>
<g >
<title>___interceptor_memmove (2,006,266 samples, 0.02%)</title><rect x="378.5" y="901" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="381.53" y="911.5" ></text>
</g>
<g >
<title>handle_softirqs (5,890,921 samples, 0.05%)</title><rect x="674.1" y="773" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="677.06" y="783.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,896,715 samples, 0.02%)</title><rect x="169.1" y="757" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="172.08" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3@plt (1,923,085 samples, 0.02%)</title><rect x="306.8" y="997" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="309.76" y="1007.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (11,494,529 samples, 0.10%)</title><rect x="105.8" y="853" width="1.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="108.75" y="863.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (16,737,756 samples, 0.14%)</title><rect x="1147.1" y="869" width="1.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1150.13" y="879.5" ></text>
</g>
<g >
<title>fmt::v9::detail::vformat_to&lt;char&gt; (55,488,133 samples, 0.47%)</title><rect x="1167.9" y="965" width="5.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1170.93" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (20,188,207 samples, 0.17%)</title><rect x="1130.4" y="709" width="2.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1133.40" y="719.5" ></text>
</g>
<g >
<title>tcp_rcv_established (4,056,441 samples, 0.03%)</title><rect x="882.0" y="501" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="885.01" y="511.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (399,090,437 samples, 3.40%)</title><rect x="521.8" y="917" width="40.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="524.81" y="927.5" >__a..</text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (29,208,183 samples, 0.25%)</title><rect x="1169.5" y="933" width="3.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1172.54" y="943.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,557,568 samples, 0.01%)</title><rect x="308.3" y="741" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="311.28" y="751.5" ></text>
</g>
<g >
<title>tcp_write_xmit (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="709" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1110.55" y="719.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (26,726,203 samples, 0.23%)</title><rect x="1178.7" y="885" width="2.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1181.72" y="895.5" ></text>
</g>
<g >
<title>__kfree_skb (1,570,602 samples, 0.01%)</title><rect x="928.5" y="197" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="931.51" y="207.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (4,056,441 samples, 0.03%)</title><rect x="882.0" y="565" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="885.01" y="575.5" ></text>
</g>
<g >
<title>____do_softirq (4,056,441 samples, 0.03%)</title><rect x="882.0" y="741" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="885.01" y="751.5" ></text>
</g>
<g >
<title>sock_put (1,837,691 samples, 0.02%)</title><rect x="910.2" y="213" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="913.22" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2,234,886 samples, 0.02%)</title><rect x="29.0" y="1013" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="31.98" y="1023.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,332,823 samples, 0.04%)</title><rect x="1105.4" y="869" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1108.40" y="879.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="597" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1190.56" y="607.5" ></text>
</g>
<g >
<title>process_backlog (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="485" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1069.74" y="495.5" ></text>
</g>
<g >
<title>do_pte_missing (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="565" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1136.68" y="575.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="805" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1125.11" y="815.5" ></text>
</g>
<g >
<title>el0t_64_irq (1,811,437 samples, 0.02%)</title><rect x="16.1" y="997" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="19.05" y="1007.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (2,126,833 samples, 0.02%)</title><rect x="911.3" y="741" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="914.28" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,597,877 samples, 0.09%)</title><rect x="1114.8" y="837" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1117.81" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,428,732 samples, 0.02%)</title><rect x="1176.4" y="917" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1179.44" y="927.5" ></text>
</g>
<g >
<title>tcp_ack (10,948,505 samples, 0.09%)</title><rect x="1068.1" y="693" width="1.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1071.09" y="703.5" ></text>
</g>
<g >
<title>write (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="757" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1154.76" y="767.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (6,370,553 samples, 0.05%)</title><rect x="1152.0" y="613" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1154.98" y="623.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (79,022,363 samples, 0.67%)</title><rect x="99.6" y="965" width="8.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="102.62" y="975.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1,820,225 samples, 0.02%)</title><rect x="10.6" y="693" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="13.59" y="703.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (6,937,425 samples, 0.06%)</title><rect x="1076.4" y="149" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1079.35" y="159.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,288,914 samples, 0.10%)</title><rect x="1135.6" y="901" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1138.63" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,322,417 samples, 0.03%)</title><rect x="1165.9" y="869" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1168.93" y="879.5" ></text>
</g>
<g >
<title>decltype  (27,942,646 samples, 0.24%)</title><rect x="1158.0" y="965" width="2.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1160.98" y="975.5" ></text>
</g>
<g >
<title>tcp_push (203,128,546 samples, 1.73%)</title><rect x="1070.3" y="741" width="20.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1073.32" y="751.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,853,490 samples, 0.02%)</title><rect x="376.9" y="661" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="379.93" y="671.5" ></text>
</g>
<g >
<title>do_page_fault (2,104,501 samples, 0.02%)</title><rect x="635.8" y="693" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="638.84" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (60,663,568 samples, 0.52%)</title><rect x="1091.9" y="949" width="6.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1094.86" y="959.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (2,020,395 samples, 0.02%)</title><rect x="306.4" y="949" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="309.37" y="959.5" ></text>
</g>
<g >
<title>ip_finish_output (2,193,841 samples, 0.02%)</title><rect x="847.5" y="549" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="850.50" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,832,460 samples, 0.08%)</title><rect x="1152.9" y="885" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1155.86" y="895.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (2,045,875 samples, 0.02%)</title><rect x="657.3" y="885" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="660.29" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,054,928 samples, 0.05%)</title><rect x="1148.8" y="757" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1151.82" y="767.5" ></text>
</g>
<g >
<title>spdlog::logger::log (2,144,875 samples, 0.02%)</title><rect x="13.7" y="1045" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="16.67" y="1055.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (16,306,184 samples, 0.14%)</title><rect x="1179.8" y="821" width="1.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1182.77" y="831.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (13,269,967 samples, 0.11%)</title><rect x="373.6" y="917" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="376.63" y="927.5" ></text>
</g>
<g >
<title>ksys_write (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="629" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1154.76" y="639.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_range_ (4,554,831 samples, 0.04%)</title><rect x="1188.3" y="949" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1191.29" y="959.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="277" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1069.74" y="287.5" ></text>
</g>
<g >
<title>el0_interrupt (8,780,280 samples, 0.07%)</title><rect x="295.9" y="901" width="0.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="298.88" y="911.5" ></text>
</g>
<g >
<title>rb_next (1,761,052 samples, 0.01%)</title><rect x="925.9" y="197" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="928.87" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,339,647 samples, 0.04%)</title><rect x="105.8" y="837" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="108.75" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,188,876 samples, 0.05%)</title><rect x="1110.1" y="885" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1113.07" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,236,388 samples, 0.02%)</title><rect x="1181.4" y="885" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1184.40" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (13,218,889 samples, 0.11%)</title><rect x="1140.8" y="853" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1143.85" y="863.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,937,631 samples, 0.02%)</title><rect x="28.3" y="837" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="31.34" y="847.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="565" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1110.55" y="575.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (8,413,314 samples, 0.07%)</title><rect x="910.2" y="709" width="0.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="913.22" y="719.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (4,511,279 samples, 0.04%)</title><rect x="1143.4" y="773" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1146.44" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,260,114 samples, 0.02%)</title><rect x="1116.3" y="725" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1119.31" y="735.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2,144,025 samples, 0.02%)</title><rect x="168.9" y="933" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="171.87" y="943.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="741" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1103.99" y="751.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (31,297,840 samples, 0.27%)</title><rect x="1114.4" y="869" width="3.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1117.38" y="879.5" ></text>
</g>
<g >
<title>__pte_alloc (2,224,910 samples, 0.02%)</title><rect x="106.0" y="645" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="108.97" y="655.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (2,395,092 samples, 0.02%)</title><rect x="1100.8" y="853" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1103.75" y="863.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (11,426,820 samples, 0.10%)</title><rect x="10.0" y="1109" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1119.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1,695,581 samples, 0.01%)</title><rect x="635.3" y="645" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="638.27" y="655.5" ></text>
</g>
<g >
<title>__pi_clear_page (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="469" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1143.11" y="479.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="629" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1103.99" y="639.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (1,826,454 samples, 0.02%)</title><rect x="375.0" y="901" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="377.96" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,003,944 samples, 0.02%)</title><rect x="1143.9" y="789" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1146.89" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,098,808 samples, 0.02%)</title><rect x="1107.8" y="949" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1110.75" y="959.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2,035,615 samples, 0.02%)</title><rect x="1102.9" y="885" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1105.87" y="895.5" ></text>
</g>
<g >
<title>skb_free_head (4,010,920 samples, 0.03%)</title><rect x="21.4" y="741" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="24.36" y="751.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2,362,817 samples, 0.02%)</title><rect x="1183.3" y="885" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1186.34" y="895.5" ></text>
</g>
<g >
<title>handle_softirqs (4,056,441 samples, 0.03%)</title><rect x="882.0" y="709" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="885.01" y="719.5" ></text>
</g>
<g >
<title>__sk_mem_raise_allocated (2,110,755 samples, 0.02%)</title><rect x="945.7" y="693" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="948.70" y="703.5" ></text>
</g>
<g >
<title>do_mem_abort (22,578,883 samples, 0.19%)</title><rect x="100.3" y="837" width="2.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="103.31" y="847.5" ></text>
</g>
<g >
<title>operator new (21,371,910 samples, 0.18%)</title><rect x="373.6" y="933" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="376.63" y="943.5" ></text>
</g>
<g >
<title>tcp_try_rmem_schedule (2,217,614 samples, 0.02%)</title><rect x="930.6" y="197" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="933.58" y="207.5" ></text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::advance_to (2,031,166 samples, 0.02%)</title><rect x="1167.7" y="949" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1170.73" y="959.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2,617,348 samples, 0.02%)</title><rect x="1064.1" y="645" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1067.10" y="655.5" ></text>
</g>
<g >
<title>char* fmt::v9::format_int::format_unsigned&lt;unsigned int&gt; (6,054,928 samples, 0.05%)</title><rect x="1148.8" y="821" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1151.82" y="831.5" ></text>
</g>
<g >
<title>do_translation_fault (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="757" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1125.11" y="767.5" ></text>
</g>
<g >
<title>std::conditional&lt;std::is_same&lt;char, char&gt;::value, fmt::v9::appender, std::back_insert_iterator&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; &gt;::type fmt::v9::detail::get_iterator&lt;char&gt; (4,334,828 samples, 0.04%)</title><rect x="1109.4" y="933" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1112.39" y="943.5" ></text>
</g>
<g >
<title>__inet_lookup_established (9,059,040 samples, 0.08%)</title><rect x="1073.7" y="245" width="0.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1076.73" y="255.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (11,865,784 samples, 0.10%)</title><rect x="1171.3" y="885" width="1.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1174.29" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,953,273 samples, 0.06%)</title><rect x="1106.7" y="837" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1109.68" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (3,975,758 samples, 0.03%)</title><rect x="1132.4" y="773" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1135.42" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (14,730,518 samples, 0.13%)</title><rect x="307.0" y="965" width="1.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="309.96" y="975.5" ></text>
</g>
<g >
<title>__alloc_skb (2,306,556 samples, 0.02%)</title><rect x="1076.1" y="181" width="0.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1079.12" y="191.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (1,618,079 samples, 0.01%)</title><rect x="10.3" y="821" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.29" y="831.5" ></text>
</g>
<g >
<title>pthread_getspecific@plt (2,148,701 samples, 0.02%)</title><rect x="107.3" y="901" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="110.34" y="911.5" ></text>
</g>
<g >
<title>security_file_permission (4,249,612 samples, 0.04%)</title><rect x="19.8" y="837" width="0.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="22.81" y="847.5" ></text>
</g>
<g >
<title>validate_xmit_skb (6,363,679 samples, 0.05%)</title><rect x="1087.0" y="549" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1089.97" y="559.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,820,225 samples, 0.02%)</title><rect x="10.6" y="805" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.59" y="815.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (2,225,652 samples, 0.02%)</title><rect x="1188.7" y="949" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1191.74" y="959.5" ></text>
</g>
<g >
<title>spdlog::details::full_formatter::format (88,326,662 samples, 0.75%)</title><rect x="1177.5" y="933" width="8.8" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1180.45" y="943.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (13,175,711 samples, 0.11%)</title><rect x="12.3" y="853" width="1.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="15.35" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,237,563 samples, 0.04%)</title><rect x="1132.8" y="725" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1135.82" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3,590,787 samples, 0.03%)</title><rect x="1155.3" y="997" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1158.27" y="1007.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,052,589 samples, 0.07%)</title><rect x="1171.7" y="789" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1174.67" y="799.5" ></text>
</g>
<g >
<title>__alloc_pages (1,481,757 samples, 0.01%)</title><rect x="376.4" y="597" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="379.35" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,314,983 samples, 0.02%)</title><rect x="1152.6" y="885" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1155.62" y="895.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; spdlog::details::fmt_helper::time_fraction&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (8,079,690 samples, 0.07%)</title><rect x="1146.3" y="869" width="0.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1149.32" y="879.5" ></text>
</g>
<g >
<title>handle_mm_fault (4,323,527 samples, 0.04%)</title><rect x="104.4" y="789" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="107.45" y="799.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (12,251,459 samples, 0.10%)</title><rect x="1147.6" y="837" width="1.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1150.58" y="847.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (18,830,329 samples, 0.16%)</title><rect x="11.8" y="1013" width="1.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="14.78" y="1023.5" ></text>
</g>
<g >
<title>vfs_read (83,441,337 samples, 0.71%)</title><rect x="18.8" y="869" width="8.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="21.75" y="879.5" ></text>
</g>
<g >
<title>___interceptor_strlen.part.0 (4,067,177 samples, 0.03%)</title><rect x="299.6" y="965" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="302.57" y="975.5" ></text>
</g>
<g >
<title>el0_da (2,285,173 samples, 0.02%)</title><rect x="374.7" y="837" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="377.73" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (1,992,393 samples, 0.02%)</title><rect x="1103.7" y="917" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1106.67" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,955,832 samples, 0.02%)</title><rect x="819.3" y="917" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="822.30" y="927.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,937,631 samples, 0.02%)</title><rect x="28.3" y="981" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="31.34" y="991.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::default_arg_formatter&lt;char&gt;::operator (74,200,333 samples, 0.63%)</title><rect x="1110.1" y="901" width="7.4" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1113.07" y="911.5" ></text>
</g>
<g >
<title>do_page_fault (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="757" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1103.99" y="767.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (759,966,950 samples, 6.47%)</title><rect x="674.7" y="965" width="76.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="677.65" y="975.5" >std::_Ha..</text>
</g>
<g >
<title>__irq_exit_rcu (7,066,013 samples, 0.06%)</title><rect x="750.3" y="821" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="753.28" y="831.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (2,225,652 samples, 0.02%)</title><rect x="1188.7" y="901" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1191.74" y="911.5" ></text>
</g>
<g >
<title>el0t_64_irq (2,373,698 samples, 0.02%)</title><rect x="1135.4" y="837" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1138.39" y="847.5" ></text>
</g>
<g >
<title>[libfmt.so.9.1.0] (29,446,201 samples, 0.25%)</title><rect x="375.8" y="949" width="2.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="378.78" y="959.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::base_iterator&lt;fmt::v9::appender&gt; (10,924,271 samples, 0.09%)</title><rect x="1121.2" y="869" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1124.22" y="879.5" ></text>
</g>
<g >
<title>__napi_poll (2,617,348 samples, 0.02%)</title><rect x="1064.1" y="725" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1067.10" y="735.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (16,358,452 samples, 0.14%)</title><rect x="1115.9" y="837" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1118.88" y="847.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (4,612,553 samples, 0.04%)</title><rect x="1137.2" y="901" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1140.16" y="911.5" ></text>
</g>
<g >
<title>__sanitizer::internal_allocator (1,426,916 samples, 0.01%)</title><rect x="10.5" y="869" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="13.45" y="879.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="677" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1110.55" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,323,075 samples, 0.02%)</title><rect x="1187.9" y="917" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1190.86" y="927.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (16,745,202 samples, 0.14%)</title><rect x="1184.6" y="885" width="1.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1187.64" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,256,158 samples, 0.05%)</title><rect x="1108.0" y="933" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1110.96" y="943.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="341" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1069.74" y="351.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Put (1,896,715 samples, 0.02%)</title><rect x="169.1" y="949" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="172.08" y="959.5" ></text>
</g>
<g >
<title>memset (2,210,974 samples, 0.02%)</title><rect x="944.9" y="693" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="947.86" y="703.5" ></text>
</g>
<g >
<title>char* fmt::v9::format_int::format_signed&lt;int&gt; (3,883,368 samples, 0.03%)</title><rect x="1184.3" y="885" width="0.3" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1187.25" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,334,828 samples, 0.04%)</title><rect x="1109.4" y="917" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1112.39" y="927.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (53,428,982 samples, 0.45%)</title><rect x="1128.5" y="837" width="5.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1131.51" y="847.5" ></text>
</g>
<g >
<title>____do_softirq (146,435,639 samples, 1.25%)</title><rect x="920.0" y="469" width="14.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="923.02" y="479.5" ></text>
</g>
<g >
<title>operator new (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="901" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1103.99" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (4,080,354 samples, 0.03%)</title><rect x="1168.5" y="917" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1171.52" y="927.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (3,977,849 samples, 0.03%)</title><rect x="635.4" y="853" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="638.44" y="863.5" ></text>
</g>
<g >
<title>sock_read_iter (1,614,213 samples, 0.01%)</title><rect x="18.6" y="869" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="21.59" y="879.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::AllocateBatch (1,618,079 samples, 0.01%)</title><rect x="10.3" y="789" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="13.29" y="799.5" ></text>
</g>
<g >
<title>do_mem_abort (1,896,715 samples, 0.02%)</title><rect x="169.1" y="869" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="172.08" y="879.5" ></text>
</g>
<g >
<title>el0_da (3,681,385 samples, 0.03%)</title><rect x="376.1" y="805" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="379.13" y="815.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (8,052,589 samples, 0.07%)</title><rect x="1171.7" y="821" width="0.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1174.67" y="831.5" ></text>
</g>
<g >
<title>char* fmt::v9::detail::to_pointer&lt;char&gt; (6,567,079 samples, 0.06%)</title><rect x="1111.1" y="869" width="0.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1114.14" y="879.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (4,056,441 samples, 0.03%)</title><rect x="882.0" y="629" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="885.01" y="639.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2,131,230 samples, 0.02%)</title><rect x="900.3" y="597" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="903.33" y="607.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (6,437,758 samples, 0.05%)</title><rect x="376.7" y="821" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="379.69" y="831.5" ></text>
</g>
<g >
<title>free_swap_cache (2,143,892 samples, 0.02%)</title><rect x="296.3" y="693" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="299.34" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,164,882 samples, 0.05%)</title><rect x="1162.3" y="949" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.25" y="959.5" ></text>
</g>
<g >
<title>__ip_finish_output (1,837,691 samples, 0.02%)</title><rect x="910.2" y="565" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="913.22" y="575.5" ></text>
</g>
<g >
<title>el0t_64_sync (6,471,029 samples, 0.06%)</title><rect x="373.6" y="869" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="376.63" y="879.5" ></text>
</g>
<g >
<title>do_pte_missing (1,557,568 samples, 0.01%)</title><rect x="308.3" y="805" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="311.28" y="815.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (2,260,114 samples, 0.02%)</title><rect x="1116.3" y="789" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1119.31" y="799.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,085,595 samples, 0.01%)</title><rect x="10.1" y="933" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.09" y="943.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="965" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1110.55" y="975.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (8,051,142 samples, 0.07%)</title><rect x="1077.0" y="229" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1080.05" y="239.5" ></text>
</g>
<g >
<title>__pi_clear_page (2,034,048 samples, 0.02%)</title><rect x="373.9" y="597" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="376.89" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (6,973,727 samples, 0.06%)</title><rect x="821.1" y="885" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="824.14" y="895.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (4,511,279 samples, 0.04%)</title><rect x="1143.4" y="789" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1146.44" y="799.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt;::end (2,323,075 samples, 0.02%)</title><rect x="1187.9" y="933" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1190.86" y="943.5" ></text>
</g>
<g >
<title>void spdlog::details::fmt_helper::pad3&lt;unsigned int&gt; (3,975,274 samples, 0.03%)</title><rect x="1150.9" y="869" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1153.94" y="879.5" ></text>
</g>
<g >
<title>___interceptor_strrchr.part.0 (1,881,278 samples, 0.02%)</title><rect x="1145.7" y="853" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1148.69" y="863.5" ></text>
</g>
<g >
<title>irq_exit_rcu (7,066,013 samples, 0.06%)</title><rect x="750.3" y="837" width="0.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="753.28" y="847.5" ></text>
</g>
<g >
<title>el0_da (6,471,029 samples, 0.06%)</title><rect x="373.6" y="837" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="376.63" y="847.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (51,356,197 samples, 0.44%)</title><rect x="1155.6" y="1029" width="5.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1158.63" y="1039.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (8,780,280 samples, 0.07%)</title><rect x="295.9" y="853" width="0.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="298.88" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (3,590,787 samples, 0.03%)</title><rect x="1155.3" y="1013" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1158.27" y="1023.5" ></text>
</g>
<g >
<title>get_random_u16 (4,283,335 samples, 0.04%)</title><rect x="27.1" y="901" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="30.13" y="911.5" ></text>
</g>
<g >
<title>__inet_lookup_skb (9,059,040 samples, 0.08%)</title><rect x="1073.7" y="261" width="0.9" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1076.73" y="271.5" ></text>
</g>
<g >
<title>__fdget_pos (5,608,850 samples, 0.05%)</title><rect x="18.0" y="869" width="0.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="21.03" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (7,402,835 samples, 0.06%)</title><rect x="603.2" y="965" width="0.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="606.24" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,652,111 samples, 0.09%)</title><rect x="1112.9" y="837" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1115.90" y="847.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="757" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1110.55" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (136,845,996 samples, 1.16%)</title><rect x="29.5" y="997" width="13.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="32.45" y="1007.5" ></text>
</g>
<g >
<title>__alloc_pages (9,969,659 samples, 0.08%)</title><rect x="913.3" y="661" width="1.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="916.33" y="671.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (34,357,202 samples, 0.29%)</title><rect x="1164.3" y="933" width="3.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1167.28" y="943.5" ></text>
</g>
<g >
<title>rcu_core (2,482,488 samples, 0.02%)</title><rect x="1067.0" y="597" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1069.97" y="607.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2,131,230 samples, 0.02%)</title><rect x="900.3" y="677" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="903.33" y="687.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (21,371,910 samples, 0.18%)</title><rect x="373.6" y="949" width="2.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="376.63" y="959.5" ></text>
</g>
<g >
<title>__check_object_size (13,481,262 samples, 0.11%)</title><rect x="915.9" y="709" width="1.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="918.92" y="719.5" ></text>
</g>
<g >
<title>ktime_get (2,103,193 samples, 0.02%)</title><rect x="25.4" y="741" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="28.41" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::InternalAlloc (3,044,995 samples, 0.03%)</title><rect x="10.3" y="885" width="0.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="13.29" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,726,955 samples, 0.01%)</title><rect x="1176.3" y="933" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1179.27" y="943.5" ></text>
</g>
<g >
<title>__asan::AsanInitInternal (8,554,080 samples, 0.07%)</title><rect x="10.3" y="1093" width="0.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="13.29" y="1103.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (20,188,207 samples, 0.17%)</title><rect x="1130.4" y="789" width="2.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1133.40" y="799.5" ></text>
</g>
<g >
<title>tcp_data_queue (79,625,039 samples, 0.68%)</title><rect x="1078.1" y="229" width="8.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1081.06" y="239.5" ></text>
</g>
<g >
<title>wp_page_copy (2,337,193 samples, 0.02%)</title><rect x="104.2" y="741" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="107.21" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,104,501 samples, 0.02%)</title><rect x="635.8" y="773" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="638.84" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (15,403,164 samples, 0.13%)</title><rect x="1105.8" y="869" width="1.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1108.83" y="879.5" ></text>
</g>
<g >
<title>ip_rcv (4,939,643 samples, 0.04%)</title><rect x="750.3" y="645" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="753.28" y="655.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1,390,367,655 samples, 11.84%)</title><rect x="29.2" y="1013" width="139.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="32.20" y="1023.5" >void std::__cxx11..</text>
</g>
<g >
<title>__schedule (6,772,712 samples, 0.06%)</title><rect x="1066.3" y="709" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1069.29" y="719.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="517" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1151.64" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;&gt; (19,735,987 samples, 0.17%)</title><rect x="1105.4" y="901" width="2.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1108.40" y="911.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (12,251,459 samples, 0.10%)</title><rect x="1147.6" y="773" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1150.58" y="783.5" ></text>
</g>
<g >
<title>__send (528,696,502 samples, 4.50%)</title><rect x="900.9" y="933" width="53.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="903.90" y="943.5" >__send</text>
</g>
<g >
<title>[libc.so.6] (4,865,220 samples, 0.04%)</title><rect x="10.3" y="949" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.29" y="959.5" ></text>
</g>
<g >
<title>tcp_data_queue (2,298,453 samples, 0.02%)</title><rect x="910.8" y="677" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="913.84" y="687.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned@plt (3,528,911 samples, 0.03%)</title><rect x="900.5" y="933" width="0.4" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="903.55" y="943.5" ></text>
</g>
<g >
<title>ip_rcv (131,602,505 samples, 1.12%)</title><rect x="1073.1" y="357" width="13.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1076.07" y="367.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2,383,005 samples, 0.02%)</title><rect x="20.0" y="821" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="23.00" y="831.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (4,345,246 samples, 0.04%)</title><rect x="1170.8" y="901" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1173.85" y="911.5" ></text>
</g>
<g >
<title>nf_hook_slow (2,105,951 samples, 0.02%)</title><rect x="296.6" y="581" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="299.55" y="591.5" ></text>
</g>
<g >
<title>__kfree_skb (12,356,382 samples, 0.11%)</title><rect x="926.4" y="181" width="1.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="929.43" y="191.5" ></text>
</g>
<g >
<title>std::common_type&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::type std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (7,239,121 samples, 0.06%)</title><rect x="1182.2" y="901" width="0.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1185.20" y="911.5" ></text>
</g>
<g >
<title>ip_finish_output (1,837,691 samples, 0.02%)</title><rect x="910.2" y="581" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="913.22" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (92,743,785 samples, 0.79%)</title><rect x="512.5" y="965" width="9.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="515.49" y="975.5" ></text>
</g>
<g >
<title>do_page_fault (4,323,527 samples, 0.04%)</title><rect x="104.4" y="805" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="107.45" y="815.5" ></text>
</g>
<g >
<title>handle_pte_fault (15,880,709 samples, 0.14%)</title><rect x="100.7" y="757" width="1.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="103.74" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (16,306,184 samples, 0.14%)</title><rect x="1179.8" y="773" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1182.77" y="783.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="549" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1190.56" y="559.5" ></text>
</g>
<g >
<title>ip_output (167,754,297 samples, 1.43%)</title><rect x="1070.8" y="645" width="16.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1073.76" y="655.5" ></text>
</g>
<g >
<title>operator new (12,421,075 samples, 0.11%)</title><rect x="561.9" y="917" width="1.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="564.89" y="927.5" ></text>
</g>
<g >
<title>___interceptor_malloc (1,875,603 samples, 0.02%)</title><rect x="11.0" y="1029" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="13.96" y="1039.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (601,896,380 samples, 5.12%)</title><rect x="107.7" y="981" width="60.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="110.74" y="991.5" >__asan..</text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (16,306,184 samples, 0.14%)</title><rect x="1179.8" y="837" width="1.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1182.77" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,322,417 samples, 0.03%)</title><rect x="1165.9" y="853" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1168.93" y="863.5" ></text>
</g>
<g >
<title>alloc_anon_folio (1,481,757 samples, 0.01%)</title><rect x="376.4" y="661" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="379.35" y="671.5" ></text>
</g>
<g >
<title>netif_skb_features (2,234,957 samples, 0.02%)</title><rect x="1087.4" y="533" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1090.39" y="543.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (2,355,573 samples, 0.02%)</title><rect x="945.9" y="757" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="948.91" y="767.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (4,104,971 samples, 0.03%)</title><rect x="1177.0" y="837" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1180.04" y="847.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Put (1,896,715 samples, 0.02%)</title><rect x="169.1" y="933" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="172.08" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (17,455,550 samples, 0.15%)</title><rect x="1133.9" y="853" width="1.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1136.88" y="863.5" ></text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;int&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, int&amp;&gt; (3,960,717 samples, 0.03%)</title><rect x="1154.4" y="1029" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1157.39" y="1039.5" ></text>
</g>
<g >
<title>_IO_fwrite (1,930,221 samples, 0.02%)</title><rect x="1188.1" y="917" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1191.09" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (12,590,125 samples, 0.11%)</title><rect x="1142.2" y="805" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1145.17" y="815.5" ></text>
</g>
<g >
<title>operator new (1,986,011 samples, 0.02%)</title><rect x="1117.3" y="773" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1120.32" y="783.5" ></text>
</g>
<g >
<title>vfs_write (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="693" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1191.51" y="703.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (2,129,527 samples, 0.02%)</title><rect x="750.6" y="469" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="753.56" y="479.5" ></text>
</g>
<g >
<title>__fdget_pos (2,319,278 samples, 0.02%)</title><rect x="17.8" y="885" width="0.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="20.79" y="895.5" ></text>
</g>
<g >
<title>set_ptes.isra.0 (1,848,342 samples, 0.02%)</title><rect x="374.1" y="693" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="377.09" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,233,593 samples, 0.05%)</title><rect x="1099.5" y="917" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1102.46" y="927.5" ></text>
</g>
<g >
<title>__sk_mem_raise_allocated (2,384,324 samples, 0.02%)</title><rect x="1085.8" y="181" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1088.82" y="191.5" ></text>
</g>
<g >
<title>tty_write (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="677" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1191.51" y="687.5" ></text>
</g>
<g >
<title>do_page_fault (1,535,561 samples, 0.01%)</title><rect x="1064.5" y="837" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1067.52" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,076,832 samples, 0.03%)</title><rect x="1158.5" y="933" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1161.46" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (12,590,125 samples, 0.11%)</title><rect x="1142.2" y="821" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1145.17" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,031,166 samples, 0.02%)</title><rect x="1167.7" y="917" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1170.73" y="927.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (6,411,890 samples, 0.05%)</title><rect x="1150.3" y="821" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1153.29" y="831.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1,827,821 samples, 0.02%)</title><rect x="376.5" y="645" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="379.50" y="655.5" ></text>
</g>
<g >
<title>handle_softirqs (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="533" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1069.74" y="543.5" ></text>
</g>
<g >
<title>bool std::chrono::operator==&lt;long, std::ratio&lt;1l, 1l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (4,006,681 samples, 0.03%)</title><rect x="1137.9" y="885" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1140.90" y="895.5" ></text>
</g>
<g >
<title>__sanitizer::Symbolizer::LateInitialize (1,875,603 samples, 0.02%)</title><rect x="11.0" y="1077" width="0.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="13.96" y="1087.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (4,710,545 samples, 0.04%)</title><rect x="106.4" y="677" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="109.43" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (13,218,889 samples, 0.11%)</title><rect x="1140.8" y="837" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1143.85" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,701,184 samples, 0.05%)</title><rect x="1174.1" y="965" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1177.15" y="975.5" ></text>
</g>
<g >
<title>do_mem_abort (1,944,255 samples, 0.02%)</title><rect x="1163.7" y="885" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1166.73" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (4,567,542 samples, 0.04%)</title><rect x="1156.7" y="965" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1159.67" y="975.5" ></text>
</g>
<g >
<title>folio_add_lru (1,651,144 samples, 0.01%)</title><rect x="43.0" y="773" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="46.03" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (4,040,740 samples, 0.03%)</title><rect x="168.9" y="997" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="171.87" y="1007.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (2,186,362 samples, 0.02%)</title><rect x="25.0" y="757" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="27.96" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,132,224 samples, 0.04%)</title><rect x="1102.5" y="917" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1105.46" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,295,994 samples, 0.02%)</title><rect x="1173.5" y="981" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1176.50" y="991.5" ></text>
</g>
<g >
<title>tlb_remove_table_rcu (2,042,202 samples, 0.02%)</title><rect x="674.2" y="709" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="677.23" y="719.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="789" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1143.11" y="799.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (2,131,230 samples, 0.02%)</title><rect x="900.3" y="869" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="903.33" y="879.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,695,581 samples, 0.01%)</title><rect x="635.3" y="837" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="638.27" y="847.5" ></text>
</g>
<g >
<title>__run_timers (2,383,792 samples, 0.02%)</title><rect x="818.2" y="677" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="821.16" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,898,248 samples, 0.05%)</title><rect x="1103.1" y="901" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1106.08" y="911.5" ></text>
</g>
<g >
<title>call_timer_fn (1,519,827 samples, 0.01%)</title><rect x="1064.4" y="693" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1067.36" y="703.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2,782,516 samples, 0.02%)</title><rect x="653.2" y="869" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="656.19" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,464,638 samples, 0.02%)</title><rect x="1160.8" y="1013" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1163.79" y="1023.5" ></text>
</g>
<g >
<title>el0_da (1,883,141 samples, 0.02%)</title><rect x="306.6" y="933" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="309.57" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,036,713 samples, 0.07%)</title><rect x="1189.0" y="949" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1191.97" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (18,759,376 samples, 0.16%)</title><rect x="1128.5" y="805" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1131.51" y="815.5" ></text>
</g>
<g >
<title>invoke_syscall (16,844,004 samples, 0.14%)</title><rect x="12.0" y="949" width="1.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="14.98" y="959.5" ></text>
</g>
<g >
<title>expire_timers (1,519,827 samples, 0.01%)</title><rect x="1064.4" y="709" width="0.1" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1067.36" y="719.5" ></text>
</g>
<g >
<title>std::__str_hash_base&lt;char, std::allocator&lt;char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (1,736,595 samples, 0.01%)</title><rect x="899.1" y="917" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="902.07" y="927.5" ></text>
</g>
<g >
<title>do_softirq (144,476,671 samples, 1.23%)</title><rect x="1071.8" y="533" width="14.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1074.78" y="543.5" ></text>
</g>
<g >
<title>tcp_do_parse_auth_options (1,951,182 samples, 0.02%)</title><rect x="922.8" y="245" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="925.75" y="255.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (2,193,841 samples, 0.02%)</title><rect x="847.5" y="629" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="850.50" y="639.5" ></text>
</g>
<g >
<title>ip_finish_output2 (167,754,297 samples, 1.43%)</title><rect x="1070.8" y="597" width="16.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1073.76" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,234,437 samples, 0.02%)</title><rect x="1139.7" y="821" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1142.65" y="831.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (12,421,075 samples, 0.11%)</title><rect x="561.9" y="885" width="1.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="564.89" y="895.5" ></text>
</g>
<g >
<title>tty_write (6,370,553 samples, 0.05%)</title><rect x="1152.0" y="629" width="0.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1154.98" y="639.5" ></text>
</g>
<g >
<title>__run_timers (2,105,951 samples, 0.02%)</title><rect x="296.6" y="757" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="299.55" y="767.5" ></text>
</g>
<g >
<title>loopback_xmit (2,289,846 samples, 0.02%)</title><rect x="1086.7" y="549" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1089.74" y="559.5" ></text>
</g>
<g >
<title>__asan::asan_malloc (1,875,603 samples, 0.02%)</title><rect x="11.0" y="1013" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="13.96" y="1023.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (2,240,182 samples, 0.02%)</title><rect x="375.4" y="885" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="378.37" y="895.5" ></text>
</g>
<g >
<title>ip_finish_output (168,868,732 samples, 1.44%)</title><rect x="919.1" y="613" width="17.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="922.14" y="623.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (16,831,129 samples, 0.14%)</title><rect x="928.7" y="165" width="1.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="931.67" y="175.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,811,810 samples, 0.06%)</title><rect x="1159.9" y="885" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1162.89" y="895.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (254,580,658 samples, 2.17%)</title><rect x="1066.3" y="837" width="25.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1069.29" y="847.5" >_..</text>
</g>
<g >
<title>do_translation_fault (2,104,501 samples, 0.02%)</title><rect x="635.8" y="709" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="638.84" y="719.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,810,116 samples, 0.02%)</title><rect x="750.3" y="453" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="753.28" y="463.5" ></text>
</g>
<g >
<title>write (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="837" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1191.51" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,213,708 samples, 0.09%)</title><rect x="1158.9" y="901" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1161.87" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,957,359 samples, 0.02%)</title><rect x="1146.5" y="837" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1149.51" y="847.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,695,581 samples, 0.01%)</title><rect x="635.3" y="709" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="638.27" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,996,181 samples, 0.02%)</title><rect x="1103.9" y="917" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1106.87" y="927.5" ></text>
</g>
<g >
<title>operator delete (1,932,701 samples, 0.02%)</title><rect x="358.2" y="965" width="0.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="361.21" y="975.5" ></text>
</g>
<g >
<title>__do_softirq (2,193,841 samples, 0.02%)</title><rect x="847.5" y="773" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="850.50" y="783.5" ></text>
</g>
<g >
<title>el0t_64_irq (8,780,280 samples, 0.07%)</title><rect x="295.9" y="949" width="0.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="298.88" y="959.5" ></text>
</g>
<g >
<title>tcp_data_ready (2,298,453 samples, 0.02%)</title><rect x="910.8" y="661" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="913.84" y="671.5" ></text>
</g>
<g >
<title>__alloc_skb (48,868,807 samples, 0.42%)</title><rect x="940.2" y="709" width="4.9" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="943.18" y="719.5" ></text>
</g>
<g >
<title>validate_xmit_skb (4,603,422 samples, 0.04%)</title><rect x="935.4" y="533" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="938.40" y="543.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (11,494,529 samples, 0.10%)</title><rect x="105.8" y="869" width="1.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="108.75" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,314,983 samples, 0.02%)</title><rect x="1152.6" y="901" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1155.62" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1,392,602,541 samples, 11.85%)</title><rect x="29.0" y="1029" width="139.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="31.98" y="1039.5" >std::__cxx11::bas..</text>
</g>
<g >
<title>std::common_type&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::type std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1,957,359 samples, 0.02%)</title><rect x="1146.5" y="853" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1149.51" y="863.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (1,944,255 samples, 0.02%)</title><rect x="1163.7" y="757" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1166.73" y="767.5" ></text>
</g>
<g >
<title>do_el0_svc (101,308,765 samples, 0.86%)</title><rect x="17.4" y="949" width="10.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="20.39" y="959.5" ></text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;int&amp;&gt;::type&gt;::type, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (11,288,914 samples, 0.10%)</title><rect x="1135.6" y="949" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1138.63" y="959.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (2,225,652 samples, 0.02%)</title><rect x="1188.7" y="917" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1191.74" y="927.5" ></text>
</g>
<g >
<title>vma_alloc_folio (2,034,048 samples, 0.02%)</title><rect x="373.9" y="661" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="376.89" y="671.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (17,101,404 samples, 0.15%)</title><rect x="1142.2" y="837" width="1.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1145.17" y="847.5" ></text>
</g>
<g >
<title>___interceptor_fflush (1,746,397 samples, 0.01%)</title><rect x="1137.0" y="901" width="0.2" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1139.99" y="911.5" ></text>
</g>
<g >
<title>call_on_irq_stack (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="773" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1190.56" y="783.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; spdlog::details::to_string_view&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (6,528,909 samples, 0.06%)</title><rect x="1161.0" y="1013" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1164.03" y="1023.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (1,827,821 samples, 0.02%)</title><rect x="376.5" y="677" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="379.50" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,697,218 samples, 0.02%)</title><rect x="1137.6" y="869" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1140.62" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (2,034,745 samples, 0.02%)</title><rect x="1140.4" y="869" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1143.35" y="879.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (6,154,690 samples, 0.05%)</title><rect x="1174.7" y="997" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1177.72" y="1007.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (12,369,275 samples, 0.11%)</title><rect x="1166.3" y="837" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1169.27" y="847.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (18,442,047 samples, 0.16%)</title><rect x="926.0" y="197" width="1.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="929.05" y="207.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (143,731,801 samples, 1.22%)</title><rect x="1175.3" y="981" width="14.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1178.34" y="991.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (1,992,393 samples, 0.02%)</title><rect x="1103.7" y="933" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1106.67" y="943.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (2,082,032 samples, 0.02%)</title><rect x="1160.6" y="885" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1163.58" y="895.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (6,437,758 samples, 0.05%)</title><rect x="376.7" y="853" width="0.6" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="379.69" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,885,427 samples, 0.02%)</title><rect x="1146.3" y="837" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1149.32" y="847.5" ></text>
</g>
<g >
<title>do_mem_abort (6,471,029 samples, 0.06%)</title><rect x="373.6" y="821" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="376.63" y="831.5" ></text>
</g>
<g >
<title>__sock_sendmsg (252,014,425 samples, 2.15%)</title><rect x="1066.3" y="805" width="25.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1069.29" y="815.5" >_..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,597,877 samples, 0.09%)</title><rect x="1114.8" y="821" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1117.81" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (5,579,037 samples, 0.05%)</title><rect x="1182.4" y="885" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1185.37" y="895.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,944,255 samples, 0.02%)</title><rect x="1163.7" y="933" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1166.73" y="943.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (6,352,923 samples, 0.05%)</title><rect x="1157.1" y="997" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1160.12" y="1007.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="869" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1110.55" y="879.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,557,568 samples, 0.01%)</title><rect x="308.3" y="853" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="311.28" y="863.5" ></text>
</g>
<g >
<title>ep_poll (16,844,004 samples, 0.14%)</title><rect x="12.0" y="885" width="1.7" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="14.98" y="895.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2,252,561 samples, 0.02%)</title><rect x="900.1" y="917" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="903.11" y="927.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,144,875 samples, 0.02%)</title><rect x="13.7" y="917" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.67" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (4,006,681 samples, 0.03%)</title><rect x="1137.9" y="869" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1140.90" y="879.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (5,906,722 samples, 0.05%)</title><rect x="1116.7" y="773" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1119.73" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (4,236,904 samples, 0.04%)</title><rect x="1146.7" y="805" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1149.71" y="815.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (6,798,938 samples, 0.06%)</title><rect x="374.3" y="885" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="377.28" y="895.5" ></text>
</g>
<g >
<title>rcu_core (2,126,370 samples, 0.02%)</title><rect x="750.8" y="709" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="753.78" y="719.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (2,284,668 samples, 0.02%)</title><rect x="944.6" y="677" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="947.63" y="687.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,020,395 samples, 0.02%)</title><rect x="306.4" y="901" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="309.37" y="911.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (2,144,875 samples, 0.02%)</title><rect x="13.7" y="1013" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.67" y="1023.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (4,203,145 samples, 0.04%)</title><rect x="1157.1" y="917" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1160.12" y="927.5" ></text>
</g>
<g >
<title>__tcp_select_window (2,186,362 samples, 0.02%)</title><rect x="25.0" y="741" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="27.96" y="751.5" ></text>
</g>
<g >
<title>__begin_current_label_crit_section (1,866,607 samples, 0.02%)</title><rect x="19.8" y="821" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="22.81" y="831.5" ></text>
</g>
<g >
<title>__folio_put (2,042,202 samples, 0.02%)</title><rect x="674.2" y="677" width="0.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="677.23" y="687.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (135,695,088 samples, 1.16%)</title><rect x="1175.3" y="965" width="13.7" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1178.34" y="975.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,193,841 samples, 0.02%)</title><rect x="847.5" y="837" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="850.50" y="847.5" ></text>
</g>
<g >
<title>el0t_64_sync (518,679,006 samples, 4.42%)</title><rect x="901.9" y="917" width="52.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="904.91" y="927.5" >el0t_..</text>
</g>
<g >
<title>rw_verify_area (12,482,074 samples, 0.11%)</title><rect x="19.0" y="853" width="1.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="21.99" y="863.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; spdlog::details::fmt_helper::time_fraction&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (17,638,821 samples, 0.15%)</title><rect x="1181.8" y="917" width="1.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1184.80" y="927.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (7,103,608 samples, 0.06%)</title><rect x="1088.9" y="677" width="0.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1091.91" y="687.5" ></text>
</g>
<g >
<title>____do_softirq (5,890,921 samples, 0.05%)</title><rect x="674.1" y="805" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="677.06" y="815.5" ></text>
</g>
<g >
<title>tcp_options_write (2,375,157 samples, 0.02%)</title><rect x="1089.6" y="693" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1092.62" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (6,091,765 samples, 0.05%)</title><rect x="1155.6" y="981" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1158.63" y="991.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (4,085,743 samples, 0.03%)</title><rect x="1173.7" y="981" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1176.74" y="991.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,726,955 samples, 0.01%)</title><rect x="1176.3" y="917" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1179.27" y="927.5" ></text>
</g>
<g >
<title>do_translation_fault (1,883,141 samples, 0.02%)</title><rect x="306.6" y="901" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="309.57" y="911.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (6,119,487 samples, 0.05%)</title><rect x="21.2" y="773" width="0.6" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="24.15" y="783.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,651,144 samples, 0.01%)</title><rect x="43.0" y="869" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="46.03" y="879.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (2,020,395 samples, 0.02%)</title><rect x="306.4" y="597" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="309.37" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;int, true, false&gt;::operator++ (8,725,220 samples, 0.07%)</title><rect x="829.8" y="981" width="0.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="832.77" y="991.5" ></text>
</g>
<g >
<title>__netif_receive_skb (135,585,356 samples, 1.15%)</title><rect x="921.1" y="373" width="13.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="924.11" y="383.5" ></text>
</g>
<g >
<title>el0t_64_sync (4,590,971 samples, 0.04%)</title><rect x="636.1" y="757" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="639.05" y="767.5" ></text>
</g>
<g >
<title>do_pte_missing (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="677" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1125.11" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,213,708 samples, 0.09%)</title><rect x="1158.9" y="885" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1161.87" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (2,016,223 samples, 0.02%)</title><rect x="819.1" y="917" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="822.10" y="927.5" ></text>
</g>
<g >
<title>do_translation_fault (1,557,568 samples, 0.01%)</title><rect x="308.3" y="885" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="311.28" y="895.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (2,155,352 samples, 0.02%)</title><rect x="1167.5" y="789" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1170.51" y="799.5" ></text>
</g>
<g >
<title>tcp_current_mss (2,263,834 samples, 0.02%)</title><rect x="939.7" y="709" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="942.72" y="719.5" ></text>
</g>
<g >
<title>operator delete (3,944,743 samples, 0.03%)</title><rect x="358.0" y="981" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="361.01" y="991.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (1,875,603 samples, 0.02%)</title><rect x="11.0" y="933" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="13.96" y="943.5" ></text>
</g>
<g >
<title>net_rx_action (142,409,229 samples, 1.21%)</title><rect x="1072.0" y="437" width="14.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1074.98" y="447.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (6,082,201 samples, 0.05%)</title><rect x="103.4" y="885" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="106.38" y="895.5" ></text>
</g>
<g >
<title>__netif_rx (2,394,600 samples, 0.02%)</title><rect x="1086.3" y="517" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1089.29" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1,845,520 samples, 0.02%)</title><rect x="657.7" y="949" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="660.70" y="959.5" ></text>
</g>
<g >
<title>tcp_data_queue (4,056,441 samples, 0.03%)</title><rect x="882.0" y="485" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="885.01" y="495.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (2,034,048 samples, 0.02%)</title><rect x="373.9" y="645" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="376.89" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;1, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, true&gt;::_M_cget (2,288,940 samples, 0.02%)</title><rect x="898.8" y="901" width="0.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="901.84" y="911.5" ></text>
</g>
<g >
<title>_IO_file_doallocate (2,144,875 samples, 0.02%)</title><rect x="13.7" y="821" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="16.67" y="831.5" ></text>
</g>
<g >
<title>call_timer_fn (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="661" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1190.56" y="671.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (2,152,664 samples, 0.02%)</title><rect x="101.2" y="709" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="104.19" y="719.5" ></text>
</g>
<g >
<title>el0_da (1,695,581 samples, 0.01%)</title><rect x="635.3" y="805" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="638.27" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,870,063 samples, 0.03%)</title><rect x="1161.7" y="965" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1164.69" y="975.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (2,016,223 samples, 0.02%)</title><rect x="819.1" y="949" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="822.10" y="959.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2,163,452 samples, 0.02%)</title><rect x="674.4" y="757" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="677.44" y="767.5" ></text>
</g>
<g >
<title>release_sock (35,353,018 samples, 0.30%)</title><rect x="1066.3" y="757" width="3.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1069.29" y="767.5" ></text>
</g>
<g >
<title>do_mem_abort (1,846,251 samples, 0.02%)</title><rect x="10.1" y="981" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="13.09" y="991.5" ></text>
</g>
<g >
<title>do_page_fault (1,827,821 samples, 0.02%)</title><rect x="376.5" y="773" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="379.50" y="783.5" ></text>
</g>
<g >
<title>get_vma_policy (2,487,514 samples, 0.02%)</title><rect x="101.4" y="677" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="104.41" y="687.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="821" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1191.51" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (13,225,522 samples, 0.11%)</title><rect x="1104.1" y="901" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1107.07" y="911.5" ></text>
</g>
<g >
<title>netif_rx_internal (4,227,653 samples, 0.04%)</title><rect x="934.7" y="485" width="0.5" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="937.73" y="495.5" ></text>
</g>
<g >
<title>void spdlog::logger::log&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (455,760,084 samples, 3.88%)</title><rect x="1108.0" y="981" width="45.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1110.96" y="991.5" >void..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (577,395,423 samples, 4.92%)</title><rect x="454.2" y="949" width="58.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="457.24" y="959.5" >__asan..</text>
</g>
<g >
<title>el0t_64_irq_handler (4,623,153 samples, 0.04%)</title><rect x="817.9" y="853" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="820.93" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (757,349,925 samples, 6.45%)</title><rect x="674.9" y="949" width="76.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="677.92" y="959.5" >std::__d..</text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (2,519,183 samples, 0.02%)</title><rect x="1139.4" y="805" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1142.40" y="815.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,846,251 samples, 0.02%)</title><rect x="10.1" y="1013" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="13.09" y="1023.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,535,561 samples, 0.01%)</title><rect x="1064.5" y="917" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1067.52" y="927.5" ></text>
</g>
<g >
<title>el0_da (1,557,568 samples, 0.01%)</title><rect x="308.3" y="917" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="311.28" y="927.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="709" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1125.11" y="719.5" ></text>
</g>
<g >
<title>__memcg_slab_free_hook (1,764,528 samples, 0.02%)</title><rect x="882.0" y="421" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="885.01" y="431.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (49,041,562 samples, 0.42%)</title><rect x="20.7" y="789" width="4.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="23.70" y="799.5" ></text>
</g>
<g >
<title>__sys_accept4 (6,474,014 samples, 0.06%)</title><rect x="1153.7" y="885" width="0.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1156.74" y="895.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (133,366,243 samples, 1.14%)</title><rect x="921.1" y="277" width="13.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="924.11" y="287.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (2,556,203 samples, 0.02%)</title><rect x="1069.8" y="757" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1072.84" y="767.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="725" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1103.99" y="735.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="613" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1143.11" y="623.5" ></text>
</g>
<g >
<title>do_accept (6,474,014 samples, 0.06%)</title><rect x="1153.7" y="869" width="0.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1156.74" y="879.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (4,236,904 samples, 0.04%)</title><rect x="1146.7" y="837" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1149.71" y="847.5" ></text>
</g>
<g >
<title>do_anonymous_page (4,339,647 samples, 0.04%)</title><rect x="105.8" y="661" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="108.75" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,345,246 samples, 0.04%)</title><rect x="1170.8" y="885" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1173.85" y="895.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char*, char*&gt; (4,237,563 samples, 0.04%)</title><rect x="1132.8" y="789" width="0.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1135.82" y="799.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (2,519,183 samples, 0.02%)</title><rect x="1139.4" y="837" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1142.40" y="847.5" ></text>
</g>
<g >
<title>el0_interrupt (2,131,230 samples, 0.02%)</title><rect x="900.3" y="853" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="903.33" y="863.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,163,265 samples, 0.02%)</title><rect x="377.1" y="741" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="380.11" y="751.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,085,595 samples, 0.01%)</title><rect x="10.1" y="917" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.09" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (134,632,860 samples, 1.15%)</title><rect x="29.7" y="981" width="13.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="32.68" y="991.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,922,835 samples, 0.02%)</title><rect x="1114.2" y="837" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1117.18" y="847.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2,329,730 samples, 0.02%)</title><rect x="935.9" y="549" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="938.87" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,232,715 samples, 0.04%)</title><rect x="1156.2" y="949" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1159.24" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (640,674,069 samples, 5.45%)</title><rect x="43.2" y="997" width="64.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="46.20" y="1007.5" >std::__..</text>
</g>
<g >
<title>tcp_send_ack (1,519,827 samples, 0.01%)</title><rect x="1064.4" y="645" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1067.36" y="655.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (6,716,985 samples, 0.06%)</title><rect x="1183.6" y="917" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1186.58" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;int, false&gt;::_M_incr (6,642,908 samples, 0.06%)</title><rect x="830.0" y="965" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="832.98" y="975.5" ></text>
</g>
<g >
<title>__arm64_sys_accept (6,474,014 samples, 0.06%)</title><rect x="1153.7" y="901" width="0.7" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1156.74" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,233,593 samples, 0.05%)</title><rect x="1099.5" y="933" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1102.46" y="943.5" ></text>
</g>
<g >
<title>__do_softirq (2,482,488 samples, 0.02%)</title><rect x="1067.0" y="645" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1069.97" y="655.5" ></text>
</g>
<g >
<title>call_on_irq_stack (5,744,633 samples, 0.05%)</title><rect x="1063.9" y="805" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1066.94" y="815.5" ></text>
</g>
<g >
<title>ip_queue_xmit (6,937,425 samples, 0.06%)</title><rect x="1076.4" y="165" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1079.35" y="175.5" ></text>
</g>
<g >
<title>operator delete (40,232,178 samples, 0.34%)</title><rect x="653.7" y="933" width="4.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="656.66" y="943.5" ></text>
</g>
<g >
<title>schedule (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="645" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1151.64" y="655.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2,125,175 samples, 0.02%)</title><rect x="1088.0" y="693" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1091.05" y="703.5" ></text>
</g>
<g >
<title>handle_mm_fault (4,339,647 samples, 0.04%)</title><rect x="105.8" y="725" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="108.75" y="735.5" ></text>
</g>
<g >
<title>call_on_irq_stack (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="501" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1151.64" y="511.5" ></text>
</g>
<g >
<title>do_read_fault (1,085,595 samples, 0.01%)</title><rect x="10.1" y="869" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.09" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,832,460 samples, 0.08%)</title><rect x="1152.9" y="901" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1155.86" y="911.5" ></text>
</g>
<g >
<title>rcu_all_qs (2,822,333 samples, 0.02%)</title><rect x="944.3" y="661" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="947.35" y="671.5" ></text>
</g>
<g >
<title>vfs_write (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="613" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1154.76" y="623.5" ></text>
</g>
<g >
<title>iterate_tty_write (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="645" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1191.51" y="655.5" ></text>
</g>
<g >
<title>do_el0_svc (475,307,956 samples, 4.05%)</title><rect x="906.1" y="869" width="47.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="909.10" y="879.5" >do_e..</text>
</g>
<g >
<title>ip_local_deliver (2,020,395 samples, 0.02%)</title><rect x="306.4" y="677" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="309.37" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,743,150 samples, 0.01%)</title><rect x="1162.1" y="949" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.08" y="959.5" ></text>
</g>
<g >
<title>skb_release_data (4,206,950 samples, 0.04%)</title><rect x="927.3" y="165" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="930.25" y="175.5" ></text>
</g>
<g >
<title>__kfree_skb (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="309" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1069.74" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="597" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1136.68" y="607.5" ></text>
</g>
<g >
<title>do_mem_abort (1,481,757 samples, 0.01%)</title><rect x="376.4" y="789" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="379.35" y="799.5" ></text>
</g>
<g >
<title>do_page_fault (1,557,568 samples, 0.01%)</title><rect x="308.3" y="869" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="311.28" y="879.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::parse_client_command (9,796,223,956 samples, 83.39%)</title><rect x="169.7" y="1029" width="984.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="172.71" y="1039.5" >tt::chat::server::EpollServer::parse_client_command</text>
</g>
<g >
<title>__asan_stack_malloc_0 (13,225,522 samples, 0.11%)</title><rect x="1104.1" y="885" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1107.07" y="895.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_client_data (11,347,473,493 samples, 96.60%)</title><rect x="13.9" y="1045" width="1139.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="16.89" y="1055.5" >tt::chat::server::EpollServer::handle_client_data</text>
</g>
<g >
<title>__el0_irq_handler_common (2,373,698 samples, 0.02%)</title><rect x="1135.4" y="805" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1138.39" y="815.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1,837,691 samples, 0.02%)</title><rect x="910.2" y="629" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="913.22" y="639.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="693" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1151.64" y="703.5" ></text>
</g>
<g >
<title>__sk_mem_reduce_allocated (1,802,168 samples, 0.02%)</title><rect x="24.8" y="757" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="27.78" y="767.5" ></text>
</g>
<g >
<title>pty_write (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="597" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1191.51" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,476,839 samples, 0.05%)</title><rect x="819.5" y="933" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="822.50" y="943.5" ></text>
</g>
<g >
<title>__libc_start_main (11,735,661,425 samples, 99.90%)</title><rect x="11.2" y="1109" width="1178.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="14.15" y="1119.5" >__libc_start_main</text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,246,910 samples, 0.02%)</title><rect x="1189.8" y="1013" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.77" y="1023.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,697,218 samples, 0.02%)</title><rect x="1137.6" y="885" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1140.62" y="895.5" ></text>
</g>
<g >
<title>el0_svc (518,679,006 samples, 4.42%)</title><rect x="901.9" y="885" width="52.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="904.91" y="895.5" >el0_svc</text>
</g>
<g >
<title>process_backlog (4,939,643 samples, 0.04%)</title><rect x="750.3" y="693" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="753.28" y="703.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="821" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1125.11" y="831.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char*, char*&gt; (11,414,523 samples, 0.10%)</title><rect x="1144.1" y="805" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1147.09" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,883,368 samples, 0.03%)</title><rect x="1184.3" y="821" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1187.25" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (4,232,715 samples, 0.04%)</title><rect x="1156.2" y="981" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1159.24" y="991.5" ></text>
</g>
<g >
<title>__do_softirq (1,837,691 samples, 0.02%)</title><rect x="910.2" y="421" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="913.22" y="431.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,570,602 samples, 0.01%)</title><rect x="928.5" y="165" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="931.51" y="175.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (187,320,292 samples, 1.59%)</title><rect x="918.5" y="677" width="18.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="921.54" y="687.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,193,841 samples, 0.02%)</title><rect x="847.5" y="821" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="850.50" y="831.5" ></text>
</g>
<g >
<title>___interceptor_fwrite.part.0 (4,554,831 samples, 0.04%)</title><rect x="1188.3" y="933" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1191.29" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (166,695,901 samples, 1.42%)</title><rect x="865.7" y="901" width="16.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="868.67" y="911.5" ></text>
</g>
<g >
<title>sk_reset_timer (7,103,608 samples, 0.06%)</title><rect x="1088.9" y="645" width="0.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1091.91" y="655.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="533" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1136.68" y="543.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,528,909 samples, 0.06%)</title><rect x="1161.0" y="997" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1164.03" y="1007.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,144,875 samples, 0.02%)</title><rect x="13.7" y="853" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.67" y="863.5" ></text>
</g>
<g >
<title>el0_svc (6,370,553 samples, 0.05%)</title><rect x="1152.0" y="741" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1154.98" y="751.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="613" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1136.68" y="623.5" ></text>
</g>
<g >
<title>__alloc_skb (4,530,154 samples, 0.04%)</title><rect x="1091.1" y="725" width="0.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1094.15" y="735.5" ></text>
</g>
<g >
<title>rmqueue (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="549" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1125.11" y="559.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2,617,348 samples, 0.02%)</title><rect x="1064.1" y="613" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1067.10" y="623.5" ></text>
</g>
<g >
<title>process_backlog (137,815,788 samples, 1.17%)</title><rect x="920.9" y="389" width="13.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="923.89" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (30,111,252 samples, 0.26%)</title><rect x="1157.8" y="981" width="3.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1160.76" y="991.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="581" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1136.68" y="591.5" ></text>
</g>
<g >
<title>net_rx_action (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="437" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1151.64" y="447.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (4,497,056 samples, 0.04%)</title><rect x="899.9" y="933" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="902.88" y="943.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2,020,395 samples, 0.02%)</title><rect x="306.4" y="661" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="309.37" y="671.5" ></text>
</g>
<g >
<title>el0t_64_sync (259,225,596 samples, 2.21%)</title><rect x="1065.8" y="933" width="26.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1068.82" y="943.5" >e..</text>
</g>
<g >
<title>tcp_cleanup_rbuf (2,186,362 samples, 0.02%)</title><rect x="25.0" y="773" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="27.96" y="783.5" ></text>
</g>
<g >
<title>____do_softirq (2,193,841 samples, 0.02%)</title><rect x="847.5" y="789" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="850.50" y="799.5" ></text>
</g>
<g >
<title>tcp_grow_window (2,229,276 samples, 0.02%)</title><rect x="930.4" y="197" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="933.36" y="207.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (8,140,369 samples, 0.07%)</title><rect x="1185.5" y="837" width="0.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1188.51" y="847.5" ></text>
</g>
<g >
<title>__do_softirq (146,435,639 samples, 1.25%)</title><rect x="920.0" y="453" width="14.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="923.02" y="463.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="709" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1136.68" y="719.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (164,312,098 samples, 1.40%)</title><rect x="919.4" y="549" width="16.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="922.36" y="559.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Put (8,108,147 samples, 0.07%)</title><rect x="656.7" y="901" width="0.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="659.68" y="911.5" ></text>
</g>
<g >
<title>thp_get_unmapped_area (2,140,090 samples, 0.02%)</title><rect x="636.1" y="581" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="639.05" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (16,860,914 samples, 0.14%)</title><rect x="1101.2" y="981" width="1.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1104.18" y="991.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,221,369 samples, 0.09%)</title><rect x="1172.5" y="917" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1175.48" y="927.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::base_iterator&lt;fmt::v9::appender&gt; (6,712,558 samples, 0.06%)</title><rect x="1164.6" y="917" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1167.64" y="927.5" ></text>
</g>
<g >
<title>pfn_is_map_memory (2,113,258 samples, 0.02%)</title><rect x="917.1" y="677" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="920.06" y="687.5" ></text>
</g>
<g >
<title>tcp_check_space (4,081,222 samples, 0.03%)</title><rect x="927.9" y="213" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="930.90" y="223.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (54,825,840 samples, 0.47%)</title><rect x="824.3" y="965" width="5.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="827.26" y="975.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::grow (17,927,353 samples, 0.15%)</title><rect x="1143.9" y="821" width="1.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1146.89" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (172,946,438 samples, 1.47%)</title><rect x="358.4" y="981" width="17.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="361.40" y="991.5" ></text>
</g>
<g >
<title>skb_push (1,944,329 samples, 0.02%)</title><rect x="924.2" y="165" width="0.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="927.23" y="175.5" ></text>
</g>
<g >
<title>____do_softirq (2,131,230 samples, 0.02%)</title><rect x="900.3" y="773" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="903.33" y="783.5" ></text>
</g>
<g >
<title>strlen@plt (1,651,144 samples, 0.01%)</title><rect x="300.0" y="981" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="302.98" y="991.5" ></text>
</g>
<g >
<title>__run_timers (1,519,827 samples, 0.01%)</title><rect x="1064.4" y="725" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1067.36" y="735.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1,837,691 samples, 0.02%)</title><rect x="910.2" y="293" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="913.22" y="303.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2,294,067 samples, 0.02%)</title><rect x="924.0" y="165" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="927.00" y="175.5" ></text>
</g>
<g >
<title>tcp_cwnd_validate (2,092,855 samples, 0.02%)</title><rect x="917.9" y="693" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="920.92" y="703.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (124,981,493 samples, 1.06%)</title><rect x="1073.7" y="277" width="12.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1076.73" y="287.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="325" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1069.74" y="335.5" ></text>
</g>
<g >
<title>call_timer_fn (2,383,792 samples, 0.02%)</title><rect x="818.2" y="645" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="821.16" y="655.5" ></text>
</g>
<g >
<title>ksys_read (90,664,400 samples, 0.77%)</title><rect x="18.0" y="885" width="9.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="21.03" y="895.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1,481,757 samples, 0.01%)</title><rect x="376.4" y="613" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="379.35" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,543,831 samples, 0.04%)</title><rect x="1111.1" y="853" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1114.14" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (4,080,354 samples, 0.03%)</title><rect x="1168.5" y="933" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1171.52" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,895,660 samples, 0.02%)</title><rect x="1116.5" y="773" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1119.54" y="783.5" ></text>
</g>
<g >
<title>aa_inet_msg_perm (29,986,927 samples, 0.26%)</title><rect x="947.1" y="741" width="3.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="950.06" y="751.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2,131,230 samples, 0.02%)</title><rect x="900.3" y="629" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="903.33" y="639.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (4,554,831 samples, 0.04%)</title><rect x="1188.3" y="901" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1191.29" y="911.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::vformat_to&lt;fmt::v9::appender, 0&gt; (117,613,231 samples, 1.00%)</title><rect x="1161.7" y="997" width="11.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1164.69" y="1007.5" ></text>
</g>
<g >
<title>el0t_64_sync (6,370,553 samples, 0.05%)</title><rect x="1152.0" y="773" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1154.98" y="783.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2,174,049 samples, 0.02%)</title><rect x="1154.0" y="789" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1156.96" y="799.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (8,140,369 samples, 0.07%)</title><rect x="1185.5" y="821" width="0.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1188.51" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,612,553 samples, 0.04%)</title><rect x="1137.2" y="869" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1140.16" y="879.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1,954,010 samples, 0.02%)</title><rect x="1151.3" y="869" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1154.34" y="879.5" ></text>
</g>
<g >
<title>ip_rcv_core (4,369,752 samples, 0.04%)</title><rect x="1073.1" y="341" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1076.07" y="351.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,277,417 samples, 0.04%)</title><rect x="1102.0" y="885" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1105.03" y="895.5" ></text>
</g>
<g >
<title>do_mmap (2,163,265 samples, 0.02%)</title><rect x="377.1" y="613" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="380.11" y="623.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (68,026,184 samples, 0.58%)</title><rect x="1078.5" y="181" width="6.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1081.53" y="191.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (2,193,841 samples, 0.02%)</title><rect x="847.5" y="613" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="850.50" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::rfind (1,298,500,816 samples, 11.05%)</title><rect x="169.7" y="1013" width="130.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="172.71" y="1023.5" >std::__cxx11::ba..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (9,295,048 samples, 0.08%)</title><rect x="1175.3" y="933" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1178.34" y="943.5" ></text>
</g>
<g >
<title>decltype  (32,961,509 samples, 0.28%)</title><rect x="1104.1" y="917" width="3.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1107.07" y="927.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="773" width="0.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1143.11" y="783.5" ></text>
</g>
<g >
<title>ip_finish_output (4,798,242 samples, 0.04%)</title><rect x="1076.4" y="117" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1079.35" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (161,506,612 samples, 1.37%)</title><rect x="620.7" y="949" width="16.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="623.73" y="959.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (4,056,441 samples, 0.03%)</title><rect x="882.0" y="773" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="885.01" y="783.5" ></text>
</g>
<g >
<title>ip_rcv_finish (127,232,753 samples, 1.08%)</title><rect x="1073.5" y="341" width="12.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1076.51" y="351.5" ></text>
</g>
<g >
<title>tcp_send_ack (2,105,951 samples, 0.02%)</title><rect x="296.6" y="677" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="299.55" y="687.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,383,792 samples, 0.02%)</title><rect x="818.2" y="789" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="821.16" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,995,247 samples, 0.02%)</title><rect x="1182.9" y="853" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1185.93" y="863.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (135,585,356 samples, 1.15%)</title><rect x="921.1" y="357" width="13.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="924.11" y="367.5" ></text>
</g>
<g >
<title>pthread_getspecific (2,144,025 samples, 0.02%)</title><rect x="168.9" y="917" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="171.87" y="927.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="853" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1103.99" y="863.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,530,129 samples, 0.02%)</title><rect x="862.2" y="853" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="865.16" y="863.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2,127,090 samples, 0.02%)</title><rect x="105.1" y="885" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="108.09" y="895.5" ></text>
</g>
<g >
<title>__fget_light (5,608,850 samples, 0.05%)</title><rect x="18.0" y="853" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="21.03" y="863.5" ></text>
</g>
<g >
<title>do_mem_abort (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="789" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1103.99" y="799.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (2,011,697 samples, 0.02%)</title><rect x="378.7" y="949" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="381.73" y="959.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,383,792 samples, 0.02%)</title><rect x="818.2" y="805" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="821.16" y="815.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (6,695,472 samples, 0.06%)</title><rect x="635.8" y="805" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="638.84" y="815.5" ></text>
</g>
<g >
<title>get_vma_policy (2,195,905 samples, 0.02%)</title><rect x="102.1" y="661" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="105.12" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt;::begin (2,208,832 samples, 0.02%)</title><rect x="1151.5" y="885" width="0.3" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="1154.53" y="895.5" ></text>
</g>
<g >
<title>__do_softirq (5,890,921 samples, 0.05%)</title><rect x="674.1" y="789" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="677.06" y="799.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (2,337,193 samples, 0.02%)</title><rect x="104.2" y="725" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="107.21" y="735.5" ></text>
</g>
<g >
<title>tcp_current_mss (2,318,836 samples, 0.02%)</title><rect x="917.5" y="725" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="920.52" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (13,763,789 samples, 0.12%)</title><rect x="1117.5" y="885" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1120.52" y="895.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (2,144,875 samples, 0.02%)</title><rect x="13.7" y="981" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="16.67" y="991.5" ></text>
</g>
<g >
<title>do_el0_svc (6,370,553 samples, 0.05%)</title><rect x="1152.0" y="725" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1154.98" y="735.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char*, char*&gt; (11,414,523 samples, 0.10%)</title><rect x="1144.1" y="757" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1147.09" y="767.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,557,568 samples, 0.01%)</title><rect x="308.3" y="693" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="311.28" y="703.5" ></text>
</g>
<g >
<title>n_tty_write (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="629" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1191.51" y="639.5" ></text>
</g>
<g >
<title>schedule (2,239,361 samples, 0.02%)</title><rect x="817.9" y="789" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="820.93" y="799.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_and_push_buffer (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="581" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1191.51" y="591.5" ></text>
</g>
<g >
<title>__sock_sendmsg (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="805" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1110.55" y="815.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (4,623,153 samples, 0.04%)</title><rect x="817.9" y="837" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="820.93" y="847.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="597" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1110.55" y="607.5" ></text>
</g>
<g >
<title>___interceptor_memcmp (1,850,491 samples, 0.02%)</title><rect x="298.8" y="949" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="301.75" y="959.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (2,519,183 samples, 0.02%)</title><rect x="1139.4" y="821" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1142.40" y="831.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::chrono::__is_duration&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::value, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::type std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1,954,010 samples, 0.02%)</title><rect x="1151.3" y="885" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1154.34" y="895.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="469" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1069.74" y="479.5" ></text>
</g>
<g >
<title>el0_da (1,896,715 samples, 0.02%)</title><rect x="169.1" y="885" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="172.08" y="895.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt;::basic_string_view&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4,380,717 samples, 0.04%)</title><rect x="357.3" y="965" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="360.33" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,752,269 samples, 0.01%)</title><rect x="1181.6" y="901" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1184.63" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,671,544 samples, 0.07%)</title><rect x="1149.4" y="805" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1152.42" y="815.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (1,535,561 samples, 0.01%)</title><rect x="1064.5" y="725" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1067.52" y="735.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (39,402,901 samples, 0.34%)</title><rect x="1168.5" y="949" width="4.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1171.52" y="959.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (1,535,561 samples, 0.01%)</title><rect x="1064.5" y="741" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1067.52" y="751.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (8,140,369 samples, 0.07%)</title><rect x="1185.5" y="805" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1188.51" y="815.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,820,225 samples, 0.02%)</title><rect x="10.6" y="741" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="13.59" y="751.5" ></text>
</g>
<g >
<title>neigh_hh_output (4,798,242 samples, 0.04%)</title><rect x="1076.4" y="69" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1079.35" y="79.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (32,388,719 samples, 0.28%)</title><rect x="862.4" y="917" width="3.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="865.42" y="927.5" ></text>
</g>
<g >
<title>invoke_syscall (254,580,658 samples, 2.17%)</title><rect x="1066.3" y="853" width="25.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1069.29" y="863.5" >i..</text>
</g>
<g >
<title>__el0_irq_handler_common (1,811,437 samples, 0.02%)</title><rect x="16.1" y="965" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="19.05" y="975.5" ></text>
</g>
<g >
<title>mod_timer (1,663,076 samples, 0.01%)</title><rect x="923.8" y="165" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="926.84" y="175.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2,035,615 samples, 0.02%)</title><rect x="1102.9" y="869" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1105.87" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,256,158 samples, 0.05%)</title><rect x="1108.0" y="949" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1110.96" y="959.5" ></text>
</g>
<g >
<title>ipv4_dst_check (2,010,764 samples, 0.02%)</title><rect x="936.3" y="629" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="939.31" y="639.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (1,982,699 samples, 0.02%)</title><rect x="636.5" y="885" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="639.51" y="895.5" ></text>
</g>
<g >
<title>do_anonymous_page (6,471,029 samples, 0.06%)</title><rect x="373.6" y="709" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="376.63" y="719.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (2,291,913 samples, 0.02%)</title><rect x="882.2" y="421" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="885.18" y="431.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2,126,388 samples, 0.02%)</title><rect x="15.4" y="1013" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="18.45" y="1023.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2,131,230 samples, 0.02%)</title><rect x="900.3" y="661" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="903.33" y="671.5" ></text>
</g>
<g >
<title>d_alloc_pseudo (2,166,361 samples, 0.02%)</title><rect x="1154.2" y="821" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1157.18" y="831.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (8,052,589 samples, 0.07%)</title><rect x="1171.7" y="837" width="0.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1174.67" y="847.5" ></text>
</g>
<g >
<title>tty_write (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="597" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1154.76" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2,139,479 samples, 0.02%)</title><rect x="296.8" y="981" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="299.76" y="991.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,140,369 samples, 0.07%)</title><rect x="1185.5" y="773" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1188.51" y="783.5" ></text>
</g>
<g >
<title>___slab_alloc (2,306,556 samples, 0.02%)</title><rect x="1076.1" y="149" width="0.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1079.12" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (166,695,901 samples, 1.42%)</title><rect x="865.7" y="933" width="16.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="868.67" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (16,860,914 samples, 0.14%)</title><rect x="1101.2" y="965" width="1.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1104.18" y="975.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Put (8,108,147 samples, 0.07%)</title><rect x="656.7" y="917" width="0.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="659.68" y="927.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="533" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1125.11" y="543.5" ></text>
</g>
<g >
<title>inet_recvmsg (1,727,957 samples, 0.01%)</title><rect x="20.2" y="837" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="23.24" y="847.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,535,561 samples, 0.01%)</title><rect x="1064.5" y="805" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1067.52" y="815.5" ></text>
</g>
<g >
<title>handle_softirqs (2,020,395 samples, 0.02%)</title><rect x="306.4" y="805" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="309.37" y="815.5" ></text>
</g>
<g >
<title>__send (261,476,663 samples, 2.23%)</title><rect x="1065.6" y="949" width="26.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1068.60" y="959.5" >_..</text>
</g>
<g >
<title>__tcp_transmit_skb (174,291,904 samples, 1.48%)</title><rect x="1070.5" y="693" width="17.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1073.54" y="703.5" ></text>
</g>
<g >
<title>fread_unlocked (2,144,875 samples, 0.02%)</title><rect x="13.7" y="869" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="16.67" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (12,251,459 samples, 0.10%)</title><rect x="1147.6" y="757" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1150.58" y="767.5" ></text>
</g>
<g >
<title>__netif_receive_skb (4,939,643 samples, 0.04%)</title><rect x="750.3" y="677" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="753.28" y="687.5" ></text>
</g>
<g >
<title>do_translation_fault (1,937,631 samples, 0.02%)</title><rect x="28.3" y="933" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="31.34" y="943.5" ></text>
</g>
<g >
<title>__fdget (21,146,384 samples, 0.18%)</title><rect x="950.1" y="773" width="2.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="953.07" y="783.5" ></text>
</g>
<g >
<title>ip_finish_output (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="629" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1110.55" y="639.5" ></text>
</g>
<g >
<title>do_mem_abort (1,820,225 samples, 0.02%)</title><rect x="10.6" y="853" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="13.59" y="863.5" ></text>
</g>
<g >
<title>__kfree_skb (1,764,528 samples, 0.02%)</title><rect x="882.0" y="469" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="885.01" y="479.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="581" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1190.56" y="591.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="933" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1103.99" y="943.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="517" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1143.11" y="527.5" ></text>
</g>
<g >
<title>____do_softirq (8,780,280 samples, 0.07%)</title><rect x="295.9" y="821" width="0.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="298.88" y="831.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (4,056,441 samples, 0.03%)</title><rect x="882.0" y="837" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="885.01" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (161,299,395 samples, 1.37%)</title><rect x="882.6" y="901" width="16.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="885.64" y="911.5" ></text>
</g>
<g >
<title>post_alloc_hook (2,160,629 samples, 0.02%)</title><rect x="101.7" y="613" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="104.66" y="623.5" ></text>
</g>
<g >
<title>rmqueue (1,650,758 samples, 0.01%)</title><rect x="914.2" y="629" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="917.17" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (399,090,437 samples, 3.40%)</title><rect x="521.8" y="933" width="40.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="524.81" y="943.5" >__a..</text>
</g>
<g >
<title>kfree_skbmem (8,149,432 samples, 0.07%)</title><rect x="926.4" y="165" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="929.43" y="175.5" ></text>
</g>
<g >
<title>wp_page_copy (1,827,821 samples, 0.02%)</title><rect x="376.5" y="693" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="379.50" y="703.5" ></text>
</g>
<g >
<title>net_rx_action (2,131,230 samples, 0.02%)</title><rect x="900.3" y="725" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="903.33" y="735.5" ></text>
</g>
<g >
<title>___interceptor_malloc (2,144,875 samples, 0.02%)</title><rect x="13.7" y="805" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="16.67" y="815.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;::end (146,309,609 samples, 1.25%)</title><rect x="847.7" y="981" width="14.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="850.72" y="991.5" ></text>
</g>
<g >
<title>tcp_rcv_established (8,413,314 samples, 0.07%)</title><rect x="910.2" y="693" width="0.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="913.22" y="703.5" ></text>
</g>
<g >
<title>tcp_write_timer_handler (2,383,792 samples, 0.02%)</title><rect x="818.2" y="613" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="821.16" y="623.5" ></text>
</g>
<g >
<title>ip_local_deliver (1,685,267 samples, 0.01%)</title><rect x="674.1" y="645" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="677.06" y="655.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="917" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1110.55" y="927.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (1,618,079 samples, 0.01%)</title><rect x="10.3" y="773" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.29" y="783.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (5,890,921 samples, 0.05%)</title><rect x="674.1" y="837" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="677.06" y="847.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="421" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1069.74" y="431.5" ></text>
</g>
<g >
<title>char* fmt::v9::format_int::format_signed&lt;int&gt; (6,054,928 samples, 0.05%)</title><rect x="1148.8" y="837" width="0.6" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1151.82" y="847.5" ></text>
</g>
<g >
<title>do_anonymous_page (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="549" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1136.68" y="559.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,163,265 samples, 0.02%)</title><rect x="377.1" y="757" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="380.11" y="767.5" ></text>
</g>
<g >
<title>kfree_skbmem (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="293" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1069.74" y="303.5" ></text>
</g>
<g >
<title>el0t_64_irq (2,530,129 samples, 0.02%)</title><rect x="862.2" y="917" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="865.16" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,986,806 samples, 0.02%)</title><rect x="1164.1" y="917" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1167.08" y="927.5" ></text>
</g>
<g >
<title>process_backlog (1,685,267 samples, 0.01%)</title><rect x="674.1" y="725" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="677.06" y="735.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (4,232,715 samples, 0.04%)</title><rect x="1156.2" y="997" width="0.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1159.24" y="1007.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (4,040,740 samples, 0.03%)</title><rect x="168.9" y="981" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="171.87" y="991.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (8,720,643 samples, 0.07%)</title><rect x="1072.2" y="357" width="0.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1075.19" y="367.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1,718,321 samples, 0.01%)</title><rect x="1077.3" y="197" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1080.26" y="207.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,865,220 samples, 0.04%)</title><rect x="10.3" y="965" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.29" y="975.5" ></text>
</g>
<g >
<title>invoke_syscall (4,590,971 samples, 0.04%)</title><rect x="636.1" y="677" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="639.05" y="687.5" ></text>
</g>
<g >
<title>__arch_copy_from_user (13,706,132 samples, 0.12%)</title><rect x="914.3" y="709" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="917.33" y="719.5" ></text>
</g>
<g >
<title>handle_softirqs (2,193,841 samples, 0.02%)</title><rect x="847.5" y="757" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="850.50" y="767.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,554,831 samples, 0.04%)</title><rect x="1188.3" y="869" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1191.29" y="879.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,481,757 samples, 0.01%)</title><rect x="376.4" y="709" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="379.35" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,104,971 samples, 0.03%)</title><rect x="1177.0" y="805" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1180.04" y="815.5" ></text>
</g>
<g >
<title>fmt::v9::detail::count_digits (8,060,291 samples, 0.07%)</title><rect x="1111.8" y="869" width="0.8" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1114.80" y="879.5" ></text>
</g>
<g >
<title>netif_skb_features (2,451,021 samples, 0.02%)</title><rect x="935.2" y="533" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="938.16" y="543.5" ></text>
</g>
<g >
<title>void tt::chat::check_error&lt;bool, char const*&gt; (2,246,910 samples, 0.02%)</title><rect x="1189.8" y="1029" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1192.77" y="1039.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (4,340,410 samples, 0.04%)</title><rect x="1154.0" y="837" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1156.96" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,345,246 samples, 0.04%)</title><rect x="1170.8" y="869" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1173.85" y="879.5" ></text>
</g>
<g >
<title>do_mem_abort (4,339,647 samples, 0.04%)</title><rect x="105.8" y="773" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="108.75" y="783.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (16,737,756 samples, 0.14%)</title><rect x="1147.1" y="853" width="1.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1150.13" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (6,233,593 samples, 0.05%)</title><rect x="1099.5" y="949" width="0.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1102.46" y="959.5" ></text>
</g>
<g >
<title>__slab_free (2,086,096 samples, 0.02%)</title><rect x="21.6" y="709" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="24.56" y="719.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (14,583,606 samples, 0.12%)</title><rect x="635.0" y="869" width="1.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="638.05" y="879.5" ></text>
</g>
<g >
<title>__pi_clear_page (1,820,225 samples, 0.02%)</title><rect x="10.6" y="645" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="13.59" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (4,375,289 samples, 0.04%)</title><rect x="169.3" y="997" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="172.27" y="1007.5" ></text>
</g>
<g >
<title>____do_softirq (2,020,395 samples, 0.02%)</title><rect x="306.4" y="837" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="309.37" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,955,250 samples, 0.08%)</title><rect x="1187.0" y="917" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1189.96" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,149,778 samples, 0.02%)</title><rect x="1157.5" y="949" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1160.55" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (9,058,169 samples, 0.08%)</title><rect x="1100.1" y="949" width="0.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1103.08" y="959.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="821" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1143.11" y="831.5" ></text>
</g>
<g >
<title>void spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (288,576,190 samples, 2.46%)</title><rect x="1160.8" y="1029" width="29.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1163.79" y="1039.5" >vo..</text>
</g>
<g >
<title>rseq_update_cpu_node_id (2,058,555 samples, 0.02%)</title><rect x="750.1" y="805" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="753.08" y="815.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="693" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1136.68" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (17,455,550 samples, 0.15%)</title><rect x="1133.9" y="869" width="1.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1136.88" y="879.5" ></text>
</g>
<g >
<title>el0_svc (259,225,596 samples, 2.21%)</title><rect x="1065.8" y="901" width="26.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1068.82" y="911.5" >e..</text>
</g>
<g >
<title>__asan::GetMallocContextSize (4,328,258 samples, 0.04%)</title><rect x="655.4" y="917" width="0.4" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="658.40" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,451,273 samples, 0.07%)</title><rect x="1101.2" y="917" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1104.18" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,168,606 samples, 0.02%)</title><rect x="1157.8" y="965" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1160.76" y="975.5" ></text>
</g>
<g >
<title>fmt::v9::detail::format_decimal_result&lt;char*&gt; fmt::v9::detail::format_decimal&lt;char, unsigned int&gt; (6,054,928 samples, 0.05%)</title><rect x="1148.8" y="805" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1151.82" y="815.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (9,110,619 samples, 0.08%)</title><rect x="1138.7" y="853" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1141.74" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_4 (1,944,255 samples, 0.02%)</title><rect x="1163.7" y="949" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1166.73" y="959.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (2,384,324 samples, 0.02%)</title><rect x="1085.8" y="165" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1088.82" y="175.5" ></text>
</g>
<g >
<title>_IO_do_write (6,370,553 samples, 0.05%)</title><rect x="1152.0" y="837" width="0.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1154.98" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2,782,516 samples, 0.02%)</title><rect x="653.2" y="933" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="656.19" y="943.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,535,561 samples, 0.01%)</title><rect x="1064.5" y="901" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1067.52" y="911.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="869" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1190.56" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,295,610 samples, 0.02%)</title><rect x="1139.9" y="789" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1142.88" y="799.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="549" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1151.64" y="559.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char*, char, false&gt;::pointer_to (2,234,886 samples, 0.02%)</title><rect x="29.0" y="997" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="31.98" y="1007.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,557,568 samples, 0.01%)</title><rect x="308.3" y="933" width="0.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="311.28" y="943.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::chrono::__is_duration&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::value, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::type std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (2,362,817 samples, 0.02%)</title><rect x="1183.3" y="901" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1186.34" y="911.5" ></text>
</g>
<g >
<title>irq_exit_rcu (5,744,633 samples, 0.05%)</title><rect x="1063.9" y="853" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1066.94" y="863.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="725" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1125.11" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (166,695,901 samples, 1.42%)</title><rect x="865.7" y="885" width="16.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="868.67" y="895.5" ></text>
</g>
<g >
<title>do_pte_missing (1,820,225 samples, 0.02%)</title><rect x="10.6" y="757" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.59" y="767.5" ></text>
</g>
<g >
<title>el0_svc (4,590,971 samples, 0.04%)</title><rect x="636.1" y="725" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="639.05" y="735.5" ></text>
</g>
<g >
<title>__sanitizer::MmapFixedImpl (2,395,092 samples, 0.02%)</title><rect x="1100.8" y="805" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1103.75" y="815.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (1,953,848 samples, 0.02%)</title><rect x="1089.9" y="693" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1092.86" y="703.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (174,862,188 samples, 1.49%)</title><rect x="918.9" y="645" width="17.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="921.95" y="655.5" ></text>
</g>
<g >
<title>call_on_irq_stack (2,482,488 samples, 0.02%)</title><rect x="1067.0" y="677" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1069.97" y="687.5" ></text>
</g>
<g >
<title>__release_sock (35,353,018 samples, 0.30%)</title><rect x="1066.3" y="741" width="3.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1069.29" y="751.5" ></text>
</g>
<g >
<title>do_page_fault (1,618,079 samples, 0.01%)</title><rect x="10.3" y="661" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="13.29" y="671.5" ></text>
</g>
<g >
<title>mod_timer (4,596,622 samples, 0.04%)</title><rect x="938.7" y="613" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="941.65" y="623.5" ></text>
</g>
<g >
<title>__handle_mm_fault (18,227,790 samples, 0.16%)</title><rect x="100.7" y="773" width="1.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="103.74" y="783.5" ></text>
</g>
<g >
<title>rcu_core (6,674,329 samples, 0.06%)</title><rect x="295.9" y="757" width="0.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="298.88" y="767.5" ></text>
</g>
<g >
<title>handle_softirqs (5,744,633 samples, 0.05%)</title><rect x="1063.9" y="757" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1066.94" y="767.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (6,471,029 samples, 0.06%)</title><rect x="373.6" y="853" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="376.63" y="863.5" ></text>
</g>
<g >
<title>sock_def_readable (34,796,523 samples, 0.30%)</title><rect x="930.8" y="197" width="3.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="933.80" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1,845,520 samples, 0.02%)</title><rect x="657.7" y="965" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="660.70" y="975.5" ></text>
</g>
<g >
<title>ip_rcv (2,617,348 samples, 0.02%)</title><rect x="1064.1" y="661" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1067.10" y="671.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (1,853,490 samples, 0.02%)</title><rect x="376.9" y="597" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="379.93" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,003,944 samples, 0.02%)</title><rect x="1143.9" y="805" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1146.89" y="815.5" ></text>
</g>
<g >
<title>call_on_irq_stack (1,837,691 samples, 0.02%)</title><rect x="910.2" y="453" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="913.22" y="463.5" ></text>
</g>
<g >
<title>void spdlog::details::fmt_helper::append_int&lt;int&gt; (21,138,362 samples, 0.18%)</title><rect x="1148.8" y="869" width="2.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1151.82" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (162,353,673 samples, 1.38%)</title><rect x="658.3" y="965" width="16.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="661.34" y="975.5" ></text>
</g>
<g >
<title>sock_rfree (1,802,168 samples, 0.02%)</title><rect x="24.8" y="773" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="27.78" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (494,511,445 samples, 4.21%)</title><rect x="604.0" y="997" width="49.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="606.99" y="1007.5" >std::..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2,035,615 samples, 0.02%)</title><rect x="1102.9" y="965" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1105.87" y="975.5" ></text>
</g>
<g >
<title>raw_v4_input (4,061,013 samples, 0.03%)</title><rect x="921.3" y="245" width="0.4" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="924.32" y="255.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,131,230 samples, 0.02%)</title><rect x="900.3" y="805" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="903.33" y="815.5" ></text>
</g>
<g >
<title>el0t_64_irq (2,020,395 samples, 0.02%)</title><rect x="306.4" y="965" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="309.37" y="975.5" ></text>
</g>
<g >
<title>__sanitizer_internal_memset (1,426,916 samples, 0.01%)</title><rect x="10.5" y="853" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.45" y="863.5" ></text>
</g>
<g >
<title>el1h_64_irq (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="677" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1069.74" y="687.5" ></text>
</g>
<g >
<title>sk_reset_timer (4,596,622 samples, 0.04%)</title><rect x="938.7" y="629" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="941.65" y="639.5" ></text>
</g>
<g >
<title>__sys_sendto (254,580,658 samples, 2.17%)</title><rect x="1066.3" y="821" width="25.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1069.29" y="831.5" >_..</text>
</g>
<g >
<title>invoke_syscall (7,154,882 samples, 0.06%)</title><rect x="106.2" y="725" width="0.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="109.19" y="735.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (4,544,503 samples, 0.04%)</title><rect x="1085.4" y="213" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1088.37" y="223.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_5@plt (1,980,647 samples, 0.02%)</title><rect x="28.5" y="1029" width="0.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="31.53" y="1039.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2,020,395 samples, 0.02%)</title><rect x="306.4" y="629" width="0.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="309.37" y="639.5" ></text>
</g>
<g >
<title>net_rx_action (2,020,395 samples, 0.02%)</title><rect x="306.4" y="789" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="309.37" y="799.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,883,141 samples, 0.02%)</title><rect x="306.6" y="869" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="309.57" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,506,033 samples, 0.04%)</title><rect x="820.7" y="901" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="823.68" y="911.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (2,144,875 samples, 0.02%)</title><rect x="13.7" y="997" width="0.2" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="16.67" y="1007.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (559,565,240 samples, 4.76%)</title><rect x="43.4" y="949" width="56.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="46.41" y="959.5" >__asa..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (1,986,011 samples, 0.02%)</title><rect x="1117.3" y="757" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1120.32" y="767.5" ></text>
</g>
<g >
<title>netif_rx_internal (2,394,600 samples, 0.02%)</title><rect x="1086.3" y="501" width="0.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1089.29" y="511.5" ></text>
</g>
<g >
<title>call_on_irq_stack (4,056,441 samples, 0.03%)</title><rect x="882.0" y="757" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="885.01" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (12,251,459 samples, 0.10%)</title><rect x="1147.6" y="741" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1150.58" y="751.5" ></text>
</g>
<g >
<title>__napi_poll (137,815,788 samples, 1.17%)</title><rect x="920.9" y="405" width="13.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="923.89" y="415.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (161,683,624 samples, 1.38%)</title><rect x="636.9" y="917" width="16.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="639.95" y="927.5" ></text>
</g>
<g >
<title>do_pte_missing (1,651,144 samples, 0.01%)</title><rect x="43.0" y="821" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="46.03" y="831.5" ></text>
</g>
<g >
<title>process_output_block (1,971,066 samples, 0.02%)</title><rect x="1152.0" y="565" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1154.98" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (162,353,673 samples, 1.38%)</title><rect x="658.3" y="949" width="16.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="661.34" y="959.5" ></text>
</g>
<g >
<title>get_page_from_freelist (4,571,442 samples, 0.04%)</title><rect x="101.7" y="629" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="104.66" y="639.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (2,295,994 samples, 0.02%)</title><rect x="1173.5" y="997" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1176.50" y="1007.5" ></text>
</g>
<g >
<title>el0_da (1,853,490 samples, 0.02%)</title><rect x="376.9" y="741" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="379.93" y="751.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (1,648,665,226 samples, 14.03%)</title><rect x="899.2" y="965" width="165.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="902.25" y="975.5" >tt::chat::server::Epo..</text>
</g>
<g >
<title>do_mmap (2,427,793 samples, 0.02%)</title><rect x="106.4" y="661" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="109.43" y="671.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,148,701 samples, 0.02%)</title><rect x="107.3" y="933" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="110.34" y="943.5" ></text>
</g>
<g >
<title>skb_release_data (2,810,116 samples, 0.02%)</title><rect x="750.3" y="485" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="753.28" y="495.5" ></text>
</g>
<g >
<title>do_anonymous_page (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="661" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1125.11" y="671.5" ></text>
</g>
<g >
<title>do_mem_abort (1,937,631 samples, 0.02%)</title><rect x="28.3" y="949" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="31.34" y="959.5" ></text>
</g>
<g >
<title>do_pte_missing (1,535,561 samples, 0.01%)</title><rect x="1064.5" y="773" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1067.52" y="783.5" ></text>
</g>
<g >
<title>el0_da (1,944,255 samples, 0.02%)</title><rect x="1163.7" y="901" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1166.73" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (40,232,178 samples, 0.34%)</title><rect x="653.7" y="965" width="4.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="656.66" y="975.5" ></text>
</g>
<g >
<title>do_mem_abort (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="693" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1143.11" y="703.5" ></text>
</g>
<g >
<title>do_el0_svc (7,154,882 samples, 0.06%)</title><rect x="106.2" y="757" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="109.19" y="767.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,820,225 samples, 0.02%)</title><rect x="10.6" y="901" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="13.59" y="911.5" ></text>
</g>
<g >
<title>_dl_catch_exception (4,865,220 samples, 0.04%)</title><rect x="10.3" y="981" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.29" y="991.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (32,388,719 samples, 0.28%)</title><rect x="862.4" y="933" width="3.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="865.42" y="943.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (8,846,728 samples, 0.08%)</title><rect x="1068.3" y="677" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1071.30" y="687.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;&gt; (11,479,760 samples, 0.10%)</title><rect x="820.7" y="917" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="823.68" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_free_5 (7,693,276 samples, 0.07%)</title><rect x="27.6" y="1029" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="30.56" y="1039.5" ></text>
</g>
<g >
<title>do_translation_fault (4,323,527 samples, 0.04%)</title><rect x="104.4" y="821" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="107.45" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (2,149,778 samples, 0.02%)</title><rect x="1157.5" y="965" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1160.55" y="975.5" ></text>
</g>
<g >
<title>____do_softirq (1,837,691 samples, 0.02%)</title><rect x="910.2" y="437" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="913.22" y="447.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,629,187 samples, 0.06%)</title><rect x="1098.2" y="949" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1101.19" y="959.5" ></text>
</g>
<g >
<title>void spdlog::details::fmt_helper::append_int&lt;int&gt; (20,628,570 samples, 0.18%)</title><rect x="1184.3" y="917" width="2.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1187.25" y="927.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (2,114,737 samples, 0.02%)</title><rect x="105.8" y="645" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="108.75" y="655.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (4,511,279 samples, 0.04%)</title><rect x="1143.4" y="757" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1146.44" y="767.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,820,225 samples, 0.02%)</title><rect x="10.6" y="773" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.59" y="783.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_name_command (553,084,740 samples, 4.71%)</title><rect x="1098.2" y="1013" width="55.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1101.19" y="1023.5" >tt::c..</text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (4,104,971 samples, 0.03%)</title><rect x="1177.0" y="885" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1180.04" y="895.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="549" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1103.99" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,420,019 samples, 0.09%)</title><rect x="1178.7" y="853" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1181.72" y="863.5" ></text>
</g>
<g >
<title>tcp_data_ready (16,831,129 samples, 0.14%)</title><rect x="928.7" y="197" width="1.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="931.67" y="207.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (2,383,792 samples, 0.02%)</title><rect x="818.2" y="549" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="821.16" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,986,806 samples, 0.02%)</title><rect x="1164.1" y="933" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1167.08" y="943.5" ></text>
</g>
<g >
<title>el0_da (2,104,501 samples, 0.02%)</title><rect x="635.8" y="741" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="638.84" y="751.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,883,141 samples, 0.02%)</title><rect x="306.6" y="853" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="309.57" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (910,857,658 samples, 7.75%)</title><rect x="512.5" y="997" width="91.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="515.49" y="1007.5" >std::__cxx..</text>
</g>
<g >
<title>load_balance (2,163,452 samples, 0.02%)</title><rect x="674.4" y="725" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="677.44" y="735.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="821" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1103.99" y="831.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1,685,267 samples, 0.01%)</title><rect x="674.1" y="613" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="677.06" y="623.5" ></text>
</g>
<g >
<title>std::hash&lt;int&gt;::operator (2,110,380 samples, 0.02%)</title><rect x="822.4" y="949" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="825.43" y="959.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (2,164,096 samples, 0.02%)</title><rect x="562.9" y="853" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="565.92" y="863.5" ></text>
</g>
<g >
<title>irq_exit_rcu (5,890,921 samples, 0.05%)</title><rect x="674.1" y="869" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="677.06" y="879.5" ></text>
</g>
<g >
<title>do_mem_abort (1,853,490 samples, 0.02%)</title><rect x="376.9" y="725" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="379.93" y="735.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (6,695,472 samples, 0.06%)</title><rect x="635.8" y="837" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="638.84" y="847.5" ></text>
</g>
<g >
<title>__napi_poll (1,685,267 samples, 0.01%)</title><rect x="674.1" y="741" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="677.06" y="751.5" ></text>
</g>
<g >
<title>do_mem_abort (2,104,501 samples, 0.02%)</title><rect x="635.8" y="725" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="638.84" y="735.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1,685,267 samples, 0.01%)</title><rect x="674.1" y="693" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="677.06" y="703.5" ></text>
</g>
<g >
<title>handle_pte_fault (4,339,647 samples, 0.04%)</title><rect x="105.8" y="693" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="108.75" y="703.5" ></text>
</g>
<g >
<title>__ip_finish_output (168,868,732 samples, 1.44%)</title><rect x="919.1" y="597" width="17.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="922.14" y="607.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (2,105,951 samples, 0.02%)</title><rect x="296.6" y="645" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="299.55" y="655.5" ></text>
</g>
<g >
<title>tcp_ack (2,058,443 samples, 0.02%)</title><rect x="1077.9" y="229" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1080.86" y="239.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1,557,568 samples, 0.01%)</title><rect x="308.3" y="725" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="311.28" y="735.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (1,660,275 samples, 0.01%)</title><rect x="953.8" y="837" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="956.84" y="847.5" ></text>
</g>
<g >
<title>tcp_ack_update_window.isra.0 (1,983,595 samples, 0.02%)</title><rect x="910.6" y="677" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="913.64" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,480,542 samples, 0.01%)</title><rect x="1176.7" y="917" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1179.69" y="927.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,982,699 samples, 0.02%)</title><rect x="636.5" y="869" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="639.51" y="879.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (6,695,472 samples, 0.06%)</title><rect x="635.8" y="853" width="0.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="638.84" y="863.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::get_buffer&lt;char&gt; (5,967,225 samples, 0.05%)</title><rect x="1108.8" y="933" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1111.79" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,919,207 samples, 0.19%)</title><rect x="1122.3" y="853" width="2.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1125.32" y="863.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (127,232,753 samples, 1.08%)</title><rect x="1073.5" y="309" width="12.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1076.51" y="319.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="789" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1190.56" y="799.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::AllocateBatch (1,618,079 samples, 0.01%)</title><rect x="10.3" y="837" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="13.29" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,295,994 samples, 0.02%)</title><rect x="1173.5" y="965" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1176.50" y="975.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="725" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1154.76" y="735.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="629" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1143.11" y="639.5" ></text>
</g>
<g >
<title>call_on_irq_stack (146,435,639 samples, 1.25%)</title><rect x="920.0" y="485" width="14.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="923.02" y="495.5" ></text>
</g>
<g >
<title>tcp_retransmit_skb (2,383,792 samples, 0.02%)</title><rect x="818.2" y="581" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="821.16" y="591.5" ></text>
</g>
<g >
<title>dl_iterate_phdr (1,813,257 samples, 0.02%)</title><rect x="10.8" y="1045" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="13.78" y="1055.5" ></text>
</g>
<g >
<title>skb_csum_hwoffload_help (2,165,169 samples, 0.02%)</title><rect x="935.6" y="517" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="938.65" y="527.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2,164,096 samples, 0.02%)</title><rect x="562.9" y="869" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="565.92" y="879.5" ></text>
</g>
<g >
<title>___interceptor_memcpy (2,897,998 samples, 0.02%)</title><rect x="603.7" y="901" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="606.69" y="911.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="661" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1110.55" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,591,436 samples, 0.06%)</title><rect x="1138.7" y="837" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1141.74" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,716,985 samples, 0.06%)</title><rect x="1183.6" y="869" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1186.58" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,758,264 samples, 0.04%)</title><rect x="1158.0" y="949" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1160.98" y="959.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (279,582,643 samples, 2.38%)</title><rect x="1161.7" y="1013" width="28.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1164.69" y="1023.5" >v..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,535,637 samples, 0.07%)</title><rect x="1162.9" y="965" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.87" y="975.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (29,996,076 samples, 0.26%)</title><rect x="21.8" y="773" width="3.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="24.77" y="783.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,144,025 samples, 0.02%)</title><rect x="168.9" y="949" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="171.87" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,887,478 samples, 0.02%)</title><rect x="1140.6" y="853" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1143.56" y="863.5" ></text>
</g>
<g >
<title>do_pte_missing (15,880,709 samples, 0.14%)</title><rect x="100.7" y="741" width="1.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="103.74" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,304,222 samples, 0.05%)</title><rect x="820.1" y="917" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="823.05" y="927.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,020,395 samples, 0.02%)</title><rect x="306.4" y="869" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="309.37" y="879.5" ></text>
</g>
<g >
<title>__slab_free (1,924,824 samples, 0.02%)</title><rect x="21.4" y="725" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="24.36" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::begin (2,314,983 samples, 0.02%)</title><rect x="1152.6" y="917" width="0.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1155.62" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (757,349,925 samples, 6.45%)</title><rect x="674.9" y="933" width="76.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="677.92" y="943.5" >__asan_s..</text>
</g>
<g >
<title>__tcp_push_pending_frames (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="725" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1110.55" y="735.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (4,186,590 samples, 0.04%)</title><rect x="923.4" y="181" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="926.42" y="191.5" ></text>
</g>
<g >
<title>handle_softirqs (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="453" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1151.64" y="463.5" ></text>
</g>
<g >
<title>__alloc_pages (2,034,048 samples, 0.02%)</title><rect x="373.9" y="629" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="376.89" y="639.5" ></text>
</g>
<g >
<title>run_timer_softirq (2,383,792 samples, 0.02%)</title><rect x="818.2" y="693" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="821.16" y="703.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (29,996,076 samples, 0.26%)</title><rect x="21.8" y="757" width="3.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="24.77" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,203,426 samples, 0.05%)</title><rect x="1165.3" y="869" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1168.31" y="879.5" ></text>
</g>
<g >
<title>__fget_light (21,146,384 samples, 0.18%)</title><rect x="950.1" y="757" width="2.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="953.07" y="767.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (4,335,031 samples, 0.04%)</title><rect x="1174.9" y="981" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1177.90" y="991.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (3,945,741 samples, 0.03%)</title><rect x="1181.8" y="885" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1184.80" y="895.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (6,437,758 samples, 0.05%)</title><rect x="376.7" y="837" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="379.69" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,847,964 samples, 0.03%)</title><rect x="1099.1" y="917" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1102.07" y="927.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,896,715 samples, 0.02%)</title><rect x="169.1" y="805" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="172.08" y="815.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,953,282 samples, 0.02%)</title><rect x="656.0" y="901" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="659.05" y="911.5" ></text>
</g>
<g >
<title>rcu_core_si (2,530,129 samples, 0.02%)</title><rect x="862.2" y="741" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="865.16" y="751.5" ></text>
</g>
<g >
<title>sock_read_iter (68,631,844 samples, 0.58%)</title><rect x="20.2" y="853" width="6.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="23.24" y="863.5" ></text>
</g>
<g >
<title>next_uptodate_folio (1,085,595 samples, 0.01%)</title><rect x="10.1" y="837" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.09" y="847.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (1,986,011 samples, 0.02%)</title><rect x="1117.3" y="789" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1120.32" y="799.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; fmt::v9::detail::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (11,288,914 samples, 0.10%)</title><rect x="1135.6" y="933" width="1.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1138.63" y="943.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (4,590,971 samples, 0.04%)</title><rect x="636.1" y="693" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="639.05" y="703.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (4,939,643 samples, 0.04%)</title><rect x="750.3" y="549" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="753.28" y="559.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,280,431 samples, 0.02%)</title><rect x="1067.6" y="645" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1070.64" y="655.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (7,602,743 samples, 0.06%)</title><rect x="1176.7" y="933" width="0.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1179.69" y="943.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1,887,898 samples, 0.02%)</title><rect x="922.4" y="229" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="925.36" y="239.5" ></text>
</g>
<g >
<title>uncharge_batch (2,042,202 samples, 0.02%)</title><rect x="674.2" y="645" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="677.23" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,411,890 samples, 0.05%)</title><rect x="1150.3" y="741" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1153.29" y="751.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (1,481,757 samples, 0.01%)</title><rect x="376.4" y="645" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="379.35" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,237,563 samples, 0.04%)</title><rect x="1132.8" y="709" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1135.82" y="719.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (4,939,643 samples, 0.04%)</title><rect x="750.3" y="565" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="753.28" y="575.5" ></text>
</g>
<g >
<title>invoke_syscall (101,308,765 samples, 0.86%)</title><rect x="17.4" y="917" width="10.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="20.39" y="927.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (20,188,207 samples, 0.17%)</title><rect x="1130.4" y="773" width="2.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1133.40" y="783.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (27,907,976 samples, 0.24%)</title><rect x="375.9" y="933" width="2.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="378.93" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (399,199,526 samples, 3.40%)</title><rect x="563.1" y="965" width="40.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="566.14" y="975.5" >std..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,752,269 samples, 0.01%)</title><rect x="1181.6" y="885" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1184.63" y="895.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,853,490 samples, 0.02%)</title><rect x="376.9" y="789" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="379.93" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (4,018,159 samples, 0.03%)</title><rect x="1186.6" y="901" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.56" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,716,800 samples, 0.03%)</title><rect x="1108.8" y="901" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1111.79" y="911.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,937,631 samples, 0.02%)</title><rect x="28.3" y="885" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="31.34" y="895.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="869" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1103.99" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,813,195 samples, 0.03%)</title><rect x="1171.3" y="853" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1174.29" y="863.5" ></text>
</g>
<g >
<title>unmap_region (2,427,793 samples, 0.02%)</title><rect x="106.4" y="597" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="109.43" y="607.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,896,715 samples, 0.02%)</title><rect x="169.1" y="789" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="172.08" y="799.5" ></text>
</g>
<g >
<title>tcp_filter (1,713,927 samples, 0.01%)</title><rect x="1074.9" y="261" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1077.86" y="271.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (6,888,220 samples, 0.06%)</title><rect x="938.4" y="677" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="941.42" y="687.5" ></text>
</g>
<g >
<title>ip_rcv_finish (4,056,441 samples, 0.03%)</title><rect x="882.0" y="597" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="885.01" y="607.5" ></text>
</g>
<g >
<title>do_el0_svc (18,830,329 samples, 0.16%)</title><rect x="11.8" y="981" width="1.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="14.78" y="991.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (6,370,553 samples, 0.05%)</title><rect x="1152.0" y="757" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1154.98" y="767.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::get_time_ (2,307,760 samples, 0.02%)</title><rect x="1186.3" y="933" width="0.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1189.32" y="943.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (2,260,114 samples, 0.02%)</title><rect x="1116.3" y="805" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1119.31" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,261,008 samples, 0.04%)</title><rect x="1133.2" y="757" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1136.25" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,519,183 samples, 0.02%)</title><rect x="1139.4" y="757" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1142.40" y="767.5" ></text>
</g>
<g >
<title>el0_interrupt (4,623,153 samples, 0.04%)</title><rect x="817.9" y="821" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="820.93" y="831.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,937,631 samples, 0.02%)</title><rect x="28.3" y="869" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="31.34" y="879.5" ></text>
</g>
<g >
<title>el0_da (1,937,631 samples, 0.02%)</title><rect x="28.3" y="965" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="31.34" y="975.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (8,780,280 samples, 0.07%)</title><rect x="295.9" y="933" width="0.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="298.88" y="943.5" ></text>
</g>
<g >
<title>__release_sock (8,413,314 samples, 0.07%)</title><rect x="910.2" y="725" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="913.22" y="735.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (1,618,079 samples, 0.01%)</title><rect x="10.3" y="757" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.29" y="767.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1,685,267 samples, 0.01%)</title><rect x="674.1" y="581" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="677.06" y="591.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,530,129 samples, 0.02%)</title><rect x="862.2" y="821" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="865.16" y="831.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (4,939,643 samples, 0.04%)</title><rect x="750.3" y="581" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="753.28" y="591.5" ></text>
</g>
<g >
<title>ip_output (2,052,122 samples, 0.02%)</title><rect x="936.5" y="645" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="939.51" y="655.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,883,141 samples, 0.02%)</title><rect x="306.6" y="965" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="309.57" y="975.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="629" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1069.74" y="639.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge (2,042,202 samples, 0.02%)</title><rect x="674.2" y="661" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="677.23" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,114,364 samples, 0.05%)</title><rect x="1168.9" y="901" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1171.93" y="911.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (2,309,062 samples, 0.02%)</title><rect x="923.0" y="213" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="925.95" y="223.5" ></text>
</g>
<g >
<title>run_timer_softirq (2,193,841 samples, 0.02%)</title><rect x="847.5" y="741" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="850.50" y="751.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp@plt (4,708,457 samples, 0.04%)</title><rect x="297.8" y="933" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="300.84" y="943.5" ></text>
</g>
<g >
<title>el0t_64_irq (4,623,153 samples, 0.04%)</title><rect x="817.9" y="869" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="820.93" y="879.5" ></text>
</g>
<g >
<title>ip_queue_xmit (176,914,310 samples, 1.51%)</title><rect x="918.9" y="661" width="17.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="921.95" y="671.5" ></text>
</g>
<g >
<title>sock_recvmsg (66,903,887 samples, 0.57%)</title><rect x="20.4" y="837" width="6.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="23.41" y="847.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (2,239,361 samples, 0.02%)</title><rect x="817.9" y="757" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="820.93" y="767.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (4,056,441 samples, 0.03%)</title><rect x="882.0" y="853" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="885.01" y="863.5" ></text>
</g>
<g >
<title>tcp_ack (32,687,298 samples, 0.28%)</title><rect x="924.6" y="213" width="3.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="927.62" y="223.5" ></text>
</g>
<g >
<title>do_anonymous_page (15,880,709 samples, 0.14%)</title><rect x="100.7" y="725" width="1.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="103.74" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (7,402,835 samples, 0.06%)</title><rect x="603.2" y="949" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="606.24" y="959.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (2,237,399 samples, 0.02%)</title><rect x="1086.1" y="229" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1089.06" y="239.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,449,891 samples, 0.07%)</title><rect x="1105.8" y="853" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1108.83" y="863.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,085,595 samples, 0.01%)</title><rect x="10.1" y="901" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.09" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (6,091,765 samples, 0.05%)</title><rect x="1155.6" y="997" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1158.63" y="1007.5" ></text>
</g>
<g >
<title>call_on_irq_stack (7,066,013 samples, 0.06%)</title><rect x="750.3" y="789" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="753.28" y="799.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::base_iterator&lt;fmt::v9::appender&gt; (6,114,364 samples, 0.05%)</title><rect x="1168.9" y="933" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1171.93" y="943.5" ></text>
</g>
<g >
<title>tcp_mstamp_refresh (2,103,193 samples, 0.02%)</title><rect x="25.4" y="757" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="28.41" y="767.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (4,596,622 samples, 0.04%)</title><rect x="938.7" y="661" width="0.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="941.65" y="671.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (8,052,589 samples, 0.07%)</title><rect x="1171.7" y="805" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1174.67" y="815.5" ></text>
</g>
<g >
<title>__napi_poll (140,323,148 samples, 1.19%)</title><rect x="1072.2" y="421" width="14.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1075.19" y="431.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,603,425 samples, 0.09%)</title><rect x="1177.7" y="885" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1180.65" y="895.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (22,989,994 samples, 0.20%)</title><rect x="102.6" y="901" width="2.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="105.57" y="911.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (9,254,861 samples, 0.08%)</title><rect x="101.4" y="693" width="0.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="104.41" y="703.5" ></text>
</g>
<g >
<title>tcp_write_xmit (211,274,117 samples, 1.80%)</title><rect x="918.1" y="693" width="21.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="921.13" y="703.5" ></text>
</g>
<g >
<title>get_random_u16 (12,297,400 samples, 0.10%)</title><rect x="952.6" y="821" width="1.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="955.61" y="831.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2,294,067 samples, 0.02%)</title><rect x="924.0" y="53" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="927.00" y="63.5" ></text>
</g>
<g >
<title>el0_da (2,144,875 samples, 0.02%)</title><rect x="13.7" y="709" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="16.67" y="719.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (2,035,615 samples, 0.02%)</title><rect x="1102.9" y="933" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1105.87" y="943.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (2,193,841 samples, 0.02%)</title><rect x="847.5" y="885" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="850.50" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,957,359 samples, 0.02%)</title><rect x="1146.5" y="821" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1149.51" y="831.5" ></text>
</g>
<g >
<title>do_wp_page (2,337,193 samples, 0.02%)</title><rect x="104.2" y="757" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="107.21" y="767.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,875,603 samples, 0.02%)</title><rect x="11.0" y="997" width="0.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="13.96" y="1007.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="805" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1191.51" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,729,767 samples, 0.04%)</title><rect x="1154.8" y="981" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1157.79" y="991.5" ></text>
</g>
<g >
<title>iterate_tty_write (4,025,410 samples, 0.03%)</title><rect x="1152.0" y="597" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1154.98" y="607.5" ></text>
</g>
<g >
<title>do_mem_abort (6,660,720 samples, 0.06%)</title><rect x="104.2" y="837" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="107.21" y="847.5" ></text>
</g>
<g >
<title>__slab_free (6,263,705 samples, 0.05%)</title><rect x="926.6" y="133" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="929.62" y="143.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (6,411,890 samples, 0.05%)</title><rect x="1150.3" y="789" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1153.29" y="799.5" ></text>
</g>
<g >
<title>do_translation_fault (1,820,225 samples, 0.02%)</title><rect x="10.6" y="837" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="13.59" y="847.5" ></text>
</g>
<g >
<title>__alloc_skb (1,519,827 samples, 0.01%)</title><rect x="1064.4" y="613" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1067.36" y="623.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (13,481,262 samples, 0.11%)</title><rect x="915.9" y="693" width="1.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="918.92" y="703.5" ></text>
</g>
<g >
<title>el0t_64_irq (5,744,633 samples, 0.05%)</title><rect x="1063.9" y="917" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1066.94" y="927.5" ></text>
</g>
<g >
<title>__napi_poll (4,056,441 samples, 0.03%)</title><rect x="882.0" y="677" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="885.01" y="687.5" ></text>
</g>
<g >
<title>do_pte_missing (1,853,490 samples, 0.02%)</title><rect x="376.9" y="629" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="379.93" y="639.5" ></text>
</g>
<g >
<title>___interceptor_malloc (3,044,995 samples, 0.03%)</title><rect x="10.3" y="901" width="0.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="13.29" y="911.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1,837,691 samples, 0.02%)</title><rect x="910.2" y="325" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="913.22" y="335.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,695,581 samples, 0.01%)</title><rect x="635.3" y="741" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="638.27" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (11,494,529 samples, 0.10%)</title><rect x="105.8" y="901" width="1.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="108.75" y="911.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (97,299,499 samples, 0.83%)</title><rect x="1163.7" y="981" width="9.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1166.73" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (16,860,914 samples, 0.14%)</title><rect x="1101.2" y="949" width="1.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1104.18" y="959.5" ></text>
</g>
<g >
<title>fmt::v9::detail::abort_fuzzing_if (4,261,008 samples, 0.04%)</title><rect x="1133.2" y="789" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1136.25" y="799.5" ></text>
</g>
<g >
<title>inet_sendmsg (2,566,233 samples, 0.02%)</title><rect x="1091.6" y="805" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1094.60" y="815.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (17,375,141 samples, 0.15%)</title><rect x="653.7" y="917" width="1.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="656.66" y="927.5" ></text>
</g>
<g >
<title>ena_clean_tx_irq (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="389" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1151.64" y="399.5" ></text>
</g>
<g >
<title>kmalloc_reserve (19,110,312 samples, 0.16%)</title><rect x="940.8" y="693" width="1.9" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="943.81" y="703.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (8,101,943 samples, 0.07%)</title><rect x="375.0" y="917" width="0.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="377.96" y="927.5" ></text>
</g>
<g >
<title>ipv4_mtu (1,738,570 samples, 0.01%)</title><rect x="939.5" y="709" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="942.55" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,480,542 samples, 0.01%)</title><rect x="1176.7" y="901" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1179.69" y="911.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (4,390,798 samples, 0.04%)</title><rect x="656.2" y="901" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="659.24" y="911.5" ></text>
</g>
<g >
<title>alloc_anon_folio (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="661" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1103.99" y="671.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (23,260,821 samples, 0.20%)</title><rect x="819.5" y="965" width="2.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="822.50" y="975.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (21,256,991 samples, 0.18%)</title><rect x="942.7" y="693" width="2.2" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="945.73" y="703.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_lru (2,166,361 samples, 0.02%)</title><rect x="1154.2" y="789" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1157.18" y="799.5" ></text>
</g>
<g >
<title>handle_softirqs (146,435,639 samples, 1.25%)</title><rect x="920.0" y="437" width="14.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="923.02" y="447.5" ></text>
</g>
<g >
<title>pthread_getspecific (1,986,011 samples, 0.02%)</title><rect x="1117.3" y="725" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1120.32" y="735.5" ></text>
</g>
<g >
<title>el0_svc (112,783,828 samples, 0.96%)</title><rect x="16.2" y="965" width="11.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="19.24" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,758,264 samples, 0.04%)</title><rect x="1158.0" y="933" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1160.98" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,261,008 samples, 0.04%)</title><rect x="1133.2" y="773" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1136.25" y="783.5" ></text>
</g>
<g >
<title>ip_rcv (2,020,395 samples, 0.02%)</title><rect x="306.4" y="709" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="309.37" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (664,239,179 samples, 5.65%)</title><rect x="751.7" y="885" width="66.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="754.67" y="895.5" >__asan_..</text>
</g>
<g >
<title>spdlog::details::os::localtime (2,144,875 samples, 0.02%)</title><rect x="13.7" y="949" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="16.67" y="959.5" ></text>
</g>
<g >
<title>sock_poll (11,006,715 samples, 0.09%)</title><rect x="12.6" y="837" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.57" y="847.5" ></text>
</g>
<g >
<title>tcp_send_mss (4,002,404 samples, 0.03%)</title><rect x="939.5" y="725" width="0.5" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="942.55" y="735.5" ></text>
</g>
<g >
<title>handle_softirqs (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="725" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1190.56" y="735.5" ></text>
</g>
<g >
<title>net_rx_action (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="517" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1069.74" y="527.5" ></text>
</g>
<g >
<title>call_on_irq_stack (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="581" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1069.74" y="591.5" ></text>
</g>
<g >
<title>sock_put (2,021,505 samples, 0.02%)</title><rect x="922.6" y="245" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="925.55" y="255.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (15,145,062 samples, 0.13%)</title><rect x="1118.9" y="901" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1121.90" y="911.5" ></text>
</g>
<g >
<title>tt::chat::server::ChannelManager::get_members (366,669,215 samples, 3.12%)</title><rect x="862.4" y="981" width="36.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="865.42" y="991.5" >tt:..</text>
</g>
<g >
<title>__asan_stack_malloc_2 (4,517,761 samples, 0.04%)</title><rect x="1110.7" y="869" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1113.69" y="879.5" ></text>
</g>
<g >
<title>process_backlog (1,837,691 samples, 0.02%)</title><rect x="910.2" y="357" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="913.22" y="367.5" ></text>
</g>
<g >
<title>__ip_finish_output (4,798,242 samples, 0.04%)</title><rect x="1076.4" y="101" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1079.35" y="111.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (4,435,020 samples, 0.04%)</title><rect x="297.4" y="933" width="0.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="300.40" y="943.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char*, char*&gt; (5,906,722 samples, 0.05%)</title><rect x="1116.7" y="789" width="0.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1119.73" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,543,831 samples, 0.04%)</title><rect x="1111.1" y="837" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1114.14" y="847.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (7,154,882 samples, 0.06%)</title><rect x="106.2" y="741" width="0.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="109.19" y="751.5" ></text>
</g>
<g >
<title>__cond_resched (6,772,712 samples, 0.06%)</title><rect x="1066.3" y="725" width="0.7" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1069.29" y="735.5" ></text>
</g>
<g >
<title>___slab_alloc (7,844,835 samples, 0.07%)</title><rect x="943.3" y="677" width="0.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="946.35" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,519,183 samples, 0.02%)</title><rect x="1139.4" y="741" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1142.40" y="751.5" ></text>
</g>
<g >
<title>do_page_fault (1,085,595 samples, 0.01%)</title><rect x="10.1" y="949" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="13.09" y="959.5" ></text>
</g>
<g >
<title>arch_counter_read (2,103,193 samples, 0.02%)</title><rect x="25.4" y="725" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="28.41" y="735.5" ></text>
</g>
<g >
<title>do_pte_missing (1,937,631 samples, 0.02%)</title><rect x="28.3" y="853" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="31.34" y="863.5" ></text>
</g>
<g >
<title>tcp_delack_timer (2,193,841 samples, 0.02%)</title><rect x="847.5" y="677" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="850.50" y="687.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,482,488 samples, 0.02%)</title><rect x="1067.0" y="693" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1069.97" y="703.5" ></text>
</g>
<g >
<title>ip_send_check (2,106,474 samples, 0.02%)</title><rect x="936.1" y="629" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="939.10" y="639.5" ></text>
</g>
<g >
<title>__ip_finish_output (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="613" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1110.55" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (4,277,417 samples, 0.04%)</title><rect x="1102.0" y="933" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1105.03" y="943.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="597" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1069.74" y="607.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (6,370,553 samples, 0.05%)</title><rect x="1152.0" y="709" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1154.98" y="719.5" ></text>
</g>
<g >
<title>____do_softirq (2,530,129 samples, 0.02%)</title><rect x="862.2" y="789" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="865.16" y="799.5" ></text>
</g>
<g >
<title>tcp_newly_delivered (2,143,648 samples, 0.02%)</title><rect x="1069.6" y="693" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1072.62" y="703.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="613" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1103.99" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,388,422 samples, 0.04%)</title><rect x="1138.3" y="853" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1141.30" y="863.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (5,744,633 samples, 0.05%)</title><rect x="1063.9" y="885" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1066.94" y="895.5" ></text>
</g>
<g >
<title>el0_interrupt (2,530,129 samples, 0.02%)</title><rect x="862.2" y="869" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="865.16" y="879.5" ></text>
</g>
<g >
<title>fmt::v9::detail::format_decimal_result&lt;char*&gt; fmt::v9::detail::format_decimal&lt;char, unsigned int&gt; (13,539,589 samples, 0.12%)</title><rect x="1112.6" y="869" width="1.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1115.61" y="879.5" ></text>
</g>
<g >
<title>ipv4_dst_check (2,139,183 samples, 0.02%)</title><rect x="1076.8" y="133" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1079.83" y="143.5" ></text>
</g>
<g >
<title>write (6,370,553 samples, 0.05%)</title><rect x="1152.0" y="789" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1154.98" y="799.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (15,323,200 samples, 0.13%)</title><rect x="297.2" y="949" width="1.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="300.21" y="959.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.0 (7,103,608 samples, 0.06%)</title><rect x="1088.9" y="661" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1091.91" y="671.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (2,394,600 samples, 0.02%)</title><rect x="1086.3" y="549" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1089.29" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,013,047 samples, 0.02%)</title><rect x="1108.6" y="933" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1111.59" y="943.5" ></text>
</g>
<g >
<title>__sk_mem_schedule (3,831,350 samples, 0.03%)</title><rect x="945.1" y="709" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="948.08" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,052,589 samples, 0.07%)</title><rect x="1171.7" y="773" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1174.67" y="783.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (54,925,313 samples, 0.47%)</title><rect x="940.0" y="725" width="5.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="942.95" y="735.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (8,780,280 samples, 0.07%)</title><rect x="295.9" y="917" width="0.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="298.88" y="927.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,481,757 samples, 0.01%)</title><rect x="376.4" y="725" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="379.35" y="735.5" ></text>
</g>
<g >
<title>__mod_timer (1,663,076 samples, 0.01%)</title><rect x="923.8" y="149" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="926.84" y="159.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (14,583,606 samples, 0.12%)</title><rect x="635.0" y="885" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="638.05" y="895.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,535,561 samples, 0.01%)</title><rect x="1064.5" y="821" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1067.52" y="831.5" ></text>
</g>
<g >
<title>release_sock (14,836,461 samples, 0.13%)</title><rect x="909.8" y="741" width="1.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="912.79" y="751.5" ></text>
</g>
<g >
<title>el0_svc (18,830,329 samples, 0.16%)</title><rect x="11.8" y="997" width="1.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="14.78" y="1007.5" ></text>
</g>
<g >
<title>do_page_fault (2,337,193 samples, 0.02%)</title><rect x="104.2" y="821" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="107.21" y="831.5" ></text>
</g>
<g >
<title>mod_timer (7,103,608 samples, 0.06%)</title><rect x="1088.9" y="629" width="0.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1091.91" y="639.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,337,193 samples, 0.02%)</title><rect x="104.2" y="789" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="107.21" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (23,747,076 samples, 0.20%)</title><rect x="1124.5" y="821" width="2.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1127.52" y="831.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,131,230 samples, 0.02%)</title><rect x="900.3" y="837" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="903.33" y="847.5" ></text>
</g>
<g >
<title>do_translation_fault (1,618,079 samples, 0.01%)</title><rect x="10.3" y="677" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="13.29" y="687.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (475,307,956 samples, 4.05%)</title><rect x="906.1" y="853" width="47.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="909.10" y="863.5" >el0_..</text>
</g>
<g >
<title>__sanitizer::MmapFixedImpl (4,590,971 samples, 0.04%)</title><rect x="636.1" y="789" width="0.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="639.05" y="799.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, std::ratio&lt;1l, 1000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1,995,247 samples, 0.02%)</title><rect x="1182.9" y="885" width="0.2" height="15.0" fill="rgb(239,158,38)" rx="2" ry="2" />
<text  x="1185.93" y="895.5" ></text>
</g>
<g >
<title>__cond_resched (4,933,804 samples, 0.04%)</title><rect x="944.1" y="677" width="0.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="947.14" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,535,637 samples, 0.07%)</title><rect x="1162.9" y="949" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.87" y="959.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (6,695,472 samples, 0.06%)</title><rect x="635.8" y="821" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="638.84" y="831.5" ></text>
</g>
<g >
<title>fmt::v9::detail::count_digits (3,883,368 samples, 0.03%)</title><rect x="1184.3" y="837" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1187.25" y="847.5" ></text>
</g>
<g >
<title>__sanitizer::IncreaseTotalMmap (2,395,092 samples, 0.02%)</title><rect x="1100.8" y="789" width="0.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1103.75" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (8,893,842 samples, 0.08%)</title><rect x="1159.9" y="901" width="0.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1162.89" y="911.5" ></text>
</g>
<g >
<title>el0_svc (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="901" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1110.55" y="911.5" ></text>
</g>
<g >
<title>process_backlog (140,323,148 samples, 1.19%)</title><rect x="1072.2" y="405" width="14.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1075.19" y="415.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (15,145,062 samples, 0.13%)</title><rect x="1118.9" y="885" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1121.90" y="895.5" ></text>
</g>
<g >
<title>el0t_64_sync (8,868,108 samples, 0.08%)</title><rect x="104.0" y="885" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="106.99" y="895.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (14,394,724 samples, 0.12%)</title><rect x="912.9" y="725" width="1.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="915.89" y="735.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="549" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1143.11" y="559.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (9,295,048 samples, 0.08%)</title><rect x="1175.3" y="949" width="1.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1178.34" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (8,416,029 samples, 0.07%)</title><rect x="168.9" y="1013" width="0.8" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="171.87" y="1023.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (157,937,974 samples, 1.34%)</title><rect x="882.6" y="853" width="15.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="885.64" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,060,291 samples, 0.07%)</title><rect x="1111.8" y="837" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1114.80" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,887,478 samples, 0.02%)</title><rect x="1112.6" y="853" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1115.61" y="863.5" ></text>
</g>
<g >
<title>kfree_skbmem (1,764,528 samples, 0.02%)</title><rect x="882.0" y="453" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="885.01" y="463.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,883,368 samples, 0.03%)</title><rect x="1184.3" y="805" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1187.25" y="815.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (6,122,201 samples, 0.05%)</title><rect x="1176.8" y="901" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1179.84" y="911.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,144,875 samples, 0.02%)</title><rect x="13.7" y="757" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.67" y="767.5" ></text>
</g>
<g >
<title>bool std::chrono::operator==&lt;long, std::ratio&lt;1l, 1l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (2,428,732 samples, 0.02%)</title><rect x="1176.4" y="933" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1179.44" y="943.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="725" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1143.11" y="735.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (5,744,633 samples, 0.05%)</title><rect x="1063.9" y="821" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1066.94" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,420,019 samples, 0.09%)</title><rect x="1178.7" y="869" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1181.72" y="879.5" ></text>
</g>
<g >
<title>rmqueue (1,827,821 samples, 0.02%)</title><rect x="376.5" y="597" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="379.50" y="607.5" ></text>
</g>
<g >
<title>fmt::v9::detail::abort_fuzzing_if (4,508,886 samples, 0.04%)</title><rect x="1145.2" y="805" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1148.24" y="815.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2,020,395 samples, 0.02%)</title><rect x="306.4" y="645" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="309.37" y="655.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (11,578,641 samples, 0.10%)</title><rect x="913.2" y="709" width="1.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="916.17" y="719.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (7,589,045 samples, 0.06%)</title><rect x="941.5" y="661" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="944.52" y="671.5" ></text>
</g>
<g >
<title>el0_da (1,827,821 samples, 0.02%)</title><rect x="376.5" y="805" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="379.50" y="815.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,618,079 samples, 0.01%)</title><rect x="10.3" y="725" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="13.29" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (411,511,512 samples, 3.50%)</title><rect x="521.8" y="949" width="41.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="524.81" y="959.5" >std..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (577,395,423 samples, 4.92%)</title><rect x="454.2" y="965" width="58.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="457.24" y="975.5" >std::_..</text>
</g>
<g >
<title>tcp_rcv_space_adjust (4,394,622 samples, 0.04%)</title><rect x="25.2" y="773" width="0.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="28.18" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,017,230 samples, 0.02%)</title><rect x="1176.8" y="869" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1179.84" y="879.5" ></text>
</g>
<g >
<title>alloc_anon_folio (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="565" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1143.11" y="575.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="629" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1190.56" y="639.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="629" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1125.11" y="639.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="565" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1125.11" y="575.5" ></text>
</g>
<g >
<title>neigh_hh_output (1,837,691 samples, 0.02%)</title><rect x="910.2" y="533" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="913.22" y="543.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::end (8,832,460 samples, 0.08%)</title><rect x="1152.9" y="917" width="0.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1155.86" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,095,895 samples, 0.02%)</title><rect x="1183.1" y="853" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1186.13" y="863.5" ></text>
</g>
<g >
<title>__pi_clear_page (8,318,901 samples, 0.07%)</title><rect x="913.3" y="629" width="0.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="916.33" y="639.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (331,797,809 samples, 2.82%)</title><rect x="1064.9" y="997" width="33.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1067.86" y="1007.5" >tt..</text>
</g>
<g >
<title>operator delete (4,040,740 samples, 0.03%)</title><rect x="168.9" y="965" width="0.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="171.87" y="975.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (11,494,529 samples, 0.10%)</title><rect x="105.8" y="885" width="1.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="108.75" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (486,802,661 samples, 4.14%)</title><rect x="308.4" y="965" width="48.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="311.44" y="975.5" >__as..</text>
</g>
<g >
<title>do_anonymous_page (1,557,568 samples, 0.01%)</title><rect x="308.3" y="789" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="311.28" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,701,184 samples, 0.05%)</title><rect x="1174.1" y="949" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1177.15" y="959.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char*, char*&gt; (4,237,563 samples, 0.04%)</title><rect x="1132.8" y="741" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1135.82" y="751.5" ></text>
</g>
<g >
<title>ip_local_deliver (4,056,441 samples, 0.03%)</title><rect x="882.0" y="581" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="885.01" y="591.5" ></text>
</g>
<g >
<title>__do_softirq (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="741" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1190.56" y="751.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (2,149,778 samples, 0.02%)</title><rect x="1157.5" y="981" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1160.55" y="991.5" ></text>
</g>
<g >
<title>__napi_poll (2,131,230 samples, 0.02%)</title><rect x="900.3" y="709" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="903.33" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,165,114 samples, 0.02%)</title><rect x="1098.9" y="933" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1101.85" y="943.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="965" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1103.99" y="975.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (2,309,062 samples, 0.02%)</title><rect x="923.0" y="229" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="925.95" y="239.5" ></text>
</g>
<g >
<title>do_vmi_munmap (2,427,793 samples, 0.02%)</title><rect x="106.4" y="629" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="109.43" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,604,833 samples, 0.07%)</title><rect x="1184.6" y="853" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1187.64" y="863.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (40,232,178 samples, 0.34%)</title><rect x="653.7" y="949" width="4.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="656.66" y="959.5" ></text>
</g>
<g >
<title>do_el0_svc (4,590,971 samples, 0.04%)</title><rect x="636.1" y="709" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="639.05" y="719.5" ></text>
</g>
<g >
<title>vfs_write (6,370,553 samples, 0.05%)</title><rect x="1152.0" y="645" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1154.98" y="655.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (1,519,827 samples, 0.01%)</title><rect x="1064.4" y="629" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1067.36" y="639.5" ></text>
</g>
<g >
<title>InitializeCommonInterceptors (4,865,220 samples, 0.04%)</title><rect x="10.3" y="1061" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="13.29" y="1071.5" ></text>
</g>
<g >
<title>inet_recvmsg (51,858,874 samples, 0.44%)</title><rect x="20.4" y="821" width="5.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="23.41" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,473,407 samples, 0.06%)</title><rect x="1170.2" y="885" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1173.20" y="895.5" ></text>
</g>
<g >
<title>operator new (1,651,144 samples, 0.01%)</title><rect x="1107.4" y="917" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1110.38" y="927.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2,193,841 samples, 0.02%)</title><rect x="847.5" y="597" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="850.50" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (366,669,215 samples, 3.12%)</title><rect x="862.4" y="949" width="36.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="865.42" y="959.5" >std..</text>
</g>
<g >
<title>process_output_block (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1191.51" y="623.5" ></text>
</g>
<g >
<title>__sys_sendto (447,819,992 samples, 3.81%)</title><rect x="907.2" y="805" width="45.0" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="910.21" y="815.5" >__sy..</text>
</g>
<g >
<title>__netif_receive_skb (1,837,691 samples, 0.02%)</title><rect x="910.2" y="341" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="913.22" y="351.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,992,393 samples, 0.02%)</title><rect x="1103.7" y="901" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1106.67" y="911.5" ></text>
</g>
<g >
<title>rcu_core (2,373,698 samples, 0.02%)</title><rect x="1135.4" y="645" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1138.39" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (486,802,661 samples, 4.14%)</title><rect x="308.4" y="949" width="48.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="311.44" y="959.5" >__as..</text>
</g>
<g >
<title>do_translation_fault (1,896,715 samples, 0.02%)</title><rect x="169.1" y="853" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="172.08" y="863.5" ></text>
</g>
<g >
<title>__sk_mem_raise_allocated (2,323,789 samples, 0.02%)</title><rect x="945.5" y="709" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="948.47" y="719.5" ></text>
</g>
<g >
<title>mas_find (2,163,265 samples, 0.02%)</title><rect x="377.1" y="581" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="380.11" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::MmapFixedImpl (2,163,265 samples, 0.02%)</title><rect x="377.1" y="789" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="380.11" y="799.5" ></text>
</g>
<g >
<title>tcp_write_xmit (4,238,396 samples, 0.04%)</title><rect x="924.0" y="197" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="927.00" y="207.5" ></text>
</g>
<g >
<title>memset (4,175,783 samples, 0.04%)</title><rect x="936.7" y="661" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="939.72" y="671.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (20,188,207 samples, 0.17%)</title><rect x="1130.4" y="805" width="2.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1133.40" y="815.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (7,402,835 samples, 0.06%)</title><rect x="603.2" y="933" width="0.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="606.24" y="943.5" ></text>
</g>
<g >
<title>do_mem_abort (1,618,079 samples, 0.01%)</title><rect x="10.3" y="693" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="13.29" y="703.5" ></text>
</g>
<g >
<title>el0_da (1,651,144 samples, 0.01%)</title><rect x="43.0" y="933" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="46.03" y="943.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (12,251,459 samples, 0.10%)</title><rect x="1147.6" y="805" width="1.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1150.58" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,111,008 samples, 0.02%)</title><rect x="1175.1" y="949" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1178.12" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,188,876 samples, 0.05%)</title><rect x="1110.1" y="869" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1113.07" y="879.5" ></text>
</g>
<g >
<title>ktime_get (4,469,220 samples, 0.04%)</title><rect x="937.7" y="677" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="940.73" y="687.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (4,056,441 samples, 0.03%)</title><rect x="882.0" y="517" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="885.01" y="527.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="373" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1069.74" y="383.5" ></text>
</g>
<g >
<title>el0_da (1,535,561 samples, 0.01%)</title><rect x="1064.5" y="885" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1067.52" y="895.5" ></text>
</g>
<g >
<title>tcp_check_space (2,291,598 samples, 0.02%)</title><rect x="938.4" y="661" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="941.42" y="671.5" ></text>
</g>
<g >
<title>handle_softirqs (2,131,230 samples, 0.02%)</title><rect x="900.3" y="741" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="903.33" y="751.5" ></text>
</g>
<g >
<title>do_softirq (1,837,691 samples, 0.02%)</title><rect x="910.2" y="485" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="913.22" y="495.5" ></text>
</g>
<g >
<title>el0_svc (2,163,265 samples, 0.02%)</title><rect x="377.1" y="725" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="380.11" y="735.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (1,875,603 samples, 0.02%)</title><rect x="11.0" y="965" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="13.96" y="975.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (4,339,647 samples, 0.04%)</title><rect x="105.8" y="805" width="0.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="108.75" y="815.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="645" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1143.11" y="655.5" ></text>
</g>
<g >
<title>handle_softirqs (8,780,280 samples, 0.07%)</title><rect x="295.9" y="789" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="298.88" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,246,910 samples, 0.02%)</title><rect x="1189.8" y="997" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.77" y="1007.5" ></text>
</g>
<g >
<title>_IO_file_write (4,554,831 samples, 0.04%)</title><rect x="1188.3" y="853" width="0.4" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1191.29" y="863.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="517" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1136.68" y="527.5" ></text>
</g>
<g >
<title>do_epoll_wait (16,844,004 samples, 0.14%)</title><rect x="12.0" y="901" width="1.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.98" y="911.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (449,503,926 samples, 3.83%)</title><rect x="1108.6" y="965" width="45.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1111.59" y="975.5" >void..</text>
</g>
<g >
<title>folio_add_lru (1,896,715 samples, 0.02%)</title><rect x="169.1" y="725" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="172.08" y="735.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (8,140,369 samples, 0.07%)</title><rect x="1185.5" y="869" width="0.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1188.51" y="879.5" ></text>
</g>
<g >
<title>std::equal_to&lt;int&gt;::operator (4,746,193 samples, 0.04%)</title><rect x="818.6" y="901" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="821.62" y="911.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (1,519,827 samples, 0.01%)</title><rect x="1064.4" y="661" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1067.36" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (16,306,184 samples, 0.14%)</title><rect x="1179.8" y="789" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1182.77" y="799.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2,190,230 samples, 0.02%)</title><rect x="168.6" y="965" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="171.65" y="975.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,944,255 samples, 0.02%)</title><rect x="1163.7" y="805" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1166.73" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::rfind (1,288,664,866 samples, 10.97%)</title><rect x="169.9" y="997" width="129.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="172.92" y="1007.5" >std::__cxx11::ba..</text>
</g>
<g >
<title>irq_exit_rcu (2,193,841 samples, 0.02%)</title><rect x="847.5" y="853" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="850.50" y="863.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (2,395,092 samples, 0.02%)</title><rect x="1100.8" y="933" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1103.75" y="943.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;, 0ul&gt; (6,973,727 samples, 0.06%)</title><rect x="821.1" y="901" width="0.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="824.14" y="911.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char*, char*&gt; (4,237,563 samples, 0.04%)</title><rect x="1132.8" y="757" width="0.4" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1135.82" y="767.5" ></text>
</g>
<g >
<title>do_page_fault (1,944,255 samples, 0.02%)</title><rect x="1163.7" y="853" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1166.73" y="863.5" ></text>
</g>
<g >
<title>arch_counter_get_cntvct (2,151,377 samples, 0.02%)</title><rect x="938.0" y="661" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="940.96" y="671.5" ></text>
</g>
<g >
<title>raw_local_deliver (6,146,574 samples, 0.05%)</title><rect x="921.1" y="261" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="924.11" y="271.5" ></text>
</g>
<g >
<title>tcp_queue_rcv (2,196,897 samples, 0.02%)</title><rect x="1069.4" y="677" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1072.40" y="687.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (2,015,562 samples, 0.02%)</title><rect x="657.5" y="917" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="660.50" y="927.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (7,066,013 samples, 0.06%)</title><rect x="750.3" y="805" width="0.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="753.28" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,165,114 samples, 0.02%)</title><rect x="1098.9" y="949" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1101.85" y="959.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char*, char*&gt; (11,414,523 samples, 0.10%)</title><rect x="1144.1" y="773" width="1.1" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1147.09" y="783.5" ></text>
</g>
<g >
<title>__ip_finish_output (2,193,841 samples, 0.02%)</title><rect x="847.5" y="533" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="850.50" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (11,735,661,425 samples, 99.90%)</title><rect x="11.2" y="1093" width="1178.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.15" y="1103.5" >[libc.so.6]</text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (2,260,114 samples, 0.02%)</title><rect x="1116.3" y="757" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1119.31" y="767.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,530,129 samples, 0.02%)</title><rect x="862.2" y="837" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="865.16" y="847.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (1,660,275 samples, 0.01%)</title><rect x="953.8" y="853" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="956.84" y="863.5" ></text>
</g>
<g >
<title>get_page_from_freelist (9,969,659 samples, 0.08%)</title><rect x="913.3" y="645" width="1.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="916.33" y="655.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (2,349,596 samples, 0.02%)</title><rect x="939.1" y="677" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="942.11" y="687.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (1,986,011 samples, 0.02%)</title><rect x="1117.3" y="741" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1120.32" y="751.5" ></text>
</g>
<g >
<title>free_page_and_swap_cache (2,042,202 samples, 0.02%)</title><rect x="674.2" y="693" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="677.23" y="703.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1,685,267 samples, 0.01%)</title><rect x="674.1" y="709" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="677.06" y="719.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="933" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1110.55" y="943.5" ></text>
</g>
<g >
<title>_IO_doallocbuf (2,144,875 samples, 0.02%)</title><rect x="13.7" y="837" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="16.67" y="847.5" ></text>
</g>
<g >
<title>tcp_data_queue (4,308,255 samples, 0.04%)</title><rect x="1069.2" y="693" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1072.19" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (161,506,612 samples, 1.37%)</title><rect x="620.7" y="933" width="16.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="623.73" y="943.5" ></text>
</g>
<g >
<title>el1_interrupt (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="645" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1069.74" y="655.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (13,782,365 samples, 0.12%)</title><rect x="1075.7" y="197" width="1.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1078.66" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (5,898,248 samples, 0.05%)</title><rect x="1103.1" y="933" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1106.08" y="943.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (11,426,820 samples, 0.10%)</title><rect x="10.0" y="1125" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1135.5" ></text>
</g>
<g >
<title>operator new (18,929,971 samples, 0.16%)</title><rect x="635.0" y="901" width="1.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="638.05" y="911.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="789" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1136.68" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,341,511 samples, 0.04%)</title><rect x="1114.4" y="853" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1117.38" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,671,544 samples, 0.07%)</title><rect x="1149.4" y="821" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1152.42" y="831.5" ></text>
</g>
<g >
<title>do_pte_missing (1,944,255 samples, 0.02%)</title><rect x="1163.7" y="789" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1166.73" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (494,511,445 samples, 4.21%)</title><rect x="604.0" y="981" width="49.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="606.99" y="991.5" >std::..</text>
</g>
<g >
<title>call_on_irq_stack (2,530,129 samples, 0.02%)</title><rect x="862.2" y="805" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="865.16" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (4,018,159 samples, 0.03%)</title><rect x="1186.6" y="885" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.56" y="895.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (2,131,230 samples, 0.02%)</title><rect x="900.3" y="885" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="903.33" y="895.5" ></text>
</g>
<g >
<title>lru_add_drain_cpu (2,427,793 samples, 0.02%)</title><rect x="106.4" y="565" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="109.43" y="575.5" ></text>
</g>
<g >
<title>__sys_sendto (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="821" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1110.55" y="831.5" ></text>
</g>
<g >
<title>n_tty_write (2,345,143 samples, 0.02%)</title><rect x="1152.4" y="597" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1155.39" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,309,945 samples, 0.04%)</title><rect x="1115.9" y="789" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1118.88" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;int, false&gt;::_M_next (6,642,908 samples, 0.06%)</title><rect x="830.0" y="949" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="832.98" y="959.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (20,188,207 samples, 0.17%)</title><rect x="1130.4" y="741" width="2.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1133.40" y="751.5" ></text>
</g>
<g >
<title>____do_softirq (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="565" width="0.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1069.74" y="575.5" ></text>
</g>
<g >
<title>do_notify_resume (2,058,555 samples, 0.02%)</title><rect x="750.1" y="837" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="753.08" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,036,713 samples, 0.07%)</title><rect x="1189.0" y="933" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1191.97" y="943.5" ></text>
</g>
<g >
<title>el0_svc (6,474,014 samples, 0.06%)</title><rect x="1153.7" y="965" width="0.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1156.74" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,106,062 samples, 0.02%)</title><rect x="1114.0" y="869" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1116.97" y="879.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (1,648,665,226 samples, 14.03%)</title><rect x="899.2" y="981" width="165.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="902.25" y="991.5" >tt::chat::server::Epo..</text>
</g>
<g >
<title>arch_local_irq_restore (34,796,523 samples, 0.30%)</title><rect x="930.8" y="181" width="3.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="933.80" y="191.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,896,715 samples, 0.02%)</title><rect x="169.1" y="821" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="172.08" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (4,203,145 samples, 0.04%)</title><rect x="1157.1" y="933" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1160.12" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,215,717 samples, 0.02%)</title><rect x="443.8" y="965" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="446.82" y="975.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (163,559,060 samples, 1.39%)</title><rect x="882.4" y="933" width="16.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="885.41" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2,190,230 samples, 0.02%)</title><rect x="168.6" y="997" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="171.65" y="1007.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,535,561 samples, 0.01%)</title><rect x="1064.5" y="789" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1067.52" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,250,425 samples, 0.02%)</title><rect x="1109.2" y="901" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1112.17" y="911.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,846,251 samples, 0.02%)</title><rect x="10.1" y="1029" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="13.09" y="1039.5" ></text>
</g>
<g >
<title>alloc_anon_folio (2,034,048 samples, 0.02%)</title><rect x="373.9" y="693" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="376.89" y="703.5" ></text>
</g>
<g >
<title>memset (2,062,665 samples, 0.02%)</title><rect x="923.6" y="165" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="926.63" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2,035,615 samples, 0.02%)</title><rect x="1102.9" y="981" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1105.87" y="991.5" ></text>
</g>
<g >
<title>do_translation_fault (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="677" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1143.11" y="687.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (18,830,329 samples, 0.16%)</title><rect x="11.8" y="965" width="1.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="14.78" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (637,052,575 samples, 5.42%)</title><rect x="379.8" y="981" width="64.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="382.82" y="991.5" >__asan_..</text>
</g>
<g >
<title>__do_softirq (2,131,230 samples, 0.02%)</title><rect x="900.3" y="757" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="903.33" y="767.5" ></text>
</g>
<g >
<title>skb_free_head (2,389,812 samples, 0.02%)</title><rect x="927.4" y="149" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="930.43" y="159.5" ></text>
</g>
<g >
<title>tcp_data_ready (72,696,212 samples, 0.62%)</title><rect x="1078.1" y="213" width="7.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1081.06" y="223.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (4,865,220 samples, 0.04%)</title><rect x="10.3" y="997" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.29" y="1007.5" ></text>
</g>
<g >
<title>__inet_lookup_skb (4,031,735 samples, 0.03%)</title><rect x="922.1" y="245" width="0.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="925.15" y="255.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1,837,691 samples, 0.02%)</title><rect x="910.2" y="645" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="913.22" y="655.5" ></text>
</g>
<g >
<title>do_translation_fault (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="773" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1103.99" y="783.5" ></text>
</g>
<g >
<title>skb_release_data (2,280,431 samples, 0.02%)</title><rect x="1067.6" y="677" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1070.64" y="687.5" ></text>
</g>
<g >
<title>ip_local_deliver (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="405" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1069.74" y="415.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (4,236,904 samples, 0.04%)</title><rect x="1146.7" y="821" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1149.71" y="831.5" ></text>
</g>
<g >
<title>freeze_slab (2,233,146 samples, 0.02%)</title><rect x="942.3" y="661" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="945.29" y="671.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2,897,998 samples, 0.02%)</title><rect x="603.7" y="917" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="606.69" y="927.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="613" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1151.64" y="623.5" ></text>
</g>
<g >
<title>call_on_irq_stack (5,890,921 samples, 0.05%)</title><rect x="674.1" y="821" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="677.06" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,203,426 samples, 0.05%)</title><rect x="1165.3" y="885" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1168.31" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_4 (1,944,255 samples, 0.02%)</title><rect x="1163.7" y="965" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1166.73" y="975.5" ></text>
</g>
<g >
<title>pte_offset_map_nolock (2,347,081 samples, 0.02%)</title><rect x="102.3" y="757" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="105.34" y="767.5" ></text>
</g>
<g >
<title>handle_mm_fault (20,382,342 samples, 0.17%)</title><rect x="100.5" y="789" width="2.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="103.53" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (2,035,615 samples, 0.02%)</title><rect x="1102.9" y="949" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1105.87" y="959.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="821" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1190.56" y="831.5" ></text>
</g>
<g >
<title>rcu_do_batch (2,042,202 samples, 0.02%)</title><rect x="674.2" y="725" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="677.23" y="735.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::chrono::__is_duration&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::value, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::type std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1,995,247 samples, 0.02%)</title><rect x="1182.9" y="901" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1185.93" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,895,660 samples, 0.02%)</title><rect x="1116.5" y="789" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1119.54" y="799.5" ></text>
</g>
<g >
<title>_copy_from_iter (2,200,617 samples, 0.02%)</title><rect x="1070.1" y="725" width="0.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1073.10" y="735.5" ></text>
</g>
<g >
<title>do_page_fault (20,382,342 samples, 0.17%)</title><rect x="100.5" y="805" width="2.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="103.53" y="815.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,481,757 samples, 0.01%)</title><rect x="376.4" y="677" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="379.35" y="687.5" ></text>
</g>
<g >
<title>__asan::InitializeAsanInterceptors (4,865,220 samples, 0.04%)</title><rect x="10.3" y="1077" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="13.29" y="1087.5" ></text>
</g>
<g >
<title>el0t_64_sync (24,776,329 samples, 0.21%)</title><rect x="100.1" y="885" width="2.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="103.08" y="895.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (146,309,609 samples, 1.25%)</title><rect x="847.7" y="965" width="14.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="850.72" y="975.5" ></text>
</g>
<g >
<title>invoke_syscall (2,163,265 samples, 0.02%)</title><rect x="377.1" y="677" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="380.11" y="687.5" ></text>
</g>
<g >
<title>do_epoll_pwait.part.0 (16,844,004 samples, 0.14%)</title><rect x="12.0" y="917" width="1.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="14.98" y="927.5" ></text>
</g>
<g >
<title>main (11,735,661,425 samples, 99.90%)</title><rect x="11.2" y="1077" width="1178.8" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="14.15" y="1087.5" >main</text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (3,322,417 samples, 0.03%)</title><rect x="1165.9" y="885" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1168.93" y="895.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1,824,393 samples, 0.02%)</title><rect x="27.0" y="821" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="29.95" y="831.5" ></text>
</g>
<g >
<title>__check_object_size (6,619,717 samples, 0.06%)</title><rect x="24.1" y="725" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="27.12" y="735.5" ></text>
</g>
<g >
<title>__kfree_skb (4,337,683 samples, 0.04%)</title><rect x="1067.4" y="693" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1070.43" y="703.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (1,875,603 samples, 0.02%)</title><rect x="11.0" y="917" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="13.96" y="927.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (1,783,268 samples, 0.02%)</title><rect x="375.6" y="885" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="378.60" y="895.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (7,154,882 samples, 0.06%)</title><rect x="106.2" y="789" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="109.19" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (21,919,207 samples, 0.19%)</title><rect x="1122.3" y="837" width="2.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1125.32" y="847.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (4,203,145 samples, 0.04%)</title><rect x="1157.1" y="965" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1160.12" y="975.5" ></text>
</g>
<g >
<title>___interceptor_fwrite.part.0 (8,639,454 samples, 0.07%)</title><rect x="1151.8" y="885" width="0.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1154.76" y="895.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,383,792 samples, 0.02%)</title><rect x="818.2" y="773" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="821.16" y="783.5" ></text>
</g>
<g >
<title>do_page_fault (1,651,144 samples, 0.01%)</title><rect x="43.0" y="885" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="46.03" y="895.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2,126,388 samples, 0.02%)</title><rect x="15.4" y="997" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="18.45" y="1007.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (399,199,526 samples, 3.40%)</title><rect x="563.1" y="949" width="40.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="566.14" y="959.5" >__a..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (18,875,858 samples, 0.16%)</title><rect x="1098.2" y="997" width="1.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1101.19" y="1007.5" ></text>
</g>
<g >
<title>__sanitizer::RunMallocHooks (2,756,893 samples, 0.02%)</title><rect x="377.3" y="853" width="0.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="380.33" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,743,150 samples, 0.01%)</title><rect x="1162.1" y="965" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.08" y="975.5" ></text>
</g>
<g >
<title>__napi_poll (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="421" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1151.64" y="431.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;::begin (165,756,168 samples, 1.41%)</title><rect x="831.1" y="981" width="16.6" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="834.07" y="991.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,618,079 samples, 0.01%)</title><rect x="10.3" y="741" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="13.29" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,060,291 samples, 0.07%)</title><rect x="1111.8" y="853" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1114.80" y="863.5" ></text>
</g>
<g >
<title>aa_inet_msg_perm (11,077,817 samples, 0.09%)</title><rect x="25.8" y="789" width="1.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="28.84" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (146,309,609 samples, 1.25%)</title><rect x="847.7" y="933" width="14.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="850.72" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,506,033 samples, 0.04%)</title><rect x="820.7" y="885" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="823.68" y="895.5" ></text>
</g>
<g >
<title>___interceptor_read.part.0 (127,083,778 samples, 1.08%)</title><rect x="14.8" y="1029" width="12.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="17.80" y="1039.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (4,567,542 samples, 0.04%)</title><rect x="1156.7" y="981" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1159.67" y="991.5" ></text>
</g>
<g >
<title>__run_timers (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="693" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1190.56" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (608,156,535 samples, 5.18%)</title><rect x="107.6" y="997" width="61.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="110.56" y="1007.5" >std::_..</text>
</g>
<g >
<title>_IO_file_write (6,370,553 samples, 0.05%)</title><rect x="1152.0" y="805" width="0.6" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1154.98" y="815.5" ></text>
</g>
<g >
<title>tcp_established_options (4,245,887 samples, 0.04%)</title><rect x="1090.7" y="709" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="1093.72" y="719.5" ></text>
</g>
<g >
<title>ip_rcv (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="437" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1069.74" y="447.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,944,255 samples, 0.02%)</title><rect x="1163.7" y="837" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1166.73" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_S_equals (1,568,521 samples, 0.01%)</title><rect x="898.7" y="885" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="901.69" y="895.5" ></text>
</g>
<g >
<title>fmt::v9::vformat[abi:cxx11] (10,897,763 samples, 0.09%)</title><rect x="1100.1" y="981" width="1.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1103.08" y="991.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (2,110,755 samples, 0.02%)</title><rect x="945.7" y="677" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="948.70" y="687.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (1,853,490 samples, 0.02%)</title><rect x="376.9" y="581" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="379.93" y="591.5" ></text>
</g>
<g >
<title>handle_softirqs (2,482,488 samples, 0.02%)</title><rect x="1067.0" y="629" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1069.97" y="639.5" ></text>
</g>
<g >
<title>do_page_fault (1,883,141 samples, 0.02%)</title><rect x="306.6" y="885" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="309.57" y="895.5" ></text>
</g>
<g >
<title>sock_def_readable (16,831,129 samples, 0.14%)</title><rect x="928.7" y="181" width="1.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="931.67" y="191.5" ></text>
</g>
<g >
<title>ip_finish_output (167,754,297 samples, 1.43%)</title><rect x="1070.8" y="629" width="16.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1073.76" y="639.5" ></text>
</g>
<g >
<title>do_wp_page (1,827,821 samples, 0.02%)</title><rect x="376.5" y="709" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="379.50" y="719.5" ></text>
</g>
<g >
<title>do_translation_fault (20,382,342 samples, 0.17%)</title><rect x="100.5" y="821" width="2.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="103.53" y="831.5" ></text>
</g>
<g >
<title>do_translation_fault (1,853,490 samples, 0.02%)</title><rect x="376.9" y="709" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="379.93" y="719.5" ></text>
</g>
<g >
<title>__alloc_pages (1,827,821 samples, 0.02%)</title><rect x="376.5" y="629" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="379.50" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (131,552,381 samples, 1.12%)</title><rect x="604.0" y="949" width="13.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="606.99" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,076,832 samples, 0.03%)</title><rect x="1158.5" y="917" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1161.46" y="927.5" ></text>
</g>
<g >
<title>tcp_tso_segs (2,158,117 samples, 0.02%)</title><rect x="1090.5" y="693" width="0.2" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1093.51" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (4,203,145 samples, 0.04%)</title><rect x="1157.1" y="949" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1160.12" y="959.5" ></text>
</g>
<g >
<title>dst_release (1,846,760 samples, 0.02%)</title><rect x="924.4" y="213" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="927.43" y="223.5" ></text>
</g>
<g >
<title>loopback_xmit (2,394,600 samples, 0.02%)</title><rect x="1086.3" y="533" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1089.29" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (1,955,832 samples, 0.02%)</title><rect x="819.3" y="933" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="822.30" y="943.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;, __sanitizer::LargeMmapAllocatorPtrArrayStatic&gt;::Allocate (1,618,079 samples, 0.01%)</title><rect x="10.3" y="869" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="13.29" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (559,565,240 samples, 4.76%)</title><rect x="43.4" y="965" width="56.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="46.41" y="975.5" >__asa..</text>
</g>
<g >
<title>do_anonymous_page (1,695,581 samples, 0.01%)</title><rect x="635.3" y="677" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="638.27" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (101,544,075 samples, 0.86%)</title><rect x="444.0" y="965" width="10.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="447.04" y="975.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (5,898,248 samples, 0.05%)</title><rect x="1103.1" y="949" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1106.08" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,334,828 samples, 0.04%)</title><rect x="1109.4" y="901" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1112.39" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (61,310,063 samples, 0.52%)</title><rect x="300.6" y="981" width="6.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="303.60" y="991.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_5 (1,937,631 samples, 0.02%)</title><rect x="28.3" y="1013" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="31.34" y="1023.5" ></text>
</g>
<g >
<title>tcp_ack (2,293,575 samples, 0.02%)</title><rect x="910.4" y="677" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="913.41" y="687.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (4,238,396 samples, 0.04%)</title><rect x="924.0" y="181" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="927.00" y="191.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_range_ (8,639,454 samples, 0.07%)</title><rect x="1151.8" y="901" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1154.76" y="911.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (2,482,488 samples, 0.02%)</title><rect x="1067.0" y="581" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1069.97" y="591.5" ></text>
</g>
<g >
<title>fmt::v9::vformat[abi:cxx11] (210,672,356 samples, 1.79%)</title><rect x="357.8" y="997" width="21.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="360.77" y="1007.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,651,144 samples, 0.01%)</title><rect x="43.0" y="949" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="46.03" y="959.5" ></text>
</g>
<g >
<title>__arm64_sys_epoll_pwait (16,844,004 samples, 0.14%)</title><rect x="12.0" y="933" width="1.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="14.98" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (23,747,076 samples, 0.20%)</title><rect x="1124.5" y="837" width="2.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1127.52" y="847.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (112,783,828 samples, 0.96%)</title><rect x="16.2" y="981" width="11.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="19.24" y="991.5" ></text>
</g>
<g >
<title>el0_svc (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="789" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1191.51" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (12,369,275 samples, 0.11%)</title><rect x="1166.3" y="853" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1169.27" y="863.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,827,821 samples, 0.02%)</title><rect x="376.5" y="821" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="379.50" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (63,525,504 samples, 0.54%)</title><rect x="300.4" y="997" width="6.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="303.38" y="1007.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2,617,348 samples, 0.02%)</title><rect x="1064.1" y="693" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1067.10" y="703.5" ></text>
</g>
<g >
<title>el0t_64_sync (112,783,828 samples, 0.96%)</title><rect x="16.2" y="997" width="11.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="19.24" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (42,077,698 samples, 0.36%)</title><rect x="653.7" y="997" width="4.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="656.66" y="1007.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,820,225 samples, 0.02%)</title><rect x="10.6" y="661" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="13.59" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,031,166 samples, 0.02%)</title><rect x="1167.7" y="933" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1170.73" y="943.5" ></text>
</g>
<g >
<title>ip_local_deliver (133,366,243 samples, 1.14%)</title><rect x="921.1" y="309" width="13.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="924.11" y="319.5" ></text>
</g>
<g >
<title>ip_local_deliver (4,939,643 samples, 0.04%)</title><rect x="750.3" y="613" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="753.28" y="623.5" ></text>
</g>
<g >
<title>check_heap_object (9,220,348 samples, 0.08%)</title><rect x="916.1" y="677" width="1.0" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="919.13" y="687.5" ></text>
</g>
<g >
<title>do_mmap (4,590,971 samples, 0.04%)</title><rect x="636.1" y="613" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="639.05" y="623.5" ></text>
</g>
<g >
<title>neigh_hh_output (166,641,828 samples, 1.42%)</title><rect x="919.4" y="565" width="16.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="922.36" y="575.5" ></text>
</g>
<g >
<title>handle_softirqs (144,476,671 samples, 1.23%)</title><rect x="1071.8" y="453" width="14.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1074.78" y="463.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (11,318,368 samples, 0.10%)</title><rect x="1088.5" y="693" width="1.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1091.48" y="703.5" ></text>
</g>
<g >
<title>___interceptor_strlen.part.0 (6,063,278 samples, 0.05%)</title><rect x="299.4" y="981" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="302.37" y="991.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (678,040,719 samples, 5.77%)</title><rect x="751.0" y="949" width="68.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="753.99" y="959.5" >std::_H..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (163,559,060 samples, 1.39%)</title><rect x="882.4" y="917" width="16.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="885.41" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_5 (1,937,631 samples, 0.02%)</title><rect x="28.3" y="1029" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="31.34" y="1039.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,872,740 samples, 0.02%)</title><rect x="10.0" y="1061" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (331,797,809 samples, 2.82%)</title><rect x="1064.9" y="981" width="33.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1067.86" y="991.5" >tt..</text>
</g>
<g >
<title>handle_softirqs (2,530,129 samples, 0.02%)</title><rect x="862.2" y="757" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="865.16" y="767.5" ></text>
</g>
<g >
<title>ip_finish_output (2,294,067 samples, 0.02%)</title><rect x="924.0" y="117" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="927.00" y="127.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (2,298,453 samples, 0.02%)</title><rect x="910.8" y="629" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="913.84" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (4,729,767 samples, 0.04%)</title><rect x="1154.8" y="1013" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1157.79" y="1023.5" ></text>
</g>
<g >
<title>lru_add_drain (2,427,793 samples, 0.02%)</title><rect x="106.4" y="581" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="109.43" y="591.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (1,640,166,070 samples, 13.96%)</title><rect x="657.9" y="997" width="164.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="660.89" y="1007.5" >std::unordered_map&lt;in..</text>
</g>
<g >
<title>do_page_fault (1,853,490 samples, 0.02%)</title><rect x="376.9" y="693" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="379.93" y="703.5" ></text>
</g>
<g >
<title>tcp_ack_update_rtt (2,238,503 samples, 0.02%)</title><rect x="927.7" y="181" width="0.2" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="930.67" y="191.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (2,193,841 samples, 0.02%)</title><rect x="847.5" y="581" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="850.50" y="591.5" ></text>
</g>
<g >
<title>do_notify_resume (1,811,437 samples, 0.02%)</title><rect x="16.1" y="933" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="19.05" y="943.5" ></text>
</g>
<g >
<title>security_mmap_file (2,444,337 samples, 0.02%)</title><rect x="106.2" y="677" width="0.2" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="109.19" y="687.5" ></text>
</g>
<g >
<title>alloc_pages (1,820,225 samples, 0.02%)</title><rect x="10.6" y="709" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="13.59" y="719.5" ></text>
</g>
<g >
<title>__sk_mem_schedule (2,384,324 samples, 0.02%)</title><rect x="1085.8" y="197" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1088.82" y="207.5" ></text>
</g>
<g >
<title>tcp_release_cb (2,152,833 samples, 0.02%)</title><rect x="911.1" y="725" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="914.07" y="735.5" ></text>
</g>
<g >
<title>do_softirq (2,482,488 samples, 0.02%)</title><rect x="1067.0" y="709" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1069.97" y="719.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,715,064 samples, 0.02%)</title><rect x="10.0" y="1045" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" ></text>
</g>
<g >
<title>inet_sendmsg (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="789" width="0.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1110.55" y="799.5" ></text>
</g>
<g >
<title>call_timer_fn (2,105,951 samples, 0.02%)</title><rect x="296.6" y="725" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="299.55" y="735.5" ></text>
</g>
<g >
<title>__sk_mem_reclaim (2,099,767 samples, 0.02%)</title><rect x="1069.0" y="661" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1071.98" y="671.5" ></text>
</g>
<g >
<title>__sock_sendmsg (413,232,681 samples, 3.52%)</title><rect x="908.6" y="789" width="41.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="911.56" y="799.5" >__s..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,164,882 samples, 0.05%)</title><rect x="1162.3" y="933" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.25" y="943.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (4,104,971 samples, 0.03%)</title><rect x="1177.0" y="853" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1180.04" y="863.5" ></text>
</g>
<g >
<title>___interceptor_memcpy (2,494,945 samples, 0.02%)</title><rect x="512.2" y="901" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="515.24" y="911.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (2,006,266 samples, 0.02%)</title><rect x="378.5" y="917" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="381.53" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (166,695,901 samples, 1.42%)</title><rect x="865.7" y="917" width="16.7" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="868.67" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (44,499,475 samples, 0.38%)</title><rect x="1103.1" y="965" width="4.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1106.08" y="975.5" ></text>
</g>
<g >
<title>tcp_inbound_hash.constprop.0 (4,138,386 samples, 0.04%)</title><rect x="1075.0" y="261" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1078.03" y="271.5" ></text>
</g>
<g >
<title>__netif_receive_skb (140,323,148 samples, 1.19%)</title><rect x="1072.2" y="389" width="14.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1075.19" y="399.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (60,663,568 samples, 0.52%)</title><rect x="1091.9" y="965" width="6.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1094.86" y="975.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,370,553 samples, 0.05%)</title><rect x="1152.0" y="821" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.98" y="831.5" ></text>
</g>
<g >
<title>inet_sendmsg (374,178,229 samples, 3.19%)</title><rect x="908.6" y="773" width="37.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="911.56" y="783.5" >ine..</text>
</g>
<g >
<title>el0_da (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="677" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1136.68" y="687.5" ></text>
</g>
<g >
<title>tcp_poll (6,772,864 samples, 0.06%)</title><rect x="13.0" y="821" width="0.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="15.99" y="831.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,944,255 samples, 0.02%)</title><rect x="1163.7" y="773" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1166.73" y="783.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="357" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1069.74" y="367.5" ></text>
</g>
<g >
<title>sock_def_readable (2,129,527 samples, 0.02%)</title><rect x="750.6" y="485" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="753.56" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_key_equals (159,730,874 samples, 1.36%)</title><rect x="882.6" y="885" width="16.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="885.64" y="895.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (6,411,890 samples, 0.05%)</title><rect x="1150.3" y="773" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1153.29" y="783.5" ></text>
</g>
<g >
<title>do_page_fault (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="661" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1143.11" y="671.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,337,193 samples, 0.02%)</title><rect x="104.2" y="773" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="107.21" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (149,863,620 samples, 1.28%)</title><rect x="358.6" y="933" width="15.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="361.58" y="943.5" ></text>
</g>
<g >
<title>net_rx_action (4,056,441 samples, 0.03%)</title><rect x="882.0" y="693" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="885.01" y="703.5" ></text>
</g>
<g >
<title>__sanitizer::dl_iterate_phdr_cb (1,813,257 samples, 0.02%)</title><rect x="10.8" y="1029" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.78" y="1039.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,827,821 samples, 0.02%)</title><rect x="376.5" y="837" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="379.50" y="847.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (4,104,971 samples, 0.03%)</title><rect x="1177.0" y="821" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1180.04" y="831.5" ></text>
</g>
<g >
<title>fmt::v9::detail::format_decimal_result&lt;char*&gt; fmt::v9::detail::format_decimal&lt;char, unsigned int&gt; (3,883,368 samples, 0.03%)</title><rect x="1184.3" y="853" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1187.25" y="863.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (1,982,699 samples, 0.02%)</title><rect x="636.5" y="853" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="639.51" y="863.5" ></text>
</g>
<g >
<title>do_page_fault (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="741" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1125.11" y="751.5" ></text>
</g>
<g >
<title>__napi_poll (2,020,395 samples, 0.02%)</title><rect x="306.4" y="773" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="309.37" y="783.5" ></text>
</g>
<g >
<title>el0_da (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="805" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1103.99" y="815.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2,395,092 samples, 0.02%)</title><rect x="1100.8" y="901" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1103.75" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,590,787 samples, 0.03%)</title><rect x="1155.3" y="981" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1158.27" y="991.5" ></text>
</g>
<g >
<title>el0_da (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="709" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1143.11" y="719.5" ></text>
</g>
<g >
<title>ip_rcv_finish_core.isra.0 (2,219,113 samples, 0.02%)</title><rect x="934.5" y="309" width="0.2" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="937.51" y="319.5" ></text>
</g>
<g >
<title>__mod_timer (7,103,608 samples, 0.06%)</title><rect x="1088.9" y="613" width="0.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1091.91" y="623.5" ></text>
</g>
<g >
<title>dlsym (4,865,220 samples, 0.04%)</title><rect x="10.3" y="1029" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="13.29" y="1039.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,362,817 samples, 0.02%)</title><rect x="1183.3" y="853" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1186.34" y="863.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::grow (14,481,399 samples, 0.12%)</title><rect x="1132.4" y="805" width="1.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1135.42" y="815.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::base_iterator&lt;fmt::v9::appender&gt; (1,922,835 samples, 0.02%)</title><rect x="1114.2" y="869" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1117.18" y="879.5" ></text>
</g>
<g >
<title>do_translation_fault (2,285,173 samples, 0.02%)</title><rect x="374.7" y="821" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="377.73" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,221,369 samples, 0.09%)</title><rect x="1172.5" y="933" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1175.48" y="943.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,144,875 samples, 0.02%)</title><rect x="13.7" y="725" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="16.67" y="735.5" ></text>
</g>
<g >
<title>ip_output (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="645" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1110.55" y="655.5" ></text>
</g>
<g >
<title>rcu_core_si (2,042,202 samples, 0.02%)</title><rect x="674.2" y="757" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="677.23" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (3,594,174 samples, 0.03%)</title><rect x="1164.3" y="901" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1167.28" y="911.5" ></text>
</g>
<g >
<title>kfree_skbmem (2,057,252 samples, 0.02%)</title><rect x="1067.4" y="677" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1070.43" y="687.5" ></text>
</g>
<g >
<title>fmt::v9::detail::abort_fuzzing_if (2,295,610 samples, 0.02%)</title><rect x="1139.9" y="821" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1142.88" y="831.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (4,939,643 samples, 0.04%)</title><rect x="750.3" y="661" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="753.28" y="671.5" ></text>
</g>
<g >
<title>____do_softirq (2,373,698 samples, 0.02%)</title><rect x="1135.4" y="709" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1138.39" y="719.5" ></text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (505,913,896 samples, 4.31%)</title><rect x="307.0" y="997" width="50.8" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="309.96" y="1007.5" >fmt::..</text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (2,155,352 samples, 0.02%)</title><rect x="1167.5" y="853" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1170.51" y="863.5" ></text>
</g>
<g >
<title>sock_alloc_file (4,340,410 samples, 0.04%)</title><rect x="1154.0" y="853" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1156.96" y="863.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (115,057,105 samples, 0.98%)</title><rect x="1122.3" y="869" width="11.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1125.32" y="879.5" ></text>
</g>
<g >
<title>__netif_receive_skb (4,056,441 samples, 0.03%)</title><rect x="882.0" y="645" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="885.01" y="655.5" ></text>
</g>
<g >
<title>do_page_fault (1,820,225 samples, 0.02%)</title><rect x="10.6" y="821" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="13.59" y="831.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,144,875 samples, 0.02%)</title><rect x="13.7" y="901" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.67" y="911.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (1,557,568 samples, 0.01%)</title><rect x="308.3" y="757" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="311.28" y="767.5" ></text>
</g>
<g >
<title>__interceptor_read@plt (2,467,678 samples, 0.02%)</title><rect x="28.7" y="1029" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="31.73" y="1039.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (664,239,179 samples, 5.65%)</title><rect x="751.7" y="901" width="66.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="754.67" y="911.5" >__asan_..</text>
</g>
<g >
<title>spdlog::pattern_formatter::format (140,688,565 samples, 1.20%)</title><rect x="1137.6" y="901" width="14.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1140.62" y="911.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (15,083,434 samples, 0.13%)</title><rect x="1149.4" y="853" width="1.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1152.42" y="863.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (1,875,603 samples, 0.02%)</title><rect x="11.0" y="981" width="0.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="13.96" y="991.5" ></text>
</g>
<g >
<title>__folio_set_anon (2,524,633 samples, 0.02%)</title><rect x="100.7" y="709" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="103.74" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,476,839 samples, 0.05%)</title><rect x="819.5" y="917" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="822.50" y="927.5" ></text>
</g>
<g >
<title>__asan::AsanInitIsRunning (1,746,397 samples, 0.01%)</title><rect x="1137.0" y="885" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1139.99" y="895.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (16,552,144 samples, 0.14%)</title><rect x="941.1" y="677" width="1.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="944.06" y="687.5" ></text>
</g>
<g >
<title>operator new (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="805" width="0.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1143.11" y="815.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (1,695,581 samples, 0.01%)</title><rect x="635.3" y="661" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="638.27" y="671.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (148,690,189 samples, 1.27%)</title><rect x="919.8" y="533" width="14.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="922.80" y="543.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2,494,945 samples, 0.02%)</title><rect x="512.2" y="917" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="515.24" y="927.5" ></text>
</g>
<g >
<title>__asan::asan_delete (2,060,990 samples, 0.02%)</title><rect x="655.8" y="917" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="658.84" y="927.5" ></text>
</g>
<g >
<title>ip_output (2,193,841 samples, 0.02%)</title><rect x="847.5" y="565" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="850.50" y="575.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="389" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1069.74" y="399.5" ></text>
</g>
<g >
<title>handle_pte_fault (6,471,029 samples, 0.06%)</title><rect x="373.6" y="741" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="376.63" y="751.5" ></text>
</g>
<g >
<title>ip_output (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="533" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1190.56" y="543.5" ></text>
</g>
<g >
<title>el0t_64_sync (6,474,014 samples, 0.06%)</title><rect x="1153.7" y="997" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1156.74" y="1007.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,887,478 samples, 0.02%)</title><rect x="1112.6" y="837" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1115.61" y="847.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (117,689,336 samples, 1.00%)</title><rect x="1176.3" y="949" width="11.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1179.27" y="959.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (3,920,110 samples, 0.03%)</title><rect x="943.7" y="661" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="946.74" y="671.5" ></text>
</g>
<g >
<title>__sanitizer::LoadedModule::addAddressRange (1,813,257 samples, 0.02%)</title><rect x="10.8" y="997" width="0.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="13.78" y="1007.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,712,558 samples, 0.06%)</title><rect x="1164.6" y="901" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1167.64" y="911.5" ></text>
</g>
<g >
<title>std::__detail::operator== (4,231,071 samples, 0.04%)</title><rect x="830.6" y="981" width="0.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="833.64" y="991.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,523,746 samples, 0.06%)</title><rect x="1169.5" y="901" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1172.54" y="911.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (4,590,971 samples, 0.04%)</title><rect x="636.1" y="741" width="0.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="639.05" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,937,631 samples, 0.02%)</title><rect x="28.3" y="997" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="31.34" y="1007.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (12,246,671 samples, 0.10%)</title><rect x="1098.9" y="965" width="1.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1101.85" y="975.5" ></text>
</g>
<g >
<title>net_rx_action (1,685,267 samples, 0.01%)</title><rect x="674.1" y="757" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="677.06" y="767.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (214,105,204 samples, 1.82%)</title><rect x="1070.1" y="757" width="21.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1073.10" y="767.5" >t..</text>
</g>
<g >
<title>__irq_exit_rcu (2,020,395 samples, 0.02%)</title><rect x="306.4" y="885" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="309.37" y="895.5" ></text>
</g>
<g >
<title>do_el0_svc (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="885" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1110.55" y="895.5" ></text>
</g>
<g >
<title>tcp_sendmsg (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="773" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1110.55" y="783.5" ></text>
</g>
<g >
<title>tcp_cwnd_validate (2,229,913 samples, 0.02%)</title><rect x="1088.3" y="693" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1091.26" y="703.5" ></text>
</g>
<g >
<title>call_on_irq_stack (2,383,792 samples, 0.02%)</title><rect x="818.2" y="757" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="821.16" y="767.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2,617,348 samples, 0.02%)</title><rect x="1064.1" y="597" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1067.10" y="607.5" ></text>
</g>
<g >
<title>do_translation_fault (1,481,757 samples, 0.01%)</title><rect x="376.4" y="773" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="379.35" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (56,394,479 samples, 0.48%)</title><rect x="824.1" y="981" width="5.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="827.10" y="991.5" ></text>
</g>
<g >
<title>run_timer_softirq (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="709" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1190.56" y="719.5" ></text>
</g>
<g >
<title>lock_sock_nested (8,225,351 samples, 0.07%)</title><rect x="909.0" y="741" width="0.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="911.97" y="751.5" ></text>
</g>
<g >
<title>__sk_mem_schedule (2,291,913 samples, 0.02%)</title><rect x="882.2" y="453" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="885.18" y="463.5" ></text>
</g>
<g >
<title>skb_clone (2,158,695 samples, 0.02%)</title><rect x="937.1" y="661" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="940.14" y="671.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,381,452 samples, 0.02%)</title><rect x="561.9" y="869" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="564.89" y="879.5" ></text>
</g>
<g >
<title>__alloc_pages (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="597" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1103.99" y="607.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,373,698 samples, 0.02%)</title><rect x="1135.4" y="757" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1138.39" y="767.5" ></text>
</g>
<g >
<title>tlb_remove_table_rcu (2,143,892 samples, 0.02%)</title><rect x="296.3" y="725" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="299.34" y="735.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="565" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1190.56" y="575.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (35,326,737 samples, 0.30%)</title><rect x="1114.0" y="885" width="3.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1116.97" y="895.5" ></text>
</g>
<g >
<title>el0_svc (7,154,882 samples, 0.06%)</title><rect x="106.2" y="773" width="0.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="109.19" y="783.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;::try_reserve (6,949,550 samples, 0.06%)</title><rect x="1139.7" y="853" width="0.7" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1142.65" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,013,047 samples, 0.02%)</title><rect x="1108.6" y="917" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1111.59" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2,215,717 samples, 0.02%)</title><rect x="443.8" y="981" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="446.82" y="991.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (4,203,145 samples, 0.04%)</title><rect x="1157.1" y="981" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1160.12" y="991.5" ></text>
</g>
<g >
<title>do_translation_fault (1,846,251 samples, 0.02%)</title><rect x="10.1" y="965" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="13.09" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,954,010 samples, 0.02%)</title><rect x="1151.3" y="853" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1154.34" y="863.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,337,193 samples, 0.02%)</title><rect x="104.2" y="805" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="107.21" y="815.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (16,306,184 samples, 0.14%)</title><rect x="1179.8" y="805" width="1.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1182.77" y="815.5" ></text>
</g>
<g >
<title>bpf_skops_write_hdr_opt.isra.0 (2,035,020 samples, 0.02%)</title><rect x="937.5" y="677" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="940.53" y="687.5" ></text>
</g>
<g >
<title>___interceptor_localtime_r (2,144,875 samples, 0.02%)</title><rect x="13.7" y="933" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="16.67" y="943.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1,837,691 samples, 0.02%)</title><rect x="910.2" y="549" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="913.22" y="559.5" ></text>
</g>
<g >
<title>process_backlog (2,020,395 samples, 0.02%)</title><rect x="306.4" y="757" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="309.37" y="767.5" ></text>
</g>
<g >
<title>invoke_syscall (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="853" width="0.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1110.55" y="863.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (1,713,927 samples, 0.01%)</title><rect x="1074.9" y="245" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1077.86" y="255.5" ></text>
</g>
<g >
<title>__interception::InterceptFunction (4,865,220 samples, 0.04%)</title><rect x="10.3" y="1045" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="13.29" y="1055.5" ></text>
</g>
<g >
<title>net_rx_action (1,837,691 samples, 0.02%)</title><rect x="910.2" y="389" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="913.22" y="399.5" ></text>
</g>
<g >
<title>neigh_hh_output (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="581" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1110.55" y="591.5" ></text>
</g>
<g >
<title>dlsym (1,875,603 samples, 0.02%)</title><rect x="11.0" y="1061" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="13.96" y="1071.5" ></text>
</g>
<g >
<title>ip_finish_output2 (168,868,732 samples, 1.44%)</title><rect x="919.1" y="581" width="17.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="922.14" y="591.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2,494,945 samples, 0.02%)</title><rect x="512.2" y="933" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="515.24" y="943.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (6,619,717 samples, 0.06%)</title><rect x="24.1" y="709" width="0.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="27.12" y="719.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2,193,841 samples, 0.02%)</title><rect x="847.5" y="485" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="850.50" y="495.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (399,199,526 samples, 3.40%)</title><rect x="563.1" y="933" width="40.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="566.14" y="943.5" >__a..</text>
</g>
<g >
<title>[libfmt.so.9.1.0] (16,700,601 samples, 0.14%)</title><rect x="375.9" y="917" width="1.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="378.93" y="927.5" ></text>
</g>
<g >
<title>do_notify_resume (1,660,275 samples, 0.01%)</title><rect x="953.8" y="869" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="956.84" y="879.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (5,890,921 samples, 0.05%)</title><rect x="674.1" y="917" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="677.06" y="927.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (48,247,646 samples, 0.41%)</title><rect x="1140.8" y="869" width="4.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1143.85" y="879.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (1,930,221 samples, 0.02%)</title><rect x="1188.1" y="901" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1191.09" y="911.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (4,104,971 samples, 0.03%)</title><rect x="1177.0" y="869" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1180.04" y="879.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (1,813,257 samples, 0.02%)</title><rect x="10.8" y="901" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.78" y="911.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (6,122,201 samples, 0.05%)</title><rect x="1176.8" y="917" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1179.84" y="927.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2,105,951 samples, 0.02%)</title><rect x="296.6" y="629" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="299.55" y="639.5" ></text>
</g>
<g >
<title>rcu_do_batch (2,143,892 samples, 0.02%)</title><rect x="296.3" y="741" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="299.34" y="751.5" ></text>
</g>
<g >
<title>rcu_all_qs (2,158,920 samples, 0.02%)</title><rect x="942.5" y="661" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="945.51" y="671.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (38,947,583 samples, 0.33%)</title><rect x="1128.5" y="821" width="3.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1131.51" y="831.5" ></text>
</g>
<g >
<title>__ip_finish_output (167,754,297 samples, 1.43%)</title><rect x="1070.8" y="613" width="16.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1073.76" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (4,375,289 samples, 0.04%)</title><rect x="169.3" y="981" width="0.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="172.27" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (411,511,512 samples, 3.50%)</title><rect x="521.8" y="965" width="41.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="524.81" y="975.5" >std..</text>
</g>
<g >
<title>tcp_v4_rcv (1,685,267 samples, 0.01%)</title><rect x="674.1" y="597" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="677.06" y="607.5" ></text>
</g>
<g >
<title>call_on_irq_stack (2,131,230 samples, 0.02%)</title><rect x="900.3" y="789" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="903.33" y="799.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="741" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1154.76" y="751.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (2,530,129 samples, 0.02%)</title><rect x="862.2" y="885" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="865.16" y="895.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (144,476,671 samples, 1.23%)</title><rect x="1071.8" y="517" width="14.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1074.78" y="527.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2,034,048 samples, 0.02%)</title><rect x="373.9" y="613" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="376.89" y="623.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::get_buffer&lt;char&gt; (7,908,032 samples, 0.07%)</title><rect x="1162.1" y="981" width="0.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1165.08" y="991.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (3,831,350 samples, 0.03%)</title><rect x="945.1" y="677" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="948.08" y="687.5" ></text>
</g>
<g >
<title>ksys_write (6,370,553 samples, 0.05%)</title><rect x="1152.0" y="661" width="0.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1154.98" y="671.5" ></text>
</g>
<g >
<title>pty_write (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="517" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1154.76" y="527.5" ></text>
</g>
<g >
<title>__napi_poll (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="501" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1069.74" y="511.5" ></text>
</g>
<g >
<title>____do_softirq (5,744,633 samples, 0.05%)</title><rect x="1063.9" y="789" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1066.94" y="799.5" ></text>
</g>
<g >
<title>nf_hook_slow (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="517" width="0.3" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="1190.56" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (8,416,029 samples, 0.07%)</title><rect x="168.9" y="1029" width="0.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="171.87" y="1039.5" ></text>
</g>
<g >
<title>skb_csum_hwoffload_help (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="549" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1110.55" y="559.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (2,155,352 samples, 0.02%)</title><rect x="1167.5" y="837" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1170.51" y="847.5" ></text>
</g>
<g >
<title>__netif_rx (4,227,653 samples, 0.04%)</title><rect x="934.7" y="501" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="937.73" y="511.5" ></text>
</g>
<g >
<title>___interceptor_memcpy (2,782,516 samples, 0.02%)</title><rect x="653.2" y="901" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="656.19" y="911.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (18,929,971 samples, 0.16%)</title><rect x="635.0" y="917" width="1.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="638.05" y="927.5" ></text>
</g>
<g >
<title>__sanitizer::StackTrace::GetCurrentPc (2,363,666 samples, 0.02%)</title><rect x="636.7" y="885" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="639.71" y="895.5" ></text>
</g>
<g >
<title>operator new (2,395,092 samples, 0.02%)</title><rect x="1100.8" y="917" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1103.75" y="927.5" ></text>
</g>
<g >
<title>tcp_check_space (4,196,380 samples, 0.04%)</title><rect x="1077.4" y="181" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1080.44" y="191.5" ></text>
</g>
<g >
<title>el0_da (24,776,329 samples, 0.21%)</title><rect x="100.1" y="853" width="2.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="103.08" y="863.5" ></text>
</g>
<g >
<title>__sanitizer::MmapFixedImpl (7,154,882 samples, 0.06%)</title><rect x="106.2" y="837" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="109.19" y="847.5" ></text>
</g>
<g >
<title>el0_da (4,339,647 samples, 0.04%)</title><rect x="105.8" y="789" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="108.75" y="799.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,131,230 samples, 0.02%)</title><rect x="900.3" y="821" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="903.33" y="831.5" ></text>
</g>
<g >
<title>std::conditional&lt;std::is_same&lt;char, char&gt;::value, fmt::v9::appender, std::back_insert_iterator&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; &gt;::type fmt::v9::detail::get_iterator&lt;char&gt; (8,535,637 samples, 0.07%)</title><rect x="1162.9" y="981" width="0.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1165.87" y="991.5" ></text>
</g>
<g >
<title>__build_skb_around (1,519,827 samples, 0.01%)</title><rect x="1064.4" y="597" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1067.36" y="607.5" ></text>
</g>
<g >
<title>tcp_data_queue (4,939,643 samples, 0.04%)</title><rect x="750.3" y="517" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="753.28" y="527.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (14,703,857 samples, 0.13%)</title><rect x="376.1" y="869" width="1.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="379.13" y="879.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,695,581 samples, 0.01%)</title><rect x="635.3" y="853" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="638.27" y="863.5" ></text>
</g>
<g >
<title>invoke_syscall (6,370,553 samples, 0.05%)</title><rect x="1152.0" y="693" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1154.98" y="703.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2,012,042 samples, 0.02%)</title><rect x="358.0" y="949" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="361.01" y="959.5" ></text>
</g>
<g >
<title>rcu_core_si (2,373,698 samples, 0.02%)</title><rect x="1135.4" y="661" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1138.39" y="671.5" ></text>
</g>
<g >
<title>tcp_delack_timer (2,105,951 samples, 0.02%)</title><rect x="296.6" y="709" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="299.55" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (2,016,223 samples, 0.02%)</title><rect x="819.1" y="933" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="822.10" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,953,273 samples, 0.06%)</title><rect x="1106.7" y="821" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1109.68" y="831.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (16,456,314 samples, 0.14%)</title><rect x="23.1" y="741" width="1.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="26.13" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (51,356,197 samples, 0.44%)</title><rect x="1155.6" y="1013" width="5.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1158.63" y="1023.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,906,722 samples, 0.05%)</title><rect x="1116.7" y="725" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1119.73" y="735.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (2,395,092 samples, 0.02%)</title><rect x="1100.8" y="821" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1103.75" y="831.5" ></text>
</g>
<g >
<title>handle_softirqs (2,373,698 samples, 0.02%)</title><rect x="1135.4" y="677" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1138.39" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,924,271 samples, 0.09%)</title><rect x="1121.2" y="853" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1124.22" y="863.5" ></text>
</g>
<g >
<title>__pi_clear_page (1,557,568 samples, 0.01%)</title><rect x="308.3" y="677" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="311.28" y="687.5" ></text>
</g>
<g >
<title>fmt::v9::detail::vformat_to&lt;char&gt; (151,390,203 samples, 1.29%)</title><rect x="1120.4" y="901" width="15.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1123.43" y="911.5" ></text>
</g>
<g >
<title>__xfrm_policy_check2.constprop.0 (2,154,805 samples, 0.02%)</title><rect x="1074.6" y="261" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1077.64" y="271.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (9,124,568 samples, 0.08%)</title><rect x="750.1" y="869" width="0.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="753.08" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (42,077,698 samples, 0.36%)</title><rect x="653.7" y="981" width="4.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="656.66" y="991.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (4,511,279 samples, 0.04%)</title><rect x="1143.4" y="805" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1146.44" y="815.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,651,144 samples, 0.01%)</title><rect x="43.0" y="965" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="46.03" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,712,558 samples, 0.06%)</title><rect x="1164.6" y="885" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1167.64" y="895.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::chrono::__is_duration&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::value, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::type std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (4,018,159 samples, 0.03%)</title><rect x="1186.6" y="933" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1189.56" y="943.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (143,731,801 samples, 1.22%)</title><rect x="1175.3" y="997" width="14.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1178.34" y="1007.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (30,111,252 samples, 0.26%)</title><rect x="1157.8" y="997" width="3.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1160.76" y="1007.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (146,435,639 samples, 1.25%)</title><rect x="920.0" y="501" width="14.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="923.02" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (29,417,066 samples, 0.25%)</title><rect x="99.6" y="901" width="3.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="102.62" y="911.5" ></text>
</g>
<g >
<title>__do_softirq (7,066,013 samples, 0.06%)</title><rect x="750.3" y="757" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="753.28" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,101,632,598 samples, 9.38%)</title><rect x="954.0" y="949" width="110.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="957.01" y="959.5" >__asan_stack_..</text>
</g>
<g >
<title>expire_timers (2,383,792 samples, 0.02%)</title><rect x="818.2" y="661" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="821.16" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (165,756,168 samples, 1.41%)</title><rect x="831.1" y="933" width="16.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="834.07" y="943.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (4,280,878 samples, 0.04%)</title><rect x="15.0" y="997" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="18.02" y="1007.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (21,643,297 samples, 0.18%)</title><rect x="297.0" y="981" width="2.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="299.98" y="991.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (1,663,455 samples, 0.01%)</title><rect x="562.8" y="853" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="565.76" y="863.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;, 0ul&gt; (19,107,550 samples, 0.16%)</title><rect x="1158.9" y="933" width="1.9" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1161.87" y="943.5" ></text>
</g>
<g >
<title>do_translation_fault (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="645" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1136.68" y="655.5" ></text>
</g>
<g >
<title>call_on_irq_stack (8,780,280 samples, 0.07%)</title><rect x="295.9" y="837" width="0.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="298.88" y="847.5" ></text>
</g>
<g >
<title>_IO_file_write (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="773" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1154.76" y="783.5" ></text>
</g>
<g >
<title>spdlog::details::short_filename_formatter&lt;spdlog::details::null_scoped_padder&gt;::basename (6,272,282 samples, 0.05%)</title><rect x="1145.7" y="869" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1148.69" y="879.5" ></text>
</g>
<g >
<title>tcp_send_ack (4,186,590 samples, 0.04%)</title><rect x="923.4" y="197" width="0.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="926.42" y="207.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2,131,230 samples, 0.02%)</title><rect x="900.3" y="933" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="903.33" y="943.5" ></text>
</g>
<g >
<title>ip_output (4,798,242 samples, 0.04%)</title><rect x="1076.4" y="133" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1079.35" y="143.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (157,937,974 samples, 1.34%)</title><rect x="882.6" y="869" width="15.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="885.64" y="879.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (31,457,898 samples, 0.27%)</title><rect x="375.8" y="981" width="3.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="378.78" y="991.5" ></text>
</g>
<g >
<title>__arm64_sys_write (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="725" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1191.51" y="735.5" ></text>
</g>
<g >
<title>tcp_send_ack (2,193,841 samples, 0.02%)</title><rect x="847.5" y="645" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="850.50" y="655.5" ></text>
</g>
<g >
<title>loopback_xmit (4,227,653 samples, 0.04%)</title><rect x="934.7" y="517" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="937.73" y="527.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,155,352 samples, 0.02%)</title><rect x="1167.5" y="757" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1170.51" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,652,111 samples, 0.09%)</title><rect x="1112.9" y="821" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1115.90" y="831.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (4,798,242 samples, 0.04%)</title><rect x="1076.4" y="53" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1079.35" y="63.5" ></text>
</g>
<g >
<title>___interceptor_memcpy (2,782,516 samples, 0.02%)</title><rect x="653.2" y="885" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="656.19" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,149,778 samples, 0.02%)</title><rect x="1157.5" y="933" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1160.55" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,590,787 samples, 0.03%)</title><rect x="1155.3" y="965" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1158.27" y="975.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (5,744,633 samples, 0.05%)</title><rect x="1063.9" y="837" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1066.94" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (20,188,207 samples, 0.17%)</title><rect x="1130.4" y="725" width="2.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1133.40" y="735.5" ></text>
</g>
<g >
<title>el0_interrupt (2,020,395 samples, 0.02%)</title><rect x="306.4" y="917" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="309.37" y="927.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; fmt::v9::detail::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (491,183,378 samples, 4.18%)</title><rect x="308.4" y="981" width="49.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="311.44" y="991.5" >fmt:..</text>
</g>
<g >
<title>get_page_from_freelist (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="485" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1143.11" y="495.5" ></text>
</g>
<g >
<title>el0_interrupt (4,056,441 samples, 0.03%)</title><rect x="882.0" y="821" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="885.01" y="831.5" ></text>
</g>
<g >
<title>do_mem_abort (1,695,581 samples, 0.01%)</title><rect x="635.3" y="789" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="638.27" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,955,832 samples, 0.02%)</title><rect x="819.3" y="901" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="822.30" y="911.5" ></text>
</g>
<g >
<title>operator new (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="773" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1136.68" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,016,223 samples, 0.02%)</title><rect x="819.1" y="885" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="822.10" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,449,891 samples, 0.07%)</title><rect x="1105.8" y="837" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1108.83" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (3,960,717 samples, 0.03%)</title><rect x="1154.4" y="997" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1157.39" y="1007.5" ></text>
</g>
<g >
<title>fmt::v9::format_int::format_int (6,054,928 samples, 0.05%)</title><rect x="1148.8" y="853" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1151.82" y="863.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (13,269,967 samples, 0.11%)</title><rect x="373.6" y="901" width="1.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="376.63" y="911.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (2,394,600 samples, 0.02%)</title><rect x="1086.3" y="485" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1089.29" y="495.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (12,251,459 samples, 0.10%)</title><rect x="1147.6" y="789" width="1.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1150.58" y="799.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1,685,267 samples, 0.01%)</title><rect x="674.1" y="629" width="0.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="677.06" y="639.5" ></text>
</g>
<g >
<title>tcp_retransmit_timer (2,383,792 samples, 0.02%)</title><rect x="818.2" y="597" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="821.16" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (92,743,785 samples, 0.79%)</title><rect x="512.5" y="949" width="9.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="515.49" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,591,436 samples, 0.06%)</title><rect x="1138.7" y="821" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1141.74" y="831.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (2,163,265 samples, 0.02%)</title><rect x="377.1" y="773" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="380.11" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,992,393 samples, 0.02%)</title><rect x="1103.7" y="885" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1106.67" y="895.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2,020,395 samples, 0.02%)</title><rect x="306.4" y="741" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="309.37" y="751.5" ></text>
</g>
<g >
<title>__alloc_pages (4,571,442 samples, 0.04%)</title><rect x="101.7" y="645" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="104.66" y="655.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,827,821 samples, 0.02%)</title><rect x="376.5" y="757" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="379.50" y="767.5" ></text>
</g>
<g >
<title>tcp_filter (2,020,395 samples, 0.02%)</title><rect x="306.4" y="613" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="309.37" y="623.5" ></text>
</g>
<g >
<title>tcp_rtt_estimator (2,617,348 samples, 0.02%)</title><rect x="1064.1" y="501" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1067.10" y="511.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (2,588,639 samples, 0.02%)</title><rect x="373.6" y="677" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="376.63" y="687.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2,617,348 samples, 0.02%)</title><rect x="1064.1" y="565" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1067.10" y="575.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_and_push_buffer (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="501" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1154.76" y="511.5" ></text>
</g>
<g >
<title>__sanitizer::IsRssLimitExceeded (4,312,174 samples, 0.04%)</title><rect x="106.9" y="901" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="109.91" y="911.5" ></text>
</g>
<g >
<title>memblock_is_map_memory (7,020,064 samples, 0.06%)</title><rect x="916.4" y="661" width="0.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="919.36" y="671.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (31,758,780 samples, 0.27%)</title><rect x="914.3" y="725" width="3.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="917.33" y="735.5" ></text>
</g>
<g >
<title>__do_softirq (2,020,395 samples, 0.02%)</title><rect x="306.4" y="821" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="309.37" y="831.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (4,939,643 samples, 0.04%)</title><rect x="750.3" y="597" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="753.28" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,355,797 samples, 0.02%)</title><rect x="821.6" y="837" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="824.60" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,307,760 samples, 0.02%)</title><rect x="1186.3" y="901" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.32" y="911.5" ></text>
</g>
<g >
<title>ip_output (1,837,691 samples, 0.02%)</title><rect x="910.2" y="597" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="913.22" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,391,004 samples, 0.04%)</title><rect x="1145.9" y="837" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1148.88" y="847.5" ></text>
</g>
<g >
<title>__do_softirq (144,476,671 samples, 1.23%)</title><rect x="1071.8" y="469" width="14.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1074.78" y="479.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (256,886,943 samples, 2.19%)</title><rect x="1109.8" y="933" width="25.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1112.83" y="943.5" >v..</text>
</g>
<g >
<title>handle_pte_fault (1,827,821 samples, 0.02%)</title><rect x="376.5" y="725" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="379.50" y="735.5" ></text>
</g>
<g >
<title>memcmp (4,338,101 samples, 0.04%)</title><rect x="298.3" y="933" width="0.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="301.32" y="943.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_addr (2,277,145 samples, 0.02%)</title><rect x="818.4" y="885" width="0.2" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="821.40" y="895.5" ></text>
</g>
<g >
<title>el0t_64_irq (4,056,441 samples, 0.03%)</title><rect x="882.0" y="869" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="885.01" y="879.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,104,501 samples, 0.02%)</title><rect x="635.8" y="789" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="638.84" y="799.5" ></text>
</g>
<g >
<title>el0t_64_sync (18,830,329 samples, 0.16%)</title><rect x="11.8" y="1029" width="1.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="14.78" y="1039.5" ></text>
</g>
<g >
<title>__arm64_sys_mmap (4,590,971 samples, 0.04%)</title><rect x="636.1" y="661" width="0.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="639.05" y="671.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (6,164,882 samples, 0.05%)</title><rect x="1162.3" y="965" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1165.25" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,095,895 samples, 0.02%)</title><rect x="1183.1" y="869" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1186.13" y="879.5" ></text>
</g>
<g >
<title>__asan::RZSize2Log (2,237,577 samples, 0.02%)</title><rect x="105.3" y="901" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="108.31" y="911.5" ></text>
</g>
<g >
<title>skb_push (2,383,792 samples, 0.02%)</title><rect x="818.2" y="533" width="0.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="821.16" y="543.5" ></text>
</g>
<g >
<title>el0t_64_sync (4,339,647 samples, 0.04%)</title><rect x="105.8" y="821" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="108.75" y="831.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (8,007,136 samples, 0.07%)</title><rect x="821.8" y="965" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="824.84" y="975.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,481,757 samples, 0.01%)</title><rect x="376.4" y="629" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="379.35" y="639.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2,007,070 samples, 0.02%)</title><rect x="1133.7" y="757" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1136.68" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,924,271 samples, 0.09%)</title><rect x="1121.2" y="837" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1124.22" y="847.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (2,200,617 samples, 0.02%)</title><rect x="1070.1" y="741" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1073.10" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (518,679,006 samples, 4.42%)</title><rect x="901.9" y="901" width="52.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="904.91" y="911.5" >el0t_..</text>
</g>
<g >
<title>____do_softirq (2,383,792 samples, 0.02%)</title><rect x="818.2" y="741" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="821.16" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,391,004 samples, 0.04%)</title><rect x="1145.9" y="853" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1148.88" y="863.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,827,821 samples, 0.02%)</title><rect x="376.5" y="613" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="379.50" y="623.5" ></text>
</g>
<g >
<title>handle_softirqs (2,383,792 samples, 0.02%)</title><rect x="818.2" y="709" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="821.16" y="719.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;::try_reserve (14,481,399 samples, 0.12%)</title><rect x="1132.4" y="821" width="1.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1135.42" y="831.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (2,519,183 samples, 0.02%)</title><rect x="1139.4" y="789" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1142.40" y="799.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2,020,395 samples, 0.02%)</title><rect x="306.4" y="693" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="309.37" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,414,523 samples, 0.10%)</title><rect x="1144.1" y="741" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1147.09" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (7,154,882 samples, 0.06%)</title><rect x="106.2" y="821" width="0.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="109.19" y="831.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (1,875,603 samples, 0.02%)</title><rect x="11.0" y="949" width="0.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="13.96" y="959.5" ></text>
</g>
<g >
<title>expire_timers (2,193,841 samples, 0.02%)</title><rect x="847.5" y="709" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="850.50" y="719.5" ></text>
</g>
<g >
<title>ip_output (2,105,951 samples, 0.02%)</title><rect x="296.6" y="597" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="299.55" y="607.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::get_time_ (2,144,875 samples, 0.02%)</title><rect x="13.7" y="965" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="16.67" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,813,195 samples, 0.03%)</title><rect x="1171.3" y="869" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1174.29" y="879.5" ></text>
</g>
<g >
<title>do_page_fault (4,339,647 samples, 0.04%)</title><rect x="105.8" y="741" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="108.75" y="751.5" ></text>
</g>
<g >
<title>___interceptor_accept.part.0 (6,474,014 samples, 0.06%)</title><rect x="1153.7" y="1029" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1156.74" y="1039.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (8,052,589 samples, 0.07%)</title><rect x="1171.7" y="853" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1174.67" y="863.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (203,128,546 samples, 1.73%)</title><rect x="1070.3" y="725" width="20.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1073.32" y="735.5" ></text>
</g>
<g >
<title>tcp_data_queue (24,837,309 samples, 0.21%)</title><rect x="928.3" y="213" width="2.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="931.31" y="223.5" ></text>
</g>
<g >
<title>skb_free_head (2,810,116 samples, 0.02%)</title><rect x="750.3" y="469" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="753.28" y="479.5" ></text>
</g>
<g >
<title>el0_interrupt (1,811,437 samples, 0.02%)</title><rect x="16.1" y="949" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="19.05" y="959.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,144,875 samples, 0.02%)</title><rect x="13.7" y="885" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.67" y="895.5" ></text>
</g>
<g >
<title>sk_reset_timer (1,663,076 samples, 0.01%)</title><rect x="923.8" y="181" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="926.84" y="191.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (6,437,758 samples, 0.05%)</title><rect x="376.7" y="805" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="379.69" y="815.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (165,756,168 samples, 1.41%)</title><rect x="831.1" y="965" width="16.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="834.07" y="975.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (2,294,067 samples, 0.02%)</title><rect x="924.0" y="149" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="927.00" y="159.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,827,821 samples, 0.02%)</title><rect x="376.5" y="661" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="379.50" y="671.5" ></text>
</g>
<g >
<title>tty_update_time (2,054,344 samples, 0.02%)</title><rect x="1152.2" y="581" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1155.18" y="591.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2,131,230 samples, 0.02%)</title><rect x="900.3" y="581" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="903.33" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_key_equals (4,567,542 samples, 0.04%)</title><rect x="1156.7" y="949" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1159.67" y="959.5" ></text>
</g>
<g >
<title>check_heap_object (6,619,717 samples, 0.06%)</title><rect x="24.1" y="693" width="0.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="27.12" y="703.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (2,131,230 samples, 0.02%)</title><rect x="900.3" y="917" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="903.33" y="927.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (20,188,207 samples, 0.17%)</title><rect x="1130.4" y="757" width="2.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1133.40" y="767.5" ></text>
</g>
<g >
<title>ktime_get (2,291,429 samples, 0.02%)</title><rect x="25.2" y="757" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="28.18" y="767.5" ></text>
</g>
<g >
<title>tcp_try_rmem_schedule (2,384,324 samples, 0.02%)</title><rect x="1085.8" y="213" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1088.82" y="223.5" ></text>
</g>
<g >
<title>el0t_64_sync (7,154,882 samples, 0.06%)</title><rect x="106.2" y="805" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="109.19" y="815.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.0 (4,596,622 samples, 0.04%)</title><rect x="938.7" y="645" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="941.65" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,617,930 samples, 0.04%)</title><rect x="821.1" y="853" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="824.14" y="863.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (2,020,395 samples, 0.02%)</title><rect x="306.4" y="933" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="309.37" y="943.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (4,865,220 samples, 0.04%)</title><rect x="10.3" y="933" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.29" y="943.5" ></text>
</g>
<g >
<title>do_translation_fault (1,944,255 samples, 0.02%)</title><rect x="1163.7" y="869" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1166.73" y="879.5" ></text>
</g>
<g >
<title>__ip_local_out (1,876,218 samples, 0.02%)</title><rect x="918.9" y="629" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="921.95" y="639.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::parse_client_command (2,240,182 samples, 0.02%)</title><rect x="375.4" y="901" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="378.37" y="911.5" ></text>
</g>
<g >
<title>el0t_64_irq (9,124,568 samples, 0.08%)</title><rect x="750.1" y="901" width="0.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="753.08" y="911.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,944,255 samples, 0.02%)</title><rect x="1163.7" y="917" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1166.73" y="927.5" ></text>
</g>
<g >
<title>do_translation_fault (1,695,581 samples, 0.01%)</title><rect x="635.3" y="773" width="0.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="638.27" y="783.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,651,144 samples, 0.01%)</title><rect x="43.0" y="805" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="46.03" y="815.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2,782,516 samples, 0.02%)</title><rect x="653.2" y="917" width="0.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="656.19" y="927.5" ></text>
</g>
<g >
<title>ip_rcv (135,585,356 samples, 1.15%)</title><rect x="921.1" y="341" width="13.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="924.11" y="351.5" ></text>
</g>
<g >
<title>invoke_syscall (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="661" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1154.76" y="671.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (39,054,452 samples, 0.33%)</title><rect x="946.2" y="773" width="3.9" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="949.15" y="783.5" ></text>
</g>
<g >
<title>__arm64_sys_write (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="645" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1154.76" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (18,759,376 samples, 0.16%)</title><rect x="1128.5" y="789" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1131.51" y="799.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (8,868,108 samples, 0.08%)</title><rect x="104.0" y="869" width="0.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="106.99" y="879.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (2,427,793 samples, 0.02%)</title><rect x="106.4" y="613" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="109.43" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,140,369 samples, 0.07%)</title><rect x="1185.5" y="789" width="0.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1188.51" y="799.5" ></text>
</g>
<g >
<title>ktime_get_seconds (1,685,267 samples, 0.01%)</title><rect x="674.1" y="565" width="0.1" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="677.06" y="575.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (2,395,092 samples, 0.02%)</title><rect x="1100.8" y="837" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1103.75" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,355,797 samples, 0.02%)</title><rect x="821.6" y="853" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="824.60" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (4,132,224 samples, 0.04%)</title><rect x="1102.5" y="933" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1105.46" y="943.5" ></text>
</g>
<g >
<title>__asan::asan_malloc (2,144,875 samples, 0.02%)</title><rect x="13.7" y="789" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="16.67" y="799.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;, 0ul&gt; (15,403,164 samples, 0.13%)</title><rect x="1105.8" y="885" width="1.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1108.83" y="895.5" ></text>
</g>
<g >
<title>aa_inet_msg_perm (1,725,119 samples, 0.01%)</title><rect x="946.2" y="757" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="949.15" y="767.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (1,651,144 samples, 0.01%)</title><rect x="43.0" y="789" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="46.03" y="799.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2,617,348 samples, 0.02%)</title><rect x="1064.1" y="677" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1067.10" y="687.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (1,896,715 samples, 0.02%)</title><rect x="169.1" y="741" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="172.08" y="751.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,618,079 samples, 0.01%)</title><rect x="10.3" y="645" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.29" y="655.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::pad2 (2,236,388 samples, 0.02%)</title><rect x="1181.4" y="917" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1184.40" y="927.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (44,499,475 samples, 0.38%)</title><rect x="1103.1" y="981" width="4.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1106.08" y="991.5" ></text>
</g>
<g >
<title>___interceptor_fwrite.part.0 (1,930,221 samples, 0.02%)</title><rect x="1188.1" y="933" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1191.09" y="943.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (24,776,329 samples, 0.21%)</title><rect x="100.1" y="869" width="2.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="103.08" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (142,576,641 samples, 1.21%)</title><rect x="620.7" y="917" width="14.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="623.73" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,819,659 samples, 0.02%)</title><rect x="1174.7" y="965" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1177.72" y="975.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1,992,393 samples, 0.02%)</title><rect x="1103.7" y="949" width="0.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1106.67" y="959.5" ></text>
</g>
<g >
<title>do_translation_fault (1,651,144 samples, 0.01%)</title><rect x="43.0" y="901" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="46.03" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,411,890 samples, 0.05%)</title><rect x="1150.3" y="725" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1153.29" y="735.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,853,490 samples, 0.02%)</title><rect x="376.9" y="773" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="379.93" y="783.5" ></text>
</g>
<g >
<title>do_pte_missing (1,481,757 samples, 0.01%)</title><rect x="376.4" y="693" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="379.35" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,729,767 samples, 0.04%)</title><rect x="1154.8" y="997" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1157.79" y="1007.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (5,890,921 samples, 0.05%)</title><rect x="674.1" y="853" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="677.06" y="863.5" ></text>
</g>
<g >
<title>free_page_and_swap_cache (2,143,892 samples, 0.02%)</title><rect x="296.3" y="709" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="299.34" y="719.5" ></text>
</g>
<g >
<title>get_random_u16 (1,870,134 samples, 0.02%)</title><rect x="906.3" y="837" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="909.33" y="847.5" ></text>
</g>
<g >
<title>do_page_fault (1,937,631 samples, 0.02%)</title><rect x="28.3" y="917" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="31.34" y="927.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (20,448,591 samples, 0.17%)</title><rect x="1138.3" y="885" width="2.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1141.30" y="895.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;&gt; (23,184,382 samples, 0.20%)</title><rect x="1158.5" y="949" width="2.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1161.46" y="959.5" ></text>
</g>
<g >
<title>__sk_mem_schedule (2,217,614 samples, 0.02%)</title><rect x="930.6" y="181" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="933.58" y="191.5" ></text>
</g>
<g >
<title>vma_alloc_folio (2,337,193 samples, 0.02%)</title><rect x="104.2" y="709" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="107.21" y="719.5" ></text>
</g>
<g >
<title>kfree_skbmem (1,570,602 samples, 0.01%)</title><rect x="928.5" y="181" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="931.51" y="191.5" ></text>
</g>
<g >
<title>do_pte_missing (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="597" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1143.11" y="607.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (2,193,841 samples, 0.02%)</title><rect x="847.5" y="661" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="850.50" y="671.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (39,353,629 samples, 0.34%)</title><rect x="1177.5" y="917" width="3.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1180.45" y="927.5" ></text>
</g>
<g >
<title>mmap_region (2,450,881 samples, 0.02%)</title><rect x="636.3" y="597" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="639.27" y="607.5" ></text>
</g>
<g >
<title>vma_alloc_folio (6,767,347 samples, 0.06%)</title><rect x="101.7" y="677" width="0.6" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="104.66" y="687.5" ></text>
</g>
<g >
<title>el0_da (1,846,251 samples, 0.02%)</title><rect x="10.1" y="997" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="13.09" y="1007.5" ></text>
</g>
<g >
<title>uaccess_ttbr0_enable.isra.0 (1,848,393 samples, 0.02%)</title><rect x="917.3" y="709" width="0.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="920.34" y="719.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (2,193,841 samples, 0.02%)</title><rect x="847.5" y="901" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="850.50" y="911.5" ></text>
</g>
<g >
<title>rcu_core_si (2,126,370 samples, 0.02%)</title><rect x="750.8" y="725" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="753.78" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,612,553 samples, 0.04%)</title><rect x="1137.2" y="885" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1140.16" y="895.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="693" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1110.55" y="703.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (13,220,620 samples, 0.11%)</title><rect x="25.6" y="805" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="28.62" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,473,407 samples, 0.06%)</title><rect x="1170.2" y="901" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1173.20" y="911.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,557,568 samples, 0.01%)</title><rect x="308.3" y="821" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="311.28" y="831.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (24,050,470 samples, 0.20%)</title><rect x="1165.3" y="917" width="2.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1168.31" y="927.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (7,875,527 samples, 0.07%)</title><rect x="562.1" y="869" width="0.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="565.13" y="879.5" ></text>
</g>
<g >
<title>ep_send_events (16,844,004 samples, 0.14%)</title><rect x="12.0" y="869" width="1.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="14.98" y="879.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="837" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1110.55" y="847.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,827,821 samples, 0.02%)</title><rect x="376.5" y="741" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="379.50" y="751.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="581" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1103.99" y="591.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1,837,691 samples, 0.02%)</title><rect x="910.2" y="613" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="913.22" y="623.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1,837,691 samples, 0.02%)</title><rect x="910.2" y="501" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="913.22" y="511.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (213,366,972 samples, 1.82%)</title><rect x="917.9" y="709" width="21.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="920.92" y="719.5" >_..</text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (9,786,927 samples, 0.08%)</title><rect x="1173.7" y="997" width="1.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1176.74" y="1007.5" ></text>
</g>
<g >
<title>__napi_poll (4,939,643 samples, 0.04%)</title><rect x="750.3" y="709" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="753.28" y="719.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="837" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1154.76" y="847.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (259,225,596 samples, 2.21%)</title><rect x="1065.8" y="917" width="26.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1068.82" y="927.5" >e..</text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2,035,615 samples, 0.02%)</title><rect x="1102.9" y="901" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1105.87" y="911.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (2,155,352 samples, 0.02%)</title><rect x="1167.5" y="821" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1170.51" y="831.5" ></text>
</g>
<g >
<title>do_el0_svc (6,474,014 samples, 0.06%)</title><rect x="1153.7" y="949" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1156.74" y="959.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (2,530,129 samples, 0.02%)</title><rect x="862.2" y="901" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="865.16" y="911.5" ></text>
</g>
<g >
<title>__sanitizer::RunMallocHooks (2,756,893 samples, 0.02%)</title><rect x="377.3" y="837" width="0.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="380.33" y="847.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32LocalCache&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt; &gt;::Refill (1,618,079 samples, 0.01%)</title><rect x="10.3" y="805" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="13.29" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,104,971 samples, 0.03%)</title><rect x="1177.0" y="789" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1180.04" y="799.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1,837,691 samples, 0.02%)</title><rect x="910.2" y="469" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="913.22" y="479.5" ></text>
</g>
<g >
<title>___interceptor_read.part.0 (6,463,001 samples, 0.06%)</title><rect x="14.8" y="1013" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="17.80" y="1023.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2,012,042 samples, 0.02%)</title><rect x="358.0" y="933" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="361.01" y="943.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (678,040,719 samples, 5.77%)</title><rect x="751.0" y="965" width="68.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="753.99" y="975.5" >std::_H..</text>
</g>
<g >
<title>ip_rcv (1,685,267 samples, 0.01%)</title><rect x="674.1" y="677" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="677.06" y="687.5" ></text>
</g>
<g >
<title>__do_softirq (8,780,280 samples, 0.07%)</title><rect x="295.9" y="805" width="0.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="298.88" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,508,886 samples, 0.04%)</title><rect x="1145.2" y="773" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1148.24" y="783.5" ></text>
</g>
<g >
<title>do_pte_missing (1,085,595 samples, 0.01%)</title><rect x="10.1" y="885" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.09" y="895.5" ></text>
</g>
<g >
<title>__do_softirq (2,373,698 samples, 0.02%)</title><rect x="1135.4" y="693" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1138.39" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,250,425 samples, 0.02%)</title><rect x="1109.2" y="885" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1112.17" y="895.5" ></text>
</g>
<g >
<title>__asan::AsanTSDGet (4,390,798 samples, 0.04%)</title><rect x="656.2" y="885" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="659.24" y="895.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2,482,488 samples, 0.02%)</title><rect x="1067.0" y="725" width="0.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1069.97" y="735.5" ></text>
</g>
<g >
<title>process_backlog (4,056,441 samples, 0.03%)</title><rect x="882.0" y="661" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="885.01" y="671.5" ></text>
</g>
<g >
<title>blk_cgroup_congested (1,948,551 samples, 0.02%)</title><rect x="101.0" y="693" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="104.00" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (15,961,840 samples, 0.14%)</title><rect x="1126.9" y="805" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1129.91" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (161,683,624 samples, 1.38%)</title><rect x="636.9" y="933" width="16.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="639.95" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,016,223 samples, 0.02%)</title><rect x="819.1" y="901" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="822.10" y="911.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (2,260,114 samples, 0.02%)</title><rect x="1116.3" y="741" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1119.31" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (6,953,273 samples, 0.06%)</title><rect x="1106.7" y="853" width="0.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1109.68" y="863.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="693" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1125.11" y="703.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,820,225 samples, 0.02%)</title><rect x="10.6" y="789" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.59" y="799.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (15,319,891 samples, 0.13%)</title><rect x="653.9" y="885" width="1.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="656.87" y="895.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (112,766,883 samples, 0.96%)</title><rect x="923.2" y="245" width="11.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="926.18" y="255.5" ></text>
</g>
<g >
<title>invoke_syscall (2,341,343 samples, 0.02%)</title><rect x="1188.5" y="741" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1191.51" y="751.5" ></text>
</g>
<g >
<title>tcp_try_coalesce (2,196,897 samples, 0.02%)</title><rect x="1069.4" y="661" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1072.40" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (3,960,717 samples, 0.03%)</title><rect x="1154.4" y="1013" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1157.39" y="1023.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,481,757 samples, 0.01%)</title><rect x="376.4" y="741" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="379.35" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,906,722 samples, 0.05%)</title><rect x="1116.7" y="709" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1119.73" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (2,034,745 samples, 0.02%)</title><rect x="1140.4" y="853" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1143.35" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,464,638 samples, 0.02%)</title><rect x="1160.8" y="997" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1163.79" y="1007.5" ></text>
</g>
<g >
<title>bpf_skops_write_hdr_opt.isra.0 (2,123,925 samples, 0.02%)</title><rect x="923.4" y="165" width="0.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="926.42" y="175.5" ></text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::advance_to (10,221,369 samples, 0.09%)</title><rect x="1172.5" y="949" width="1.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1175.48" y="959.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::chrono::__is_duration&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::value, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::type std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (4,236,904 samples, 0.04%)</title><rect x="1146.7" y="853" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1149.71" y="863.5" ></text>
</g>
<g >
<title>__copy_skb_header (2,158,695 samples, 0.02%)</title><rect x="937.1" y="645" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="940.14" y="655.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (4,227,653 samples, 0.04%)</title><rect x="934.7" y="469" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="937.73" y="479.5" ></text>
</g>
<g >
<title>tcp_established_options (2,263,834 samples, 0.02%)</title><rect x="939.7" y="693" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="942.72" y="703.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (8,140,369 samples, 0.07%)</title><rect x="1185.5" y="853" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1188.51" y="863.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (2,155,352 samples, 0.02%)</title><rect x="1167.5" y="805" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1170.51" y="815.5" ></text>
</g>
<g >
<title>__do_softirq (4,056,441 samples, 0.03%)</title><rect x="882.0" y="725" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="885.01" y="735.5" ></text>
</g>
<g >
<title>invoke_syscall (471,168,768 samples, 4.01%)</title><rect x="906.5" y="837" width="47.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="909.51" y="847.5" >invo..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,486,297 samples, 0.04%)</title><rect x="1147.1" y="821" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1150.13" y="831.5" ></text>
</g>
<g >
<title>_dl_exception_create_format (4,865,220 samples, 0.04%)</title><rect x="10.3" y="917" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.29" y="927.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (11,865,784 samples, 0.10%)</title><rect x="1171.3" y="901" width="1.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1174.29" y="911.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,285,173 samples, 0.02%)</title><rect x="374.7" y="853" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="377.73" y="863.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (4,056,441 samples, 0.03%)</title><rect x="882.0" y="549" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="885.01" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (142,576,641 samples, 1.21%)</title><rect x="620.7" y="901" width="14.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="623.73" y="911.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (4,238,396 samples, 0.04%)</title><rect x="924.0" y="213" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="927.00" y="223.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThreadStats (2,127,090 samples, 0.02%)</title><rect x="105.1" y="901" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="108.09" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (9,295,048 samples, 0.08%)</title><rect x="1175.3" y="917" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1178.34" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (4,006,681 samples, 0.03%)</title><rect x="1137.9" y="853" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1140.90" y="863.5" ></text>
</g>
<g >
<title>do_mem_abort (1,827,821 samples, 0.02%)</title><rect x="376.5" y="789" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="379.50" y="799.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (2,144,875 samples, 0.02%)</title><rect x="13.7" y="1029" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="16.67" y="1039.5" ></text>
</g>
<g >
<title>el0_interrupt (9,124,568 samples, 0.08%)</title><rect x="750.1" y="853" width="0.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="753.08" y="863.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (169,012,969 samples, 1.44%)</title><rect x="1136.8" y="933" width="16.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1139.77" y="943.5" ></text>
</g>
<g >
<title>tcp_recvmsg (51,858,874 samples, 0.44%)</title><rect x="20.4" y="805" width="5.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="23.41" y="815.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1,685,267 samples, 0.01%)</title><rect x="674.1" y="661" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="677.06" y="671.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (6,570,059 samples, 0.06%)</title><rect x="1115.9" y="821" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1118.88" y="831.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,086,096 samples, 0.02%)</title><rect x="21.6" y="725" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="24.56" y="735.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="597" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1125.11" y="607.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (16,060,169 samples, 0.14%)</title><rect x="1138.7" y="869" width="1.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1141.74" y="879.5" ></text>
</g>
<g >
<title>el0_interrupt (2,373,698 samples, 0.02%)</title><rect x="1135.4" y="789" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1138.39" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,603,425 samples, 0.09%)</title><rect x="1177.7" y="901" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1180.65" y="911.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (157,865,526 samples, 1.34%)</title><rect x="1136.8" y="917" width="15.8" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1139.77" y="927.5" ></text>
</g>
<g >
<title>expire_timers (2,105,951 samples, 0.02%)</title><rect x="296.6" y="741" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="299.55" y="751.5" ></text>
</g>
<g >
<title>ip_rcv_finish (4,939,643 samples, 0.04%)</title><rect x="750.3" y="629" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="753.28" y="639.5" ></text>
</g>
<g >
<title>rcu_core_si (6,674,329 samples, 0.06%)</title><rect x="295.9" y="773" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="298.88" y="783.5" ></text>
</g>
<g >
<title>process_backlog (2,131,230 samples, 0.02%)</title><rect x="900.3" y="693" width="0.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="903.33" y="703.5" ></text>
</g>
<g >
<title>__handle_mm_fault (6,471,029 samples, 0.06%)</title><rect x="373.6" y="757" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="376.63" y="767.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (26,956,329 samples, 0.23%)</title><rect x="1114.8" y="853" width="2.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1117.81" y="863.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,872,740 samples, 0.02%)</title><rect x="10.0" y="1077" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (127,981,070 samples, 1.09%)</title><rect x="1121.0" y="885" width="12.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1124.02" y="895.5" ></text>
</g>
<g >
<title>__sanitizer::InternalAlloc (1,813,257 samples, 0.02%)</title><rect x="10.8" y="981" width="0.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="13.78" y="991.5" ></text>
</g>
<g >
<title>do_page_fault (1,695,581 samples, 0.01%)</title><rect x="635.3" y="757" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="638.27" y="767.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="677" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1154.76" y="687.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (4,590,971 samples, 0.04%)</title><rect x="636.1" y="645" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="639.05" y="655.5" ></text>
</g>
<g >
<title>__lsan::DisabledInThisThread (2,189,939 samples, 0.02%)</title><rect x="105.5" y="901" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="108.53" y="911.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2,012,042 samples, 0.02%)</title><rect x="358.0" y="965" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="361.01" y="975.5" ></text>
</g>
<g >
<title>__do_softirq (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="549" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1069.74" y="559.5" ></text>
</g>
<g >
<title>process_backlog (2,617,348 samples, 0.02%)</title><rect x="1064.1" y="709" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1067.10" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (3,972,055 samples, 0.03%)</title><rect x="819.1" y="965" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="822.10" y="975.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (76,873,662 samples, 0.65%)</title><rect x="99.6" y="933" width="7.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="102.62" y="943.5" ></text>
</g>
<g >
<title>____do_softirq (2,482,488 samples, 0.02%)</title><rect x="1067.0" y="661" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1069.97" y="671.5" ></text>
</g>
<g >
<title>alloc_anon_folio (1,557,568 samples, 0.01%)</title><rect x="308.3" y="773" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="311.28" y="783.5" ></text>
</g>
<g >
<title>fmt::v9::detail::parse_format_string&lt;false, char, fmt::v9::detail::vformat_to&lt;char&gt; (166,535,265 samples, 1.42%)</title><rect x="1118.9" y="917" width="16.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1121.90" y="927.5" ></text>
</g>
<g >
<title>rcu_core_si (2,482,488 samples, 0.02%)</title><rect x="1067.0" y="613" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1069.97" y="623.5" ></text>
</g>
<g >
<title>rcu_core (2,042,202 samples, 0.02%)</title><rect x="674.2" y="741" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="677.23" y="751.5" ></text>
</g>
<g >
<title>[libfmt.so.9.1.0] (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="949" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1103.99" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (161,683,624 samples, 1.38%)</title><rect x="636.9" y="949" width="16.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="639.95" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,604,833 samples, 0.07%)</title><rect x="1184.6" y="869" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1187.64" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,887,478 samples, 0.02%)</title><rect x="1140.6" y="837" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1143.56" y="847.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32LocalCache&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt; &gt;::Refill (1,618,079 samples, 0.01%)</title><rect x="10.3" y="853" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="13.29" y="863.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::chrono::__is_duration&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::value, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::type std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (2,095,895 samples, 0.02%)</title><rect x="1183.1" y="901" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1186.13" y="911.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::assign_username (534,208,882 samples, 4.55%)</title><rect x="1100.1" y="997" width="53.6" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1103.08" y="1007.5" >tt::c..</text>
</g>
<g >
<title>_IO_file_overflow (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="821" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1154.76" y="831.5" ></text>
</g>
<g >
<title>__sanitizer::AddModuleSegments (1,813,257 samples, 0.02%)</title><rect x="10.8" y="1013" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="13.78" y="1023.5" ></text>
</g>
<g >
<title>tcp_send_ack (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="613" width="0.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1190.56" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,098,808 samples, 0.02%)</title><rect x="1107.8" y="965" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1110.75" y="975.5" ></text>
</g>
<g >
<title>__send (2,056,223 samples, 0.02%)</title><rect x="1107.5" y="949" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1110.55" y="959.5" ></text>
</g>
<g >
<title>ip_rcv (4,056,441 samples, 0.03%)</title><rect x="882.0" y="613" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="885.01" y="623.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="677" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1103.99" y="687.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="453" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1069.74" y="463.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,891,865 samples, 0.02%)</title><rect x="653.5" y="933" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="656.47" y="943.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (7,714,422 samples, 0.07%)</title><rect x="299.4" y="997" width="0.7" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="302.37" y="1007.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;::try_reserve (17,927,353 samples, 0.15%)</title><rect x="1143.9" y="837" width="1.8" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1146.89" y="847.5" ></text>
</g>
<g >
<title>__alloc_pages (1,820,225 samples, 0.02%)</title><rect x="10.6" y="677" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="13.59" y="687.5" ></text>
</g>
<g >
<title>__mod_timer (4,596,622 samples, 0.04%)</title><rect x="938.7" y="597" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="941.65" y="607.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (451,902,545 samples, 3.85%)</title><rect x="907.2" y="821" width="45.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="910.21" y="831.5" >__ar..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,847,964 samples, 0.03%)</title><rect x="1099.1" y="901" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1102.07" y="911.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (127,219,669 samples, 1.08%)</title><rect x="921.7" y="261" width="12.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="924.73" y="271.5" ></text>
</g>
<g >
<title>__sanitizer::ListOfModules::init (1,813,257 samples, 0.02%)</title><rect x="10.8" y="1061" width="0.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="13.78" y="1071.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::run (1,783,268 samples, 0.02%)</title><rect x="375.6" y="901" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="378.60" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (35,094,447 samples, 0.30%)</title><rect x="617.2" y="949" width="3.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="620.20" y="959.5" ></text>
</g>
<g >
<title>____do_softirq (7,066,013 samples, 0.06%)</title><rect x="750.3" y="773" width="0.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="753.28" y="783.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1,837,691 samples, 0.02%)</title><rect x="910.2" y="261" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="913.22" y="271.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,870,063 samples, 0.03%)</title><rect x="1161.7" y="981" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1164.69" y="991.5" ></text>
</g>
<g >
<title>el1h_64_irq (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="597" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1151.64" y="607.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::AllocateBatch (1,813,257 samples, 0.02%)</title><rect x="10.8" y="933" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="13.78" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,885,427 samples, 0.02%)</title><rect x="1146.3" y="853" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1149.32" y="863.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,695,581 samples, 0.01%)</title><rect x="635.3" y="821" width="0.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="638.27" y="831.5" ></text>
</g>
<g >
<title>iterate_tty_write (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="565" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1154.76" y="575.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,057,252 samples, 0.02%)</title><rect x="1067.4" y="661" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1070.43" y="671.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,172,060 samples, 0.02%)</title><rect x="104.7" y="773" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="107.66" y="783.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (16,306,184 samples, 0.14%)</title><rect x="1179.8" y="853" width="1.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1182.77" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (637,052,575 samples, 5.42%)</title><rect x="379.8" y="965" width="64.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="382.82" y="975.5" >__asan_..</text>
</g>
<g >
<title>tcp_filter (2,309,062 samples, 0.02%)</title><rect x="923.0" y="245" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="925.95" y="255.5" ></text>
</g>
<g >
<title>el0t_64_irq (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="725" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1151.64" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2,494,945 samples, 0.02%)</title><rect x="512.2" y="965" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="515.24" y="975.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (1,651,144 samples, 0.01%)</title><rect x="43.0" y="757" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="46.03" y="767.5" ></text>
</g>
<g >
<title>call_timer_fn (2,193,841 samples, 0.02%)</title><rect x="847.5" y="693" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="850.50" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,486,297 samples, 0.04%)</title><rect x="1147.1" y="837" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1150.13" y="847.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (2,217,614 samples, 0.02%)</title><rect x="930.6" y="149" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="933.58" y="159.5" ></text>
</g>
<g >
<title>ip_finish_output2 (4,798,242 samples, 0.04%)</title><rect x="1076.4" y="85" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1079.35" y="95.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,428,732 samples, 0.02%)</title><rect x="1176.4" y="901" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1179.44" y="911.5" ></text>
</g>
<g >
<title>__arm64_sys_mmap (7,154,882 samples, 0.06%)</title><rect x="106.2" y="709" width="0.7" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="109.19" y="719.5" ></text>
</g>
<g >
<title>memset (2,163,876 samples, 0.02%)</title><rect x="952.2" y="805" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="955.20" y="815.5" ></text>
</g>
<g >
<title>tcp_send_mss (4,245,887 samples, 0.04%)</title><rect x="1090.7" y="741" width="0.4" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="1093.72" y="751.5" ></text>
</g>
<g >
<title>call_on_irq_stack (2,193,841 samples, 0.02%)</title><rect x="847.5" y="805" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="850.50" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (3,945,741 samples, 0.03%)</title><rect x="1181.8" y="901" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1184.80" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (13,763,789 samples, 0.12%)</title><rect x="1117.5" y="869" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1120.52" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (577,395,423 samples, 4.92%)</title><rect x="454.2" y="933" width="58.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="457.24" y="943.5" >__asan..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,863,863 samples, 0.05%)</title><rect x="1167.9" y="949" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1170.93" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,989,263 samples, 0.02%)</title><rect x="1151.1" y="853" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1154.14" y="863.5" ></text>
</g>
<g >
<title>ip_output (168,868,732 samples, 1.44%)</title><rect x="919.1" y="629" width="17.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="922.14" y="639.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2,020,395 samples, 0.02%)</title><rect x="306.4" y="725" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="309.37" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (131,552,381 samples, 1.12%)</title><rect x="604.0" y="965" width="13.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="606.99" y="975.5" ></text>
</g>
<g >
<title>spdlog::details::full_formatter::format (109,373,233 samples, 0.93%)</title><rect x="1140.4" y="885" width="10.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1143.35" y="895.5" ></text>
</g>
<g >
<title>rmqueue (2,410,813 samples, 0.02%)</title><rect x="101.9" y="613" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="104.87" y="623.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1,891,865 samples, 0.02%)</title><rect x="653.5" y="949" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="656.47" y="959.5" ></text>
</g>
<g >
<title>net_rx_action (4,939,643 samples, 0.04%)</title><rect x="750.3" y="725" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="753.28" y="735.5" ></text>
</g>
<g >
<title>el1h_64_irq_handler (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="661" width="0.3" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1069.74" y="671.5" ></text>
</g>
<g >
<title>n_tty_write (1,971,066 samples, 0.02%)</title><rect x="1152.0" y="581" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1154.98" y="591.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (24,050,470 samples, 0.20%)</title><rect x="1165.3" y="901" width="2.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1168.31" y="911.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,389,812 samples, 0.02%)</title><rect x="927.4" y="133" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="930.43" y="143.5" ></text>
</g>
<g >
<title>tcp_sendmsg (252,014,425 samples, 2.15%)</title><rect x="1066.3" y="773" width="25.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1069.29" y="783.5" >t..</text>
</g>
<g >
<title>handle_softirqs (1,837,691 samples, 0.02%)</title><rect x="910.2" y="405" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="913.22" y="415.5" ></text>
</g>
<g >
<title>__sk_mem_raise_allocated (3,831,350 samples, 0.03%)</title><rect x="945.1" y="693" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="948.08" y="703.5" ></text>
</g>
<g >
<title>do_pte_missing (4,339,647 samples, 0.04%)</title><rect x="105.8" y="677" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="108.75" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,898,248 samples, 0.05%)</title><rect x="1103.1" y="917" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1106.08" y="927.5" ></text>
</g>
<g >
<title>__pte_alloc (1,820,225 samples, 0.02%)</title><rect x="10.6" y="725" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="13.59" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,863,863 samples, 0.05%)</title><rect x="1167.9" y="933" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1170.93" y="943.5" ></text>
</g>
<g >
<title>spdlog::details::short_filename_formatter&lt;spdlog::details::null_scoped_padder&gt;::basename (1,752,269 samples, 0.01%)</title><rect x="1181.6" y="917" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1184.63" y="927.5" ></text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::advance_to (13,763,789 samples, 0.12%)</title><rect x="1117.5" y="901" width="1.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1120.52" y="911.5" ></text>
</g>
<g >
<title>do_notify_resume (2,239,361 samples, 0.02%)</title><rect x="817.9" y="805" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="820.93" y="815.5" ></text>
</g>
<g >
<title>vma_alloc_folio (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="613" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1125.11" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (23,260,821 samples, 0.20%)</title><rect x="819.5" y="949" width="2.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="822.50" y="959.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,883,141 samples, 0.02%)</title><rect x="306.6" y="949" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="309.57" y="959.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (5,744,633 samples, 0.05%)</title><rect x="1063.9" y="901" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1066.94" y="911.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,557,568 samples, 0.01%)</title><rect x="308.3" y="949" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="311.28" y="959.5" ></text>
</g>
<g >
<title>__alloc_pages (2,337,193 samples, 0.02%)</title><rect x="104.2" y="677" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="107.21" y="687.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char*, char*&gt; (5,906,722 samples, 0.05%)</title><rect x="1116.7" y="741" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1119.73" y="751.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (133,366,243 samples, 1.14%)</title><rect x="921.1" y="293" width="13.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="924.11" y="303.5" ></text>
</g>
<g >
<title>get_unmapped_area (2,140,090 samples, 0.02%)</title><rect x="636.1" y="597" width="0.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="639.05" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,999,694 samples, 0.02%)</title><rect x="1121.0" y="853" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1124.02" y="863.5" ></text>
</g>
<g >
<title>el0_da (2,073,040 samples, 0.02%)</title><rect x="1122.1" y="789" width="0.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1125.11" y="799.5" ></text>
</g>
<g >
<title>accept (6,474,014 samples, 0.06%)</title><rect x="1153.7" y="1013" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1156.74" y="1023.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,896,715 samples, 0.02%)</title><rect x="169.1" y="917" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="172.08" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,132,224 samples, 0.04%)</title><rect x="1102.5" y="901" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1105.46" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (3,847,964 samples, 0.03%)</title><rect x="1099.1" y="949" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1102.07" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,953,583 samples, 0.05%)</title><rect x="1120.4" y="885" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1123.43" y="895.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (910,857,658 samples, 7.75%)</title><rect x="512.5" y="981" width="91.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="515.49" y="991.5" >void std::..</text>
</g>
<g >
<title>__handle_mm_fault (1,557,568 samples, 0.01%)</title><rect x="308.3" y="837" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="311.28" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (165,756,168 samples, 1.41%)</title><rect x="831.1" y="949" width="16.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="834.07" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (4,085,743 samples, 0.03%)</title><rect x="1173.7" y="965" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1176.74" y="975.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,820,225 samples, 0.02%)</title><rect x="10.6" y="885" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="13.59" y="895.5" ></text>
</g>
<g >
<title>tcp_data_ready (34,796,523 samples, 0.30%)</title><rect x="930.8" y="213" width="3.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="933.80" y="223.5" ></text>
</g>
<g >
<title>tcp_write_timer (2,383,792 samples, 0.02%)</title><rect x="818.2" y="629" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="821.16" y="639.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,651,144 samples, 0.01%)</title><rect x="43.0" y="853" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="46.03" y="863.5" ></text>
</g>
<g >
<title>__d_alloc (2,166,361 samples, 0.02%)</title><rect x="1154.2" y="805" width="0.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1157.18" y="815.5" ></text>
</g>
<g >
<title>do_translation_fault (6,471,029 samples, 0.06%)</title><rect x="373.6" y="805" width="0.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="376.63" y="815.5" ></text>
</g>
<g >
<title>n_tty_write (2,268,901 samples, 0.02%)</title><rect x="1151.8" y="549" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1154.76" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,260,114 samples, 0.02%)</title><rect x="1116.3" y="709" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1119.31" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (3,847,964 samples, 0.03%)</title><rect x="1099.1" y="933" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1102.07" y="943.5" ></text>
</g>
<g >
<title>el0t_64_irq (2,193,841 samples, 0.02%)</title><rect x="847.5" y="917" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="850.50" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,388,422 samples, 0.04%)</title><rect x="1138.3" y="869" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1141.30" y="879.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,695,581 samples, 0.01%)</title><rect x="635.3" y="725" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="638.27" y="735.5" ></text>
</g>
<g >
<title>ip_rcv (2,131,230 samples, 0.02%)</title><rect x="900.3" y="645" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="903.33" y="655.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (2,047,554 samples, 0.02%)</title><rect x="635.4" y="837" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="638.44" y="847.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,373,698 samples, 0.02%)</title><rect x="1135.4" y="741" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1138.39" y="751.5" ></text>
</g>
<g >
<title>____do_softirq (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="485" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1151.64" y="495.5" ></text>
</g>
<g >
<title>__asan::AsanInited (2,105,293 samples, 0.02%)</title><rect x="104.9" y="901" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="107.88" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_key_equals (671,262,517 samples, 5.71%)</title><rect x="751.7" y="917" width="67.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="754.67" y="927.5" >std::__..</text>
</g>
<g >
<title>do_mem_abort (1,557,568 samples, 0.01%)</title><rect x="308.3" y="901" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="311.28" y="911.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (2,163,265 samples, 0.02%)</title><rect x="377.1" y="629" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="380.11" y="639.5" ></text>
</g>
<g >
<title>validate_xmit_skb (2,592,426 samples, 0.02%)</title><rect x="1076.6" y="37" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1079.57" y="47.5" ></text>
</g>
<g >
<title>call_on_irq_stack (2,020,395 samples, 0.02%)</title><rect x="306.4" y="853" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="309.37" y="863.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (1,761,391 samples, 0.01%)</title><rect x="1148.6" y="709" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1151.64" y="719.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (6,411,890 samples, 0.05%)</title><rect x="1150.3" y="757" width="0.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1153.29" y="767.5" ></text>
</g>
<g >
<title>neigh_hh_output (2,193,841 samples, 0.02%)</title><rect x="847.5" y="501" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="850.50" y="511.5" ></text>
</g>
<g >
<title>___interceptor_memcmp (19,294,795 samples, 0.16%)</title><rect x="297.2" y="965" width="2.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="300.21" y="975.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_ccode_ (1,930,221 samples, 0.02%)</title><rect x="1188.1" y="949" width="0.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1191.09" y="959.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (2,058,443 samples, 0.02%)</title><rect x="1077.9" y="213" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1080.86" y="223.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (22,684,437 samples, 0.19%)</title><rect x="1170.2" y="917" width="2.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1173.20" y="927.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,780,280 samples, 0.07%)</title><rect x="295.9" y="885" width="0.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="298.88" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash (2,288,940 samples, 0.02%)</title><rect x="898.8" y="917" width="0.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="901.84" y="927.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (1,953,282 samples, 0.02%)</title><rect x="656.0" y="885" width="0.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="659.05" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,262,702,955 samples, 10.75%)</title><rect x="169.9" y="981" width="126.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="172.92" y="991.5" >__asan_stack_ma..</text>
</g>
<g >
<title>do_pte_missing (1,896,715 samples, 0.02%)</title><rect x="169.1" y="773" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="172.08" y="783.5" ></text>
</g>
<g >
<title>irq_exit_rcu (4,056,441 samples, 0.03%)</title><rect x="882.0" y="805" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="885.01" y="815.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; fmt::v9::detail::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (5,701,184 samples, 0.05%)</title><rect x="1174.1" y="981" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1177.15" y="991.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (37,329,333 samples, 0.32%)</title><rect x="946.3" y="757" width="3.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="949.32" y="767.5" ></text>
</g>
<g >
<title>skb_try_coalesce (2,196,897 samples, 0.02%)</title><rect x="1069.4" y="645" width="0.2" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1072.40" y="655.5" ></text>
</g>
<g >
<title>el0t_64_irq (2,992,458 samples, 0.03%)</title><rect x="1187.6" y="885" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1190.56" y="895.5" ></text>
</g>
<g >
<title>handle_softirqs (7,066,013 samples, 0.06%)</title><rect x="750.3" y="741" width="0.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="753.28" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (3,681,385 samples, 0.03%)</title><rect x="376.1" y="821" width="0.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="379.13" y="831.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (6,716,985 samples, 0.06%)</title><rect x="1183.6" y="901" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1186.58" y="911.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (4,530,154 samples, 0.04%)</title><rect x="1091.1" y="741" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1094.15" y="751.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (5,890,921 samples, 0.05%)</title><rect x="674.1" y="901" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="677.06" y="911.5" ></text>
</g>
<g >
<title>__asan::AsanInited (2,121,104 samples, 0.02%)</title><rect x="298.9" y="949" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="301.94" y="959.5" ></text>
</g>
<g >
<title>sock_def_readable (2,298,453 samples, 0.02%)</title><rect x="910.8" y="645" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="913.84" y="655.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1,837,691 samples, 0.02%)</title><rect x="910.2" y="517" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="913.22" y="527.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,307,760 samples, 0.02%)</title><rect x="1186.3" y="917" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.32" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,955,250 samples, 0.08%)</title><rect x="1187.0" y="901" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1189.96" y="911.5" ></text>
</g>
<g >
<title>epoll_pwait (18,830,329 samples, 0.16%)</title><rect x="11.8" y="1045" width="1.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="14.78" y="1055.5" ></text>
</g>
<g >
<title>page_counter_uncharge (2,042,202 samples, 0.02%)</title><rect x="674.2" y="629" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="677.23" y="639.5" ></text>
</g>
<g >
<title>tcp_small_queue_check.isra.0 (2,160,445 samples, 0.02%)</title><rect x="1090.3" y="693" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1093.29" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (19,107,550 samples, 0.16%)</title><rect x="1158.9" y="917" width="1.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1161.87" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (5,579,037 samples, 0.05%)</title><rect x="1182.4" y="869" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1185.37" y="879.5" ></text>
</g>
<g >
<title>fmt::v9::detail::count_digits (10,652,111 samples, 0.09%)</title><rect x="1112.9" y="853" width="1.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1115.90" y="863.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="741" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1143.11" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,811,810 samples, 0.06%)</title><rect x="1159.9" y="869" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1162.89" y="879.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,839,594 samples, 0.02%)</title><rect x="1101.0" y="837" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1103.99" y="847.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (2,277,145 samples, 0.02%)</title><rect x="818.4" y="901" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="821.40" y="911.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,144,875 samples, 0.02%)</title><rect x="13.7" y="741" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="16.67" y="751.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (2,588,639 samples, 0.02%)</title><rect x="373.6" y="693" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="376.63" y="703.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (4,511,279 samples, 0.04%)</title><rect x="1143.4" y="821" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1146.44" y="831.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,289,024 samples, 0.02%)</title><rect x="1066.7" y="613" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1069.74" y="623.5" ></text>
</g>
<g >
<title>run_timer_softirq (2,105,951 samples, 0.02%)</title><rect x="296.6" y="773" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="299.55" y="783.5" ></text>
</g>
<g >
<title>__ip_finish_output (2,294,067 samples, 0.02%)</title><rect x="924.0" y="101" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="927.00" y="111.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,155,352 samples, 0.02%)</title><rect x="1167.5" y="773" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1170.51" y="783.5" ></text>
</g>
<g >
<title>alloc_pages (2,816,083 samples, 0.02%)</title><rect x="912.9" y="709" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="915.89" y="719.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (4,056,441 samples, 0.03%)</title><rect x="882.0" y="533" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="885.01" y="543.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (14,703,857 samples, 0.13%)</title><rect x="376.1" y="885" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="379.13" y="895.5" ></text>
</g>
<g >
<title>tcp_rcv_established (26,097,818 samples, 0.22%)</title><rect x="1067.2" y="709" width="2.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1070.22" y="719.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1,837,691 samples, 0.02%)</title><rect x="910.2" y="677" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="913.22" y="687.5" ></text>
</g>
<g >
<title>mmap_region (2,427,793 samples, 0.02%)</title><rect x="106.4" y="645" width="0.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="109.43" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,922,835 samples, 0.02%)</title><rect x="1114.2" y="853" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1117.18" y="863.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (4,590,971 samples, 0.04%)</title><rect x="636.1" y="773" width="0.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="639.05" y="783.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_new_connection (360,934,582 samples, 3.07%)</title><rect x="1153.7" y="1045" width="36.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1156.74" y="1055.5" >tt:..</text>
</g>
<g >
<title>__asan::Allocator::Deallocate (17,375,141 samples, 0.15%)</title><rect x="653.7" y="901" width="1.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="656.66" y="911.5" ></text>
</g>
<g >
<title>vma_alloc_folio (2,419,503 samples, 0.02%)</title><rect x="1140.1" y="533" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1143.11" y="543.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, std::ratio&lt;1000l, 1l&gt;, long, false, true&gt;::__cast&lt;long, std::ratio&lt;1l, 1l&gt; &gt; (2,095,895 samples, 0.02%)</title><rect x="1183.1" y="885" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1186.13" y="895.5" ></text>
</g>
<g >
<title>tcp_write_xmit (8,051,142 samples, 0.07%)</title><rect x="1077.0" y="213" width="0.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1080.05" y="223.5" ></text>
</g>
<g >
<title>do_mem_abort (1,651,144 samples, 0.01%)</title><rect x="43.0" y="917" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="46.03" y="927.5" ></text>
</g>
<g >
<title>tcp_select_window (4,303,455 samples, 0.04%)</title><rect x="1087.6" y="677" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1090.61" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,716,800 samples, 0.03%)</title><rect x="1108.8" y="917" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1111.79" y="927.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,285,173 samples, 0.02%)</title><rect x="374.7" y="869" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="377.73" y="879.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;, __sanitizer::LargeMmapAllocatorPtrArrayStatic&gt;::Allocate (1,813,257 samples, 0.02%)</title><rect x="10.8" y="965" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="13.78" y="975.5" ></text>
</g>
<g >
<title>ip_queue_xmit (167,754,297 samples, 1.43%)</title><rect x="1070.8" y="677" width="16.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1073.76" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,208,832 samples, 0.02%)</title><rect x="1151.5" y="853" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1154.53" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (35,094,447 samples, 0.30%)</title><rect x="617.2" y="933" width="3.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="620.20" y="943.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (2,395,092 samples, 0.02%)</title><rect x="1100.8" y="869" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1103.75" y="879.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::begin (8,036,713 samples, 0.07%)</title><rect x="1189.0" y="965" width="0.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1191.97" y="975.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (4,018,159 samples, 0.03%)</title><rect x="1186.6" y="917" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1189.56" y="927.5" ></text>
</g>
<g >
<title>_IO_fwrite (8,639,454 samples, 0.07%)</title><rect x="1151.8" y="869" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1154.76" y="879.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender, int, 0&gt; (32,684,720 samples, 0.28%)</title><rect x="1110.7" y="885" width="3.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1113.69" y="895.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (2,519,183 samples, 0.02%)</title><rect x="1139.4" y="773" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1142.40" y="783.5" ></text>
</g>
<g >
<title>net_rx_action (2,617,348 samples, 0.02%)</title><rect x="1064.1" y="741" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1067.10" y="751.5" ></text>
</g>
<g >
<title>tcp_parse_aligned_timestamp.part.0 (2,327,286 samples, 0.02%)</title><rect x="923.2" y="229" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="926.18" y="239.5" ></text>
</g>
<g >
<title>tcp_try_rmem_schedule (2,291,913 samples, 0.02%)</title><rect x="882.2" y="469" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="885.18" y="479.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,617,930 samples, 0.04%)</title><rect x="821.1" y="869" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="824.14" y="879.5" ></text>
</g>
<g >
<title>invoke_syscall (6,474,014 samples, 0.06%)</title><rect x="1153.7" y="917" width="0.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1156.74" y="927.5" ></text>
</g>
</g>
</svg>
