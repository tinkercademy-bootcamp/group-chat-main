<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1078" onload="init(evt)" viewBox="0 0 1200 1078" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1078.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1061" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1061" > </text>
<g id="frames">
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (7,824,586 samples, 0.28%)</title><rect x="484.5" y="789" width="3.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="487.51" y="799.5" ></text>
</g>
<g >
<title>alloc_anon_folio (1,363,958 samples, 0.05%)</title><rect x="177.2" y="645" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="180.16" y="655.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,716,823 samples, 0.13%)</title><rect x="59.8" y="773" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="62.84" y="783.5" ></text>
</g>
<g >
<title>__sock_sendmsg (110,202,233 samples, 3.88%)</title><rect x="857.2" y="661" width="45.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="860.22" y="671.5" >__so..</text>
</g>
<g >
<title>do_pte_missing (812,845 samples, 0.03%)</title><rect x="1178.3" y="677" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1181.28" y="687.5" ></text>
</g>
<g >
<title>mod_timer (1,969,115 samples, 0.07%)</title><rect x="890.3" y="485" width="0.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="893.25" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (370,095,734 samples, 13.03%)</title><rect x="523.2" y="853" width="153.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="526.21" y="863.5" >std::__detail::_Map..</text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (1,970,291 samples, 0.07%)</title><rect x="1180.8" y="805" width="0.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1183.82" y="815.5" ></text>
</g>
<g >
<title>mmap_region (1,935,250 samples, 0.07%)</title><rect x="321.9" y="469" width="0.8" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="324.94" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;int, true, false&gt;::operator* (2,304,620 samples, 0.08%)</title><rect x="690.1" y="853" width="1.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="693.11" y="863.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (4,551,685 samples, 0.16%)</title><rect x="21.9" y="181" width="1.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="24.94" y="191.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,838,370 samples, 0.06%)</title><rect x="175.6" y="677" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="178.58" y="687.5" ></text>
</g>
<g >
<title>invoke_syscall (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="725" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1182.64" y="735.5" ></text>
</g>
<g >
<title>alloc_anon_folio (1,838,370 samples, 0.06%)</title><rect x="175.6" y="661" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="178.58" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (74,687,829 samples, 2.63%)</title><rect x="726.1" y="805" width="31.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="729.08" y="815.5" >__..</text>
</g>
<g >
<title>el0_svc (2,027,394 samples, 0.07%)</title><rect x="319.4" y="629" width="0.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="322.40" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (2,046,293 samples, 0.07%)</title><rect x="16.6" y="869" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="19.62" y="879.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1,838,370 samples, 0.06%)</title><rect x="175.6" y="613" width="0.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="178.58" y="623.5" ></text>
</g>
<g >
<title>memblock_is_map_memory (2,340,770 samples, 0.08%)</title><rect x="870.3" y="533" width="1.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="873.35" y="543.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (2,027,394 samples, 0.07%)</title><rect x="319.4" y="597" width="0.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="322.40" y="607.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,032,791 samples, 0.07%)</title><rect x="322.7" y="693" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="325.74" y="703.5" ></text>
</g>
<g >
<title>spdlog::details::full_formatter::format (4,027,564 samples, 0.14%)</title><rect x="1184.8" y="805" width="1.7" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1187.83" y="815.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (1,712,888 samples, 0.06%)</title><rect x="845.7" y="773" width="0.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="848.74" y="783.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (3,706,060 samples, 0.13%)</title><rect x="861.3" y="581" width="1.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="864.31" y="591.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (2,249,959 samples, 0.08%)</title><rect x="24.9" y="677" width="0.9" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="27.87" y="687.5" ></text>
</g>
<g >
<title>filemap_map_pages (812,845 samples, 0.03%)</title><rect x="1178.3" y="645" width="0.3" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1181.28" y="655.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (8,011,338 samples, 0.28%)</title><rect x="899.7" y="629" width="3.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="902.68" y="639.5" ></text>
</g>
<g >
<title>___interceptor_memmove (1,918,009 samples, 0.07%)</title><rect x="324.2" y="805" width="0.8" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="327.17" y="815.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,838,370 samples, 0.06%)</title><rect x="175.6" y="709" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="178.58" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (83,966,299 samples, 2.96%)</title><rect x="452.9" y="805" width="34.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="455.87" y="815.5" >st..</text>
</g>
<g >
<title>el0t_64_sync_handler (2,046,293 samples, 0.07%)</title><rect x="16.6" y="805" width="0.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="19.62" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (102,674,535 samples, 3.62%)</title><rect x="403.4" y="837" width="42.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="406.44" y="847.5" >__as..</text>
</g>
<g >
<title>__asan_stack_malloc_1 (24,149,312 samples, 0.85%)</title><rect x="680.1" y="837" width="10.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="683.07" y="847.5" ></text>
</g>
<g >
<title>__handle_mm_fault (812,845 samples, 0.03%)</title><rect x="1178.3" y="709" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1181.28" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (12,148,990 samples, 0.43%)</title><rect x="25.8" y="869" width="5.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="28.81" y="879.5" ></text>
</g>
<g >
<title>do_mem_abort (1,397,511 samples, 0.05%)</title><rect x="1182.4" y="805" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1185.44" y="815.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (12,036,812 samples, 0.42%)</title><rect x="893.9" y="597" width="5.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="896.86" y="607.5" ></text>
</g>
<g >
<title>get_signal (8,418,484 samples, 0.30%)</title><rect x="1186.5" y="917" width="3.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1189.50" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2,125,395 samples, 0.07%)</title><rect x="842.8" y="837" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="845.82" y="847.5" ></text>
</g>
<g >
<title>invoke_syscall (1,295,090 samples, 0.05%)</title><rect x="16.1" y="821" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="19.08" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,906,642 samples, 0.07%)</title><rect x="13.6" y="741" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="16.63" y="751.5" ></text>
</g>
<g >
<title>tcp_try_rmem_schedule (2,171,402 samples, 0.08%)</title><rect x="879.8" y="69" width="0.9" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="882.82" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (155,418,455 samples, 5.47%)</title><rect x="612.4" y="805" width="64.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="615.42" y="815.5" >std::__..</text>
</g>
<g >
<title>__asan::Allocator::Allocate (8,046,078 samples, 0.28%)</title><rect x="320.2" y="741" width="3.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="323.24" y="751.5" ></text>
</g>
<g >
<title>do_pte_missing (1,363,958 samples, 0.05%)</title><rect x="177.2" y="677" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="180.16" y="687.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_client_data (2,803,483,444 samples, 98.73%)</title><rect x="17.5" y="917" width="1164.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="20.47" y="927.5" >tt::chat::server::EpollServer::handle_client_data</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (95,958,085 samples, 3.38%)</title><rect x="280.4" y="837" width="39.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="283.37" y="847.5" >std..</text>
</g>
<g >
<title>do_softirq_own_stack (16,920,176 samples, 0.60%)</title><rect x="875.4" y="373" width="7.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="878.37" y="383.5" ></text>
</g>
<g >
<title>inet_send_prepare (2,157,185 samples, 0.08%)</title><rect x="858.0" y="629" width="0.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="861.04" y="639.5" ></text>
</g>
<g >
<title>tcp_push (47,807,969 samples, 1.68%)</title><rect x="871.9" y="597" width="19.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="874.91" y="607.5" ></text>
</g>
<g >
<title>do_wp_page (2,032,791 samples, 0.07%)</title><rect x="322.7" y="565" width="0.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="325.74" y="575.5" ></text>
</g>
<g >
<title>net_rx_action (16,920,176 samples, 0.60%)</title><rect x="875.4" y="293" width="7.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="878.37" y="303.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (74,211,304 samples, 2.61%)</title><rect x="487.8" y="805" width="30.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="490.76" y="815.5" >__..</text>
</g>
<g >
<title>__asan_stack_malloc_5 (2,249,959 samples, 0.08%)</title><rect x="24.9" y="901" width="0.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="27.87" y="911.5" ></text>
</g>
<g >
<title>main (2,820,593,996 samples, 99.33%)</title><rect x="14.4" y="949" width="1172.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="17.43" y="959.5" >main</text>
</g>
<g >
<title>std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (82,348,766 samples, 2.90%)</title><rect x="691.9" y="837" width="34.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="694.86" y="847.5" >st..</text>
</g>
<g >
<title>__handle_mm_fault (1,838,370 samples, 0.06%)</title><rect x="175.6" y="725" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="178.58" y="735.5" ></text>
</g>
<g >
<title>get_unmapped_area (2,027,394 samples, 0.07%)</title><rect x="319.4" y="501" width="0.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="322.40" y="511.5" ></text>
</g>
<g >
<title>invoke_syscall (132,284,884 samples, 4.66%)</title><rect x="855.5" y="709" width="55.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="858.48" y="719.5" >invok..</text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_create_command (812,845 samples, 0.03%)</title><rect x="1178.3" y="885" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1181.28" y="895.5" ></text>
</g>
<g >
<title>____do_softirq (1,911,400 samples, 0.07%)</title><rect x="912.2" y="629" width="0.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="915.17" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (89,009,938 samples, 3.13%)</title><rect x="62.6" y="869" width="37.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="65.60" y="879.5" >std..</text>
</g>
<g >
<title>tcp_event_new_data_sent (1,969,115 samples, 0.07%)</title><rect x="890.3" y="549" width="0.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="893.25" y="559.5" ></text>
</g>
<g >
<title>do_softirq (4,551,685 samples, 0.16%)</title><rect x="21.9" y="421" width="1.9" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="24.94" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (159,077,822 samples, 5.60%)</title><rect x="610.9" y="837" width="66.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="613.89" y="847.5" >std::_H..</text>
</g>
<g >
<title>__asan_stack_malloc_3 (16,021,467 samples, 0.56%)</title><rect x="169.7" y="853" width="6.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="172.68" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (4,027,564 samples, 0.14%)</title><rect x="1184.8" y="757" width="1.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1187.83" y="767.5" ></text>
</g>
<g >
<title>do_page_fault (1,363,958 samples, 0.05%)</title><rect x="177.2" y="741" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="180.16" y="751.5" ></text>
</g>
<g >
<title>tcp_wmem_schedule (1,972,738 samples, 0.07%)</title><rect x="898.9" y="597" width="0.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="901.86" y="607.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="789" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1181.62" y="799.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (2,243,693 samples, 0.08%)</title><rect x="21.9" y="133" width="1.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="24.94" y="143.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (2,032,791 samples, 0.07%)</title><rect x="322.7" y="533" width="0.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="325.74" y="543.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (4,027,564 samples, 0.14%)</title><rect x="1184.8" y="837" width="1.7" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1187.83" y="847.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (4,551,685 samples, 0.16%)</title><rect x="21.9" y="405" width="1.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="24.94" y="415.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,249,959 samples, 0.08%)</title><rect x="24.9" y="869" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="27.87" y="879.5" ></text>
</g>
<g >
<title>_copy_from_iter (1,411,430 samples, 0.05%)</title><rect x="871.3" y="581" width="0.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="874.32" y="591.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (6,640,832 samples, 0.23%)</title><rect x="59.8" y="837" width="2.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="62.84" y="847.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,307,992 samples, 0.08%)</title><rect x="22.9" y="69" width="0.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="25.87" y="79.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,249,959 samples, 0.08%)</title><rect x="24.9" y="741" width="0.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="27.87" y="751.5" ></text>
</g>
<g >
<title>rcu_all_qs (2,220,944 samples, 0.08%)</title><rect x="1187.4" y="725" width="0.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1190.36" y="735.5" ></text>
</g>
<g >
<title>skb_free_head (2,307,992 samples, 0.08%)</title><rect x="22.9" y="85" width="0.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="25.87" y="95.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (74,211,304 samples, 2.61%)</title><rect x="487.8" y="789" width="30.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="490.76" y="799.5" >__..</text>
</g>
<g >
<title>el0t_64_sync (3,716,823 samples, 0.13%)</title><rect x="59.8" y="757" width="1.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="62.84" y="767.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2,046,293 samples, 0.07%)</title><rect x="16.6" y="853" width="0.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="19.62" y="863.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (8,046,078 samples, 0.28%)</title><rect x="320.2" y="757" width="3.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="323.24" y="767.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (7,419,784 samples, 0.26%)</title><rect x="903.0" y="661" width="3.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="906.01" y="671.5" ></text>
</g>
<g >
<title>__ip_finish_output (4,551,685 samples, 0.16%)</title><rect x="21.9" y="501" width="1.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="24.94" y="511.5" ></text>
</g>
<g >
<title>__ep_remove (1,912,476 samples, 0.07%)</title><rect x="1189.2" y="805" width="0.8" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1192.21" y="815.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,820,593,996 samples, 99.33%)</title><rect x="14.4" y="965" width="1172.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.43" y="975.5" >[libc.so.6]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="805" width="1.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1181.62" y="815.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,906,642 samples, 0.07%)</title><rect x="13.6" y="725" width="0.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="16.63" y="735.5" ></text>
</g>
<g >
<title>tcp_rcv_space_adjust (2,506,819 samples, 0.09%)</title><rect x="23.8" y="645" width="1.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="26.83" y="655.5" ></text>
</g>
<g >
<title>handle_softirqs (1,712,888 samples, 0.06%)</title><rect x="845.7" y="629" width="0.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="848.74" y="639.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (6,502,275 samples, 0.23%)</title><rect x="100.4" y="853" width="2.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="103.38" y="863.5" ></text>
</g>
<g >
<title>do_mem_abort (2,249,959 samples, 0.08%)</title><rect x="24.9" y="821" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="27.87" y="831.5" ></text>
</g>
<g >
<title>do_el0_svc (1,935,250 samples, 0.07%)</title><rect x="321.9" y="581" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="324.94" y="591.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,637,894 samples, 0.06%)</title><rect x="11.7" y="901" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.69" y="911.5" ></text>
</g>
<g >
<title>do_epoll_wait (1,295,090 samples, 0.05%)</title><rect x="16.1" y="773" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="19.08" y="783.5" ></text>
</g>
<g >
<title>tcp_filter (1,874,663 samples, 0.07%)</title><rect x="877.2" y="117" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="880.23" y="127.5" ></text>
</g>
<g >
<title>__netif_receive_skb (16,920,176 samples, 0.60%)</title><rect x="875.4" y="245" width="7.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="878.37" y="255.5" ></text>
</g>
<g >
<title>el0t_64_sync (795,153 samples, 0.03%)</title><rect x="10.7" y="901" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="13.72" y="911.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,637,894 samples, 0.06%)</title><rect x="11.7" y="917" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.69" y="927.5" ></text>
</g>
<g >
<title>do_mem_abort (3,716,823 samples, 0.13%)</title><rect x="59.8" y="709" width="1.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="62.84" y="719.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2,032,791 samples, 0.07%)</title><rect x="322.7" y="725" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="325.74" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (96,030,277 samples, 3.38%)</title><rect x="767.1" y="773" width="39.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="770.08" y="783.5" >__a..</text>
</g>
<g >
<title>do_mmap (1,935,250 samples, 0.07%)</title><rect x="321.9" y="485" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="324.94" y="495.5" ></text>
</g>
<g >
<title>tcp_push (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="613" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1182.64" y="623.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (5,373,158 samples, 0.19%)</title><rect x="323.6" y="821" width="2.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="326.59" y="831.5" ></text>
</g>
<g >
<title>next_uptodate_folio (2,046,293 samples, 0.07%)</title><rect x="16.6" y="629" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="19.62" y="639.5" ></text>
</g>
<g >
<title>__do_softirq (1,712,888 samples, 0.06%)</title><rect x="845.7" y="645" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="848.74" y="655.5" ></text>
</g>
<g >
<title>memset (1,890,312 samples, 0.07%)</title><rect x="898.1" y="565" width="0.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="901.08" y="575.5" ></text>
</g>
<g >
<title>set_pte_range (812,845 samples, 0.03%)</title><rect x="1178.3" y="629" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1181.28" y="639.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (45,993,843 samples, 1.62%)</title><rect x="872.7" y="581" width="19.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="875.66" y="591.5" ></text>
</g>
<g >
<title>mmput (6,506,008 samples, 0.23%)</title><rect x="1186.5" y="853" width="2.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1189.50" y="863.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (1,712,888 samples, 0.06%)</title><rect x="845.7" y="709" width="0.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="848.74" y="719.5" ></text>
</g>
<g >
<title>do_page_fault (2,283,674 samples, 0.08%)</title><rect x="1183.0" y="725" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1186.02" y="735.5" ></text>
</g>
<g >
<title>do_page_fault (1,060,426 samples, 0.04%)</title><rect x="1174.5" y="709" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1177.46" y="719.5" ></text>
</g>
<g >
<title>ip_finish_output (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="501" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1182.64" y="511.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="741" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1182.64" y="751.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::default_arg_formatter&lt;char&gt;::operator (1,970,291 samples, 0.07%)</title><rect x="1180.8" y="773" width="0.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1183.82" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2,036,996 samples, 0.07%)</title><rect x="398.8" y="837" width="0.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="401.82" y="847.5" ></text>
</g>
<g >
<title>server (2,839,661,526 samples, 100.00%)</title><rect x="10.0" y="1013" width="1180.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" >server</text>
</g>
<g >
<title>el0_svc (154,457,643 samples, 5.44%)</title><rect x="848.8" y="757" width="64.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="851.78" y="767.5" >el0_svc</text>
</g>
<g >
<title>tcp_send_mss (5,023,434 samples, 0.18%)</title><rect x="891.8" y="597" width="2.1" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="894.77" y="607.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (2,314,751 samples, 0.08%)</title><rect x="875.4" y="213" width="0.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="878.37" y="223.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (2,225,464 samples, 0.08%)</title><rect x="167.0" y="821" width="0.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="169.97" y="831.5" ></text>
</g>
<g >
<title>el0_da (1,915,375 samples, 0.07%)</title><rect x="486.1" y="677" width="0.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="489.09" y="687.5" ></text>
</g>
<g >
<title>__arm64_sys_mmap (1,935,250 samples, 0.07%)</title><rect x="321.9" y="533" width="0.8" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="324.94" y="543.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (1,861,608 samples, 0.07%)</title><rect x="897.3" y="549" width="0.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="900.30" y="559.5" ></text>
</g>
<g >
<title>do_mem_abort (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="645" width="1.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1181.62" y="655.5" ></text>
</g>
<g >
<title>do_read_fault (812,845 samples, 0.03%)</title><rect x="1178.3" y="661" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1181.28" y="671.5" ></text>
</g>
<g >
<title>neigh_hh_output (4,551,685 samples, 0.16%)</title><rect x="21.9" y="469" width="1.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="24.94" y="479.5" ></text>
</g>
<g >
<title>unmap_page_range (4,431,766 samples, 0.16%)</title><rect x="1187.4" y="773" width="1.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1190.36" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_5 (1,397,511 samples, 0.05%)</title><rect x="1182.4" y="853" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1185.44" y="863.5" ></text>
</g>
<g >
<title>[libfmt.so.9.1.0] (13,419,236 samples, 0.47%)</title><rect x="320.2" y="837" width="5.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="323.24" y="847.5" ></text>
</g>
<g >
<title>do_translation_fault (1,838,370 samples, 0.06%)</title><rect x="175.6" y="773" width="0.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="178.58" y="783.5" ></text>
</g>
<g >
<title>lock_sock_nested (2,287,884 samples, 0.08%)</title><rect x="19.2" y="661" width="0.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="22.16" y="671.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (2,289,467 samples, 0.08%)</title><rect x="21.0" y="645" width="0.9" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="23.99" y="655.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,935,250 samples, 0.07%)</title><rect x="321.9" y="613" width="0.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="324.94" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,580,445 samples, 0.06%)</title><rect x="1180.2" y="821" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1183.16" y="831.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (146,755,688 samples, 5.17%)</title><rect x="549.9" y="837" width="61.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="552.91" y="847.5" >std::_..</text>
</g>
<g >
<title>____do_softirq (1,712,888 samples, 0.06%)</title><rect x="845.7" y="661" width="0.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="848.74" y="671.5" ></text>
</g>
<g >
<title>__sanitizer::LoadedModule::set (1,906,642 samples, 0.07%)</title><rect x="13.6" y="869" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="16.63" y="879.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (1,906,642 samples, 0.07%)</title><rect x="13.6" y="757" width="0.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="16.63" y="767.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="469" width="0.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1182.64" y="479.5" ></text>
</g>
<g >
<title>wp_page_copy (1,915,375 samples, 0.07%)</title><rect x="486.1" y="565" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="489.09" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (277,139,280 samples, 9.76%)</title><rect x="403.4" y="869" width="115.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="406.44" y="879.5" >std::__cxx11::..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (146,755,688 samples, 5.17%)</title><rect x="549.9" y="821" width="61.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="552.91" y="831.5" >std::_..</text>
</g>
<g >
<title>__handle_mm_fault (2,046,293 samples, 0.07%)</title><rect x="16.6" y="709" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="19.62" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (83,966,299 samples, 2.96%)</title><rect x="452.9" y="821" width="34.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="455.87" y="831.5" >st..</text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (95,615,016 samples, 3.37%)</title><rect x="359.9" y="853" width="39.8" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="362.94" y="863.5" >voi..</text>
</g>
<g >
<title>__tcp_transmit_skb (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="565" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1182.64" y="575.5" ></text>
</g>
<g >
<title>ip_rcv (4,551,685 samples, 0.16%)</title><rect x="21.9" y="245" width="1.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="24.94" y="255.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (78,267,332 samples, 2.76%)</title><rect x="807.9" y="741" width="32.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="810.85" y="751.5" >__..</text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,922,768 samples, 0.07%)</title><rect x="1181.6" y="773" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1184.64" y="783.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,363,958 samples, 0.05%)</title><rect x="177.2" y="821" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="180.16" y="831.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (2,071,395 samples, 0.07%)</title><rect x="1184.0" y="869" width="0.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1186.97" y="879.5" ></text>
</g>
<g >
<title>do_pte_missing (1,838,370 samples, 0.06%)</title><rect x="175.6" y="693" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="178.58" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (157,381,191 samples, 5.54%)</title><rect x="611.6" y="821" width="65.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="614.60" y="831.5" >std::_H..</text>
</g>
<g >
<title>el0_svc (16,084,258 samples, 0.57%)</title><rect x="18.2" y="837" width="6.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="21.19" y="847.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (1,077,706 samples, 0.04%)</title><rect x="61.4" y="741" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="64.39" y="751.5" ></text>
</g>
<g >
<title>operator new (6,640,832 samples, 0.23%)</title><rect x="59.8" y="821" width="2.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="62.84" y="831.5" ></text>
</g>
<g >
<title>ip_output (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="517" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1182.64" y="527.5" ></text>
</g>
<g >
<title>__sanitizer::MmapFixedImpl (1,935,250 samples, 0.07%)</title><rect x="321.9" y="661" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="324.94" y="671.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,047,352 samples, 0.07%)</title><rect x="321.1" y="709" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="324.09" y="719.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="597" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1181.62" y="607.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (179,445,018 samples, 6.32%)</title><rect x="25.8" y="885" width="74.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="28.81" y="895.5" >void std..</text>
</g>
<g >
<title>__napi_poll (16,920,176 samples, 0.60%)</title><rect x="875.4" y="277" width="7.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="878.37" y="287.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (1,712,888 samples, 0.06%)</title><rect x="845.7" y="757" width="0.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="848.74" y="767.5" ></text>
</g>
<g >
<title>handle_pte_fault (812,845 samples, 0.03%)</title><rect x="1178.3" y="693" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1181.28" y="703.5" ></text>
</g>
<g >
<title>do_page_fault (1,906,642 samples, 0.07%)</title><rect x="13.6" y="661" width="0.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="16.63" y="671.5" ></text>
</g>
<g >
<title>____do_softirq (4,551,685 samples, 0.16%)</title><rect x="21.9" y="373" width="1.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="24.94" y="383.5" ></text>
</g>
<g >
<title>do_group_exit (8,418,484 samples, 0.30%)</title><rect x="1186.5" y="901" width="3.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1189.50" y="911.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="597" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1182.64" y="607.5" ></text>
</g>
<g >
<title>inet_sendmsg (100,215,465 samples, 3.53%)</title><rect x="858.0" y="645" width="41.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="861.04" y="655.5" >ine..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (6,502,275 samples, 0.23%)</title><rect x="100.4" y="901" width="2.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="103.38" y="911.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (2,027,394 samples, 0.07%)</title><rect x="319.4" y="757" width="0.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="322.40" y="767.5" ></text>
</g>
<g >
<title>vma_alloc_folio (2,047,352 samples, 0.07%)</title><rect x="321.1" y="501" width="0.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="324.09" y="511.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,140,674 samples, 0.08%)</title><rect x="1176.7" y="805" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1179.65" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (80,184,753 samples, 2.82%)</title><rect x="692.8" y="821" width="33.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="695.76" y="831.5" >__..</text>
</g>
<g >
<title>__asan_stack_malloc_2 (16,608,681 samples, 0.58%)</title><rect x="359.9" y="837" width="6.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="362.94" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="869" width="1.0" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1181.62" y="879.5" ></text>
</g>
<g >
<title>__do_softirq (16,920,176 samples, 0.60%)</title><rect x="875.4" y="325" width="7.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="878.37" y="335.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (6,502,275 samples, 0.23%)</title><rect x="100.4" y="789" width="2.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="103.38" y="799.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,046,293 samples, 0.07%)</title><rect x="16.6" y="725" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="19.62" y="735.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (5,713,175 samples, 0.20%)</title><rect x="484.5" y="757" width="2.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="487.51" y="767.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (26,210,805 samples, 0.92%)</title><rect x="873.6" y="517" width="10.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="876.60" y="527.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; spdlog::details::fmt_helper::time_fraction&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (4,027,564 samples, 0.14%)</title><rect x="1184.8" y="789" width="1.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1187.83" y="799.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (803,380,652 samples, 28.29%)</title><rect x="843.7" y="837" width="333.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="846.70" y="847.5" >tt::chat::server::EpollServer::send_message</text>
</g>
<g >
<title>__asan::asan_memalign (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="757" width="1.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1181.62" y="767.5" ></text>
</g>
<g >
<title>__libc_start_main (2,820,593,996 samples, 99.33%)</title><rect x="14.4" y="981" width="1172.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="17.43" y="991.5" >__libc_start_main</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (95,958,085 samples, 3.38%)</title><rect x="280.4" y="853" width="39.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="283.37" y="863.5" >std..</text>
</g>
<g >
<title>operator new (6,207,141 samples, 0.22%)</title><rect x="317.7" y="805" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="320.66" y="815.5" ></text>
</g>
<g >
<title>do_notify_resume (1,995,889 samples, 0.07%)</title><rect x="910.5" y="741" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="913.45" y="751.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (4,551,685 samples, 0.16%)</title><rect x="21.9" y="549" width="1.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="24.94" y="559.5" ></text>
</g>
<g >
<title>next_uptodate_folio (795,153 samples, 0.03%)</title><rect x="10.7" y="709" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.72" y="719.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (2,142,540 samples, 0.08%)</title><rect x="911.3" y="741" width="0.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="914.28" y="751.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1,895,425 samples, 0.07%)</title><rect x="99.6" y="837" width="0.8" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="102.59" y="847.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::broadcast_to_channel (1,204,558,663 samples, 42.42%)</title><rect x="677.0" y="869" width="500.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="680.00" y="879.5" >tt::chat::server::EpollServer::broadcast_to_channel</text>
</g>
<g >
<title>__cond_resched (2,220,944 samples, 0.08%)</title><rect x="1187.4" y="741" width="0.9" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1190.36" y="751.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (2,032,791 samples, 0.07%)</title><rect x="322.7" y="501" width="0.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="325.74" y="511.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (2,601,335 samples, 0.09%)</title><rect x="98.5" y="789" width="1.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="101.51" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (102,674,535 samples, 3.62%)</title><rect x="403.4" y="821" width="42.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="406.44" y="831.5" >__as..</text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_new_connection (9,780,144 samples, 0.34%)</title><rect x="1182.4" y="917" width="4.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1185.44" y="927.5" ></text>
</g>
<g >
<title>__do_softirq (4,551,685 samples, 0.16%)</title><rect x="21.9" y="357" width="1.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="24.94" y="367.5" ></text>
</g>
<g >
<title>eventpoll_release_file (1,912,476 samples, 0.07%)</title><rect x="1189.2" y="821" width="0.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1192.21" y="831.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (1,704,253 samples, 0.06%)</title><rect x="689.4" y="709" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="692.40" y="719.5" ></text>
</g>
<g >
<title>__split_vma (1,935,250 samples, 0.07%)</title><rect x="321.9" y="421" width="0.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="324.94" y="431.5" ></text>
</g>
<g >
<title>handle_mm_fault (3,716,823 samples, 0.13%)</title><rect x="59.8" y="661" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="62.84" y="671.5" ></text>
</g>
<g >
<title>el0_ia (2,046,293 samples, 0.07%)</title><rect x="16.6" y="789" width="0.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="19.62" y="799.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2,359,894 samples, 0.08%)</title><rect x="518.6" y="789" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="521.60" y="799.5" ></text>
</g>
<g >
<title>do_anonymous_page (2,249,959 samples, 0.08%)</title><rect x="24.9" y="709" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="27.87" y="719.5" ></text>
</g>
<g >
<title>__sanitizer_weak_hook_memcmp (2,225,464 samples, 0.08%)</title><rect x="167.0" y="805" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="169.97" y="815.5" ></text>
</g>
<g >
<title>ip_skb_dst_mtu (2,888,803 samples, 0.10%)</title><rect x="883.3" y="469" width="1.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="886.29" y="479.5" ></text>
</g>
<g >
<title>do_wp_page (1,915,375 samples, 0.07%)</title><rect x="486.1" y="581" width="0.8" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="489.09" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (9,069,818 samples, 0.32%)</title><rect x="399.7" y="821" width="3.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="402.67" y="831.5" ></text>
</g>
<g >
<title>operator new (8,046,078 samples, 0.28%)</title><rect x="320.2" y="773" width="3.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="323.24" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (4,208,730 samples, 0.15%)</title><rect x="1174.9" y="805" width="1.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1177.90" y="815.5" ></text>
</g>
<g >
<title>mas_walk (1,906,642 samples, 0.07%)</title><rect x="13.6" y="629" width="0.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="16.63" y="639.5" ></text>
</g>
<g >
<title>do_translation_fault (1,060,426 samples, 0.04%)</title><rect x="1174.5" y="725" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1177.46" y="735.5" ></text>
</g>
<g >
<title>do_page_fault (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="629" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1181.62" y="639.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (2,027,394 samples, 0.07%)</title><rect x="319.4" y="677" width="0.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="322.40" y="687.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (1,704,253 samples, 0.06%)</title><rect x="689.4" y="805" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="692.40" y="815.5" ></text>
</g>
<g >
<title>operator new (7,824,586 samples, 0.28%)</title><rect x="484.5" y="773" width="3.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="487.51" y="783.5" ></text>
</g>
<g >
<title>___interceptor_send (1,993,198 samples, 0.07%)</title><rect x="913.0" y="805" width="0.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="915.97" y="815.5" ></text>
</g>
<g >
<title>__schedule (1,704,253 samples, 0.06%)</title><rect x="689.4" y="725" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="692.40" y="735.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (3,993,929 samples, 0.14%)</title><rect x="520.6" y="805" width="1.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="523.65" y="815.5" ></text>
</g>
<g >
<title>tcp_leave_memory_pressure (2,171,402 samples, 0.08%)</title><rect x="879.8" y="37" width="0.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="882.82" y="47.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (76,969,339 samples, 2.71%)</title><rect x="366.8" y="805" width="32.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="369.84" y="815.5" >__..</text>
</g>
<g >
<title>ns_to_timespec64 (2,117,881 samples, 0.07%)</title><rect x="20.1" y="661" width="0.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="23.11" y="671.5" ></text>
</g>
<g >
<title>__lsan::InitializePlatformSpecificModules (1,906,642 samples, 0.07%)</title><rect x="13.6" y="949" width="0.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="16.63" y="959.5" ></text>
</g>
<g >
<title>dl_iterate_phdr (1,906,642 samples, 0.07%)</title><rect x="13.6" y="917" width="0.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="16.63" y="927.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator[] (206,252,766 samples, 7.26%)</title><rect x="757.1" y="837" width="85.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="760.11" y="847.5" >std::unord..</text>
</g>
<g >
<title>unmap_single_vma.isra.0 (4,431,766 samples, 0.16%)</title><rect x="1187.4" y="789" width="1.8" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1190.36" y="799.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2,359,894 samples, 0.08%)</title><rect x="518.6" y="757" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="521.60" y="767.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::run (2,820,593,996 samples, 99.33%)</title><rect x="14.4" y="933" width="1172.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="17.43" y="943.5" >tt::chat::server::EpollServer::run</text>
</g>
<g >
<title>memset (2,330,522 samples, 0.08%)</title><rect x="18.2" y="725" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="21.19" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="821" width="1.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1181.62" y="831.5" ></text>
</g>
<g >
<title>call_on_irq_stack (2,601,335 samples, 0.09%)</title><rect x="98.5" y="709" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="101.51" y="719.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,637,894 samples, 0.06%)</title><rect x="11.7" y="933" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.69" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (19,486,807 samples, 0.69%)</title><rect x="757.1" y="805" width="8.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="760.11" y="815.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (2,027,394 samples, 0.07%)</title><rect x="319.4" y="533" width="0.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="322.40" y="543.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::parse_client_command (2,597,475,044 samples, 91.47%)</title><rect x="103.1" y="901" width="1079.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="106.08" y="911.5" >tt::chat::server::EpollServer::parse_client_command</text>
</g>
<g >
<title>tcp_ack (2,279,601 samples, 0.08%)</title><rect x="861.3" y="565" width="1.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="864.31" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (86,422,433 samples, 3.04%)</title><rect x="63.7" y="837" width="35.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="66.68" y="847.5" >__a..</text>
</g>
<g >
<title>arch_local_irq_enable (1,292,214 samples, 0.05%)</title><rect x="16.1" y="677" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="19.09" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (74,211,304 samples, 2.61%)</title><rect x="487.8" y="821" width="30.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="490.76" y="831.5" >st..</text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,676,239 samples, 0.09%)</title><rect x="10.0" y="933" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,970,291 samples, 0.07%)</title><rect x="1180.8" y="725" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1183.82" y="735.5" ></text>
</g>
<g >
<title>el0_svc (1,935,250 samples, 0.07%)</title><rect x="321.9" y="597" width="0.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="324.94" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (16,287,142 samples, 0.57%)</title><rect x="446.1" y="821" width="6.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="449.10" y="831.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (1,935,250 samples, 0.07%)</title><rect x="321.9" y="373" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="324.94" y="383.5" ></text>
</g>
<g >
<title>tt::chat::server::ChannelManager::create_channel (812,845 samples, 0.03%)</title><rect x="1178.3" y="869" width="0.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1181.28" y="879.5" ></text>
</g>
<g >
<title>do_notify_resume (8,418,484 samples, 0.30%)</title><rect x="1186.5" y="949" width="3.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1189.50" y="959.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1,426,459 samples, 0.05%)</title><rect x="862.3" y="565" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="865.25" y="575.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,375,861 samples, 0.05%)</title><rect x="11.1" y="901" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.11" y="911.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="581" width="1.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1181.62" y="591.5" ></text>
</g>
<g >
<title>invoke_syscall (2,027,394 samples, 0.07%)</title><rect x="319.4" y="581" width="0.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="322.40" y="591.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,637,894 samples, 0.06%)</title><rect x="11.7" y="885" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.69" y="895.5" ></text>
</g>
<g >
<title>do_mem_abort (1,915,375 samples, 0.07%)</title><rect x="486.1" y="661" width="0.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="489.09" y="671.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (1,795,672 samples, 0.06%)</title><rect x="60.6" y="549" width="0.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="63.64" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="853" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1181.62" y="863.5" ></text>
</g>
<g >
<title>el0_da (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="661" width="1.0" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1181.62" y="671.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="789" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1182.64" y="799.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (9,780,144 samples, 0.34%)</title><rect x="1182.4" y="885" width="4.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1185.44" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (24,149,312 samples, 0.85%)</title><rect x="680.1" y="853" width="10.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="683.07" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (82,105,129 samples, 2.89%)</title><rect x="325.8" y="837" width="34.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="328.82" y="847.5" >__..</text>
</g>
<g >
<title>__alloc_pages (2,047,352 samples, 0.07%)</title><rect x="321.1" y="485" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="324.09" y="495.5" ></text>
</g>
<g >
<title>__sanitizer::AddModuleSegments (1,906,642 samples, 0.07%)</title><rect x="13.6" y="885" width="0.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="16.63" y="895.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender, int, 0&gt; (1,970,291 samples, 0.07%)</title><rect x="1180.8" y="757" width="0.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1183.82" y="767.5" ></text>
</g>
<g >
<title>call_on_irq_stack (1,712,888 samples, 0.06%)</title><rect x="845.7" y="677" width="0.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="848.74" y="687.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (722,994 samples, 0.03%)</title><rect x="10.4" y="901" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.42" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (16,608,681 samples, 0.58%)</title><rect x="359.9" y="821" width="6.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="362.94" y="831.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,033,053 samples, 0.11%)</title><rect x="12.4" y="837" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.37" y="847.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2,359,894 samples, 0.08%)</title><rect x="518.6" y="773" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="521.60" y="783.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (13,419,236 samples, 0.47%)</title><rect x="320.2" y="853" width="5.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="323.24" y="863.5" ></text>
</g>
<g >
<title>tcp_write_xmit (43,725,238 samples, 1.54%)</title><rect x="873.6" y="565" width="18.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="876.60" y="575.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,838,370 samples, 0.06%)</title><rect x="175.6" y="629" width="0.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="178.58" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (146,755,688 samples, 5.17%)</title><rect x="549.9" y="789" width="61.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="552.91" y="799.5" >__asan..</text>
</g>
<g >
<title>ip_queue_xmit (26,210,805 samples, 0.92%)</title><rect x="873.6" y="533" width="10.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="876.60" y="543.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,922,768 samples, 0.07%)</title><rect x="1181.6" y="789" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1184.64" y="799.5" ></text>
</g>
<g >
<title>handle_mm_fault (812,845 samples, 0.03%)</title><rect x="1178.3" y="725" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1181.28" y="735.5" ></text>
</g>
<g >
<title>do_mem_abort (2,046,293 samples, 0.07%)</title><rect x="16.6" y="773" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="19.62" y="783.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (1,795,672 samples, 0.06%)</title><rect x="60.6" y="581" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="63.64" y="591.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (8,011,338 samples, 0.28%)</title><rect x="899.7" y="645" width="3.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="902.68" y="655.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (3,033,053 samples, 0.11%)</title><rect x="12.4" y="869" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="15.37" y="879.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,111,411 samples, 0.07%)</title><rect x="486.9" y="741" width="0.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="489.89" y="751.5" ></text>
</g>
<g >
<title>read (16,084,258 samples, 0.57%)</title><rect x="18.2" y="885" width="6.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="21.19" y="895.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (5,713,175 samples, 0.20%)</title><rect x="484.5" y="741" width="2.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="487.51" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,568,877 samples, 0.09%)</title><rect x="519.6" y="789" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="522.58" y="799.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;::end (74,687,829 samples, 2.63%)</title><rect x="726.1" y="853" width="31.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="729.08" y="863.5" >st..</text>
</g>
<g >
<title>do_pte_missing (2,046,293 samples, 0.07%)</title><rect x="16.6" y="677" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="19.62" y="687.5" ></text>
</g>
<g >
<title>do_mem_abort (1,906,642 samples, 0.07%)</title><rect x="13.6" y="693" width="0.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="16.63" y="703.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (4,551,685 samples, 0.16%)</title><rect x="21.9" y="581" width="1.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="24.94" y="591.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (1,782,745 samples, 0.06%)</title><rect x="1177.5" y="853" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1180.54" y="863.5" ></text>
</g>
<g >
<title>do_mem_abort (2,032,791 samples, 0.07%)</title><rect x="322.7" y="645" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="325.74" y="655.5" ></text>
</g>
<g >
<title>do_translation_fault (812,845 samples, 0.03%)</title><rect x="1178.3" y="757" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1181.28" y="767.5" ></text>
</g>
<g >
<title>el0_svc (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="773" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1182.64" y="783.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (1,935,250 samples, 0.07%)</title><rect x="321.9" y="645" width="0.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="324.94" y="655.5" ></text>
</g>
<g >
<title>__sanitizer_internal_memset (1,503,390 samples, 0.05%)</title><rect x="13.0" y="725" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="16.00" y="735.5" ></text>
</g>
<g >
<title>__aarch64_cas4_acq_rel (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="709" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1181.62" y="719.5" ></text>
</g>
<g >
<title>operator delete (6,502,275 samples, 0.23%)</title><rect x="100.4" y="837" width="2.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="103.38" y="847.5" ></text>
</g>
<g >
<title>tcp_mtu_probe (1,682,275 samples, 0.06%)</title><rect x="891.1" y="549" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="894.07" y="559.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="837" width="1.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1181.62" y="847.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (1,782,745 samples, 0.06%)</title><rect x="1177.5" y="869" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1180.54" y="879.5" ></text>
</g>
<g >
<title>kmalloc_reserve (4,066,712 samples, 0.14%)</title><rect x="894.7" y="565" width="1.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="897.74" y="575.5" ></text>
</g>
<g >
<title>__tcp_cleanup_rbuf (4,551,685 samples, 0.16%)</title><rect x="21.9" y="629" width="1.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="24.94" y="639.5" ></text>
</g>
<g >
<title>el0_interrupt (1,712,888 samples, 0.06%)</title><rect x="845.7" y="741" width="0.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="848.74" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,935,250 samples, 0.07%)</title><rect x="321.9" y="629" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="324.94" y="639.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (1,911,400 samples, 0.07%)</title><rect x="912.2" y="677" width="0.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="915.17" y="687.5" ></text>
</g>
<g >
<title>el0_svc (8,418,484 samples, 0.30%)</title><rect x="1186.5" y="965" width="3.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1189.50" y="975.5" ></text>
</g>
<g >
<title>_start (2,820,593,996 samples, 99.33%)</title><rect x="14.4" y="997" width="1172.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="17.43" y="1007.5" >_start</text>
</g>
<g >
<title>__sock_sendmsg (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="677" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1182.64" y="687.5" ></text>
</g>
<g >
<title>ktime_get (13,863,043 samples, 0.49%)</title><rect x="884.5" y="549" width="5.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="887.49" y="559.5" ></text>
</g>
<g >
<title>__ip_finish_output (23,322,002 samples, 0.82%)</title><rect x="873.6" y="469" width="9.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="876.60" y="479.5" ></text>
</g>
<g >
<title>get_any_partial (1,947,484 samples, 0.07%)</title><rect x="895.6" y="533" width="0.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="898.62" y="543.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,363,958 samples, 0.05%)</title><rect x="177.2" y="693" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="180.16" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (76,969,339 samples, 2.71%)</title><rect x="366.8" y="821" width="32.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="369.84" y="831.5" >__..</text>
</g>
<g >
<title>inet_sendmsg (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="661" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1182.64" y="671.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,047,352 samples, 0.07%)</title><rect x="321.1" y="581" width="0.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="324.09" y="591.5" ></text>
</g>
<g >
<title>tcp_established_options (2,994,579 samples, 0.11%)</title><rect x="892.6" y="565" width="1.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="895.62" y="575.5" ></text>
</g>
<g >
<title>__handle_mm_fault (795,153 samples, 0.03%)</title><rect x="10.7" y="789" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.72" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (76,390,665 samples, 2.69%)</title><rect x="30.9" y="869" width="31.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="33.86" y="879.5" >st..</text>
</g>
<g >
<title>__arch_copy_from_user (1,066,030 samples, 0.04%)</title><rect x="869.9" y="581" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="872.90" y="591.5" ></text>
</g>
<g >
<title>do_anonymous_page (2,047,352 samples, 0.07%)</title><rect x="321.1" y="549" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="324.09" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,970,291 samples, 0.07%)</title><rect x="1180.8" y="741" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1183.82" y="751.5" ></text>
</g>
<g >
<title>tcp_data_queue (6,519,537 samples, 0.23%)</title><rect x="878.0" y="85" width="2.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="881.01" y="95.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (1,363,958 samples, 0.05%)</title><rect x="177.2" y="629" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="180.16" y="639.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1,911,400 samples, 0.07%)</title><rect x="912.2" y="661" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="915.17" y="671.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (3,907,129 samples, 0.14%)</title><rect x="844.8" y="805" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="847.83" y="815.5" ></text>
</g>
<g >
<title>__sanitizer::internal_strdup (1,906,642 samples, 0.07%)</title><rect x="13.6" y="853" width="0.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="16.63" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (80,184,753 samples, 2.82%)</title><rect x="692.8" y="805" width="33.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="695.76" y="815.5" >__..</text>
</g>
<g >
<title>el0_ia (812,845 samples, 0.03%)</title><rect x="1178.3" y="789" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1181.28" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,782,745 samples, 0.06%)</title><rect x="1177.5" y="821" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1180.54" y="831.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (5,713,175 samples, 0.20%)</title><rect x="484.5" y="725" width="2.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="487.51" y="735.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator[] (812,845 samples, 0.03%)</title><rect x="1178.3" y="853" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1181.28" y="863.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,915,375 samples, 0.07%)</title><rect x="486.1" y="597" width="0.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="489.09" y="607.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.0 (1,969,115 samples, 0.07%)</title><rect x="890.3" y="517" width="0.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="893.25" y="527.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="629" width="0.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1182.64" y="639.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="613" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1181.62" y="623.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (2,601,335 samples, 0.09%)</title><rect x="98.5" y="805" width="1.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="101.51" y="815.5" ></text>
</g>
<g >
<title>arch_counter_get_cntvct (6,054,947 samples, 0.21%)</title><rect x="887.7" y="533" width="2.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="890.74" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (177,720,145 samples, 6.26%)</title><rect x="325.8" y="869" width="73.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="328.82" y="879.5" >std::__c..</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (14,605,425 samples, 0.51%)</title><rect x="876.3" y="149" width="6.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="879.33" y="159.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (4,551,685 samples, 0.16%)</title><rect x="21.9" y="597" width="1.9" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="24.94" y="607.5" ></text>
</g>
<g >
<title>alloc_anon_folio (2,249,959 samples, 0.08%)</title><rect x="24.9" y="693" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="27.87" y="703.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="693" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1181.62" y="703.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (10,629,689 samples, 0.37%)</title><rect x="10.0" y="997" width="4.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" ></text>
</g>
<g >
<title>el0_da (1,838,370 samples, 0.06%)</title><rect x="175.6" y="805" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="178.58" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (3,342,519 samples, 0.12%)</title><rect x="176.3" y="837" width="1.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="179.34" y="847.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (3,716,823 samples, 0.13%)</title><rect x="59.8" y="741" width="1.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="62.84" y="751.5" ></text>
</g>
<g >
<title>ip_queue_xmit (4,551,685 samples, 0.16%)</title><rect x="21.9" y="565" width="1.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="24.94" y="575.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (1,935,250 samples, 0.07%)</title><rect x="321.9" y="725" width="0.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="324.94" y="735.5" ></text>
</g>
<g >
<title>el0_da (2,283,674 samples, 0.08%)</title><rect x="1183.0" y="773" width="1.0" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1186.02" y="783.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (1,915,375 samples, 0.07%)</title><rect x="486.1" y="549" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="489.09" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (277,139,280 samples, 9.76%)</title><rect x="403.4" y="853" width="115.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="406.44" y="863.5" >std::__cxx11::..</text>
</g>
<g >
<title>do_pte_missing (2,249,959 samples, 0.08%)</title><rect x="24.9" y="725" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="27.87" y="735.5" ></text>
</g>
<g >
<title>__schedule (1,631,580 samples, 0.06%)</title><rect x="860.6" y="565" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="863.63" y="575.5" ></text>
</g>
<g >
<title>skb_release_data (2,289,467 samples, 0.08%)</title><rect x="21.0" y="629" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="23.99" y="639.5" ></text>
</g>
<g >
<title>release_sock (9,413,433 samples, 0.33%)</title><rect x="858.9" y="613" width="3.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="861.93" y="623.5" ></text>
</g>
<g >
<title>__mod_timer (1,969,115 samples, 0.07%)</title><rect x="890.3" y="469" width="0.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="893.25" y="479.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (628,362,728 samples, 22.13%)</title><rect x="913.8" y="805" width="261.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="916.79" y="815.5" >__asan_stack_malloc_2</text>
</g>
<g >
<title>__local_bh_enable_ip (4,551,685 samples, 0.16%)</title><rect x="21.9" y="437" width="1.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="24.94" y="447.5" ></text>
</g>
<g >
<title>__check_object_size (1,800,044 samples, 0.06%)</title><rect x="869.2" y="597" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="872.16" y="607.5" ></text>
</g>
<g >
<title>do_anonymous_page (3,716,823 samples, 0.13%)</title><rect x="59.8" y="597" width="1.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="62.84" y="607.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (2,047,352 samples, 0.07%)</title><rect x="321.1" y="517" width="0.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="324.09" y="527.5" ></text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (248,247,695 samples, 8.74%)</title><rect x="176.3" y="869" width="103.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="179.34" y="879.5" >fmt::v9::for..</text>
</g>
<g >
<title>MemcmpInterceptorCommon (2,022,320 samples, 0.07%)</title><rect x="167.9" y="805" width="0.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="170.89" y="815.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,078,037 samples, 0.14%)</title><rect x="320.2" y="725" width="1.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="323.24" y="735.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::AllocateBatch (1,906,642 samples, 0.07%)</title><rect x="13.6" y="789" width="0.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="16.63" y="799.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,363,958 samples, 0.05%)</title><rect x="177.2" y="805" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="180.16" y="815.5" ></text>
</g>
<g >
<title>schedule (1,292,214 samples, 0.05%)</title><rect x="16.1" y="709" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="19.09" y="719.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,426,459 samples, 0.05%)</title><rect x="862.3" y="485" width="0.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="865.25" y="495.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,529,663 samples, 0.05%)</title><rect x="12.4" y="789" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="15.37" y="799.5" ></text>
</g>
<g >
<title>do_mem_abort (1,838,370 samples, 0.06%)</title><rect x="175.6" y="789" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="178.58" y="799.5" ></text>
</g>
<g >
<title>el0_da (1,060,426 samples, 0.04%)</title><rect x="1174.5" y="757" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1177.46" y="767.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (4,818,230 samples, 0.17%)</title><rect x="869.9" y="597" width="2.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="872.90" y="607.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,397,511 samples, 0.05%)</title><rect x="1182.4" y="821" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1185.44" y="831.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (14,605,425 samples, 0.51%)</title><rect x="876.3" y="133" width="6.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="879.33" y="143.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,363,958 samples, 0.05%)</title><rect x="177.2" y="613" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="180.16" y="623.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,838,370 samples, 0.06%)</title><rect x="175.6" y="581" width="0.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="178.58" y="591.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (2,074,242 samples, 0.07%)</title><rect x="1186.5" y="789" width="0.9" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1189.50" y="799.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (805,506,047 samples, 28.37%)</title><rect x="842.8" y="853" width="334.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="845.82" y="863.5" >tt::chat::server::EpollServer::send_message</text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_ptr (1,975,794 samples, 0.07%)</title><rect x="840.4" y="741" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="843.37" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_key_equals (155,418,455 samples, 5.47%)</title><rect x="612.4" y="789" width="64.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="615.42" y="799.5" >std::__..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (89,750,944 samples, 3.16%)</title><rect x="280.4" y="821" width="37.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="283.37" y="831.5" >__a..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (16,920,176 samples, 0.60%)</title><rect x="875.4" y="229" width="7.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="878.37" y="239.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (3,342,519 samples, 0.12%)</title><rect x="176.3" y="853" width="1.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="179.34" y="863.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="741" width="1.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1181.62" y="751.5" ></text>
</g>
<g >
<title>___interceptor_send (1,993,198 samples, 0.07%)</title><rect x="913.0" y="821" width="0.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="915.97" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (154,457,643 samples, 5.44%)</title><rect x="848.8" y="773" width="64.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="851.78" y="783.5" >el0t_64..</text>
</g>
<g >
<title>el0t_64_sync_handler (16,084,258 samples, 0.57%)</title><rect x="18.2" y="853" width="6.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="21.19" y="863.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (21,170,899 samples, 0.75%)</title><rect x="873.6" y="421" width="8.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="876.60" y="431.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (16,287,142 samples, 0.57%)</title><rect x="446.1" y="805" width="6.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="449.10" y="815.5" ></text>
</g>
<g >
<title>el1h_64_irq_handler (1,911,400 samples, 0.07%)</title><rect x="912.2" y="725" width="0.8" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="915.17" y="735.5" ></text>
</g>
<g >
<title>check_heap_object (2,340,770 samples, 0.08%)</title><rect x="870.3" y="549" width="1.0" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="873.35" y="559.5" ></text>
</g>
<g >
<title>epoll_pwait (1,295,090 samples, 0.05%)</title><rect x="16.1" y="917" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="19.08" y="927.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (86,240,210 samples, 3.04%)</title><rect x="807.0" y="789" width="35.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="809.99" y="799.5" >std..</text>
</g>
<g >
<title>lock_vma_under_rcu (2,283,674 samples, 0.08%)</title><rect x="1183.0" y="709" width="1.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1186.02" y="719.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (2,140,674 samples, 0.08%)</title><rect x="1176.7" y="821" width="0.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1179.65" y="831.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (4,431,766 samples, 0.16%)</title><rect x="1187.4" y="757" width="1.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1190.36" y="767.5" ></text>
</g>
<g >
<title>invoke_syscall (1,935,250 samples, 0.07%)</title><rect x="321.9" y="549" width="0.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="324.94" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::rfind (160,281,700 samples, 5.64%)</title><rect x="103.1" y="885" width="66.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="106.08" y="895.5" >std::__..</text>
</g>
<g >
<title>__ip_queue_xmit (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="533" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1182.64" y="543.5" ></text>
</g>
<g >
<title>spdlog::details::registry::registry (2,046,293 samples, 0.07%)</title><rect x="16.6" y="885" width="0.9" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="19.62" y="895.5" ></text>
</g>
<g >
<title>do_epoll_pwait.part.0 (1,295,090 samples, 0.05%)</title><rect x="16.1" y="789" width="0.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="19.08" y="799.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (1,838,370 samples, 0.06%)</title><rect x="175.6" y="645" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="178.58" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2,046,293 samples, 0.07%)</title><rect x="16.6" y="837" width="0.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="19.62" y="847.5" ></text>
</g>
<g >
<title>ip_local_deliver (14,605,425 samples, 0.51%)</title><rect x="876.3" y="181" width="6.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="879.33" y="191.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (6,640,832 samples, 0.23%)</title><rect x="59.8" y="789" width="2.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="62.84" y="799.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (4,551,685 samples, 0.16%)</title><rect x="21.9" y="165" width="1.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="24.94" y="175.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (75,145,777 samples, 2.65%)</title><rect x="453.3" y="773" width="31.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="456.29" y="783.5" >__..</text>
</g>
<g >
<title>do_mem_abort (1,060,426 samples, 0.04%)</title><rect x="1174.5" y="741" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1177.46" y="751.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (1,906,642 samples, 0.07%)</title><rect x="13.6" y="645" width="0.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="16.63" y="655.5" ></text>
</g>
<g >
<title>el0t_64_sync (16,084,258 samples, 0.57%)</title><rect x="18.2" y="869" width="6.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="21.19" y="879.5" ></text>
</g>
<g >
<title>[libfmt.so.9.1.0] (8,046,078 samples, 0.28%)</title><rect x="320.2" y="821" width="3.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="323.24" y="831.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,363,958 samples, 0.05%)</title><rect x="177.2" y="565" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="180.16" y="575.5" ></text>
</g>
<g >
<title>folio_add_lru (1,915,375 samples, 0.07%)</title><rect x="486.1" y="533" width="0.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="489.09" y="543.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (16,021,467 samples, 0.56%)</title><rect x="169.7" y="869" width="6.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="172.68" y="879.5" ></text>
</g>
<g >
<title>__interception::InterceptFunction (3,033,053 samples, 0.11%)</title><rect x="12.4" y="917" width="1.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="15.37" y="927.5" ></text>
</g>
<g >
<title>do_translation_fault (2,047,352 samples, 0.07%)</title><rect x="321.1" y="645" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="324.09" y="655.5" ></text>
</g>
<g >
<title>do_translation_fault (2,046,293 samples, 0.07%)</title><rect x="16.6" y="757" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="19.62" y="767.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,046,293 samples, 0.07%)</title><rect x="16.6" y="821" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="19.62" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (82,105,129 samples, 2.89%)</title><rect x="325.8" y="853" width="34.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="328.82" y="863.5" >__..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (2,027,394 samples, 0.07%)</title><rect x="319.4" y="709" width="0.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="322.40" y="719.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;::begin (84,255,050 samples, 2.97%)</title><rect x="691.1" y="853" width="35.0" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="694.07" y="863.5" >st..</text>
</g>
<g >
<title>el0t_64_sync (1,295,090 samples, 0.05%)</title><rect x="16.1" y="901" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="19.08" y="911.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (6,640,832 samples, 0.23%)</title><rect x="59.8" y="805" width="2.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="62.84" y="815.5" ></text>
</g>
<g >
<title>do_vmi_munmap (1,935,250 samples, 0.07%)</title><rect x="321.9" y="453" width="0.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="324.94" y="463.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,915,375 samples, 0.07%)</title><rect x="486.1" y="693" width="0.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="489.09" y="703.5" ></text>
</g>
<g >
<title>__schedule (1,292,214 samples, 0.05%)</title><rect x="16.1" y="693" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="19.09" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,033,053 samples, 0.11%)</title><rect x="12.4" y="885" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.37" y="895.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (2,027,394 samples, 0.07%)</title><rect x="319.4" y="741" width="0.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="322.40" y="751.5" ></text>
</g>
<g >
<title>sk_reset_timer (1,969,115 samples, 0.07%)</title><rect x="890.3" y="501" width="0.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="893.25" y="511.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2,194,241 samples, 0.08%)</title><rect x="844.8" y="789" width="0.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="847.83" y="799.5" ></text>
</g>
<g >
<title>spdlog::default_logger_raw (2,046,293 samples, 0.07%)</title><rect x="16.6" y="917" width="0.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="19.62" y="927.5" ></text>
</g>
<g >
<title>do_page_fault (2,249,959 samples, 0.08%)</title><rect x="24.9" y="789" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="27.87" y="799.5" ></text>
</g>
<g >
<title>do_page_fault (3,716,823 samples, 0.13%)</title><rect x="59.8" y="677" width="1.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="62.84" y="687.5" ></text>
</g>
<g >
<title>__cond_resched (2,119,228 samples, 0.07%)</title><rect x="894.7" y="549" width="0.9" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="897.74" y="559.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,397,511 samples, 0.05%)</title><rect x="1182.4" y="837" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1185.44" y="847.5" ></text>
</g>
<g >
<title>ip_rcv_finish (14,605,425 samples, 0.51%)</title><rect x="876.3" y="197" width="6.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="879.33" y="207.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::min&lt;unsigned long&gt; (2,278,695 samples, 0.08%)</title><rect x="168.7" y="853" width="1.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="171.73" y="863.5" ></text>
</g>
<g >
<title>do_el0_svc (2,027,394 samples, 0.07%)</title><rect x="319.4" y="613" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="322.40" y="623.5" ></text>
</g>
<g >
<title>do_pte_missing (795,153 samples, 0.03%)</title><rect x="10.7" y="757" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.72" y="767.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="725" width="1.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1181.62" y="735.5" ></text>
</g>
<g >
<title>process_backlog (16,920,176 samples, 0.60%)</title><rect x="875.4" y="261" width="7.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="878.37" y="271.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,033,053 samples, 0.11%)</title><rect x="12.4" y="821" width="1.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.37" y="831.5" ></text>
</g>
<g >
<title>__sys_sendto (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="693" width="0.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1182.64" y="703.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="677" width="1.0" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1181.62" y="687.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (18,983,183 samples, 0.67%)</title><rect x="874.5" y="405" width="7.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="877.51" y="415.5" ></text>
</g>
<g >
<title>do_pte_missing (3,716,823 samples, 0.13%)</title><rect x="59.8" y="613" width="1.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="62.84" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (96,030,277 samples, 3.38%)</title><rect x="767.1" y="789" width="39.9" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="770.08" y="799.5" >std..</text>
</g>
<g >
<title>do_page_fault (2,046,293 samples, 0.07%)</title><rect x="16.6" y="741" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="19.62" y="751.5" ></text>
</g>
<g >
<title>arch_get_unmapped_area_topdown (2,027,394 samples, 0.07%)</title><rect x="319.4" y="485" width="0.8" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="322.40" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,568,877 samples, 0.09%)</title><rect x="519.6" y="773" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="522.58" y="783.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (1,077,706 samples, 0.04%)</title><rect x="61.4" y="773" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="64.39" y="783.5" ></text>
</g>
<g >
<title>__aarch64_cas4_acq_rel (2,032,791 samples, 0.07%)</title><rect x="322.7" y="709" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="325.74" y="719.5" ></text>
</g>
<g >
<title>memset (6,960,718 samples, 0.25%)</title><rect x="906.1" y="677" width="2.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="909.09" y="687.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (1,295,090 samples, 0.05%)</title><rect x="16.1" y="837" width="0.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="19.08" y="847.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (1,922,768 samples, 0.07%)</title><rect x="1181.6" y="805" width="0.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1184.64" y="815.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,047,352 samples, 0.07%)</title><rect x="321.1" y="693" width="0.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="324.09" y="703.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,060,426 samples, 0.04%)</title><rect x="1174.5" y="789" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1177.46" y="799.5" ></text>
</g>
<g >
<title>do_page_fault (1,915,375 samples, 0.07%)</title><rect x="486.1" y="645" width="0.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="489.09" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (4,027,564 samples, 0.14%)</title><rect x="1184.8" y="741" width="1.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1187.83" y="751.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,915,375 samples, 0.07%)</title><rect x="486.1" y="613" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="489.09" y="623.5" ></text>
</g>
<g >
<title>___interceptor_read.part.0 (16,084,258 samples, 0.57%)</title><rect x="18.2" y="901" width="6.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="21.19" y="911.5" ></text>
</g>
<g >
<title>__sanitizer::InternalAlloc (1,906,642 samples, 0.07%)</title><rect x="13.6" y="837" width="0.8" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="16.63" y="847.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3,716,823 samples, 0.13%)</title><rect x="59.8" y="645" width="1.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="62.84" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (151,664,005 samples, 5.34%)</title><rect x="103.1" y="837" width="63.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="106.08" y="847.5" >__asan..</text>
</g>
<g >
<title>do_el0_svc (132,284,884 samples, 4.66%)</title><rect x="855.5" y="741" width="55.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="858.48" y="751.5" >do_el..</text>
</g>
<g >
<title>ip_queue_xmit (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="549" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1182.64" y="559.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,375,861 samples, 0.05%)</title><rect x="11.1" y="917" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.11" y="927.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (1,935,250 samples, 0.07%)</title><rect x="321.9" y="709" width="0.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="324.94" y="719.5" ></text>
</g>
<g >
<title>char const* std::addressof&lt;char const&gt; (1,761,557 samples, 0.06%)</title><rect x="521.6" y="789" width="0.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="524.58" y="799.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (132,284,884 samples, 4.66%)</title><rect x="855.5" y="725" width="55.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="858.48" y="735.5" >el0_s..</text>
</g>
<g >
<title>handle_pte_fault (795,153 samples, 0.03%)</title><rect x="10.7" y="773" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.72" y="783.5" ></text>
</g>
<g >
<title>el0_da (1,906,642 samples, 0.07%)</title><rect x="13.6" y="709" width="0.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="16.63" y="719.5" ></text>
</g>
<g >
<title>sock_recvmsg (13,753,736 samples, 0.48%)</title><rect x="19.2" y="709" width="5.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="22.16" y="719.5" ></text>
</g>
<g >
<title>task_work_run (1,912,476 samples, 0.07%)</title><rect x="1189.2" y="869" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1192.21" y="879.5" ></text>
</g>
<g >
<title>vfs_read (16,084,258 samples, 0.57%)</title><rect x="18.2" y="741" width="6.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="21.19" y="751.5" ></text>
</g>
<g >
<title>do_translation_fault (795,153 samples, 0.03%)</title><rect x="10.7" y="837" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="13.72" y="847.5" ></text>
</g>
<g >
<title>handle_softirqs (1,911,400 samples, 0.07%)</title><rect x="912.2" y="597" width="0.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="915.17" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (84,155,613 samples, 2.96%)</title><rect x="807.9" y="773" width="34.9" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="810.85" y="783.5" >st..</text>
</g>
<g >
<title>kfree_skbmem (1,426,459 samples, 0.05%)</title><rect x="862.3" y="501" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="865.25" y="511.5" ></text>
</g>
<g >
<title>el0_da (795,153 samples, 0.03%)</title><rect x="10.7" y="869" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="13.72" y="879.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (6,339,000 samples, 0.22%)</title><rect x="166.1" y="853" width="2.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="169.10" y="863.5" ></text>
</g>
<g >
<title>___interceptor_memcmp (2,022,320 samples, 0.07%)</title><rect x="167.9" y="821" width="0.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="170.89" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_addr (2,519,803 samples, 0.09%)</title><rect x="676.0" y="757" width="1.0" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="678.95" y="767.5" ></text>
</g>
<g >
<title>std::common_type&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::type std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (4,027,564 samples, 0.14%)</title><rect x="1184.8" y="773" width="1.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1187.83" y="783.5" ></text>
</g>
<g >
<title>__sanitizer::InternalAlloc (1,503,390 samples, 0.05%)</title><rect x="13.0" y="757" width="0.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="16.00" y="767.5" ></text>
</g>
<g >
<title>ksys_read (16,084,258 samples, 0.57%)</title><rect x="18.2" y="757" width="6.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="21.19" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (75,145,777 samples, 2.65%)</title><rect x="453.3" y="789" width="31.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="456.29" y="799.5" >__..</text>
</g>
<g >
<title>ip_output (4,551,685 samples, 0.16%)</title><rect x="21.9" y="533" width="1.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="24.94" y="543.5" ></text>
</g>
<g >
<title>do_page_fault (795,153 samples, 0.03%)</title><rect x="10.7" y="821" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="13.72" y="831.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,676,239 samples, 0.09%)</title><rect x="10.0" y="949" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>_dl_exception_create_format (1,503,390 samples, 0.05%)</title><rect x="13.0" y="789" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="16.00" y="799.5" ></text>
</g>
<g >
<title>____do_softirq (16,920,176 samples, 0.60%)</title><rect x="875.4" y="341" width="7.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="878.37" y="351.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,580,445 samples, 0.06%)</title><rect x="1180.2" y="837" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1183.16" y="847.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="709" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1182.64" y="719.5" ></text>
</g>
<g >
<title>do_translation_fault (2,249,959 samples, 0.08%)</title><rect x="24.9" y="805" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="27.87" y="815.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (4,928,771 samples, 0.17%)</title><rect x="518.6" y="821" width="2.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="521.60" y="831.5" ></text>
</g>
<g >
<title>void spdlog::logger::log&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3,893,059 samples, 0.14%)</title><rect x="1180.8" y="853" width="1.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1183.82" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (78,267,332 samples, 2.76%)</title><rect x="807.9" y="725" width="32.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="810.85" y="735.5" >__..</text>
</g>
<g >
<title>__sanitizer::ListOfModules::init (1,906,642 samples, 0.07%)</title><rect x="13.6" y="933" width="0.8" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="16.63" y="943.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (1,935,250 samples, 0.07%)</title><rect x="321.9" y="565" width="0.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="324.94" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (8,922,700 samples, 0.31%)</title><rect x="518.6" y="869" width="3.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="521.60" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (6,502,275 samples, 0.23%)</title><rect x="100.4" y="885" width="2.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="103.38" y="895.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,712,888 samples, 0.06%)</title><rect x="845.7" y="725" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="848.74" y="735.5" ></text>
</g>
<g >
<title>el0_interrupt (2,601,335 samples, 0.09%)</title><rect x="98.5" y="773" width="1.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="101.51" y="783.5" ></text>
</g>
<g >
<title>tcp_current_mss (2,994,579 samples, 0.11%)</title><rect x="892.6" y="581" width="1.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="895.62" y="591.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (8,418,484 samples, 0.30%)</title><rect x="1186.5" y="981" width="3.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1189.50" y="991.5" ></text>
</g>
<g >
<title>tcp_grow_window (1,944,730 samples, 0.07%)</title><rect x="881.6" y="85" width="0.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="884.59" y="95.5" ></text>
</g>
<g >
<title>filemap_map_pages (795,153 samples, 0.03%)</title><rect x="10.7" y="725" width="0.4" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="13.72" y="735.5" ></text>
</g>
<g >
<title>aa_inet_msg_perm (8,011,338 samples, 0.28%)</title><rect x="899.7" y="613" width="3.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="902.68" y="623.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (2,838,680 samples, 0.10%)</title><rect x="1179.6" y="853" width="1.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1182.64" y="863.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,111,411 samples, 0.07%)</title><rect x="486.9" y="757" width="0.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="489.89" y="767.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,637,894 samples, 0.06%)</title><rect x="11.7" y="869" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.69" y="879.5" ></text>
</g>
<g >
<title>__check_object_size (2,340,770 samples, 0.08%)</title><rect x="870.3" y="581" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="873.35" y="591.5" ></text>
</g>
<g >
<title>do_notify_resume (1,704,253 samples, 0.06%)</title><rect x="689.4" y="757" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="692.40" y="767.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (4,551,685 samples, 0.16%)</title><rect x="21.9" y="453" width="1.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="24.94" y="463.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::vformat_to&lt;fmt::v9::appender, 0&gt; (1,970,291 samples, 0.07%)</title><rect x="1180.8" y="821" width="0.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1183.82" y="831.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_addr (1,975,794 samples, 0.07%)</title><rect x="840.4" y="725" width="0.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="843.37" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (206,252,766 samples, 7.26%)</title><rect x="757.1" y="821" width="85.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="760.11" y="831.5" >std::__det..</text>
</g>
<g >
<title>__sanitizer::IsRssLimitExceeded (1,846,303 samples, 0.07%)</title><rect x="61.8" y="773" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="64.83" y="783.5" ></text>
</g>
<g >
<title>__kfree_skb (2,307,992 samples, 0.08%)</title><rect x="22.9" y="117" width="0.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="25.87" y="127.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (1,426,459 samples, 0.05%)</title><rect x="862.3" y="533" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="865.25" y="543.5" ></text>
</g>
<g >
<title>ktime_get (2,268,605 samples, 0.08%)</title><rect x="872.7" y="565" width="0.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="875.66" y="575.5" ></text>
</g>
<g >
<title>__kfree_skb (1,426,459 samples, 0.05%)</title><rect x="862.3" y="517" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="865.25" y="527.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (174,464,745 samples, 6.14%)</title><rect x="446.1" y="837" width="72.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="449.10" y="847.5" >void std..</text>
</g>
<g >
<title>__asan::asan_memalign (6,207,141 samples, 0.22%)</title><rect x="317.7" y="789" width="2.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="320.66" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (244,905,176 samples, 8.62%)</title><rect x="177.7" y="837" width="101.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="180.73" y="847.5" >__asan_stack..</text>
</g>
<g >
<title>el0t_64_sync (2,027,394 samples, 0.07%)</title><rect x="319.4" y="661" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="322.40" y="671.5" ></text>
</g>
<g >
<title>zap_pte_range (2,210,822 samples, 0.08%)</title><rect x="1188.3" y="741" width="0.9" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1191.29" y="751.5" ></text>
</g>
<g >
<title>do_mem_abort (812,845 samples, 0.03%)</title><rect x="1178.3" y="773" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1181.28" y="783.5" ></text>
</g>
<g >
<title>void spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (9,780,144 samples, 0.34%)</title><rect x="1182.4" y="901" width="4.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1185.44" y="911.5" ></text>
</g>
<g >
<title>__netif_receive_skb (4,551,685 samples, 0.16%)</title><rect x="21.9" y="277" width="1.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="24.94" y="287.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::vformat_to&lt;fmt::v9::appender, 0&gt; (2,283,674 samples, 0.08%)</title><rect x="1183.0" y="869" width="1.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1186.02" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (3,993,929 samples, 0.14%)</title><rect x="520.6" y="837" width="1.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="523.65" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,071,395 samples, 0.07%)</title><rect x="1184.0" y="853" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1186.97" y="863.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32LocalCache&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt; &gt;::Refill (1,906,642 samples, 0.07%)</title><rect x="13.6" y="805" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.63" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (179,445,018 samples, 6.32%)</title><rect x="25.8" y="901" width="74.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="28.81" y="911.5" >std::__c..</text>
</g>
<g >
<title>__fdget (7,419,784 samples, 0.26%)</title><rect x="903.0" y="645" width="3.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="906.01" y="655.5" ></text>
</g>
<g >
<title>[libfmt.so.9.1.0] (8,046,078 samples, 0.28%)</title><rect x="320.2" y="789" width="3.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="323.24" y="799.5" ></text>
</g>
<g >
<title>skb_release_data (2,307,992 samples, 0.08%)</title><rect x="22.9" y="101" width="0.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="25.87" y="111.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2,074,242 samples, 0.07%)</title><rect x="1186.5" y="805" width="0.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1189.50" y="815.5" ></text>
</g>
<g >
<title>tcp_leave_memory_pressure (1,972,738 samples, 0.07%)</title><rect x="898.9" y="565" width="0.8" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="901.86" y="575.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1,947,484 samples, 0.07%)</title><rect x="895.6" y="549" width="0.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="898.62" y="559.5" ></text>
</g>
<g >
<title>el1_interrupt (1,911,400 samples, 0.07%)</title><rect x="912.2" y="709" width="0.8" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="915.17" y="719.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (812,845 samples, 0.03%)</title><rect x="1178.3" y="805" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1181.28" y="815.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (6,502,275 samples, 0.23%)</title><rect x="100.4" y="805" width="2.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="103.38" y="815.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (128,757,836 samples, 4.53%)</title><rect x="855.5" y="693" width="53.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="858.48" y="703.5" >__arm..</text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,375,861 samples, 0.05%)</title><rect x="11.1" y="933" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.11" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,782,745 samples, 0.06%)</title><rect x="1177.5" y="837" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1180.54" y="847.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (4,027,564 samples, 0.14%)</title><rect x="1184.8" y="853" width="1.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1187.83" y="863.5" ></text>
</g>
<g >
<title>operator new (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="773" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1181.62" y="783.5" ></text>
</g>
<g >
<title>fmt::v9::vformat[abi:cxx11] (111,476,307 samples, 3.93%)</title><rect x="279.5" y="869" width="46.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="282.50" y="879.5" >fmt:..</text>
</g>
<g >
<title>__asan_stack_malloc_2 (64,262,224 samples, 2.26%)</title><rect x="523.2" y="837" width="26.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="526.21" y="847.5" >_..</text>
</g>
<g >
<title>handle_mm_fault (2,249,959 samples, 0.08%)</title><rect x="24.9" y="773" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="27.87" y="783.5" ></text>
</g>
<g >
<title>el0_da (2,032,791 samples, 0.07%)</title><rect x="322.7" y="661" width="0.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="325.74" y="671.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (16,084,258 samples, 0.57%)</title><rect x="18.2" y="805" width="6.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="21.19" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (74,687,829 samples, 2.63%)</title><rect x="726.1" y="821" width="31.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="729.08" y="831.5" >__..</text>
</g>
<g >
<title>inet_recvmsg (13,753,736 samples, 0.48%)</title><rect x="19.2" y="693" width="5.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="22.16" y="703.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,529,576 samples, 0.09%)</title><rect x="10.0" y="917" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="927.5" ></text>
</g>
<g >
<title>tcp_filter (2,243,693 samples, 0.08%)</title><rect x="21.9" y="149" width="1.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="24.94" y="159.5" ></text>
</g>
<g >
<title>do_translation_fault (1,906,642 samples, 0.07%)</title><rect x="13.6" y="677" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="16.63" y="687.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,587,505 samples, 0.09%)</title><rect x="62.6" y="837" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="65.60" y="847.5" ></text>
</g>
<g >
<title>handle_pte_fault (3,716,823 samples, 0.13%)</title><rect x="59.8" y="629" width="1.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="62.84" y="639.5" ></text>
</g>
<g >
<title>memmove@plt (2,052,980 samples, 0.07%)</title><rect x="325.0" y="805" width="0.8" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="327.97" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,071,395 samples, 0.07%)</title><rect x="1184.0" y="837" width="0.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1186.97" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_5 (1,397,511 samples, 0.05%)</title><rect x="1182.4" y="869" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1185.44" y="879.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2,307,992 samples, 0.08%)</title><rect x="22.9" y="133" width="0.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="25.87" y="143.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,529,663 samples, 0.05%)</title><rect x="12.4" y="773" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="15.37" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (12,148,990 samples, 0.43%)</title><rect x="25.8" y="853" width="5.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="28.81" y="863.5" ></text>
</g>
<g >
<title>el0t_64_sync (154,457,643 samples, 5.44%)</title><rect x="848.8" y="789" width="64.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="851.78" y="799.5" >el0t_64..</text>
</g>
<g >
<title>__asan::Allocator::Allocate (6,207,141 samples, 0.22%)</title><rect x="317.7" y="773" width="2.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="320.66" y="783.5" ></text>
</g>
<g >
<title>exit_mmap (6,506,008 samples, 0.23%)</title><rect x="1186.5" y="821" width="2.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1189.50" y="831.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (1,780,651 samples, 0.06%)</title><rect x="863.5" y="613" width="0.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="866.47" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (76,390,665 samples, 2.69%)</title><rect x="30.9" y="853" width="31.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="33.86" y="863.5" >st..</text>
</g>
<g >
<title>do_pte_missing (2,047,352 samples, 0.07%)</title><rect x="321.1" y="565" width="0.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="324.09" y="575.5" ></text>
</g>
<g >
<title>__cond_resched (1,631,580 samples, 0.06%)</title><rect x="860.6" y="581" width="0.7" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="863.63" y="591.5" ></text>
</g>
<g >
<title>el0t_64_sync (812,845 samples, 0.03%)</title><rect x="1178.3" y="821" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1181.28" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,249,959 samples, 0.08%)</title><rect x="24.9" y="853" width="0.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="27.87" y="863.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (2,249,959 samples, 0.08%)</title><rect x="24.9" y="645" width="0.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="27.87" y="655.5" ></text>
</g>
<g >
<title>____do_softirq (2,601,335 samples, 0.09%)</title><rect x="98.5" y="693" width="1.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="101.51" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (69,749,833 samples, 2.46%)</title><rect x="30.9" y="821" width="28.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="33.86" y="831.5" >__..</text>
</g>
<g >
<title>handle_softirqs (16,920,176 samples, 0.60%)</title><rect x="875.4" y="309" width="7.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="878.37" y="319.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (812,845 samples, 0.03%)</title><rect x="1178.3" y="613" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1181.28" y="623.5" ></text>
</g>
<g >
<title>el1h_64_irq (1,911,400 samples, 0.07%)</title><rect x="912.2" y="741" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="915.17" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync (8,418,484 samples, 0.30%)</title><rect x="1186.5" y="997" width="3.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1189.50" y="1007.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (3,993,929 samples, 0.14%)</title><rect x="520.6" y="821" width="1.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="523.65" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (76,969,339 samples, 2.71%)</title><rect x="366.8" y="837" width="32.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="369.84" y="847.5" >st..</text>
</g>
<g >
<title>__asan_stack_malloc_4 (2,283,674 samples, 0.08%)</title><rect x="1183.0" y="837" width="1.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1186.02" y="847.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (6,207,141 samples, 0.22%)</title><rect x="317.7" y="821" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="320.66" y="831.5" ></text>
</g>
<g >
<title>all (2,839,664,407 samples, 100%)</title><rect x="10.0" y="1029" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" ></text>
</g>
<g >
<title>__send (158,809,899 samples, 5.59%)</title><rect x="847.0" y="805" width="66.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="849.97" y="815.5" >__send</text>
</g>
<g >
<title>do_mem_abort (2,047,352 samples, 0.07%)</title><rect x="321.1" y="661" width="0.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="324.09" y="671.5" ></text>
</g>
<g >
<title>alloc_anon_folio (1,921,151 samples, 0.07%)</title><rect x="59.8" y="581" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="62.84" y="591.5" ></text>
</g>
<g >
<title>vma_complete (1,935,250 samples, 0.07%)</title><rect x="321.9" y="405" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="324.94" y="415.5" ></text>
</g>
<g >
<title>el0_svc (1,295,090 samples, 0.05%)</title><rect x="16.1" y="869" width="0.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="19.08" y="879.5" ></text>
</g>
<g >
<title>__sanitizer::dl_iterate_phdr_cb (1,906,642 samples, 0.07%)</title><rect x="13.6" y="901" width="0.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="16.63" y="911.5" ></text>
</g>
<g >
<title>process_backlog (4,551,685 samples, 0.16%)</title><rect x="21.9" y="293" width="1.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="24.94" y="303.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,375,861 samples, 0.05%)</title><rect x="11.1" y="949" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.11" y="959.5" ></text>
</g>
<g >
<title>memcpy@plt (1,895,425 samples, 0.07%)</title><rect x="99.6" y="821" width="0.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="102.59" y="831.5" ></text>
</g>
<g >
<title>el0t_64_irq (2,601,335 samples, 0.09%)</title><rect x="98.5" y="821" width="1.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="101.51" y="831.5" ></text>
</g>
<g >
<title>tt::chat::server::ChannelManager::get_members (206,252,766 samples, 7.26%)</title><rect x="757.1" y="853" width="85.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="760.11" y="863.5" >tt::chat::..</text>
</g>
<g >
<title>arch_local_irq_enable (1,631,580 samples, 0.06%)</title><rect x="860.6" y="549" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="863.63" y="559.5" ></text>
</g>
<g >
<title>el0t_64_irq (1,712,888 samples, 0.06%)</title><rect x="845.7" y="789" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="848.74" y="799.5" ></text>
</g>
<g >
<title>ip_rcv_finish (4,551,685 samples, 0.16%)</title><rect x="21.9" y="229" width="1.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="24.94" y="239.5" ></text>
</g>
<g >
<title>do_translation_fault (1,363,958 samples, 0.05%)</title><rect x="177.2" y="757" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="180.16" y="767.5" ></text>
</g>
<g >
<title>___interceptor_malloc (1,503,390 samples, 0.05%)</title><rect x="13.0" y="773" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="16.00" y="783.5" ></text>
</g>
<g >
<title>el0_da (1,363,958 samples, 0.05%)</title><rect x="177.2" y="789" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="180.16" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_5 (2,249,959 samples, 0.08%)</title><rect x="24.9" y="885" width="0.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="27.87" y="895.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,601,335 samples, 0.09%)</title><rect x="98.5" y="741" width="1.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="101.51" y="751.5" ></text>
</g>
<g >
<title>ep_poll (1,295,090 samples, 0.05%)</title><rect x="16.1" y="757" width="0.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="19.08" y="767.5" ></text>
</g>
<g >
<title>tcp_data_ready (4,348,135 samples, 0.15%)</title><rect x="878.0" y="69" width="1.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="881.01" y="79.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (163,975,263 samples, 5.77%)</title><rect x="844.8" y="821" width="68.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="847.83" y="831.5" >___inte..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (1,935,250 samples, 0.07%)</title><rect x="321.9" y="693" width="0.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="324.94" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (9,069,818 samples, 0.32%)</title><rect x="399.7" y="869" width="3.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="402.67" y="879.5" ></text>
</g>
<g >
<title>mas_wr_node_store (1,935,250 samples, 0.07%)</title><rect x="321.9" y="357" width="0.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="324.94" y="367.5" ></text>
</g>
<g >
<title>call_on_irq_stack (1,911,400 samples, 0.07%)</title><rect x="912.2" y="645" width="0.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="915.17" y="655.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,046,293 samples, 0.07%)</title><rect x="16.6" y="693" width="0.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="19.62" y="703.5" ></text>
</g>
<g >
<title>ip_finish_output2 (23,322,002 samples, 0.82%)</title><rect x="873.6" y="453" width="9.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="876.60" y="463.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,838,370 samples, 0.06%)</title><rect x="175.6" y="837" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="178.58" y="847.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (86,240,210 samples, 3.04%)</title><rect x="807.0" y="805" width="35.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="809.99" y="815.5" >std..</text>
</g>
<g >
<title>schedule (1,995,889 samples, 0.07%)</title><rect x="910.5" y="725" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="913.45" y="735.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (1,077,706 samples, 0.04%)</title><rect x="61.4" y="757" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="64.39" y="767.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::assign_username (6,904,295 samples, 0.24%)</title><rect x="1179.6" y="869" width="2.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1182.57" y="879.5" ></text>
</g>
<g >
<title>InitializeCommonInterceptors (3,033,053 samples, 0.11%)</title><rect x="12.4" y="933" width="1.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="15.37" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (244,905,176 samples, 8.62%)</title><rect x="177.7" y="821" width="101.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="180.73" y="831.5" >__asan_stack..</text>
</g>
<g >
<title>handle_softirqs (4,551,685 samples, 0.16%)</title><rect x="21.9" y="341" width="1.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="24.94" y="351.5" ></text>
</g>
<g >
<title>get_random_u16 (3,527,048 samples, 0.12%)</title><rect x="909.0" y="693" width="1.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="911.99" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (628,362,728 samples, 22.13%)</title><rect x="913.8" y="821" width="261.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="916.79" y="831.5" >__asan_stack_malloc_2</text>
</g>
<g >
<title>ip_finish_output (4,551,685 samples, 0.16%)</title><rect x="21.9" y="517" width="1.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="24.94" y="527.5" ></text>
</g>
<g >
<title>__sys_sendto (121,797,118 samples, 4.29%)</title><rect x="855.5" y="677" width="50.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="858.48" y="687.5" >__sys..</text>
</g>
<g >
<title>wp_page_copy (2,032,791 samples, 0.07%)</title><rect x="322.7" y="549" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="325.74" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (9,069,818 samples, 0.32%)</title><rect x="399.7" y="837" width="3.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="402.67" y="847.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,601,335 samples, 0.09%)</title><rect x="98.5" y="757" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="101.51" y="767.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (9,069,818 samples, 0.32%)</title><rect x="399.7" y="853" width="3.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="402.67" y="863.5" ></text>
</g>
<g >
<title>sock_read_iter (13,753,736 samples, 0.48%)</title><rect x="19.2" y="725" width="5.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="22.16" y="735.5" ></text>
</g>
<g >
<title>dlsym (3,033,053 samples, 0.11%)</title><rect x="12.4" y="901" width="1.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="15.37" y="911.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,032,791 samples, 0.07%)</title><rect x="322.7" y="613" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="325.74" y="623.5" ></text>
</g>
<g >
<title>neigh_hh_output (23,322,002 samples, 0.82%)</title><rect x="873.6" y="437" width="9.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="876.60" y="447.5" ></text>
</g>
<g >
<title>do_signal (8,418,484 samples, 0.30%)</title><rect x="1186.5" y="933" width="3.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1189.50" y="943.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (1,969,115 samples, 0.07%)</title><rect x="890.3" y="533" width="0.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="893.25" y="543.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,249,959 samples, 0.08%)</title><rect x="24.9" y="757" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="27.87" y="767.5" ></text>
</g>
<g >
<title>do_exit (8,418,484 samples, 0.30%)</title><rect x="1186.5" y="885" width="3.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1189.50" y="895.5" ></text>
</g>
<g >
<title>__build_skb_around (2,113,414 samples, 0.07%)</title><rect x="893.9" y="565" width="0.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="896.86" y="575.5" ></text>
</g>
<g >
<title>handle_mm_fault (795,153 samples, 0.03%)</title><rect x="10.7" y="805" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.72" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (9,069,818 samples, 0.32%)</title><rect x="399.7" y="805" width="3.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="402.67" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (8,922,700 samples, 0.31%)</title><rect x="518.6" y="853" width="3.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="521.60" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (146,755,688 samples, 5.17%)</title><rect x="549.9" y="805" width="61.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="552.91" y="815.5" >__asan..</text>
</g>
<g >
<title>char const* fmt::v9::detail::parse_replacement_field&lt;char, fmt::v9::detail::vformat_to&lt;char&gt; (1,970,291 samples, 0.07%)</title><rect x="1180.8" y="789" width="0.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1183.82" y="799.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,027,394 samples, 0.07%)</title><rect x="319.4" y="645" width="0.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="322.40" y="655.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="805" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1182.64" y="815.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,032,791 samples, 0.07%)</title><rect x="322.7" y="597" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="325.74" y="607.5" ></text>
</g>
<g >
<title>filemap_map_pages (2,046,293 samples, 0.07%)</title><rect x="16.6" y="645" width="0.9" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="19.62" y="655.5" ></text>
</g>
<g >
<title>do_wp_page (2,278,493 samples, 0.08%)</title><rect x="1178.6" y="565" width="1.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1181.62" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (6,502,275 samples, 0.23%)</title><rect x="100.4" y="869" width="2.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="103.38" y="879.5" ></text>
</g>
<g >
<title>__asan::InitializeAsanInterceptors (3,033,053 samples, 0.11%)</title><rect x="12.4" y="949" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="15.37" y="959.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (6,502,275 samples, 0.23%)</title><rect x="100.4" y="821" width="2.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="103.38" y="831.5" ></text>
</g>
<g >
<title>tcp_send_ack (4,551,685 samples, 0.16%)</title><rect x="21.9" y="613" width="1.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="24.94" y="623.5" ></text>
</g>
<g >
<title>__sk_mem_schedule (2,171,402 samples, 0.08%)</title><rect x="879.8" y="53" width="0.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="882.82" y="63.5" ></text>
</g>
<g >
<title>do_translation_fault (3,716,823 samples, 0.13%)</title><rect x="59.8" y="693" width="1.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="62.84" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::rfind (160,281,700 samples, 5.64%)</title><rect x="103.1" y="869" width="66.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="106.08" y="879.5" >std::__..</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1,292,214 samples, 0.05%)</title><rect x="16.1" y="725" width="0.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="19.09" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_S_equals (3,912,487 samples, 0.14%)</title><rect x="841.2" y="757" width="1.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="844.20" y="767.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,915,375 samples, 0.07%)</title><rect x="486.1" y="629" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="489.09" y="639.5" ></text>
</g>
<g >
<title>do_read_fault (2,046,293 samples, 0.07%)</title><rect x="16.6" y="661" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="19.62" y="671.5" ></text>
</g>
<g >
<title>__arm64_sys_epoll_pwait (1,295,090 samples, 0.05%)</title><rect x="16.1" y="805" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="19.08" y="815.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (2,568,877 samples, 0.09%)</title><rect x="519.6" y="757" width="1.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="522.58" y="767.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (8,046,078 samples, 0.28%)</title><rect x="320.2" y="805" width="3.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="323.24" y="815.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,601,335 samples, 0.09%)</title><rect x="98.5" y="725" width="1.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="101.51" y="735.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (3,797,800 samples, 0.13%)</title><rect x="484.5" y="709" width="1.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="487.51" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (4,208,730 samples, 0.15%)</title><rect x="1174.9" y="821" width="1.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1177.90" y="831.5" ></text>
</g>
<g >
<title>___interceptor_memcmp (6,339,000 samples, 0.22%)</title><rect x="166.1" y="837" width="2.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="169.10" y="847.5" ></text>
</g>
<g >
<title>ip_finish_output (26,210,805 samples, 0.92%)</title><rect x="873.6" y="485" width="10.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="876.60" y="495.5" ></text>
</g>
<g >
<title>el0t_64_irq (1,704,253 samples, 0.06%)</title><rect x="689.4" y="821" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="692.40" y="831.5" ></text>
</g>
<g >
<title>net_rx_action (4,551,685 samples, 0.16%)</title><rect x="21.9" y="325" width="1.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="24.94" y="335.5" ></text>
</g>
<g >
<title>el0_da (2,047,352 samples, 0.07%)</title><rect x="321.1" y="677" width="0.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="324.09" y="687.5" ></text>
</g>
<g >
<title>ip_rcv (14,605,425 samples, 0.51%)</title><rect x="876.3" y="213" width="6.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="879.33" y="223.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (3,893,059 samples, 0.14%)</title><rect x="1180.8" y="837" width="1.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1183.82" y="847.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1,363,958 samples, 0.05%)</title><rect x="177.2" y="597" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="180.16" y="607.5" ></text>
</g>
<g >
<title>do_page_fault (2,047,352 samples, 0.07%)</title><rect x="321.1" y="629" width="0.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="324.09" y="639.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_channel_message (2,427,197,711 samples, 85.47%)</title><rect x="169.7" y="885" width="1008.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="172.68" y="895.5" >tt::chat::server::EpollServer::handle_channel_message</text>
</g>
<g >
<title>schedule_hrtimeout_range (1,292,214 samples, 0.05%)</title><rect x="16.1" y="741" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="19.09" y="751.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,047,352 samples, 0.07%)</title><rect x="321.1" y="613" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="324.09" y="623.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (3,033,053 samples, 0.11%)</title><rect x="12.4" y="805" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="15.37" y="815.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (4,348,135 samples, 0.15%)</title><rect x="878.0" y="37" width="1.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="881.01" y="47.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,060,426 samples, 0.04%)</title><rect x="1174.5" y="773" width="0.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1177.46" y="783.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned@plt (1,258,235 samples, 0.04%)</title><rect x="846.5" y="805" width="0.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="849.45" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (152,898,652 samples, 5.38%)</title><rect x="612.4" y="757" width="63.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="615.42" y="767.5" >__asan..</text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (1,922,768 samples, 0.07%)</title><rect x="1181.6" y="821" width="0.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1184.64" y="831.5" ></text>
</g>
<g >
<title>el0_interrupt (1,704,253 samples, 0.06%)</title><rect x="689.4" y="773" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="692.40" y="783.5" ></text>
</g>
<g >
<title>do_page_fault (812,845 samples, 0.03%)</title><rect x="1178.3" y="741" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1181.28" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,283,674 samples, 0.08%)</title><rect x="1183.0" y="789" width="1.0" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1186.02" y="799.5" ></text>
</g>
<g >
<title>do_mem_abort (2,283,674 samples, 0.08%)</title><rect x="1183.0" y="757" width="1.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1186.02" y="767.5" ></text>
</g>
<g >
<title>__schedule (1,995,889 samples, 0.07%)</title><rect x="910.5" y="709" width="0.8" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="913.45" y="719.5" ></text>
</g>
<g >
<title>__alloc_pages (1,363,958 samples, 0.05%)</title><rect x="177.2" y="581" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="180.16" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (19,486,807 samples, 0.69%)</title><rect x="757.1" y="789" width="8.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="760.11" y="799.5" ></text>
</g>
<g >
<title>__send (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="821" width="0.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1182.64" y="831.5" ></text>
</g>
<g >
<title>____fput (1,912,476 samples, 0.07%)</title><rect x="1189.2" y="853" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1192.21" y="863.5" ></text>
</g>
<g >
<title>tcp_sendmsg (98,058,280 samples, 3.45%)</title><rect x="858.9" y="629" width="40.8" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="861.93" y="639.5" >tcp..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (812,845 samples, 0.03%)</title><rect x="1178.3" y="837" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1181.28" y="847.5" ></text>
</g>
<g >
<title>__do_softirq (2,601,335 samples, 0.09%)</title><rect x="98.5" y="677" width="1.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="101.51" y="687.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; fmt::v9::detail::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (244,905,176 samples, 8.62%)</title><rect x="177.7" y="853" width="101.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="180.73" y="863.5" >fmt::v9::bas..</text>
</g>
<g >
<title>std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (74,687,829 samples, 2.63%)</title><rect x="726.1" y="837" width="31.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="729.08" y="847.5" >st..</text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (2,283,674 samples, 0.08%)</title><rect x="1183.0" y="853" width="1.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1186.02" y="863.5" ></text>
</g>
<g >
<title>folio_add_lru (1,795,672 samples, 0.06%)</title><rect x="60.6" y="565" width="0.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="63.64" y="575.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (85,362,834 samples, 3.01%)</title><rect x="864.2" y="613" width="35.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="867.21" y="623.5" >tcp..</text>
</g>
<g >
<title>__alloc_pages (2,249,959 samples, 0.08%)</title><rect x="24.9" y="629" width="0.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="27.87" y="639.5" ></text>
</g>
<g >
<title>__asan::AsanInitInternal (7,953,450 samples, 0.28%)</title><rect x="11.1" y="965" width="3.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="14.11" y="975.5" ></text>
</g>
<g >
<title>operator delete (2,098,986 samples, 0.07%)</title><rect x="279.5" y="853" width="0.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="282.50" y="863.5" ></text>
</g>
<g >
<title>spdlog::details::registry::instance (2,046,293 samples, 0.07%)</title><rect x="16.6" y="901" width="0.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="19.62" y="911.5" ></text>
</g>
<g >
<title>do_el0_svc (1,295,090 samples, 0.05%)</title><rect x="16.1" y="853" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="19.08" y="863.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,676,239 samples, 0.09%)</title><rect x="10.0" y="965" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>call_on_irq_stack (16,920,176 samples, 0.60%)</title><rect x="875.4" y="357" width="7.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="878.37" y="367.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (4,027,564 samples, 0.14%)</title><rect x="1184.8" y="869" width="1.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1187.83" y="879.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,060,426 samples, 0.04%)</title><rect x="1174.5" y="693" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1177.46" y="703.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,032,791 samples, 0.07%)</title><rect x="322.7" y="677" width="0.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="325.74" y="687.5" ></text>
</g>
<g >
<title>mas_store_prealloc (1,935,250 samples, 0.07%)</title><rect x="321.9" y="389" width="0.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="324.94" y="399.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (26,210,805 samples, 0.92%)</title><rect x="873.6" y="549" width="10.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="876.60" y="559.5" ></text>
</g>
<g >
<title>do_mem_abort (795,153 samples, 0.03%)</title><rect x="10.7" y="853" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="13.72" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (89,009,938 samples, 3.13%)</title><rect x="62.6" y="853" width="37.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="65.60" y="863.5" >__a..</text>
</g>
<g >
<title>tcp_sendmsg (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="645" width="0.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1182.64" y="655.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,047,352 samples, 0.07%)</title><rect x="321.1" y="597" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="324.09" y="607.5" ></text>
</g>
<g >
<title>__arm64_sys_read (16,084,258 samples, 0.57%)</title><rect x="18.2" y="773" width="6.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="21.19" y="783.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2,074,242 samples, 0.07%)</title><rect x="1186.5" y="773" width="0.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1189.50" y="783.5" ></text>
</g>
<g >
<title>el0_da (3,716,823 samples, 0.13%)</title><rect x="59.8" y="725" width="1.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="62.84" y="735.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1,935,250 samples, 0.07%)</title><rect x="321.9" y="517" width="0.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="324.94" y="527.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (4,551,685 samples, 0.16%)</title><rect x="21.9" y="197" width="1.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="24.94" y="207.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;, __sanitizer::LargeMmapAllocatorPtrArrayStatic&gt;::Allocate (1,906,642 samples, 0.07%)</title><rect x="13.6" y="821" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="16.63" y="831.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="837" width="0.6" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1182.64" y="847.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (1,906,642 samples, 0.07%)</title><rect x="13.6" y="773" width="0.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="16.63" y="783.5" ></text>
</g>
<g >
<title>unmap_vmas (4,431,766 samples, 0.16%)</title><rect x="1187.4" y="805" width="1.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1190.36" y="815.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (2,027,394 samples, 0.07%)</title><rect x="319.4" y="549" width="0.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="322.40" y="559.5" ></text>
</g>
<g >
<title>do_mem_abort (1,363,958 samples, 0.05%)</title><rect x="177.2" y="773" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="180.16" y="783.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1,712,888 samples, 0.06%)</title><rect x="845.7" y="693" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="848.74" y="703.5" ></text>
</g>
<g >
<title>__ip_finish_output (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="485" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1182.64" y="495.5" ></text>
</g>
<g >
<title>el0_da (2,249,959 samples, 0.08%)</title><rect x="24.9" y="837" width="0.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="27.87" y="847.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,295,090 samples, 0.05%)</title><rect x="16.1" y="885" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="19.08" y="895.5" ></text>
</g>
<g >
<title>ip_finish_output2 (4,551,685 samples, 0.16%)</title><rect x="21.9" y="485" width="1.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="24.94" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1,895,425 samples, 0.07%)</title><rect x="99.6" y="869" width="0.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="102.59" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_key_equals (80,243,126 samples, 2.83%)</title><rect x="807.9" y="757" width="33.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="810.85" y="767.5" >st..</text>
</g>
<g >
<title>tcp_write_xmit (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="581" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1182.64" y="591.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (4,551,685 samples, 0.16%)</title><rect x="21.9" y="645" width="1.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="24.94" y="655.5" ></text>
</g>
<g >
<title>vma_alloc_folio (2,249,959 samples, 0.08%)</title><rect x="24.9" y="661" width="0.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="27.87" y="671.5" ></text>
</g>
<g >
<title>__fput (1,912,476 samples, 0.07%)</title><rect x="1189.2" y="837" width="0.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1192.21" y="847.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (4,027,564 samples, 0.14%)</title><rect x="1184.8" y="821" width="1.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1187.83" y="831.5" ></text>
</g>
<g >
<title>tcp_push (1,501,362 samples, 0.05%)</title><rect x="862.8" y="613" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="865.85" y="623.5" ></text>
</g>
<g >
<title>__sanitizer::MmapFixedImpl (2,027,394 samples, 0.07%)</title><rect x="319.4" y="693" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="322.40" y="703.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (3,966,374 samples, 0.14%)</title><rect x="896.4" y="565" width="1.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="899.43" y="575.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,363,958 samples, 0.05%)</title><rect x="177.2" y="709" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="180.16" y="719.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_name_command (9,182,788 samples, 0.32%)</title><rect x="1178.6" y="885" width="3.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1181.62" y="895.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (10,629,689 samples, 0.37%)</title><rect x="10.0" y="981" width="4.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="991.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2,098,986 samples, 0.07%)</title><rect x="279.5" y="837" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="282.50" y="847.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (4,179,747 samples, 0.15%)</title><rect x="317.7" y="757" width="1.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="320.66" y="767.5" ></text>
</g>
<g >
<title>__asan::CreateMainThread (1,637,894 samples, 0.06%)</title><rect x="11.7" y="949" width="0.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="14.69" y="959.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (14,605,425 samples, 0.51%)</title><rect x="876.3" y="165" width="6.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="879.33" y="175.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,838,370 samples, 0.06%)</title><rect x="175.6" y="821" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="178.58" y="831.5" ></text>
</g>
<g >
<title>do_page_fault (1,838,370 samples, 0.06%)</title><rect x="175.6" y="757" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="178.58" y="767.5" ></text>
</g>
<g >
<title>apparmor_socket_sock_rcv_skb (2,243,693 samples, 0.08%)</title><rect x="21.9" y="117" width="1.0" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="24.94" y="127.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (372,258,891 samples, 13.11%)</title><rect x="522.3" y="869" width="154.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="525.31" y="879.5" >std::unordered_map&lt;..</text>
</g>
<g >
<title>sk_filter_trim_cap (2,171,725 samples, 0.08%)</title><rect x="876.3" y="117" width="0.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="879.33" y="127.5" ></text>
</g>
<g >
<title>release_pages (2,074,242 samples, 0.07%)</title><rect x="1186.5" y="757" width="0.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1189.50" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (152,898,652 samples, 5.38%)</title><rect x="612.4" y="773" width="63.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="615.42" y="783.5" >__asan..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (96,030,277 samples, 3.38%)</title><rect x="767.1" y="757" width="39.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="770.08" y="767.5" >__a..</text>
</g>
<g >
<title>rmqueue (1,838,370 samples, 0.06%)</title><rect x="175.6" y="565" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="178.58" y="575.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (1,704,253 samples, 0.06%)</title><rect x="689.4" y="789" width="0.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="692.40" y="799.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (1,995,889 samples, 0.07%)</title><rect x="910.5" y="693" width="0.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="913.45" y="703.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (1,077,706 samples, 0.04%)</title><rect x="61.4" y="725" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="64.39" y="735.5" ></text>
</g>
<g >
<title>do_mmap (2,027,394 samples, 0.07%)</title><rect x="319.4" y="517" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="322.40" y="527.5" ></text>
</g>
<g >
<title>alloc_anon_folio (2,047,352 samples, 0.07%)</title><rect x="321.1" y="533" width="0.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="324.09" y="543.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (10,559,037 samples, 0.37%)</title><rect x="878.0" y="117" width="4.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="881.01" y="127.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (64,262,224 samples, 2.26%)</title><rect x="523.2" y="821" width="26.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="526.21" y="831.5" >_..</text>
</g>
<g >
<title>tcp_recvmsg_locked (9,347,971 samples, 0.33%)</title><rect x="21.0" y="661" width="3.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="23.99" y="671.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1,935,250 samples, 0.07%)</title><rect x="321.9" y="501" width="0.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="324.94" y="511.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_4 (2,283,674 samples, 0.08%)</title><rect x="1183.0" y="821" width="1.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1186.02" y="831.5" ></text>
</g>
<g >
<title>validate_xmit_skb (2,151,103 samples, 0.08%)</title><rect x="882.4" y="421" width="0.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="885.40" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (4,928,771 samples, 0.17%)</title><rect x="518.6" y="837" width="2.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="521.60" y="847.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,915,375 samples, 0.07%)</title><rect x="486.1" y="709" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="489.09" y="719.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,363,958 samples, 0.05%)</title><rect x="177.2" y="661" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="180.16" y="671.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (100,525,749 samples, 3.54%)</title><rect x="765.2" y="805" width="41.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="768.21" y="815.5" >std..</text>
</g>
<g >
<title>tcp_ack (1,426,459 samples, 0.05%)</title><rect x="862.3" y="549" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="865.25" y="559.5" ></text>
</g>
<g >
<title>call_on_irq_stack (4,551,685 samples, 0.16%)</title><rect x="21.9" y="389" width="1.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="24.94" y="399.5" ></text>
</g>
<g >
<title>tcp_recvmsg (13,753,736 samples, 0.48%)</title><rect x="19.2" y="677" width="5.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="22.16" y="687.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (2,340,770 samples, 0.08%)</title><rect x="870.3" y="565" width="1.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="873.35" y="575.5" ></text>
</g>
<g >
<title>do_read_fault (795,153 samples, 0.03%)</title><rect x="10.7" y="741" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="13.72" y="751.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,032,791 samples, 0.07%)</title><rect x="322.7" y="581" width="0.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="325.74" y="591.5" ></text>
</g>
<g >
<title>exit_mm (6,506,008 samples, 0.23%)</title><rect x="1186.5" y="869" width="2.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1189.50" y="879.5" ></text>
</g>
<g >
<title>__pi_clear_page (1,363,958 samples, 0.05%)</title><rect x="177.2" y="549" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="180.16" y="559.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (1,915,375 samples, 0.07%)</title><rect x="486.1" y="517" width="0.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="489.09" y="527.5" ></text>
</g>
<g >
<title>__sanitizer::internal_allocator (1,503,390 samples, 0.05%)</title><rect x="13.0" y="741" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="16.00" y="751.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,363,958 samples, 0.05%)</title><rect x="177.2" y="725" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="180.16" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (151,664,005 samples, 5.34%)</title><rect x="103.1" y="853" width="63.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="106.08" y="863.5" >__asan..</text>
</g>
<g >
<title>__napi_poll (4,551,685 samples, 0.16%)</title><rect x="21.9" y="309" width="1.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="24.94" y="319.5" ></text>
</g>
<g >
<title>__mmput (6,506,008 samples, 0.23%)</title><rect x="1186.5" y="837" width="2.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1189.50" y="847.5" ></text>
</g>
<g >
<title>__do_softirq (1,911,400 samples, 0.07%)</title><rect x="912.2" y="613" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="915.17" y="623.5" ></text>
</g>
<g >
<title>operator delete (4,928,771 samples, 0.17%)</title><rect x="518.6" y="805" width="2.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="521.60" y="815.5" ></text>
</g>
<g >
<title>do_el0_svc (1,258,235 samples, 0.04%)</title><rect x="1179.6" y="757" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1182.64" y="767.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (4,551,685 samples, 0.16%)</title><rect x="21.9" y="261" width="1.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="24.94" y="271.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,283,674 samples, 0.08%)</title><rect x="1183.0" y="805" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1186.02" y="815.5" ></text>
</g>
<g >
<title>invoke_syscall (16,084,258 samples, 0.57%)</title><rect x="18.2" y="789" width="6.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="21.19" y="799.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (2,027,394 samples, 0.07%)</title><rect x="319.4" y="725" width="0.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="322.40" y="735.5" ></text>
</g>
<g >
<title>__alloc_skb (12,036,812 samples, 0.42%)</title><rect x="893.9" y="581" width="5.0" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="896.86" y="591.5" ></text>
</g>
<g >
<title>do_translation_fault (2,283,674 samples, 0.08%)</title><rect x="1183.0" y="741" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1186.02" y="751.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_M_ptr (2,519,803 samples, 0.09%)</title><rect x="676.0" y="773" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="678.95" y="783.5" ></text>
</g>
<g >
<title>sock_def_readable (4,348,135 samples, 0.15%)</title><rect x="878.0" y="53" width="1.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="881.01" y="63.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1,895,425 samples, 0.07%)</title><rect x="99.6" y="853" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="102.59" y="863.5" ></text>
</g>
<g >
<title>ip_output (26,210,805 samples, 0.92%)</title><rect x="873.6" y="501" width="10.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="876.60" y="511.5" ></text>
</g>
<g >
<title>__release_sock (5,337,640 samples, 0.19%)</title><rect x="860.6" y="597" width="2.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="863.63" y="607.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (1,935,250 samples, 0.07%)</title><rect x="321.9" y="437" width="0.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="324.94" y="447.5" ></text>
</g>
<g >
<title>__sk_mem_schedule (1,972,738 samples, 0.07%)</title><rect x="898.9" y="581" width="0.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="901.86" y="591.5" ></text>
</g>
<g >
<title>do_el0_svc (16,084,258 samples, 0.57%)</title><rect x="18.2" y="821" width="6.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="21.19" y="831.5" ></text>
</g>
<g >
<title>do_softirq (16,920,176 samples, 0.60%)</title><rect x="875.4" y="389" width="7.0" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="878.37" y="399.5" ></text>
</g>
<g >
<title>ip_local_deliver (4,551,685 samples, 0.16%)</title><rect x="21.9" y="213" width="1.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="24.94" y="223.5" ></text>
</g>
<g >
<title>__alloc_pages (1,838,370 samples, 0.06%)</title><rect x="175.6" y="597" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="178.58" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (69,749,833 samples, 2.46%)</title><rect x="30.9" y="837" width="28.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="33.86" y="847.5" >__..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (1,935,250 samples, 0.07%)</title><rect x="321.9" y="677" width="0.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="324.94" y="687.5" ></text>
</g>
<g >
<title>do_page_fault (2,032,791 samples, 0.07%)</title><rect x="322.7" y="629" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="325.74" y="639.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (795,153 samples, 0.03%)</title><rect x="10.7" y="885" width="0.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="13.72" y="895.5" ></text>
</g>
<g >
<title>tcp_event_data_recv (2,094,770 samples, 0.07%)</title><rect x="880.7" y="85" width="0.9" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="883.72" y="95.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,911,400 samples, 0.07%)</title><rect x="912.2" y="693" width="0.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="915.17" y="703.5" ></text>
</g>
<g >
<title>__arm64_sys_mmap (2,027,394 samples, 0.07%)</title><rect x="319.4" y="565" width="0.8" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="322.40" y="575.5" ></text>
</g>
<g >
<title>folio_add_lru (2,032,791 samples, 0.07%)</title><rect x="322.7" y="517" width="0.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="325.74" y="527.5" ></text>
</g>
<g >
<title>_dl_catch_exception (3,033,053 samples, 0.11%)</title><rect x="12.4" y="853" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="15.37" y="863.5" ></text>
</g>
<g >
<title>schedule (1,704,253 samples, 0.06%)</title><rect x="689.4" y="741" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="692.40" y="751.5" ></text>
</g>
<g >
<title>handle_softirqs (2,601,335 samples, 0.09%)</title><rect x="98.5" y="661" width="1.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="101.51" y="671.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2,307,992 samples, 0.08%)</title><rect x="22.9" y="149" width="0.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="25.87" y="159.5" ></text>
</g>
<g >
<title>__fget_light (7,419,784 samples, 0.26%)</title><rect x="903.0" y="629" width="3.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="906.01" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (89,750,944 samples, 3.16%)</title><rect x="280.4" y="805" width="37.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="283.37" y="815.5" >__a..</text>
</g>
<g >
<title>handle_mm_fault (1,838,370 samples, 0.06%)</title><rect x="175.6" y="741" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="178.58" y="751.5" ></text>
</g>
<g >
<title>tcp_rcv_established (10,559,037 samples, 0.37%)</title><rect x="878.0" y="101" width="4.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="881.01" y="111.5" ></text>
</g>
</g>
</svg>
