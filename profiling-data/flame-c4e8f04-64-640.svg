<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1190" onload="init(evt)" viewBox="0 0 1200 1190" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1190.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1173" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1173" > </text>
<g id="frames">
<g >
<title>do_el0_svc (60,790,759 samples, 1.27%)</title><rect x="16.2" y="933" width="15.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="19.20" y="943.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,577,171 samples, 0.10%)</title><rect x="11.2" y="933" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.17" y="943.5" ></text>
</g>
<g >
<title>operator new (19,604,063 samples, 0.41%)</title><rect x="326.4" y="917" width="4.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="329.40" y="927.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,008,752 samples, 0.04%)</title><rect x="13.5" y="805" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="16.51" y="815.5" ></text>
</g>
<g >
<title>rb_first (2,123,977 samples, 0.04%)</title><rect x="877.1" y="181" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="880.10" y="191.5" ></text>
</g>
<g >
<title>tcp_chrono_stop (1,537,026 samples, 0.03%)</title><rect x="305.3" y="501" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="308.27" y="511.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,103,209 samples, 0.04%)</title><rect x="539.0" y="693" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="542.00" y="703.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1,965,619 samples, 0.04%)</title><rect x="83.5" y="341" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="86.48" y="351.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::broadcast_to_channel (1,433,602,771 samples, 30.03%)</title><rect x="724.6" y="981" width="354.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="727.57" y="991.5" >tt::chat::server::EpollServer::broadcast_to_chan..</text>
</g>
<g >
<title>do_mem_abort (1,944,063 samples, 0.04%)</title><rect x="1107.5" y="837" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1110.54" y="847.5" ></text>
</g>
<g >
<title>el0_da (2,626,645 samples, 0.06%)</title><rect x="82.8" y="773" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="85.84" y="783.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (2,316,460 samples, 0.05%)</title><rect x="1119.1" y="821" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1122.12" y="831.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2,046,963 samples, 0.04%)</title><rect x="125.8" y="629" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="128.83" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,397,556 samples, 0.05%)</title><rect x="1105.5" y="885" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1108.52" y="895.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (241,338,927 samples, 5.05%)</title><rect x="506.9" y="949" width="59.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="509.89" y="959.5" >void s..</text>
</g>
<g >
<title>vfs_write (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="677" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1187.01" y="687.5" ></text>
</g>
<g >
<title>__do_softirq (1,537,026 samples, 0.03%)</title><rect x="305.3" y="773" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="308.27" y="783.5" ></text>
</g>
<g >
<title>skb_network_protocol (1,998,689 samples, 0.04%)</title><rect x="889.7" y="501" width="0.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="892.68" y="511.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2,674,412 samples, 0.06%)</title><rect x="1112.3" y="261" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1115.30" y="271.5" ></text>
</g>
<g >
<title>char const* fmt::v9::detail::parse_replacement_field&lt;char, fmt::v9::detail::vformat_to&lt;char&gt; (17,731,306 samples, 0.37%)</title><rect x="1163.5" y="949" width="4.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1166.49" y="959.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (88,897,957 samples, 1.86%)</title><rect x="1078.9" y="981" width="21.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1081.87" y="991.5" >t..</text>
</g>
<g >
<title>security_socket_sendmsg (9,087,429 samples, 0.19%)</title><rect x="904.7" y="757" width="2.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="907.72" y="767.5" ></text>
</g>
<g >
<title>do_softirq (4,906,180 samples, 0.10%)</title><rect x="1111.7" y="517" width="1.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1114.75" y="527.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char*, char*&gt; (2,108,069 samples, 0.04%)</title><rect x="1145.9" y="741" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1148.90" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,494,258 samples, 0.18%)</title><rect x="1108.5" y="885" width="2.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1111.50" y="895.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,319,076 samples, 0.03%)</title><rect x="12.0" y="709" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="14.98" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (336,740,290 samples, 7.05%)</title><rect x="483.3" y="981" width="83.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="486.31" y="991.5" >std::__cx..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,163,569 samples, 0.05%)</title><rect x="1165.3" y="837" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1168.33" y="847.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (2,320,377 samples, 0.05%)</title><rect x="894.3" y="645" width="0.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="897.31" y="655.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (4,577,171 samples, 0.10%)</title><rect x="11.2" y="917" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.17" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,907,423 samples, 0.08%)</title><rect x="1141.6" y="821" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1144.57" y="831.5" ></text>
</g>
<g >
<title>tcp_filter (2,292,978 samples, 0.05%)</title><rect x="1084.0" y="245" width="0.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1087.00" y="255.5" ></text>
</g>
<g >
<title>ip_output (2,139,176 samples, 0.04%)</title><rect x="1084.6" y="133" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1087.56" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (249,826,531 samples, 5.23%)</title><rect x="660.0" y="917" width="61.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="662.96" y="927.5" >std::_..</text>
</g>
<g >
<title>tcp_rcv_established (4,213,573 samples, 0.09%)</title><rect x="1079.4" y="693" width="1.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1082.44" y="703.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32LocalCache&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt; &gt;::Refill (3,258,095 samples, 0.07%)</title><rect x="11.2" y="837" width="0.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="14.17" y="847.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,253,029 samples, 0.03%)</title><rect x="1078.6" y="789" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1081.56" y="799.5" ></text>
</g>
<g >
<title>std::locale::locale (2,018,823 samples, 0.04%)</title><rect x="10.7" y="1029" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="13.68" y="1039.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (1,944,063 samples, 0.04%)</title><rect x="1107.5" y="789" width="0.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1110.54" y="799.5" ></text>
</g>
<g >
<title>tcp_current_mss (2,046,963 samples, 0.04%)</title><rect x="125.8" y="565" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="128.83" y="575.5" ></text>
</g>
<g >
<title>handle_softirqs (2,129,583 samples, 0.04%)</title><rect x="590.4" y="757" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="593.36" y="767.5" ></text>
</g>
<g >
<title>do_notify_resume (4,745,791 samples, 0.10%)</title><rect x="1093.9" y="869" width="1.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1096.91" y="879.5" ></text>
</g>
<g >
<title>loopback_xmit (4,978,942 samples, 0.10%)</title><rect x="888.5" y="501" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="891.45" y="511.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (8,956,661 samples, 0.19%)</title><rect x="1138.4" y="837" width="2.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1141.43" y="847.5" ></text>
</g>
<g >
<title>__sys_sendto (2,668,687 samples, 0.06%)</title><rect x="912.2" y="805" width="0.7" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="915.22" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (7,570,854 samples, 0.16%)</title><rect x="722.2" y="933" width="1.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="725.25" y="943.5" ></text>
</g>
<g >
<title>__netif_rx (4,978,942 samples, 0.10%)</title><rect x="888.5" y="485" width="1.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="891.45" y="495.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="469" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1097.46" y="479.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1,575,555 samples, 0.03%)</title><rect x="875.6" y="133" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="878.60" y="143.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3,276,890 samples, 0.07%)</title><rect x="231.7" y="821" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="234.75" y="831.5" ></text>
</g>
<g >
<title>__fget_light (15,047,102 samples, 0.32%)</title><rect x="908.0" y="741" width="3.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="910.97" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,155,967 samples, 0.05%)</title><rect x="1118.6" y="821" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1121.59" y="831.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (11,214,272 samples, 0.23%)</title><rect x="10.0" y="1109" width="2.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1119.5" ></text>
</g>
<g >
<title>sock_def_readable (2,219,939 samples, 0.05%)</title><rect x="1086.1" y="197" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1089.10" y="207.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,178,872 samples, 0.05%)</title><rect x="720.6" y="757" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="723.63" y="767.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (2,046,963 samples, 0.04%)</title><rect x="125.8" y="917" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="128.83" y="927.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (4,643,792 samples, 0.10%)</title><rect x="1139.5" y="805" width="1.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1142.50" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash (1,826,148 samples, 0.04%)</title><rect x="724.1" y="949" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="727.12" y="959.5" ></text>
</g>
<g >
<title>sock_def_readable (8,201,784 samples, 0.17%)</title><rect x="879.3" y="165" width="2.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="882.30" y="175.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,965,619 samples, 0.04%)</title><rect x="83.5" y="581" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="86.48" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,316,460 samples, 0.05%)</title><rect x="1119.1" y="805" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1122.12" y="815.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,889,471 samples, 0.04%)</title><rect x="12.3" y="709" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="15.31" y="719.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char*, char*&gt; (2,108,069 samples, 0.04%)</title><rect x="1145.9" y="757" width="0.5" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1148.90" y="767.5" ></text>
</g>
<g >
<title>__sock_sendmsg (242,882,055 samples, 5.09%)</title><rect x="846.9" y="773" width="60.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="849.94" y="783.5" >__sock..</text>
</g>
<g >
<title>__asan::Allocator::Allocate (3,872,481 samples, 0.08%)</title><rect x="81.9" y="885" width="0.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="84.88" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,033,765 samples, 0.04%)</title><rect x="1174.3" y="885" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1177.29" y="895.5" ></text>
</g>
<g >
<title>operator new (8,185,592 samples, 0.17%)</title><rect x="331.2" y="885" width="2.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="334.25" y="895.5" ></text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::advance_to (3,898,055 samples, 0.08%)</title><rect x="1166.9" y="933" width="1.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1169.91" y="943.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,253,029 samples, 0.03%)</title><rect x="1078.6" y="773" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1081.56" y="783.5" ></text>
</g>
<g >
<title>ksys_write (4,182,325 samples, 0.09%)</title><rect x="1151.2" y="645" width="1.0" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1154.21" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,494,258 samples, 0.18%)</title><rect x="1108.5" y="869" width="2.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1111.50" y="879.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (1,951,033 samples, 0.04%)</title><rect x="81.4" y="677" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="84.40" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,225,383 samples, 0.05%)</title><rect x="1184.9" y="933" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1187.87" y="943.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_range_ (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="933" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1187.01" y="943.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="821" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1097.46" y="831.5" ></text>
</g>
<g >
<title>invoke_syscall (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="645" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1153.69" y="655.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,253,029 samples, 0.03%)</title><rect x="219.2" y="917" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="222.17" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (17,030,180 samples, 0.36%)</title><rect x="436.9" y="933" width="4.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="439.94" y="943.5" ></text>
</g>
<g >
<title>aa_inet_msg_perm (4,140,388 samples, 0.09%)</title><rect x="30.2" y="773" width="1.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="33.20" y="783.5" ></text>
</g>
<g >
<title>do_el0_svc (1,519,690 samples, 0.03%)</title><rect x="11.6" y="645" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="14.60" y="655.5" ></text>
</g>
<g >
<title>do_anonymous_page (2,202,194 samples, 0.05%)</title><rect x="326.8" y="693" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="329.84" y="703.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (4,991,456 samples, 0.10%)</title><rect x="231.3" y="917" width="1.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="234.33" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (189,649,962 samples, 3.97%)</title><rect x="334.9" y="949" width="46.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="337.88" y="959.5" >__as..</text>
</g>
<g >
<title>tcp_queue_rcv (2,059,220 samples, 0.04%)</title><rect x="1080.0" y="661" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1082.97" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,643,792 samples, 0.10%)</title><rect x="1139.5" y="725" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1142.50" y="735.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (1,734,773 samples, 0.04%)</title><rect x="1174.8" y="901" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1177.79" y="911.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2,139,895 samples, 0.04%)</title><rect x="911.7" y="789" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="914.69" y="799.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1,575,555 samples, 0.03%)</title><rect x="875.6" y="69" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="878.60" y="79.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1,965,619 samples, 0.04%)</title><rect x="83.5" y="421" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="86.48" y="431.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (4,225,966 samples, 0.09%)</title><rect x="1189.0" y="837" width="1.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1191.96" y="847.5" ></text>
</g>
<g >
<title>net_rx_action (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="645" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1097.46" y="655.5" ></text>
</g>
<g >
<title>neigh_hh_output (4,906,180 samples, 0.10%)</title><rect x="1111.7" y="565" width="1.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1114.75" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (270,214,067 samples, 5.66%)</title><rect x="590.9" y="933" width="66.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="593.88" y="943.5" >std::__..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,898,055 samples, 0.08%)</title><rect x="1166.9" y="917" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1169.91" y="927.5" ></text>
</g>
<g >
<title>el0_svc (1,020,628 samples, 0.02%)</title><rect x="13.3" y="981" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="16.26" y="991.5" ></text>
</g>
<g >
<title>sock_rfree (1,948,904 samples, 0.04%)</title><rect x="20.9" y="773" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="23.93" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (2,323,907 samples, 0.05%)</title><rect x="1100.3" y="949" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1103.27" y="959.5" ></text>
</g>
<g >
<title>vfs_write (4,182,325 samples, 0.09%)</title><rect x="1151.2" y="629" width="1.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1154.21" y="639.5" ></text>
</g>
<g >
<title>operator new (21,939,226 samples, 0.46%)</title><rect x="79.6" y="933" width="5.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="82.57" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,274,708 samples, 0.05%)</title><rect x="1181.5" y="869" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1184.51" y="879.5" ></text>
</g>
<g >
<title>skb_release_data (2,093,889 samples, 0.04%)</title><rect x="850.7" y="613" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="853.70" y="623.5" ></text>
</g>
<g >
<title>__kfree_skb (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="405" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1097.46" y="415.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (4,089,599 samples, 0.09%)</title><rect x="83.5" y="677" width="1.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="86.48" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,064,965 samples, 0.04%)</title><rect x="1159.2" y="885" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1162.19" y="895.5" ></text>
</g>
<g >
<title>__asan::InitializeAsanInterceptors (4,577,171 samples, 0.10%)</title><rect x="11.2" y="1061" width="1.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="14.17" y="1071.5" ></text>
</g>
<g >
<title>tcp_data_ready (1,793,482 samples, 0.04%)</title><rect x="1089.9" y="213" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1092.93" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_key_equals (104,053,253 samples, 2.18%)</title><rect x="811.0" y="869" width="25.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="814.04" y="879.5" >s..</text>
</g>
<g >
<title>__handle_mm_fault (2,626,645 samples, 0.06%)</title><rect x="82.8" y="693" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="85.84" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,750,590,856 samples, 99.50%)</title><rect x="12.8" y="1077" width="1174.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.78" y="1087.5" >[libc.so.6]</text>
</g>
<g >
<title>tcp_mtu_probe (2,114,202 samples, 0.04%)</title><rect x="867.8" y="677" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="870.84" y="687.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (2,188,358 samples, 0.05%)</title><rect x="462.7" y="869" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="465.69" y="879.5" ></text>
</g>
<g >
<title>std::locale::facet::_S_get_c_locale (2,018,823 samples, 0.04%)</title><rect x="10.7" y="965" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="13.68" y="975.5" ></text>
</g>
<g >
<title>__alloc_skb (1,722,970 samples, 0.04%)</title><rect x="1092.4" y="709" width="0.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="1095.40" y="719.5" ></text>
</g>
<g >
<title>mas_walk (2,275,078 samples, 0.05%)</title><rect x="539.5" y="709" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="542.52" y="719.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (4,140,388 samples, 0.09%)</title><rect x="30.2" y="805" width="1.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="33.20" y="815.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (4,140,388 samples, 0.09%)</title><rect x="30.2" y="789" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="33.20" y="799.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,878,130 samples, 0.04%)</title><rect x="24.3" y="709" width="0.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="27.33" y="719.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (27,915,695 samples, 0.58%)</title><rect x="1083.5" y="357" width="6.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1086.48" y="367.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_name_command (211,592,160 samples, 4.43%)</title><rect x="1101.4" y="997" width="52.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1104.45" y="1007.5" >tt::c..</text>
</g>
<g >
<title>alloc_pages_mpol (1,959,682 samples, 0.04%)</title><rect x="231.7" y="709" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="234.75" y="719.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2,046,963 samples, 0.04%)</title><rect x="125.8" y="597" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="128.83" y="607.5" ></text>
</g>
<g >
<title>tcp_write_xmit (7,170,647 samples, 0.15%)</title><rect x="1111.7" y="693" width="1.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1114.75" y="703.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (2,168,160 samples, 0.05%)</title><rect x="1147.5" y="837" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1150.48" y="847.5" ></text>
</g>
<g >
<title>schedule (1,812,100 samples, 0.04%)</title><rect x="78.7" y="837" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="81.68" y="847.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (66,155,303 samples, 1.39%)</title><rect x="1137.4" y="933" width="16.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1140.39" y="943.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,738,405 samples, 0.04%)</title><rect x="11.2" y="757" width="0.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="14.17" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2,078,856 samples, 0.04%)</title><rect x="571.0" y="933" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="574.01" y="943.5" ></text>
</g>
<g >
<title>operator delete (1,791,530 samples, 0.04%)</title><rect x="307.2" y="965" width="0.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="310.22" y="975.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (4,066,109 samples, 0.09%)</title><rect x="835.7" y="821" width="1.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="838.75" y="831.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (1,950,733 samples, 0.04%)</title><rect x="1091.9" y="661" width="0.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1094.92" y="671.5" ></text>
</g>
<g >
<title>net_rx_action (2,398,268 samples, 0.05%)</title><rect x="657.1" y="709" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="660.07" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,899,117 samples, 0.04%)</title><rect x="1167.9" y="885" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1170.87" y="895.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="597" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1097.46" y="607.5" ></text>
</g>
<g >
<title>handle_softirqs (4,906,180 samples, 0.10%)</title><rect x="1111.7" y="437" width="1.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1114.75" y="447.5" ></text>
</g>
<g >
<title>ip_finish_output (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="773" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1192.48" y="783.5" ></text>
</g>
<g >
<title>invoke_syscall (1,519,690 samples, 0.03%)</title><rect x="11.6" y="613" width="0.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="14.60" y="623.5" ></text>
</g>
<g >
<title>do_notify_resume (12,764,233 samples, 0.27%)</title><rect x="1186.8" y="1061" width="3.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1189.85" y="1071.5" ></text>
</g>
<g >
<title>el0_svc (1,906,380 samples, 0.04%)</title><rect x="332.8" y="709" width="0.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="335.80" y="719.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,944,063 samples, 0.04%)</title><rect x="1107.5" y="869" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1110.54" y="879.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (2,188,201 samples, 0.05%)</title><rect x="1134.2" y="757" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1137.18" y="767.5" ></text>
</g>
<g >
<title>do_mem_abort (2,263,458 samples, 0.05%)</title><rect x="540.1" y="709" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="543.08" y="719.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (4,160,312 samples, 0.09%)</title><rect x="331.8" y="645" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="334.77" y="655.5" ></text>
</g>
<g >
<title>ip_rcv_finish (25,812,718 samples, 0.54%)</title><rect x="1084.0" y="325" width="6.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1087.00" y="335.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, std::ratio&lt;1l, 1000000000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1,740,724 samples, 0.04%)</title><rect x="1182.1" y="869" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1185.07" y="879.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2,674,412 samples, 0.06%)</title><rect x="1112.3" y="245" width="0.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1115.30" y="255.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (1,889,471 samples, 0.04%)</title><rect x="12.3" y="885" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="15.31" y="895.5" ></text>
</g>
<g >
<title>char* fmt::v9::format_int::format_unsigned&lt;unsigned int&gt; (3,865,430 samples, 0.08%)</title><rect x="1183.1" y="853" width="0.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1186.05" y="863.5" ></text>
</g>
<g >
<title>do_translation_fault (9,347,354 samples, 0.20%)</title><rect x="79.6" y="805" width="2.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="82.57" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,178,521 samples, 0.05%)</title><rect x="1115.6" y="869" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1118.58" y="879.5" ></text>
</g>
<g >
<title>call_on_irq_stack (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="709" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1097.46" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,052,704 samples, 0.04%)</title><rect x="1154.7" y="981" width="0.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1157.71" y="991.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::rfind (372,929,622 samples, 7.81%)</title><rect x="128.4" y="981" width="92.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="131.39" y="991.5" >std::__cxx1..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (4,583,846 samples, 0.10%)</title><rect x="126.9" y="965" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="129.85" y="975.5" ></text>
</g>
<g >
<title>el0_da (1,253,029 samples, 0.03%)</title><rect x="31.8" y="949" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="34.77" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,460,575 samples, 0.07%)</title><rect x="1172.5" y="917" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1175.51" y="927.5" ></text>
</g>
<g >
<title>__close_nocancel (2,008,752 samples, 0.04%)</title><rect x="13.5" y="821" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="16.51" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (150,466,261 samples, 3.15%)</title><rect x="41.9" y="949" width="37.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="44.94" y="959.5" >__a..</text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (2,109,793 samples, 0.04%)</title><rect x="1119.7" y="821" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1122.70" y="831.5" ></text>
</g>
<g >
<title>iterate_tty_write (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="629" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1187.01" y="639.5" ></text>
</g>
<g >
<title>exit_mmap (8,538,267 samples, 0.18%)</title><rect x="1186.8" y="933" width="2.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1189.85" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (9,358,850 samples, 0.20%)</title><rect x="1143.6" y="725" width="2.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1146.59" y="735.5" ></text>
</g>
<g >
<title>do_vmi_munmap (1,519,690 samples, 0.03%)</title><rect x="11.6" y="565" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="14.60" y="575.5" ></text>
</g>
<g >
<title>lock_sock_nested (2,226,759 samples, 0.05%)</title><rect x="847.9" y="741" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="850.89" y="751.5" ></text>
</g>
<g >
<title>__interceptor_memcpy@plt (2,033,316 samples, 0.04%)</title><rect x="127.5" y="933" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="130.48" y="943.5" ></text>
</g>
<g >
<title>tcp_data_ready (8,201,784 samples, 0.17%)</title><rect x="879.3" y="181" width="2.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="882.30" y="191.5" ></text>
</g>
<g >
<title>handle_softirqs (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="661" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1097.46" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,019,693 samples, 0.04%)</title><rect x="1103.0" y="933" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1105.99" y="943.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (3,402,180 samples, 0.07%)</title><rect x="865.8" y="677" width="0.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="868.76" y="687.5" ></text>
</g>
<g >
<title>__arm64_sys_munmap (1,519,690 samples, 0.03%)</title><rect x="11.6" y="597" width="0.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="14.60" y="607.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (2,140,290 samples, 0.04%)</title><rect x="887.9" y="197" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="890.93" y="207.5" ></text>
</g>
<g >
<title>fmt::v9::format_int::format_int (2,451,646 samples, 0.05%)</title><rect x="1148.0" y="837" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1151.02" y="847.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (9,137,373 samples, 0.19%)</title><rect x="1111.3" y="853" width="2.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1114.26" y="863.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (1,793,482 samples, 0.04%)</title><rect x="1089.9" y="181" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1092.93" y="191.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (1,906,380 samples, 0.04%)</title><rect x="332.8" y="677" width="0.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="335.80" y="687.5" ></text>
</g>
<g >
<title>tcp_send_ack (2,908,176 samples, 0.06%)</title><rect x="874.3" y="181" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="877.32" y="191.5" ></text>
</g>
<g >
<title>el0t_64_sync (6,279,212 samples, 0.13%)</title><rect x="331.2" y="821" width="1.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="334.25" y="831.5" ></text>
</g>
<g >
<title>__arm64_sys_mmap (1,906,380 samples, 0.04%)</title><rect x="332.8" y="645" width="0.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="335.80" y="655.5" ></text>
</g>
<g >
<title>handle_softirqs (2,178,872 samples, 0.05%)</title><rect x="720.6" y="693" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="723.63" y="703.5" ></text>
</g>
<g >
<title>el0_da (1,633,617 samples, 0.03%)</title><rect x="1101.0" y="821" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1104.04" y="831.5" ></text>
</g>
<g >
<title>tcp_send_active_reset (4,225,966 samples, 0.09%)</title><rect x="1189.0" y="853" width="1.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1191.96" y="863.5" ></text>
</g>
<g >
<title>fmt::v9::detail::abort_fuzzing_if (2,109,793 samples, 0.04%)</title><rect x="1119.7" y="773" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1122.70" y="783.5" ></text>
</g>
<g >
<title>__arm64_sys_write (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="629" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1153.69" y="639.5" ></text>
</g>
<g >
<title>ip_local_deliver (1,537,026 samples, 0.03%)</title><rect x="305.3" y="629" width="0.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="308.27" y="639.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (2,188,358 samples, 0.05%)</title><rect x="462.7" y="853" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="465.69" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3,940,754 samples, 0.08%)</title><rect x="1153.7" y="997" width="1.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1156.74" y="1007.5" ></text>
</g>
<g >
<title>el0_svc (63,291,130 samples, 1.33%)</title><rect x="1079.4" y="885" width="15.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1082.44" y="895.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (2,178,872 samples, 0.05%)</title><rect x="720.6" y="837" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="723.63" y="847.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1,537,026 samples, 0.03%)</title><rect x="305.3" y="581" width="0.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="308.27" y="591.5" ></text>
</g>
<g >
<title>tcp_data_ready (26,697,587 samples, 0.56%)</title><rect x="881.3" y="197" width="6.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="884.33" y="207.5" ></text>
</g>
<g >
<title>__alloc_pages (1,959,682 samples, 0.04%)</title><rect x="231.7" y="693" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="234.75" y="703.5" ></text>
</g>
<g >
<title>read (69,666,383 samples, 1.46%)</title><rect x="14.0" y="997" width="17.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="17.01" y="1007.5" ></text>
</g>
<g >
<title>ip_output (1,245,932 samples, 0.03%)</title><rect x="850.4" y="581" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="853.39" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0@plt (1,784,308 samples, 0.04%)</title><rect x="79.1" y="949" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="82.13" y="959.5" ></text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::advance_to (2,124,877 samples, 0.04%)</title><rect x="1120.2" y="885" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1123.22" y="895.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (1,665,974 samples, 0.03%)</title><rect x="21.4" y="773" width="0.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="24.42" y="783.5" ></text>
</g>
<g >
<title>ip_rcv (1,537,026 samples, 0.03%)</title><rect x="305.3" y="661" width="0.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="308.27" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (7,265,736 samples, 0.15%)</title><rect x="1178.8" y="773" width="1.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1181.75" y="783.5" ></text>
</g>
<g >
<title>tcp_rack_advance (2,398,268 samples, 0.05%)</title><rect x="657.1" y="485" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="660.07" y="495.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (95,696,391 samples, 2.00%)</title><rect x="811.0" y="853" width="23.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="814.04" y="863.5" >_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (22,442,429 samples, 0.47%)</title><rect x="566.5" y="981" width="5.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="569.53" y="991.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,123,083 samples, 0.04%)</title><rect x="1116.6" y="837" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1119.60" y="847.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (1,906,380 samples, 0.04%)</title><rect x="332.8" y="821" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="335.80" y="831.5" ></text>
</g>
<g >
<title>__alloc_skb (25,769,488 samples, 0.54%)</title><rect x="897.8" y="693" width="6.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="900.82" y="703.5" ></text>
</g>
<g >
<title>ldsem_up_read (2,112,955 samples, 0.04%)</title><rect x="1151.7" y="581" width="0.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1154.72" y="591.5" ></text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (310,282,583 samples, 6.50%)</title><rect x="229.0" y="981" width="76.7" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="231.97" y="991.5" >fmt::v9:..</text>
</g>
<g >
<title>arch_local_irq_enable (1,812,100 samples, 0.04%)</title><rect x="78.7" y="805" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="81.68" y="815.5" ></text>
</g>
<g >
<title>tcp_update_skb_after_send (1,647,826 samples, 0.03%)</title><rect x="895.8" y="661" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="898.79" y="671.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (104,315,735 samples, 2.18%)</title><rect x="1160.6" y="997" width="25.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1163.60" y="1007.5" >v..</text>
</g>
<g >
<title>el0t_64_sync (1,253,029 samples, 0.03%)</title><rect x="219.2" y="933" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="222.17" y="943.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1,245,932 samples, 0.03%)</title><rect x="850.4" y="645" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="853.39" y="655.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (43,681,711 samples, 0.91%)</title><rect x="1124.3" y="869" width="10.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1127.34" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,178,521 samples, 0.05%)</title><rect x="1115.6" y="853" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1118.58" y="863.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (4,226,900 samples, 0.09%)</title><rect x="220.6" y="981" width="1.0" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="223.56" y="991.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (1,738,405 samples, 0.04%)</title><rect x="11.2" y="789" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.17" y="799.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::base_iterator&lt;fmt::v9::appender&gt; (14,993,650 samples, 0.31%)</title><rect x="1125.3" y="853" width="3.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1128.29" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_key_equals (247,657,254 samples, 5.19%)</title><rect x="660.0" y="901" width="61.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="662.96" y="911.5" >std::_..</text>
</g>
<g >
<title>dev_hard_start_xmit (2,337,113 samples, 0.05%)</title><rect x="890.8" y="533" width="0.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="893.75" y="543.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (1,744,109 samples, 0.04%)</title><rect x="1173.4" y="981" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1176.36" y="991.5" ></text>
</g>
<g >
<title>alloc_pages (24,223,649 samples, 0.51%)</title><rect x="858.4" y="677" width="6.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="861.43" y="687.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (18,760,049 samples, 0.39%)</title><rect x="1167.9" y="933" width="4.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1170.87" y="943.5" ></text>
</g>
<g >
<title>invoke_syscall (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="725" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1187.01" y="735.5" ></text>
</g>
<g >
<title>do_anonymous_page (3,276,890 samples, 0.07%)</title><rect x="231.7" y="773" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="234.75" y="783.5" ></text>
</g>
<g >
<title>el0_da (6,279,212 samples, 0.13%)</title><rect x="331.2" y="789" width="1.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="334.25" y="799.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,253,029 samples, 0.03%)</title><rect x="1078.6" y="885" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1081.56" y="895.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (4,906,180 samples, 0.10%)</title><rect x="1111.7" y="549" width="1.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1114.75" y="559.5" ></text>
</g>
<g >
<title>el0_da (1,253,029 samples, 0.03%)</title><rect x="219.2" y="901" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="222.17" y="911.5" ></text>
</g>
<g >
<title>do_page_fault (2,275,078 samples, 0.05%)</title><rect x="539.5" y="741" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="542.52" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1,838,117 samples, 0.04%)</title><rect x="723.7" y="869" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="726.66" y="879.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,591,318 samples, 0.03%)</title><rect x="330.3" y="773" width="0.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="333.28" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,566,124 samples, 0.03%)</title><rect x="1137.0" y="885" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1140.00" y="895.5" ></text>
</g>
<g >
<title>__ip_finish_output (88,722,536 samples, 1.86%)</title><rect x="869.4" y="581" width="21.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="872.40" y="591.5" >_..</text>
</g>
<g >
<title>neigh_hh_output (1,245,932 samples, 0.03%)</title><rect x="850.4" y="517" width="0.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="853.39" y="527.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (295,760,395 samples, 6.19%)</title><rect x="232.6" y="933" width="73.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="235.56" y="943.5" >__asan_s..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,986,444 samples, 0.04%)</title><rect x="1158.7" y="901" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1161.70" y="911.5" ></text>
</g>
<g >
<title>ip_finish_output (4,906,180 samples, 0.10%)</title><rect x="1111.7" y="613" width="1.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1114.75" y="623.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;int, true, false&gt;::operator* (1,907,456 samples, 0.04%)</title><rect x="734.0" y="965" width="0.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="737.04" y="975.5" ></text>
</g>
<g >
<title>invoke_syscall (9,137,373 samples, 0.19%)</title><rect x="1111.3" y="837" width="2.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1114.26" y="847.5" ></text>
</g>
<g >
<title>__alloc_pages (1,253,029 samples, 0.03%)</title><rect x="31.8" y="741" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="34.77" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,762,058 samples, 0.12%)</title><rect x="1106.1" y="901" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1109.12" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,155,967 samples, 0.05%)</title><rect x="1118.6" y="837" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1121.59" y="847.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (2,329,032 samples, 0.05%)</title><rect x="1171.9" y="885" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1174.93" y="895.5" ></text>
</g>
<g >
<title>__sanitizer_internal_memset (1,319,076 samples, 0.03%)</title><rect x="12.0" y="837" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="14.98" y="847.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2,134,403 samples, 0.04%)</title><rect x="17.9" y="821" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="20.88" y="831.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::begin (2,104,045 samples, 0.04%)</title><rect x="1152.2" y="901" width="0.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1155.24" y="911.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;&gt; (3,763,447 samples, 0.08%)</title><rect x="723.2" y="901" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="726.19" y="911.5" ></text>
</g>
<g >
<title>tcp_rate_check_app_limited (12,407,132 samples, 0.26%)</title><rect x="851.9" y="725" width="3.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="854.88" y="735.5" ></text>
</g>
<g >
<title>__pi_clear_page (1,951,033 samples, 0.04%)</title><rect x="81.4" y="597" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="84.40" y="607.5" ></text>
</g>
<g >
<title>__sanitizer::RunFreeHooks (1,873,327 samples, 0.04%)</title><rect x="568.9" y="885" width="0.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="571.93" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (414,981,119 samples, 8.69%)</title><rect x="334.4" y="981" width="102.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="337.38" y="991.5" >std::__cxx11..</text>
</g>
<g >
<title>neigh_hh_output (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="725" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1192.48" y="735.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,253,029 samples, 0.03%)</title><rect x="31.8" y="821" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="34.77" y="831.5" ></text>
</g>
<g >
<title>__sanitizer::ListOfModules::init (1,889,471 samples, 0.04%)</title><rect x="12.3" y="1045" width="0.5" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="15.31" y="1055.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (386,399,430 samples, 8.09%)</title><rect x="32.5" y="997" width="95.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="35.49" y="1007.5" >void std::_..</text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (10,416,180 samples, 0.22%)</title><rect x="1108.0" y="917" width="2.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1111.02" y="927.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (13,458,401 samples, 0.28%)</title><rect x="1177.2" y="869" width="3.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1180.22" y="879.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (2,227,134 samples, 0.05%)</title><rect x="570.0" y="869" width="0.5" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="572.97" y="879.5" ></text>
</g>
<g >
<title>___interceptor_strlen.part.0 (2,206,028 samples, 0.05%)</title><rect x="221.1" y="949" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="224.06" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,921,922 samples, 0.04%)</title><rect x="1108.0" y="885" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1111.02" y="895.5" ></text>
</g>
<g >
<title>unmap_vmas (4,271,701 samples, 0.09%)</title><rect x="1187.9" y="917" width="1.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1190.90" y="927.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (12,764,233 samples, 0.27%)</title><rect x="1186.8" y="1093" width="3.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1189.85" y="1103.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (23,519,740 samples, 0.49%)</title><rect x="1084.6" y="245" width="5.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1087.56" y="255.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (24,196,556 samples, 0.51%)</title><rect x="506.9" y="933" width="6.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="509.89" y="943.5" ></text>
</g>
<g >
<title>tty_write (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="661" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1187.01" y="671.5" ></text>
</g>
<g >
<title>epoll_pwait (1,020,628 samples, 0.02%)</title><rect x="13.3" y="1029" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="16.26" y="1039.5" ></text>
</g>
<g >
<title>__do_softirq (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="757" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1080.97" y="767.5" ></text>
</g>
<g >
<title>___slab_alloc (2,527,243 samples, 0.05%)</title><rect x="902.1" y="661" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="905.07" y="671.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2,046,963 samples, 0.04%)</title><rect x="125.8" y="661" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="128.83" y="671.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (2,263,458 samples, 0.05%)</title><rect x="540.1" y="789" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="543.08" y="799.5" ></text>
</g>
<g >
<title>__sanitizer::internal_munmap (1,519,690 samples, 0.03%)</title><rect x="11.6" y="709" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.60" y="719.5" ></text>
</g>
<g >
<title>handle_softirqs (34,305,749 samples, 0.72%)</title><rect x="1083.0" y="437" width="8.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1085.96" y="447.5" ></text>
</g>
<g >
<title>write (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="821" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1187.01" y="831.5" ></text>
</g>
<g >
<title>process_backlog (1,965,619 samples, 0.04%)</title><rect x="83.5" y="437" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="86.48" y="447.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (25,812,718 samples, 0.54%)</title><rect x="1084.0" y="277" width="6.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1087.00" y="287.5" ></text>
</g>
<g >
<title>el0t_64_sync (9,347,354 samples, 0.20%)</title><rect x="79.6" y="869" width="2.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="82.57" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (3,810,966 samples, 0.08%)</title><rect x="1124.3" y="853" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1127.34" y="863.5" ></text>
</g>
<g >
<title>tcp_sendmsg (227,711,347 samples, 4.77%)</title><rect x="848.4" y="741" width="56.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="851.44" y="751.5" >tcp_s..</text>
</g>
<g >
<title>ip_queue_xmit (4,906,180 samples, 0.10%)</title><rect x="1111.7" y="661" width="1.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1114.75" y="671.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (64,499,301 samples, 1.35%)</title><rect x="15.3" y="965" width="15.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="18.29" y="975.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,129,583 samples, 0.04%)</title><rect x="590.4" y="821" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="593.36" y="831.5" ></text>
</g>
<g >
<title>sock_read_iter (43,379,622 samples, 0.91%)</title><rect x="20.5" y="837" width="10.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="23.51" y="847.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (19,650,040 samples, 0.41%)</title><rect x="1141.6" y="853" width="4.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1144.57" y="863.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,253,029 samples, 0.03%)</title><rect x="1078.6" y="901" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1081.56" y="911.5" ></text>
</g>
<g >
<title>handle_softirqs (70,542,273 samples, 1.48%)</title><rect x="871.0" y="421" width="17.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="874.02" y="431.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,000,677 samples, 0.04%)</title><rect x="1103.5" y="901" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1106.49" y="911.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::default_arg_formatter&lt;char&gt;::operator (11,816,657 samples, 0.25%)</title><rect x="1164.0" y="933" width="2.9" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1166.99" y="943.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (2,067,612 samples, 0.04%)</title><rect x="1186.8" y="837" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1189.85" y="847.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (21,939,226 samples, 0.46%)</title><rect x="79.6" y="949" width="5.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="82.57" y="959.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1,575,555 samples, 0.03%)</title><rect x="875.6" y="149" width="0.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="878.60" y="159.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="485" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1097.46" y="495.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (282,157,750 samples, 5.91%)</title><rect x="845.4" y="837" width="69.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="848.43" y="847.5" >el0_svc..</text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (2,111,590 samples, 0.04%)</title><rect x="1148.6" y="821" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1151.62" y="831.5" ></text>
</g>
<g >
<title>write (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="741" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1153.69" y="751.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (9,137,373 samples, 0.19%)</title><rect x="1111.3" y="965" width="2.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1114.26" y="975.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;tt::chat::server::ChannelManager, std::default_delete&lt;tt::chat::server::ChannelManager&gt; &gt;::operator (2,001,536 samples, 0.04%)</title><rect x="737.4" y="965" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="740.45" y="975.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::vformat_to&lt;fmt::v9::appender, 0&gt; (87,283,082 samples, 1.83%)</title><rect x="1114.1" y="933" width="21.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1117.06" y="943.5" >f..</text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::advance_to (3,460,575 samples, 0.07%)</title><rect x="1172.5" y="933" width="0.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1175.51" y="943.5" ></text>
</g>
<g >
<title>__fdget (2,030,315 samples, 0.04%)</title><rect x="1093.4" y="773" width="0.5" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1096.41" y="783.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char*, char*&gt; (2,188,201 samples, 0.05%)</title><rect x="1134.2" y="725" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1137.18" y="735.5" ></text>
</g>
<g >
<title>memset (2,170,756 samples, 0.05%)</title><rect x="891.3" y="645" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="894.33" y="655.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_join_command (1,633,617 samples, 0.03%)</title><rect x="1101.0" y="997" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1104.04" y="1007.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,889,471 samples, 0.04%)</title><rect x="12.3" y="773" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="15.31" y="783.5" ></text>
</g>
<g >
<title>net_rx_action (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="581" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1192.48" y="591.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (6,219,523 samples, 0.13%)</title><rect x="838.3" y="917" width="1.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="841.28" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (18,134,675 samples, 0.38%)</title><rect x="1155.2" y="997" width="4.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1158.22" y="1007.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (1,591,318 samples, 0.03%)</title><rect x="330.3" y="853" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="333.28" y="863.5" ></text>
</g>
<g >
<title>do_page_fault (4,135,998 samples, 0.09%)</title><rect x="326.8" y="773" width="1.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="329.84" y="783.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.0 (1,950,733 samples, 0.04%)</title><rect x="1091.9" y="645" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1094.92" y="655.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;::try_reserve (1,654,651 samples, 0.03%)</title><rect x="1140.6" y="837" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1143.64" y="847.5" ></text>
</g>
<g >
<title>el1h_64_irq_handler (1,965,619 samples, 0.04%)</title><rect x="83.5" y="613" width="0.5" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="86.48" y="623.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (1,889,471 samples, 0.04%)</title><rect x="12.3" y="677" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="15.31" y="687.5" ></text>
</g>
<g >
<title>tcp_data_queue (1,026,195 samples, 0.02%)</title><rect x="1112.7" y="213" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1115.71" y="223.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,253,029 samples, 0.03%)</title><rect x="31.8" y="725" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="34.77" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,581,994 samples, 0.12%)</title><rect x="1168.3" y="885" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1171.34" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (2,397,556 samples, 0.05%)</title><rect x="1105.5" y="901" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1108.52" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,338,855 samples, 0.05%)</title><rect x="1146.4" y="821" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1149.42" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,121,199 samples, 0.04%)</title><rect x="1137.9" y="869" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1140.91" y="879.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (20,493,912 samples, 0.43%)</title><rect x="1130.1" y="837" width="5.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1133.08" y="847.5" ></text>
</g>
<g >
<title>tcp_recvmsg (39,239,234 samples, 0.82%)</title><rect x="20.5" y="789" width="9.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="23.51" y="799.5" ></text>
</g>
<g >
<title>inet_recvmsg (39,239,234 samples, 0.82%)</title><rect x="20.5" y="805" width="9.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="23.51" y="815.5" ></text>
</g>
<g >
<title>do_el0_svc (284,137,149 samples, 5.95%)</title><rect x="845.4" y="853" width="70.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="848.43" y="863.5" >do_el0_..</text>
</g>
<g >
<title>ip_local_deliver_finish (1,537,026 samples, 0.03%)</title><rect x="305.3" y="613" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="308.27" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (79,030,902 samples, 1.66%)</title><rect x="463.2" y="933" width="19.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="466.23" y="943.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (2,172,457 samples, 0.05%)</title><rect x="333.8" y="933" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="336.84" y="943.5" ></text>
</g>
<g >
<title>char* fmt::v9::format_int::format_signed&lt;int&gt; (3,865,430 samples, 0.08%)</title><rect x="1183.1" y="869" width="0.9" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1186.05" y="879.5" ></text>
</g>
<g >
<title>vma_set_page_prot (1,906,380 samples, 0.04%)</title><rect x="332.8" y="581" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="335.80" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,109,793 samples, 0.04%)</title><rect x="1119.7" y="757" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1122.70" y="767.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (2,018,823 samples, 0.04%)</title><rect x="10.7" y="1013" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="13.68" y="1023.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (29,775,619 samples, 0.62%)</title><rect x="382.3" y="933" width="7.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="385.33" y="943.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (9,137,373 samples, 0.19%)</title><rect x="1111.3" y="821" width="2.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1114.26" y="831.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (88,897,957 samples, 1.86%)</title><rect x="1078.9" y="965" width="21.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1081.87" y="975.5" >t..</text>
</g>
<g >
<title>get_page_from_freelist (20,295,798 samples, 0.43%)</title><rect x="858.4" y="629" width="5.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="861.43" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,008,752 samples, 0.04%)</title><rect x="13.5" y="901" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.51" y="911.5" ></text>
</g>
<g >
<title>do_translation_fault (6,230,760 samples, 0.13%)</title><rect x="326.8" y="789" width="1.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="329.84" y="799.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (2,168,160 samples, 0.05%)</title><rect x="1147.5" y="853" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1150.48" y="863.5" ></text>
</g>
<g >
<title>el0_da (9,347,354 samples, 0.20%)</title><rect x="79.6" y="837" width="2.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="82.57" y="847.5" ></text>
</g>
<g >
<title>call_rcu (1,519,690 samples, 0.03%)</title><rect x="11.6" y="437" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="14.60" y="447.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (1,591,318 samples, 0.03%)</title><rect x="330.3" y="869" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="333.28" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,734,773 samples, 0.04%)</title><rect x="1174.8" y="773" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1177.79" y="783.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt;::begin (1,642,699 samples, 0.03%)</title><rect x="1184.5" y="933" width="0.4" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="1187.46" y="943.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2,674,412 samples, 0.06%)</title><rect x="1112.3" y="325" width="0.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1115.30" y="335.5" ></text>
</g>
<g >
<title>memset (2,156,630 samples, 0.05%)</title><rect x="903.7" y="677" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="906.65" y="687.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="693" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1192.48" y="703.5" ></text>
</g>
<g >
<title>freeze_slab (1,868,784 samples, 0.04%)</title><rect x="903.2" y="661" width="0.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="906.19" y="671.5" ></text>
</g>
<g >
<title>sk_reset_timer (1,950,733 samples, 0.04%)</title><rect x="1091.9" y="629" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1094.92" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::~_Scoped_node (2,706,185 samples, 0.06%)</title><rect x="1110.6" y="933" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1113.59" y="943.5" ></text>
</g>
<g >
<title>do_mem_abort (4,160,312 samples, 0.09%)</title><rect x="331.8" y="773" width="1.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="334.77" y="783.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (1,744,109 samples, 0.04%)</title><rect x="1173.4" y="949" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1176.36" y="959.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::grow (3,900,088 samples, 0.08%)</title><rect x="1134.2" y="789" width="0.9" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1137.18" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2,068,008 samples, 0.04%)</title><rect x="1101.4" y="933" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1104.45" y="943.5" ></text>
</g>
<g >
<title>tt::chat::server::ChannelManager::get_members (217,890,670 samples, 4.56%)</title><rect x="784.0" y="965" width="53.8" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="786.97" y="975.5" >tt::c..</text>
</g>
<g >
<title>____do_softirq (1,965,619 samples, 0.04%)</title><rect x="83.5" y="517" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="86.48" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (7,922,571 samples, 0.17%)</title><rect x="901.7" y="677" width="2.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="904.70" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (36,015,878 samples, 0.75%)</title><rect x="725.1" y="949" width="8.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="728.14" y="959.5" ></text>
</g>
<g >
<title>operator new (2,321,682 samples, 0.05%)</title><rect x="330.7" y="901" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="333.67" y="911.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (1,906,380 samples, 0.04%)</title><rect x="332.8" y="805" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="335.80" y="815.5" ></text>
</g>
<g >
<title>___interceptor_memmove (2,172,457 samples, 0.05%)</title><rect x="333.8" y="917" width="0.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="336.84" y="927.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,319,076 samples, 0.03%)</title><rect x="12.0" y="805" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="14.98" y="815.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (63,291,130 samples, 1.33%)</title><rect x="1079.4" y="901" width="15.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1082.44" y="911.5" ></text>
</g>
<g >
<title>sock_close (4,225,966 samples, 0.09%)</title><rect x="1189.0" y="933" width="1.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1191.96" y="943.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (2,177,585 samples, 0.05%)</title><rect x="721.7" y="917" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="724.71" y="927.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="549" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1080.97" y="559.5" ></text>
</g>
<g >
<title>do_translation_fault (1,253,029 samples, 0.03%)</title><rect x="1078.6" y="837" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1081.56" y="847.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::chrono::__is_duration&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::value, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;::type std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (1,740,724 samples, 0.04%)</title><rect x="1182.1" y="885" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1185.07" y="895.5" ></text>
</g>
<g >
<title>unmap_page_range (4,271,701 samples, 0.09%)</title><rect x="1187.9" y="885" width="1.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1190.90" y="895.5" ></text>
</g>
<g >
<title>tcp_send_mss (6,547,419 samples, 0.14%)</title><rect x="896.2" y="709" width="1.6" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="899.20" y="719.5" ></text>
</g>
<g >
<title>get_random_u16 (9,238,545 samples, 0.19%)</title><rect x="912.9" y="805" width="2.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="915.88" y="815.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (88,722,536 samples, 1.86%)</title><rect x="869.4" y="629" width="21.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="872.40" y="639.5" >_..</text>
</g>
<g >
<title>__asan::asan_memalign (12,661,579 samples, 0.27%)</title><rect x="537.5" y="869" width="3.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="540.51" y="879.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (975,375,381 samples, 20.43%)</title><rect x="837.8" y="965" width="241.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="840.81" y="975.5" >tt::chat::server::EpollServer::s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (98,733,847 samples, 2.07%)</title><rect x="541.6" y="933" width="24.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="544.55" y="943.5" >s..</text>
</g>
<g >
<title>call_on_irq_stack (2,046,963 samples, 0.04%)</title><rect x="125.8" y="821" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="128.83" y="831.5" ></text>
</g>
<g >
<title>__arch_copy_from_user (5,461,186 samples, 0.11%)</title><rect x="864.4" y="693" width="1.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="867.41" y="703.5" ></text>
</g>
<g >
<title>alloc_anon_folio (1,889,471 samples, 0.04%)</title><rect x="12.3" y="693" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="15.31" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,957,476 samples, 0.04%)</title><rect x="1163.0" y="917" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1166.01" y="927.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (2,076,298 samples, 0.04%)</title><rect x="1155.8" y="965" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1158.79" y="975.5" ></text>
</g>
<g >
<title>do_el0_svc (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="757" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1187.01" y="767.5" ></text>
</g>
<g >
<title>__check_object_size (3,402,180 samples, 0.07%)</title><rect x="865.8" y="693" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="868.76" y="703.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2,674,412 samples, 0.06%)</title><rect x="1112.3" y="357" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1115.30" y="367.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,217,991 samples, 0.05%)</title><rect x="1104.0" y="933" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1107.03" y="943.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (7,570,854 samples, 0.16%)</title><rect x="722.2" y="949" width="1.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="725.25" y="959.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (1,491,906 samples, 0.03%)</title><rect x="540.6" y="853" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="543.64" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash (2,275,087 samples, 0.05%)</title><rect x="837.3" y="901" width="0.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="840.25" y="911.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char*, char*&gt; (1,654,651 samples, 0.03%)</title><rect x="1140.6" y="805" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1143.64" y="815.5" ></text>
</g>
<g >
<title>el1h_64_irq_handler (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="789" width="0.6" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1097.46" y="799.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (6,716,244 samples, 0.14%)</title><rect x="82.8" y="837" width="1.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="85.84" y="847.5" ></text>
</g>
<g >
<title>tcp_push (922,384 samples, 0.02%)</title><rect x="851.6" y="725" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="854.65" y="735.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (2,287,011 samples, 0.05%)</title><rect x="1166.3" y="789" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1169.34" y="799.5" ></text>
</g>
<g >
<title>el0_svc (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="773" width="0.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1187.01" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (14,211,257 samples, 0.30%)</title><rect x="1104.0" y="949" width="3.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1107.03" y="959.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (13,771,366 samples, 0.29%)</title><rect x="1156.3" y="981" width="3.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1159.30" y="991.5" ></text>
</g>
<g >
<title>handle_pte_fault (7,512,446 samples, 0.16%)</title><rect x="80.0" y="741" width="1.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="83.02" y="751.5" ></text>
</g>
<g >
<title>____do_softirq (34,305,749 samples, 0.72%)</title><rect x="1083.0" y="469" width="8.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1085.96" y="479.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,812,177 samples, 0.04%)</title><rect x="1181.1" y="869" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1184.06" y="879.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (46,344,413 samples, 0.97%)</title><rect x="1080.9" y="709" width="11.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1083.94" y="719.5" ></text>
</g>
<g >
<title>__inet_lookup_skb (1,965,619 samples, 0.04%)</title><rect x="83.5" y="293" width="0.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="86.48" y="303.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32LocalCache&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt; &gt;::Refill (1,889,471 samples, 0.04%)</title><rect x="12.3" y="933" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="15.31" y="943.5" ></text>
</g>
<g >
<title>vfs_read (54,015,309 samples, 1.13%)</title><rect x="17.9" y="853" width="13.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="20.88" y="863.5" ></text>
</g>
<g >
<title>loopback_xmit (1,245,932 samples, 0.03%)</title><rect x="850.4" y="469" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="853.39" y="479.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="757" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1097.46" y="767.5" ></text>
</g>
<g >
<title>net_rx_action (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="725" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1080.97" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (89,345,378 samples, 1.87%)</title><rect x="441.1" y="933" width="22.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="444.15" y="943.5" >s..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,287,011 samples, 0.05%)</title><rect x="1155.2" y="949" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1158.22" y="959.5" ></text>
</g>
<g >
<title>___interceptor_memcmp (4,066,109 samples, 0.09%)</title><rect x="835.7" y="805" width="1.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="838.75" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2,064,965 samples, 0.04%)</title><rect x="1159.2" y="901" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1162.19" y="911.5" ></text>
</g>
<g >
<title>__sanitizer::UnmapOrDie (1,519,690 samples, 0.03%)</title><rect x="11.6" y="725" width="0.4" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="14.60" y="735.5" ></text>
</g>
<g >
<title>[libfmt.so.9.1.0] (12,675,760 samples, 0.27%)</title><rect x="331.2" y="949" width="3.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="334.25" y="959.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (15,066,428 samples, 0.32%)</title><rect x="1107.5" y="965" width="3.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1110.54" y="975.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (1,734,773 samples, 0.04%)</title><rect x="1174.8" y="869" width="0.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1177.79" y="879.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (2,908,176 samples, 0.06%)</title><rect x="874.3" y="165" width="0.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="877.32" y="175.5" ></text>
</g>
<g >
<title>__sanitizer::Quarantine&lt;__asan::QuarantineCallback, __asan::AsanChunk&gt;::Put (1,993,815 samples, 0.04%)</title><rect x="570.5" y="901" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="573.52" y="911.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (1,519,690 samples, 0.03%)</title><rect x="11.6" y="421" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="14.60" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;&gt; (4,051,409 samples, 0.08%)</title><rect x="1158.7" y="933" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1161.70" y="943.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;::insert (1,633,617 samples, 0.03%)</title><rect x="1101.0" y="965" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1104.04" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (79,030,902 samples, 1.66%)</title><rect x="463.2" y="949" width="19.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="466.23" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (24,196,556 samples, 0.51%)</title><rect x="506.9" y="917" width="6.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="509.89" y="927.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,319,076 samples, 0.03%)</title><rect x="12.0" y="725" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="14.98" y="735.5" ></text>
</g>
<g >
<title>el0t_64_sync (5,810,524 samples, 0.12%)</title><rect x="538.1" y="821" width="1.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="541.08" y="831.5" ></text>
</g>
<g >
<title>___interceptor_memcmp (2,016,215 samples, 0.04%)</title><rect x="220.1" y="933" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="223.06" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,342,351 samples, 0.13%)</title><rect x="1131.0" y="773" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1133.97" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;int&gt;::_M_ptr (1,907,456 samples, 0.04%)</title><rect x="734.0" y="949" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="737.04" y="959.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (104,053,253 samples, 2.18%)</title><rect x="811.0" y="901" width="25.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="814.04" y="911.5" >s..</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (2,177,585 samples, 0.05%)</title><rect x="721.7" y="949" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="724.71" y="959.5" ></text>
</g>
<g >
<title>do_pte_missing (3,276,890 samples, 0.07%)</title><rect x="231.7" y="789" width="0.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="234.75" y="799.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (2,178,872 samples, 0.05%)</title><rect x="720.6" y="821" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="723.63" y="831.5" ></text>
</g>
<g >
<title>lock_sock_nested (3,725,363 samples, 0.08%)</title><rect x="848.4" y="725" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="851.44" y="735.5" ></text>
</g>
<g >
<title>el0t_64_sync (9,137,373 samples, 0.19%)</title><rect x="1111.3" y="917" width="2.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1114.26" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;int, false&gt;::_M_next (2,396,519 samples, 0.05%)</title><rect x="734.5" y="949" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="737.52" y="959.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (2,287,011 samples, 0.05%)</title><rect x="1166.3" y="821" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1169.34" y="831.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,067,612 samples, 0.04%)</title><rect x="1186.8" y="885" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1189.85" y="895.5" ></text>
</g>
<g >
<title>ip_local_deliver (25,812,718 samples, 0.54%)</title><rect x="1084.0" y="309" width="6.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1087.00" y="319.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,052,704 samples, 0.04%)</title><rect x="1154.7" y="965" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1157.71" y="975.5" ></text>
</g>
<g >
<title>__split_vma (1,519,690 samples, 0.03%)</title><rect x="11.6" y="533" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="14.60" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2,397,556 samples, 0.05%)</title><rect x="1105.5" y="917" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1108.52" y="927.5" ></text>
</g>
<g >
<title>rmqueue (6,504,299 samples, 0.14%)</title><rect x="861.8" y="613" width="1.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="864.84" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,816,755 samples, 0.08%)</title><rect x="1162.1" y="949" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.06" y="959.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (3,759,148 samples, 0.08%)</title><rect x="838.9" y="901" width="0.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="841.88" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Insert_base&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::insert (1,633,617 samples, 0.03%)</title><rect x="1101.0" y="949" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1104.04" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (12,015,334 samples, 0.25%)</title><rect x="225.0" y="965" width="3.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="228.00" y="975.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (2,011,818 samples, 0.04%)</title><rect x="902.7" y="661" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="905.69" y="671.5" ></text>
</g>
<g >
<title>do_translation_fault (4,991,456 samples, 0.10%)</title><rect x="231.3" y="869" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="234.33" y="879.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="885" width="0.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1187.01" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,064,965 samples, 0.04%)</title><rect x="1159.2" y="869" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1162.19" y="879.5" ></text>
</g>
<g >
<title>schedule (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="853" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1097.46" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,000,677 samples, 0.04%)</title><rect x="1103.5" y="917" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1106.49" y="927.5" ></text>
</g>
<g >
<title>fmt::v9::vformat[abi:cxx11] (2,172,381 samples, 0.05%)</title><rect x="1103.5" y="965" width="0.5" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1106.49" y="975.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_uses_single_bucket (816,492 samples, 0.02%)</title><rect x="1100.8" y="869" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1103.84" y="879.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (7,170,647 samples, 0.15%)</title><rect x="1111.7" y="741" width="1.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1114.75" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,086,648 samples, 0.04%)</title><rect x="1141.1" y="821" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1144.05" y="831.5" ></text>
</g>
<g >
<title>___interceptor_clock_gettime.part.0 (1,744,109 samples, 0.04%)</title><rect x="1173.4" y="933" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1176.36" y="943.5" ></text>
</g>
<g >
<title>__do_softirq (2,129,583 samples, 0.04%)</title><rect x="590.4" y="773" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="593.36" y="783.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1,245,932 samples, 0.03%)</title><rect x="850.4" y="629" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="853.39" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (90,285,924 samples, 1.89%)</title><rect x="788.7" y="917" width="22.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="791.72" y="927.5" >s..</text>
</g>
<g >
<title>tt::chat::server::ChannelManager::create_channel (816,492 samples, 0.02%)</title><rect x="1100.8" y="981" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1103.84" y="991.5" ></text>
</g>
<g >
<title>__lsan::InitializePlatformSpecificModules (1,889,471 samples, 0.04%)</title><rect x="12.3" y="1061" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="15.31" y="1071.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (2,419,332 samples, 0.05%)</title><rect x="834.1" y="789" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="837.09" y="799.5" ></text>
</g>
<g >
<title>el0_da (1,253,029 samples, 0.03%)</title><rect x="1078.6" y="869" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1081.56" y="879.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (2,008,752 samples, 0.04%)</title><rect x="13.5" y="1013" width="0.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="16.51" y="1023.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,451,646 samples, 0.05%)</title><rect x="1148.0" y="741" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1151.02" y="751.5" ></text>
</g>
<g >
<title>__sock_sendmsg (56,515,024 samples, 1.18%)</title><rect x="1079.4" y="789" width="14.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1082.44" y="799.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (34,305,749 samples, 0.72%)</title><rect x="1083.0" y="549" width="8.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1085.96" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (81,693,039 samples, 1.71%)</title><rect x="738.5" y="949" width="20.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="741.47" y="959.5" ></text>
</g>
<g >
<title>tcp_check_space (1,971,580 samples, 0.04%)</title><rect x="876.0" y="149" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="878.99" y="159.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,958,709 samples, 0.08%)</title><rect x="1152.8" y="869" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1155.76" y="879.5" ></text>
</g>
<g >
<title>tcp_data_queue (17,532,226 samples, 0.37%)</title><rect x="1085.6" y="213" width="4.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1088.60" y="223.5" ></text>
</g>
<g >
<title>do_page_fault (2,626,645 samples, 0.06%)</title><rect x="82.8" y="725" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="85.84" y="735.5" ></text>
</g>
<g >
<title>el0_da (1,591,318 samples, 0.03%)</title><rect x="330.3" y="757" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="333.28" y="767.5" ></text>
</g>
<g >
<title>do_mem_abort (4,991,456 samples, 0.10%)</title><rect x="231.3" y="885" width="1.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="234.33" y="895.5" ></text>
</g>
<g >
<title>____do_softirq (2,046,963 samples, 0.04%)</title><rect x="125.8" y="805" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="128.83" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (3,810,966 samples, 0.08%)</title><rect x="1124.3" y="837" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1127.34" y="847.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_client_data (4,611,650,411 samples, 96.59%)</title><rect x="14.0" y="1029" width="1139.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="17.01" y="1039.5" >tt::chat::server::EpollServer::handle_client_data</text>
</g>
<g >
<title>handle_softirqs (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="597" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1192.48" y="607.5" ></text>
</g>
<g >
<title>security_file_permission (8,501,284 samples, 0.18%)</title><rect x="18.4" y="821" width="2.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="21.41" y="831.5" ></text>
</g>
<g >
<title>ip_rcv_finish (66,678,067 samples, 1.40%)</title><rect x="872.0" y="309" width="16.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="874.98" y="319.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::assign_username (205,340,332 samples, 4.30%)</title><rect x="1103.0" y="981" width="50.7" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1105.99" y="991.5" >tt::c..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32LocalCache&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt; &gt;::Refill (1,519,690 samples, 0.03%)</title><rect x="11.6" y="789" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="14.60" y="799.5" ></text>
</g>
<g >
<title>std::common_type&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::type std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (2,274,708 samples, 0.05%)</title><rect x="1181.5" y="885" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1184.51" y="895.5" ></text>
</g>
<g >
<title>sock_def_readable (13,279,167 samples, 0.28%)</title><rect x="1086.7" y="181" width="3.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1089.65" y="191.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (2,209,766 samples, 0.05%)</title><rect x="1182.5" y="821" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1185.50" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,008,752 samples, 0.04%)</title><rect x="13.5" y="789" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="16.51" y="799.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,263,458 samples, 0.05%)</title><rect x="540.1" y="645" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="543.08" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,807,407 samples, 0.08%)</title><rect x="722.2" y="917" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="725.25" y="927.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (4,643,792 samples, 0.10%)</title><rect x="1139.5" y="757" width="1.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1142.50" y="767.5" ></text>
</g>
<g >
<title>el0_svc (9,137,373 samples, 0.19%)</title><rect x="1111.3" y="885" width="2.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1114.26" y="895.5" ></text>
</g>
<g >
<title>fmt::v9::detail::count_digits (2,123,083 samples, 0.04%)</title><rect x="1116.6" y="853" width="0.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1119.60" y="863.5" ></text>
</g>
<g >
<title>tcp_data_ready (13,279,167 samples, 0.28%)</title><rect x="1086.7" y="197" width="3.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1089.65" y="207.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (95,401,363 samples, 2.00%)</title><rect x="483.3" y="933" width="23.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="486.31" y="943.5" >_..</text>
</g>
<g >
<title>el0t_64_sync (63,291,130 samples, 1.33%)</title><rect x="1079.4" y="917" width="15.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1082.44" y="927.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="661" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1080.97" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,079,325 samples, 0.04%)</title><rect x="1180.6" y="885" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1183.55" y="895.5" ></text>
</g>
<g >
<title>mod_timer (2,320,377 samples, 0.05%)</title><rect x="894.3" y="597" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="897.31" y="607.5" ></text>
</g>
<g >
<title>__sanitizer::MmapFixedImpl (1,906,380 samples, 0.04%)</title><rect x="332.8" y="773" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="335.80" y="783.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,263,458 samples, 0.05%)</title><rect x="540.1" y="629" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="543.08" y="639.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (1,769,176 samples, 0.04%)</title><rect x="851.2" y="725" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="854.21" y="735.5" ></text>
</g>
<g >
<title>do_el0_svc (1,020,628 samples, 0.02%)</title><rect x="13.3" y="965" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="16.26" y="975.5" ></text>
</g>
<g >
<title>__sanitizer::dl_iterate_phdr_cb (1,889,471 samples, 0.04%)</title><rect x="12.3" y="1013" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="15.31" y="1023.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,104,045 samples, 0.04%)</title><rect x="1152.2" y="885" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1155.24" y="895.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2,102,695 samples, 0.04%)</title><rect x="81.9" y="869" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="84.88" y="879.5" ></text>
</g>
<g >
<title>ip_local_deliver (2,674,412 samples, 0.06%)</title><rect x="1112.3" y="309" width="0.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1115.30" y="319.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,033,765 samples, 0.04%)</title><rect x="1174.3" y="901" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1177.29" y="911.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (259,140,288 samples, 5.43%)</title><rect x="657.7" y="949" width="64.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="660.66" y="959.5" >std::_H..</text>
</g>
<g >
<title>___interceptor_memcpy (1,091,755 samples, 0.02%)</title><rect x="436.7" y="901" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="439.67" y="911.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,728,807 samples, 0.06%)</title><rect x="10.0" y="1045" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (89,345,378 samples, 1.87%)</title><rect x="441.1" y="901" width="22.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="444.15" y="911.5" >_..</text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (10,506,771 samples, 0.22%)</title><rect x="1117.6" y="869" width="2.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1120.62" y="879.5" ></text>
</g>
<g >
<title>iterate_tty_write (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="549" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1153.69" y="559.5" ></text>
</g>
<g >
<title>__napi_poll (2,398,268 samples, 0.05%)</title><rect x="657.1" y="693" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="660.07" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (816,492 samples, 0.02%)</title><rect x="1100.8" y="917" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1103.84" y="927.5" ></text>
</g>
<g >
<title>do_pte_missing (2,103,209 samples, 0.04%)</title><rect x="539.0" y="677" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="542.00" y="687.5" ></text>
</g>
<g >
<title>spdlog::details::short_filename_formatter&lt;spdlog::details::null_scoped_padder&gt;::basename (2,079,325 samples, 0.04%)</title><rect x="1180.6" y="901" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1183.55" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (2,076,298 samples, 0.04%)</title><rect x="1155.8" y="949" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1158.79" y="959.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,591,318 samples, 0.03%)</title><rect x="330.3" y="789" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="333.28" y="799.5" ></text>
</g>
<g >
<title>do_softirq (72,842,686 samples, 1.53%)</title><rect x="870.5" y="501" width="18.0" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="873.45" y="511.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (2,154,353 samples, 0.05%)</title><rect x="1079.4" y="661" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1082.44" y="671.5" ></text>
</g>
<g >
<title>ip_finish_output2 (36,112,430 samples, 0.76%)</title><rect x="1082.5" y="581" width="8.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1085.51" y="591.5" ></text>
</g>
<g >
<title>el0t_64_sync (64,499,301 samples, 1.35%)</title><rect x="15.3" y="981" width="15.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="18.29" y="991.5" ></text>
</g>
<g >
<title>__release_sock (5,194,715 samples, 0.11%)</title><rect x="849.9" y="709" width="1.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="852.93" y="719.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (2,129,583 samples, 0.04%)</title><rect x="590.4" y="901" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="593.36" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,163,569 samples, 0.05%)</title><rect x="1165.3" y="853" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1168.33" y="863.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (6,622,470 samples, 0.14%)</title><rect x="1132.5" y="741" width="1.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1135.54" y="751.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (2,177,585 samples, 0.05%)</title><rect x="721.7" y="933" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="724.71" y="943.5" ></text>
</g>
<g >
<title>std::common_type&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::type std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1,936,974 samples, 0.04%)</title><rect x="1147.0" y="837" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1150.00" y="847.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2,674,412 samples, 0.06%)</title><rect x="1112.3" y="229" width="0.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1115.30" y="239.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (8,185,592 samples, 0.17%)</title><rect x="331.2" y="869" width="2.1" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="334.25" y="879.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,889,471 samples, 0.04%)</title><rect x="12.3" y="869" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="15.31" y="879.5" ></text>
</g>
<g >
<title>tcp_cleanup_rbuf (2,263,779 samples, 0.05%)</title><rect x="29.6" y="757" width="0.6" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="32.64" y="767.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (60,790,759 samples, 1.27%)</title><rect x="16.2" y="917" width="15.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="19.20" y="927.5" ></text>
</g>
<g >
<title>__mod_timer (1,950,733 samples, 0.04%)</title><rect x="1091.9" y="597" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1094.92" y="607.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (1,654,651 samples, 0.03%)</title><rect x="1140.6" y="789" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1143.64" y="799.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::default_arg_formatter&lt;char&gt;::operator (18,765,872 samples, 0.39%)</title><rect x="1115.6" y="885" width="4.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1118.58" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,927,406 samples, 0.08%)</title><rect x="1156.3" y="949" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1159.30" y="959.5" ></text>
</g>
<g >
<title>_IO_file_overflow (4,065,866 samples, 0.09%)</title><rect x="1150.2" y="805" width="1.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1153.20" y="815.5" ></text>
</g>
<g >
<title>ma_free_rcu (1,519,690 samples, 0.03%)</title><rect x="11.6" y="453" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.60" y="463.5" ></text>
</g>
<g >
<title>write (4,182,325 samples, 0.09%)</title><rect x="1151.2" y="773" width="1.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1154.21" y="783.5" ></text>
</g>
<g >
<title>exit_mm (8,538,267 samples, 0.18%)</title><rect x="1186.8" y="981" width="2.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1189.85" y="991.5" ></text>
</g>
<g >
<title>el0_svc (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="693" width="0.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1153.69" y="703.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (13,279,167 samples, 0.28%)</title><rect x="1086.7" y="165" width="3.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1089.65" y="175.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="533" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1080.97" y="543.5" ></text>
</g>
<g >
<title>mod_timer (1,950,733 samples, 0.04%)</title><rect x="1091.9" y="613" width="0.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1094.92" y="623.5" ></text>
</g>
<g >
<title>do_el0_svc (4,089,599 samples, 0.09%)</title><rect x="83.5" y="741" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="86.48" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (102,395,300 samples, 2.14%)</title><rect x="758.7" y="933" width="25.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="761.66" y="943.5" >_..</text>
</g>
<g >
<title>[libc.so.6] (2,626,645 samples, 0.06%)</title><rect x="82.8" y="821" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="85.84" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (2,172,381 samples, 0.05%)</title><rect x="1103.5" y="933" width="0.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1106.49" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,977,832 samples, 0.04%)</title><rect x="1135.1" y="837" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1138.14" y="847.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,633,617 samples, 0.03%)</title><rect x="1101.0" y="837" width="0.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1104.04" y="847.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (17,282,381 samples, 0.36%)</title><rect x="326.4" y="901" width="4.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="329.40" y="911.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1,537,026 samples, 0.03%)</title><rect x="305.3" y="645" width="0.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="308.27" y="655.5" ></text>
</g>
<g >
<title>call_on_irq_stack (1,537,026 samples, 0.03%)</title><rect x="305.3" y="805" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="308.27" y="815.5" ></text>
</g>
<g >
<title>__sys_sendto (58,545,339 samples, 1.23%)</title><rect x="1079.4" y="805" width="14.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1082.44" y="815.5" ></text>
</g>
<g >
<title>ip_local_deliver (2,398,268 samples, 0.05%)</title><rect x="657.1" y="597" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="660.07" y="607.5" ></text>
</g>
<g >
<title>void spdlog::logger::log&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (162,733,200 samples, 3.41%)</title><rect x="1113.5" y="965" width="40.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1116.52" y="975.5" >voi..</text>
</g>
<g >
<title>tcp_sendmsg (56,515,024 samples, 1.18%)</title><rect x="1079.4" y="757" width="14.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1082.44" y="767.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,633,617 samples, 0.03%)</title><rect x="1101.0" y="853" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1104.04" y="863.5" ></text>
</g>
<g >
<title>alloc_anon_folio (1,951,033 samples, 0.04%)</title><rect x="81.4" y="693" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="84.40" y="703.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (4,643,792 samples, 0.10%)</title><rect x="1139.5" y="789" width="1.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1142.50" y="799.5" ></text>
</g>
<g >
<title>spdlog::details::full_formatter::format (35,554,315 samples, 0.74%)</title><rect x="1175.2" y="917" width="8.8" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1178.22" y="927.5" ></text>
</g>
<g >
<title>___interceptor_fwrite.part.0 (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="917" width="0.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1187.01" y="927.5" ></text>
</g>
<g >
<title>__cond_resched (1,722,970 samples, 0.04%)</title><rect x="1092.4" y="677" width="0.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1095.40" y="687.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (1,319,076 samples, 0.03%)</title><rect x="12.0" y="613" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="14.98" y="623.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;, __sanitizer::LargeMmapAllocatorPtrArrayStatic&gt;::Allocate (3,258,095 samples, 0.07%)</title><rect x="11.2" y="853" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="14.17" y="863.5" ></text>
</g>
<g >
<title>pthread_getspecific (1,491,906 samples, 0.03%)</title><rect x="540.6" y="837" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="543.64" y="847.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (270,214,067 samples, 5.66%)</title><rect x="590.9" y="949" width="66.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="593.88" y="959.5" >std::_H..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,957,476 samples, 0.04%)</title><rect x="1163.0" y="933" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1166.01" y="943.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator[] (217,890,670 samples, 4.56%)</title><rect x="784.0" y="949" width="53.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="786.97" y="959.5" >std::..</text>
</g>
<g >
<title>process_backlog (2,674,412 samples, 0.06%)</title><rect x="1112.3" y="389" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1115.30" y="399.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (2,142,365 samples, 0.04%)</title><rect x="23.8" y="677" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="26.80" y="687.5" ></text>
</g>
<g >
<title>skb_free_head (2,234,153 samples, 0.05%)</title><rect x="1090.9" y="373" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1093.88" y="383.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2,398,268 samples, 0.05%)</title><rect x="657.1" y="613" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="660.07" y="623.5" ></text>
</g>
<g >
<title>ip_finish_output (1,245,932 samples, 0.03%)</title><rect x="850.4" y="565" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="853.39" y="575.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (19,123,911 samples, 0.40%)</title><rect x="907.0" y="773" width="4.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="909.96" y="783.5" ></text>
</g>
<g >
<title>___interceptor_malloc (4,577,171 samples, 0.10%)</title><rect x="11.2" y="885" width="1.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="14.17" y="895.5" ></text>
</g>
<g >
<title>__run_timers (2,178,872 samples, 0.05%)</title><rect x="720.6" y="661" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="723.63" y="671.5" ></text>
</g>
<g >
<title>____do_softirq (1,537,026 samples, 0.03%)</title><rect x="305.3" y="789" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="308.27" y="799.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1,537,026 samples, 0.03%)</title><rect x="305.3" y="565" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="308.27" y="575.5" ></text>
</g>
<g >
<title>sk_reset_timer (1,818,047 samples, 0.04%)</title><rect x="894.9" y="645" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="897.89" y="655.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (162,733,200 samples, 3.41%)</title><rect x="1113.5" y="949" width="40.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1116.52" y="959.5" >voi..</text>
</g>
<g >
<title>ip_queue_xmit (1,017,341 samples, 0.02%)</title><rect x="874.8" y="133" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="877.79" y="143.5" ></text>
</g>
<g >
<title>rw_verify_area (2,384,361 samples, 0.05%)</title><rect x="17.3" y="853" width="0.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="20.29" y="863.5" ></text>
</g>
<g >
<title>call_on_irq_stack (1,965,619 samples, 0.04%)</title><rect x="83.5" y="533" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="86.48" y="543.5" ></text>
</g>
<g >
<title>process_backlog (2,398,268 samples, 0.05%)</title><rect x="657.1" y="677" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="660.07" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,838,117 samples, 0.04%)</title><rect x="723.7" y="837" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="726.66" y="847.5" ></text>
</g>
<g >
<title>ip_output (88,722,536 samples, 1.86%)</title><rect x="869.4" y="613" width="21.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="872.40" y="623.5" >i..</text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,711,887 samples, 0.04%)</title><rect x="1134.7" y="725" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1137.72" y="735.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (39,951,930 samples, 0.84%)</title><rect x="1163.5" y="965" width="9.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1166.49" y="975.5" ></text>
</g>
<g >
<title>el0_da (2,207,475 samples, 0.05%)</title><rect x="329.2" y="821" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="332.16" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (17,030,180 samples, 0.36%)</title><rect x="436.9" y="949" width="4.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="439.94" y="959.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::base_iterator&lt;fmt::v9::appender&gt; (1,899,117 samples, 0.04%)</title><rect x="1167.9" y="917" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1170.87" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,740,724 samples, 0.04%)</title><rect x="1182.1" y="853" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1185.07" y="863.5" ></text>
</g>
<g >
<title>std::locale::_Impl::_Impl (2,018,823 samples, 0.04%)</title><rect x="10.7" y="997" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="13.68" y="1007.5" ></text>
</g>
<g >
<title>handle_softirqs (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="741" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1080.97" y="751.5" ></text>
</g>
<g >
<title>tcp_data_queue (8,201,784 samples, 0.17%)</title><rect x="879.3" y="197" width="2.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="882.30" y="207.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3@plt (4,057,274 samples, 0.08%)</title><rect x="228.0" y="981" width="1.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="230.97" y="991.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (99,697,926 samples, 2.09%)</title><rect x="512.9" y="885" width="24.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="515.87" y="895.5" >_..</text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,761,564 samples, 0.04%)</title><rect x="1164.0" y="901" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1166.99" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_5 (3,463,082 samples, 0.07%)</title><rect x="31.2" y="1013" width="0.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="34.23" y="1023.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,949,906 samples, 0.19%)</title><rect x="1169.7" y="885" width="2.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1172.72" y="895.5" ></text>
</g>
<g >
<title>put_cpu_partial (2,142,365 samples, 0.04%)</title><rect x="23.8" y="693" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="26.80" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (164,824,535 samples, 3.45%)</title><rect x="85.6" y="965" width="40.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="88.60" y="975.5" >__a..</text>
</g>
<g >
<title>__ip_finish_output (36,112,430 samples, 0.76%)</title><rect x="1082.5" y="597" width="8.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1085.51" y="607.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (7,265,736 samples, 0.15%)</title><rect x="1178.8" y="789" width="1.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1181.75" y="799.5" ></text>
</g>
<g >
<title>el0_interrupt (2,046,963 samples, 0.04%)</title><rect x="125.8" y="885" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="128.83" y="895.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1,965,619 samples, 0.04%)</title><rect x="83.5" y="405" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="86.48" y="415.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="805" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1080.97" y="815.5" ></text>
</g>
<g >
<title>net_rx_action (70,542,273 samples, 1.48%)</title><rect x="871.0" y="405" width="17.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="874.02" y="415.5" ></text>
</g>
<g >
<title>__slab_free (2,142,365 samples, 0.04%)</title><rect x="23.8" y="709" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="26.80" y="719.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (313,083,938 samples, 6.56%)</title><rect x="838.3" y="933" width="77.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="841.28" y="943.5" >___inter..</text>
</g>
<g >
<title>do_translation_fault (1,944,063 samples, 0.04%)</title><rect x="1107.5" y="821" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1110.54" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1,091,755 samples, 0.02%)</title><rect x="436.7" y="933" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="439.67" y="943.5" ></text>
</g>
<g >
<title>ip_rcv (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="645" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1080.97" y="655.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;::try_reserve (2,108,069 samples, 0.04%)</title><rect x="1145.9" y="821" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1148.90" y="831.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,577,171 samples, 0.10%)</title><rect x="11.2" y="997" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.17" y="1007.5" ></text>
</g>
<g >
<title>_IO_file_close_it (2,008,752 samples, 0.04%)</title><rect x="13.5" y="837" width="0.5" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="16.51" y="847.5" ></text>
</g>
<g >
<title>__vm_munmap (1,519,690 samples, 0.03%)</title><rect x="11.6" y="581" width="0.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="14.60" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,833,652 samples, 0.08%)</title><rect x="1104.6" y="901" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1107.58" y="911.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::begin (2,225,383 samples, 0.05%)</title><rect x="1184.9" y="949" width="0.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1187.87" y="959.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (259,140,288 samples, 5.43%)</title><rect x="657.7" y="933" width="64.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="660.66" y="943.5" >std::_H..</text>
</g>
<g >
<title>ip_local_deliver_finish (2,674,412 samples, 0.06%)</title><rect x="1112.3" y="293" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1115.30" y="303.5" ></text>
</g>
<g >
<title>sock_def_readable (26,697,587 samples, 0.56%)</title><rect x="881.3" y="181" width="6.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="884.33" y="191.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,995,299 samples, 0.04%)</title><rect x="1117.1" y="821" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1120.13" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (89,345,378 samples, 1.87%)</title><rect x="441.1" y="917" width="22.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="444.15" y="927.5" >_..</text>
</g>
<g >
<title>__do_softirq (70,542,273 samples, 1.48%)</title><rect x="871.0" y="437" width="17.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="874.02" y="447.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (95,696,391 samples, 2.00%)</title><rect x="811.0" y="837" width="23.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="814.04" y="847.5" >_..</text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,711,887 samples, 0.04%)</title><rect x="1134.7" y="709" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1137.72" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (81,693,039 samples, 1.71%)</title><rect x="738.5" y="933" width="20.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="741.47" y="943.5" ></text>
</g>
<g >
<title>ip_rcv (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="565" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1097.46" y="575.5" ></text>
</g>
<g >
<title>__fdget_pos (4,391,089 samples, 0.09%)</title><rect x="16.2" y="869" width="1.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="19.20" y="879.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (1,812,100 samples, 0.04%)</title><rect x="78.7" y="901" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="81.68" y="911.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (17,465,422 samples, 0.37%)</title><rect x="25.3" y="725" width="4.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="28.33" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,111,590 samples, 0.04%)</title><rect x="1148.6" y="789" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1151.62" y="799.5" ></text>
</g>
<g >
<title>do_notify_resume (2,419,332 samples, 0.05%)</title><rect x="834.1" y="757" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="837.09" y="767.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4,135,998 samples, 0.09%)</title><rect x="326.8" y="741" width="1.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="329.84" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,113,784 samples, 0.17%)</title><rect x="1175.2" y="869" width="2.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1178.22" y="879.5" ></text>
</g>
<g >
<title>_IO_do_write (4,182,325 samples, 0.09%)</title><rect x="1151.2" y="821" width="1.0" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1154.21" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (19,250,609 samples, 0.40%)</title><rect x="784.0" y="917" width="4.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="786.97" y="927.5" ></text>
</g>
<g >
<title>__alloc_pages (24,223,649 samples, 0.51%)</title><rect x="858.4" y="645" width="6.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="861.43" y="655.5" ></text>
</g>
<g >
<title>do_translation_fault (1,591,318 samples, 0.03%)</title><rect x="330.3" y="725" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="333.28" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (164,824,535 samples, 3.45%)</title><rect x="85.6" y="949" width="40.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="88.60" y="959.5" >__a..</text>
</g>
<g >
<title>ksys_write (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="693" width="0.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1187.01" y="703.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,959,682 samples, 0.04%)</title><rect x="231.7" y="725" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="234.75" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,986,444 samples, 0.04%)</title><rect x="1158.7" y="917" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1161.70" y="927.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (6,582,220 samples, 0.14%)</title><rect x="1118.6" y="853" width="1.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1121.59" y="863.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (1,733,950 samples, 0.04%)</title><rect x="328.7" y="853" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="331.73" y="863.5" ></text>
</g>
<g >
<title>bool std::chrono::operator==&lt;long, std::ratio&lt;1l, 1l&gt;, long, std::ratio&lt;1l, 1l&gt; &gt; (2,086,648 samples, 0.04%)</title><rect x="1141.1" y="853" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1144.05" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (19,250,609 samples, 0.40%)</title><rect x="784.0" y="901" width="4.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="786.97" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (98,733,847 samples, 2.07%)</title><rect x="541.6" y="917" width="24.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="544.55" y="927.5" >_..</text>
</g>
<g >
<title>__tcp_push_pending_frames (2,139,176 samples, 0.04%)</title><rect x="1084.6" y="213" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1087.56" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (95,421,536 samples, 2.00%)</title><rect x="307.7" y="949" width="23.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="310.66" y="959.5" >s..</text>
</g>
<g >
<title>handle_pte_fault (4,160,312 samples, 0.09%)</title><rect x="331.8" y="693" width="1.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="334.77" y="703.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (2,108,069 samples, 0.04%)</title><rect x="1145.9" y="773" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1148.90" y="783.5" ></text>
</g>
<g >
<title>operator new (16,373,827 samples, 0.34%)</title><rect x="537.5" y="885" width="4.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="540.51" y="895.5" ></text>
</g>
<g >
<title>fmt::v9::detail::parse_format_string&lt;false, char, fmt::v9::detail::vformat_to&lt;char&gt; (58,032,451 samples, 1.22%)</title><rect x="1121.3" y="901" width="14.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1124.29" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,622,470 samples, 0.14%)</title><rect x="1132.5" y="709" width="1.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1135.54" y="719.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="709" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1192.48" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,350,150 samples, 0.05%)</title><rect x="381.8" y="965" width="0.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="384.75" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (14,905,341 samples, 0.31%)</title><rect x="224.3" y="981" width="3.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="227.28" y="991.5" ></text>
</g>
<g >
<title>operator delete (13,032,938 samples, 0.27%)</title><rect x="567.8" y="917" width="3.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="570.79" y="927.5" ></text>
</g>
<g >
<title>check_heap_object (7,017,925 samples, 0.15%)</title><rect x="27.5" y="677" width="1.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="30.45" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (90,285,924 samples, 1.89%)</title><rect x="788.7" y="901" width="22.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="791.72" y="911.5" >s..</text>
</g>
<g >
<title>ip_output (36,112,430 samples, 0.76%)</title><rect x="1082.5" y="629" width="8.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1085.51" y="639.5" ></text>
</g>
<g >
<title>do_translation_fault (1,253,029 samples, 0.03%)</title><rect x="31.8" y="917" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="34.77" y="927.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (10,416,180 samples, 0.22%)</title><rect x="1108.0" y="933" width="2.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1111.02" y="943.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::end (3,909,937 samples, 0.08%)</title><rect x="1185.4" y="949" width="1.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1188.42" y="959.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;int, false&gt;::_M_next (5,698,239 samples, 0.12%)</title><rect x="736.0" y="933" width="1.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="739.04" y="943.5" ></text>
</g>
<g >
<title>do_mem_abort (1,889,471 samples, 0.04%)</title><rect x="12.3" y="821" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="15.31" y="831.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (1,566,124 samples, 0.03%)</title><rect x="1137.0" y="933" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1140.00" y="943.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (81,126,992 samples, 1.70%)</title><rect x="1115.6" y="917" width="20.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1118.58" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,281,501 samples, 0.09%)</title><rect x="1149.1" y="853" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1152.14" y="863.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (1,711,887 samples, 0.04%)</title><rect x="1134.7" y="741" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1137.72" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync (6,230,760 samples, 0.13%)</title><rect x="326.8" y="853" width="1.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="329.84" y="863.5" ></text>
</g>
<g >
<title>[libfmt.so.9.1.0] (8,185,592 samples, 0.17%)</title><rect x="331.2" y="901" width="2.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="334.25" y="911.5" ></text>
</g>
<g >
<title>memblock_is_map_memory (1,456,961 samples, 0.03%)</title><rect x="866.2" y="645" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="869.24" y="655.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (1,906,380 samples, 0.04%)</title><rect x="332.8" y="757" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="335.80" y="767.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (12,675,760 samples, 0.27%)</title><rect x="331.2" y="965" width="3.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="334.25" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,927,406 samples, 0.08%)</title><rect x="1156.3" y="933" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1159.30" y="943.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::get_buffer&lt;char&gt; (5,774,231 samples, 0.12%)</title><rect x="1162.1" y="965" width="1.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1165.06" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,125,743 samples, 0.04%)</title><rect x="1114.1" y="885" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1117.06" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,274,708 samples, 0.05%)</title><rect x="1181.5" y="853" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1184.51" y="863.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (1,591,318 samples, 0.03%)</title><rect x="330.3" y="821" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="333.28" y="831.5" ></text>
</g>
<g >
<title>do_el0_svc (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="677" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1153.69" y="687.5" ></text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;int&amp;&gt;::type&gt;::type, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1,516,970 samples, 0.03%)</title><rect x="1136.6" y="933" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1139.63" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,847,397 samples, 0.04%)</title><rect x="1164.9" y="869" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1167.87" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (368,559,652 samples, 7.72%)</title><rect x="128.4" y="965" width="91.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="131.39" y="975.5" >__asan_sta..</text>
</g>
<g >
<title>__release_sock (4,213,573 samples, 0.09%)</title><rect x="1079.4" y="725" width="1.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1082.44" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,397,556 samples, 0.05%)</title><rect x="1105.5" y="869" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1108.52" y="879.5" ></text>
</g>
<g >
<title>vma_prepare (2,123,980 samples, 0.04%)</title><rect x="84.0" y="597" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="86.97" y="607.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1,537,026 samples, 0.03%)</title><rect x="305.3" y="821" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="308.27" y="831.5" ></text>
</g>
<g >
<title>ip_rcv (2,398,268 samples, 0.05%)</title><rect x="657.1" y="629" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="660.07" y="639.5" ></text>
</g>
<g >
<title>__fget_light (2,030,315 samples, 0.04%)</title><rect x="1093.4" y="757" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1096.41" y="767.5" ></text>
</g>
<g >
<title>__folio_throttle_swaprate (1,962,555 samples, 0.04%)</title><rect x="80.0" y="693" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="83.02" y="703.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,906,380 samples, 0.04%)</title><rect x="332.8" y="725" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="335.80" y="735.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (34,305,749 samples, 0.72%)</title><rect x="1083.0" y="501" width="8.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1085.96" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,336,771 samples, 0.05%)</title><rect x="566.0" y="885" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="568.96" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,566,124 samples, 0.03%)</title><rect x="1137.0" y="901" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1140.00" y="911.5" ></text>
</g>
<g >
<title>tcp_write_xmit (5,833,971 samples, 0.12%)</title><rect x="875.0" y="181" width="1.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="878.04" y="191.5" ></text>
</g>
<g >
<title>schedule (2,419,332 samples, 0.05%)</title><rect x="834.1" y="741" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="837.09" y="751.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (1,319,076 samples, 0.03%)</title><rect x="12.0" y="645" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="14.98" y="655.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,253,029 samples, 0.03%)</title><rect x="31.8" y="853" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="34.77" y="863.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="885" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1080.97" y="895.5" ></text>
</g>
<g >
<title>dl_iterate_phdr (1,889,471 samples, 0.04%)</title><rect x="12.3" y="1029" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="15.31" y="1039.5" ></text>
</g>
<g >
<title>process_backlog (30,024,004 samples, 0.63%)</title><rect x="1083.0" y="389" width="7.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1085.96" y="399.5" ></text>
</g>
<g >
<title>__sys_sendto (9,137,373 samples, 0.19%)</title><rect x="1111.3" y="805" width="2.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1114.26" y="815.5" ></text>
</g>
<g >
<title>do_el0_svc (1,906,380 samples, 0.04%)</title><rect x="332.8" y="693" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="335.80" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_5@plt (1,651,246 samples, 0.03%)</title><rect x="32.1" y="1013" width="0.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="35.08" y="1023.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,003,147 samples, 0.04%)</title><rect x="84.5" y="917" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="87.50" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,821,250 samples, 0.04%)</title><rect x="1164.4" y="869" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1167.42" y="879.5" ></text>
</g>
<g >
<title>__zone_watermark_ok (4,366,393 samples, 0.09%)</title><rect x="860.8" y="613" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="863.76" y="623.5" ></text>
</g>
<g >
<title>__arm64_sys_mmap (4,089,599 samples, 0.09%)</title><rect x="83.5" y="693" width="1.0" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="86.48" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,209,766 samples, 0.05%)</title><rect x="1182.5" y="773" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1185.50" y="783.5" ></text>
</g>
<g >
<title>locks_remove_posix (2,008,752 samples, 0.04%)</title><rect x="13.5" y="677" width="0.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="16.51" y="687.5" ></text>
</g>
<g >
<title>release_sock (1,966,726 samples, 0.04%)</title><rect x="1111.3" y="741" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1114.26" y="751.5" ></text>
</g>
<g >
<title>____do_softirq (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="773" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1080.97" y="783.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1,253,029 samples, 0.03%)</title><rect x="31.8" y="757" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="34.77" y="767.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (1,537,026 samples, 0.03%)</title><rect x="305.3" y="837" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="308.27" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,838,117 samples, 0.04%)</title><rect x="723.7" y="821" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="726.66" y="831.5" ></text>
</g>
<g >
<title>n_tty_write (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="533" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1153.69" y="543.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (9,358,850 samples, 0.20%)</title><rect x="1143.6" y="757" width="2.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1146.59" y="767.5" ></text>
</g>
<g >
<title>do_translation_fault (2,626,645 samples, 0.06%)</title><rect x="82.8" y="741" width="0.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="85.84" y="751.5" ></text>
</g>
<g >
<title>InitializeCommonInterceptors (4,577,171 samples, 0.10%)</title><rect x="11.2" y="1045" width="1.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="14.17" y="1055.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,207,475 samples, 0.05%)</title><rect x="329.2" y="837" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="332.16" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,125,743 samples, 0.04%)</title><rect x="1114.1" y="901" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1117.06" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (14,993,650 samples, 0.31%)</title><rect x="1125.3" y="837" width="3.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1128.29" y="847.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,889,471 samples, 0.04%)</title><rect x="12.3" y="853" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="15.31" y="863.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1,906,380 samples, 0.04%)</title><rect x="332.8" y="613" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="335.80" y="623.5" ></text>
</g>
<g >
<title>tcp_ack (2,398,268 samples, 0.05%)</title><rect x="657.1" y="501" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="660.07" y="511.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1,245,932 samples, 0.03%)</title><rect x="850.4" y="597" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="853.39" y="607.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,103,209 samples, 0.04%)</title><rect x="539.0" y="709" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="542.00" y="719.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2,398,268 samples, 0.05%)</title><rect x="657.1" y="565" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="660.07" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,516,970 samples, 0.03%)</title><rect x="1136.6" y="885" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1139.63" y="895.5" ></text>
</g>
<g >
<title>pte_offset_map_nolock (1,933,804 samples, 0.04%)</title><rect x="327.4" y="709" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="330.39" y="719.5" ></text>
</g>
<g >
<title>handle_mm_fault (4,991,456 samples, 0.10%)</title><rect x="231.3" y="837" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="234.33" y="847.5" ></text>
</g>
<g >
<title>__ip_finish_output (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="757" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1192.48" y="767.5" ></text>
</g>
<g >
<title>__inet_lookup_established (2,191,662 samples, 0.05%)</title><rect x="872.9" y="213" width="0.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="875.89" y="223.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2,139,176 samples, 0.04%)</title><rect x="1084.6" y="165" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1087.56" y="175.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,629,003 samples, 0.08%)</title><rect x="1130.1" y="821" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1133.08" y="831.5" ></text>
</g>
<g >
<title>__alloc_pages (1,951,033 samples, 0.04%)</title><rect x="81.4" y="629" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="84.40" y="639.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (26,697,587 samples, 0.56%)</title><rect x="881.3" y="165" width="6.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="884.33" y="175.5" ></text>
</g>
<g >
<title>spdlog::logger::log (2,008,752 samples, 0.04%)</title><rect x="13.5" y="1029" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="16.51" y="1039.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,168,160 samples, 0.05%)</title><rect x="1147.5" y="805" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1150.48" y="815.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1,951,033 samples, 0.04%)</title><rect x="81.4" y="645" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="84.40" y="655.5" ></text>
</g>
<g >
<title>cubictcp_cwnd_event (1,943,922 samples, 0.04%)</title><rect x="1091.4" y="677" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1094.43" y="687.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (8,233,843 samples, 0.17%)</title><rect x="1164.9" y="901" width="2.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1167.87" y="911.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (58,545,339 samples, 1.23%)</title><rect x="1079.4" y="821" width="14.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1082.44" y="831.5" ></text>
</g>
<g >
<title>process_output_block (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="517" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1153.69" y="527.5" ></text>
</g>
<g >
<title>__arm64_sys_close (2,008,752 samples, 0.04%)</title><rect x="13.5" y="709" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="16.51" y="719.5" ></text>
</g>
<g >
<title>task_work_run (4,225,966 samples, 0.09%)</title><rect x="1189.0" y="981" width="1.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1191.96" y="991.5" ></text>
</g>
<g >
<title>el0t_64_irq (2,046,963 samples, 0.04%)</title><rect x="125.8" y="933" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="128.83" y="943.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (24,877,095 samples, 0.52%)</title><rect x="1129.0" y="853" width="6.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1131.99" y="863.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (2,008,752 samples, 0.04%)</title><rect x="13.5" y="997" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="16.51" y="1007.5" ></text>
</g>
<g >
<title>___interceptor_localtime_r (2,008,752 samples, 0.04%)</title><rect x="13.5" y="917" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="16.51" y="927.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1,245,932 samples, 0.03%)</title><rect x="850.4" y="661" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="853.39" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,177,585 samples, 0.05%)</title><rect x="721.7" y="869" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="724.71" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;int, true, false&gt;::operator++ (11,872,437 samples, 0.25%)</title><rect x="734.5" y="965" width="2.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="737.52" y="975.5" ></text>
</g>
<g >
<title>do_el0_svc (2,008,752 samples, 0.04%)</title><rect x="13.5" y="757" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="16.51" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,188,201 samples, 0.05%)</title><rect x="1134.2" y="709" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1137.18" y="719.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (7,170,647 samples, 0.15%)</title><rect x="1111.7" y="709" width="1.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1114.75" y="719.5" ></text>
</g>
<g >
<title>decltype  (3,763,447 samples, 0.08%)</title><rect x="723.2" y="917" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="726.19" y="927.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_key_equals (2,076,298 samples, 0.04%)</title><rect x="1155.8" y="933" width="0.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1158.79" y="943.5" ></text>
</g>
<g >
<title>el0t_64_irq (2,129,583 samples, 0.04%)</title><rect x="590.4" y="917" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="593.36" y="927.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;tt::chat::server::ChannelManager, std::default_delete&lt;tt::chat::server::ChannelManager&gt; &gt;::get (2,001,536 samples, 0.04%)</title><rect x="737.4" y="933" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="740.45" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,088,918 samples, 0.04%)</title><rect x="1117.6" y="837" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1120.62" y="847.5" ></text>
</g>
<g >
<title>__vm_area_free (2,067,612 samples, 0.04%)</title><rect x="1186.8" y="901" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.85" y="911.5" ></text>
</g>
<g >
<title>ksys_write (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="613" width="0.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1153.69" y="623.5" ></text>
</g>
<g >
<title>__schedule (1,854,894 samples, 0.04%)</title><rect x="849.9" y="677" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="852.93" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,111,590 samples, 0.04%)</title><rect x="1148.6" y="805" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1151.62" y="815.5" ></text>
</g>
<g >
<title>handle_pte_fault (4,135,998 samples, 0.09%)</title><rect x="326.8" y="725" width="1.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="329.84" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,168,160 samples, 0.05%)</title><rect x="1147.5" y="821" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1150.48" y="831.5" ></text>
</g>
<g >
<title>__libc_start_main (2,227,134 samples, 0.05%)</title><rect x="570.0" y="885" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="572.97" y="895.5" ></text>
</g>
<g >
<title>security_sock_rcv_skb (2,292,978 samples, 0.05%)</title><rect x="1084.0" y="213" width="0.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1087.00" y="223.5" ></text>
</g>
<g >
<title>__do_softirq (1,965,619 samples, 0.04%)</title><rect x="83.5" y="501" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="86.48" y="511.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (189,649,962 samples, 3.97%)</title><rect x="334.9" y="965" width="46.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="337.88" y="975.5" >__as..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2,364,973 samples, 0.05%)</title><rect x="221.6" y="997" width="0.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="224.60" y="1007.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2,046,963 samples, 0.04%)</title><rect x="125.8" y="709" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="128.83" y="719.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::base_iterator&lt;fmt::v9::appender&gt; (1,835,633 samples, 0.04%)</title><rect x="1118.1" y="853" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1121.14" y="863.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (5,361,136 samples, 0.11%)</title><rect x="328.4" y="869" width="1.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="331.38" y="879.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (1,734,773 samples, 0.04%)</title><rect x="1174.8" y="885" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1177.79" y="895.5" ></text>
</g>
<g >
<title>__sanitizer::InternalAlloc (4,577,171 samples, 0.10%)</title><rect x="11.2" y="869" width="1.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="14.17" y="879.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;::_M_ptr (1,971,514 samples, 0.04%)</title><rect x="834.7" y="853" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="837.69" y="863.5" ></text>
</g>
<g >
<title>__check_object_size (8,865,732 samples, 0.19%)</title><rect x="27.5" y="709" width="2.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="30.45" y="719.5" ></text>
</g>
<g >
<title>spdlog::details::os::now (1,744,109 samples, 0.04%)</title><rect x="1173.4" y="965" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1176.36" y="975.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (102,395,300 samples, 2.14%)</title><rect x="758.7" y="949" width="25.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="761.66" y="959.5" >s..</text>
</g>
<g >
<title>tcp_sendmsg_locked (201,398,055 samples, 4.22%)</title><rect x="854.9" y="725" width="49.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="857.94" y="735.5" >tcp_s..</text>
</g>
<g >
<title>__netif_receive_skb (30,024,004 samples, 0.63%)</title><rect x="1083.0" y="373" width="7.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1085.96" y="383.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,812,177 samples, 0.04%)</title><rect x="1181.1" y="885" width="0.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1184.06" y="895.5" ></text>
</g>
<g >
<title>[libc.so.6] (9,347,354 samples, 0.20%)</title><rect x="79.6" y="885" width="2.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="82.57" y="895.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,889,471 samples, 0.04%)</title><rect x="12.3" y="741" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="15.31" y="751.5" ></text>
</g>
<g >
<title>el0t_64_irq (1,537,026 samples, 0.03%)</title><rect x="305.3" y="917" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="308.27" y="927.5" ></text>
</g>
<g >
<title>__netif_rx (1,245,932 samples, 0.03%)</title><rect x="850.4" y="453" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="853.39" y="463.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (19,936,079 samples, 0.42%)</title><rect x="79.6" y="917" width="4.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="82.57" y="927.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="501" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1080.97" y="511.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,086,648 samples, 0.04%)</title><rect x="1141.1" y="837" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1144.05" y="847.5" ></text>
</g>
<g >
<title>_IO_file_write (4,182,325 samples, 0.09%)</title><rect x="1151.2" y="789" width="1.0" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1154.21" y="799.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (1,020,628 samples, 0.02%)</title><rect x="13.3" y="949" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="16.26" y="959.5" ></text>
</g>
<g >
<title>tty_write (4,182,325 samples, 0.09%)</title><rect x="1151.2" y="613" width="1.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1154.21" y="623.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,951,033 samples, 0.04%)</title><rect x="81.4" y="661" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="84.40" y="671.5" ></text>
</g>
<g >
<title>main (4,750,590,856 samples, 99.50%)</title><rect x="12.8" y="1061" width="1174.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="15.78" y="1071.5" >main</text>
</g>
<g >
<title>kfree_skbmem (2,226,935 samples, 0.05%)</title><rect x="878.2" y="149" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="881.19" y="159.5" ></text>
</g>
<g >
<title>do_mmap (1,906,380 samples, 0.04%)</title><rect x="332.8" y="597" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="335.80" y="607.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (10,611,312 samples, 0.22%)</title><rect x="1138.4" y="869" width="2.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1141.43" y="879.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;::begin (83,816,496 samples, 1.76%)</title><rect x="737.9" y="965" width="20.8" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="740.94" y="975.5" ></text>
</g>
<g >
<title>tcp_delack_timer (2,129,583 samples, 0.04%)</title><rect x="590.4" y="677" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="593.36" y="687.5" ></text>
</g>
<g >
<title>std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (4,066,109 samples, 0.09%)</title><rect x="835.7" y="853" width="1.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="838.75" y="863.5" ></text>
</g>
<g >
<title>void spdlog::details::fmt_helper::append_int&lt;int&gt; (4,563,236 samples, 0.10%)</title><rect x="1148.0" y="853" width="1.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1151.02" y="863.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1,537,026 samples, 0.03%)</title><rect x="305.3" y="549" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="308.27" y="559.5" ></text>
</g>
<g >
<title>__ip_finish_output (4,906,180 samples, 0.10%)</title><rect x="1111.7" y="597" width="1.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1114.75" y="607.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="741" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1097.46" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (13,393,291 samples, 0.28%)</title><rect x="229.2" y="965" width="3.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="232.25" y="975.5" ></text>
</g>
<g >
<title>el0_da (4,991,456 samples, 0.10%)</title><rect x="231.3" y="901" width="1.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="234.33" y="911.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (4,065,866 samples, 0.09%)</title><rect x="1150.2" y="821" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1153.20" y="831.5" ></text>
</g>
<g >
<title>__fdget (15,047,102 samples, 0.32%)</title><rect x="908.0" y="757" width="3.7" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="910.97" y="767.5" ></text>
</g>
<g >
<title>__build_skb_around (6,121,586 samples, 0.13%)</title><rect x="897.8" y="677" width="1.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="900.82" y="687.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (2,209,766 samples, 0.05%)</title><rect x="1182.5" y="901" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1185.50" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (190,070,530 samples, 3.98%)</title><rect x="389.7" y="917" width="47.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="392.69" y="927.5" >__as..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (98,733,847 samples, 2.07%)</title><rect x="541.6" y="901" width="24.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="544.55" y="911.5" >_..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,925,330 samples, 0.04%)</title><rect x="723.2" y="869" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="726.19" y="879.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,253,029 samples, 0.03%)</title><rect x="1078.6" y="805" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1081.56" y="815.5" ></text>
</g>
<g >
<title>__do_softirq (34,305,749 samples, 0.72%)</title><rect x="1083.0" y="453" width="8.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1085.96" y="463.5" ></text>
</g>
<g >
<title>handle_softirqs (1,965,619 samples, 0.04%)</title><rect x="83.5" y="485" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="86.48" y="495.5" ></text>
</g>
<g >
<title>__pi_clear_page (1,959,682 samples, 0.04%)</title><rect x="231.7" y="661" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="234.75" y="671.5" ></text>
</g>
<g >
<title>vfs_write (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="597" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1153.69" y="607.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (5,833,971 samples, 0.12%)</title><rect x="875.0" y="197" width="1.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="878.04" y="207.5" ></text>
</g>
<g >
<title>__interception::InterceptFunction (4,577,171 samples, 0.10%)</title><rect x="11.2" y="1029" width="1.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="14.17" y="1039.5" ></text>
</g>
<g >
<title>__arm64_sys_read (60,790,759 samples, 1.27%)</title><rect x="16.2" y="885" width="15.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="19.20" y="895.5" ></text>
</g>
<g >
<title>folio_add_lru (2,202,194 samples, 0.05%)</title><rect x="326.8" y="661" width="0.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="329.84" y="671.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (19,610,966 samples, 0.41%)</title><rect x="24.8" y="757" width="4.8" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="27.80" y="767.5" ></text>
</g>
<g >
<title>el0_svc (64,499,301 samples, 1.35%)</title><rect x="15.3" y="949" width="15.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="18.29" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (2,233,358 samples, 0.05%)</title><rect x="482.8" y="981" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="485.76" y="991.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (25,812,718 samples, 0.54%)</title><rect x="1084.0" y="293" width="6.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1087.00" y="303.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,142,365 samples, 0.04%)</title><rect x="23.8" y="725" width="0.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="26.80" y="735.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::grow (2,108,069 samples, 0.04%)</title><rect x="1145.9" y="805" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1148.90" y="815.5" ></text>
</g>
<g >
<title>____do_softirq (70,542,273 samples, 1.48%)</title><rect x="871.0" y="453" width="17.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="874.02" y="463.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (3,339,821 samples, 0.07%)</title><rect x="850.4" y="693" width="0.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="853.39" y="703.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="805" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1187.01" y="815.5" ></text>
</g>
<g >
<title>tcp_schedule_loss_probe.part.0 (1,818,047 samples, 0.04%)</title><rect x="894.9" y="661" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="897.89" y="671.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1,965,619 samples, 0.04%)</title><rect x="83.5" y="309" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="86.48" y="319.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,626,645 samples, 0.06%)</title><rect x="82.8" y="789" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="85.84" y="799.5" ></text>
</g>
<g >
<title>do_mem_abort (1,319,076 samples, 0.03%)</title><rect x="12.0" y="773" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="14.98" y="783.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (1,537,026 samples, 0.03%)</title><rect x="305.3" y="901" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="308.27" y="911.5" ></text>
</g>
<g >
<title>tcp_ack (1,537,026 samples, 0.03%)</title><rect x="305.3" y="533" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="308.27" y="543.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_range_ (8,248,191 samples, 0.17%)</title><rect x="1150.2" y="885" width="2.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1153.20" y="895.5" ></text>
</g>
<g >
<title>vma_complete (1,519,690 samples, 0.03%)</title><rect x="11.6" y="517" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="14.60" y="527.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2,398,268 samples, 0.05%)</title><rect x="657.1" y="533" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="660.07" y="543.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (2,129,583 samples, 0.04%)</title><rect x="590.4" y="661" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="593.36" y="671.5" ></text>
</g>
<g >
<title>tty_write (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="581" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1153.69" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (1,889,471 samples, 0.04%)</title><rect x="12.3" y="901" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="15.31" y="911.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1,648,217 samples, 0.03%)</title><rect x="1112.3" y="181" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1115.30" y="191.5" ></text>
</g>
<g >
<title>dlsym (4,577,171 samples, 0.10%)</title><rect x="11.2" y="1013" width="1.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="14.17" y="1023.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (5,993,458 samples, 0.13%)</title><rect x="1153.7" y="1013" width="1.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1156.74" y="1023.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,181,649 samples, 0.13%)</title><rect x="1121.3" y="869" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1124.29" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,816,755 samples, 0.08%)</title><rect x="1162.1" y="933" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.06" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,807,407 samples, 0.08%)</title><rect x="722.2" y="901" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="725.25" y="911.5" ></text>
</g>
<g >
<title>do_softirq (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="677" width="0.5" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1192.48" y="687.5" ></text>
</g>
<g >
<title>__sanitizer::mem_is_zero (4,001,662 samples, 0.08%)</title><rect x="839.8" y="901" width="1.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="842.81" y="911.5" ></text>
</g>
<g >
<title>ip_rcv (2,046,963 samples, 0.04%)</title><rect x="125.8" y="677" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="128.83" y="687.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (3,598,858 samples, 0.08%)</title><rect x="80.5" y="677" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="83.51" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1,632,821 samples, 0.03%)</title><rect x="128.0" y="997" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="130.99" y="1007.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (1,591,318 samples, 0.03%)</title><rect x="330.3" y="837" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="333.28" y="847.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (1,957,476 samples, 0.04%)</title><rect x="1163.0" y="949" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1166.01" y="959.5" ></text>
</g>
<g >
<title>memblock_is_map_memory (2,322,982 samples, 0.05%)</title><rect x="28.6" y="661" width="0.6" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="31.61" y="671.5" ></text>
</g>
<g >
<title>___interceptor_clock_gettime.part.0 (1,744,109 samples, 0.04%)</title><rect x="1173.4" y="917" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1176.36" y="927.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::grow (2,109,793 samples, 0.04%)</title><rect x="1119.7" y="789" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1122.70" y="799.5" ></text>
</g>
<g >
<title>el0_interrupt (1,812,100 samples, 0.04%)</title><rect x="78.7" y="869" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="81.68" y="879.5" ></text>
</g>
<g >
<title>__sanitizer::InternalAlloc (1,889,471 samples, 0.04%)</title><rect x="12.3" y="965" width="0.5" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="15.31" y="975.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1,537,026 samples, 0.03%)</title><rect x="305.3" y="693" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="308.27" y="703.5" ></text>
</g>
<g >
<title>skb_free_head (1,878,130 samples, 0.04%)</title><rect x="24.3" y="725" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="27.33" y="735.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2,336,771 samples, 0.05%)</title><rect x="566.0" y="901" width="0.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="568.96" y="911.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,253,029 samples, 0.03%)</title><rect x="31.8" y="981" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="34.77" y="991.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="821" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1192.48" y="831.5" ></text>
</g>
<g >
<title>__schedule (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="837" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1097.46" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (31,823,991 samples, 0.67%)</title><rect x="33.0" y="981" width="7.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="35.98" y="991.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="517" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1097.46" y="527.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,643,792 samples, 0.10%)</title><rect x="1139.5" y="741" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1142.50" y="751.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2,398,268 samples, 0.05%)</title><rect x="657.1" y="645" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="660.07" y="655.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (2,108,309 samples, 0.04%)</title><rect x="1083.0" y="357" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1085.96" y="367.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,962,198 samples, 0.04%)</title><rect x="1116.1" y="821" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1119.12" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (18,637,205 samples, 0.39%)</title><rect x="1095.1" y="949" width="4.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1098.08" y="959.5" ></text>
</g>
<g >
<title>__tcp_ack_snd_check (4,889,942 samples, 0.10%)</title><rect x="873.8" y="197" width="1.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="876.83" y="207.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2,398,268 samples, 0.05%)</title><rect x="657.1" y="517" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="660.07" y="527.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (2,008,752 samples, 0.04%)</title><rect x="13.5" y="981" width="0.5" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="16.51" y="991.5" ></text>
</g>
<g >
<title>ip_local_deliver (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="533" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1097.46" y="543.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_eq (2,319,239 samples, 0.05%)</title><rect x="835.2" y="853" width="0.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="838.17" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (116,071,753 samples, 2.43%)</title><rect x="512.9" y="933" width="28.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="515.87" y="943.5" >st..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (89,345,378 samples, 1.87%)</title><rect x="441.1" y="949" width="22.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="444.15" y="959.5" >s..</text>
</g>
<g >
<title>invoke_syscall (1,979,399 samples, 0.04%)</title><rect x="915.2" y="837" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="918.16" y="847.5" ></text>
</g>
<g >
<title>tcp_push (46,344,413 samples, 0.97%)</title><rect x="1080.9" y="725" width="11.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1083.94" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (247,657,254 samples, 5.19%)</title><rect x="660.0" y="869" width="61.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="662.96" y="879.5" >__asan..</text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; fmt::v9::detail::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,516,970 samples, 0.03%)</title><rect x="1136.6" y="917" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1139.63" y="927.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4,160,312 samples, 0.09%)</title><rect x="331.8" y="709" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="334.77" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,383,183 samples, 0.09%)</title><rect x="1129.0" y="837" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1131.99" y="847.5" ></text>
</g>
<g >
<title>___interceptor_strlen (2,020,872 samples, 0.04%)</title><rect x="220.6" y="949" width="0.5" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="223.56" y="959.5" ></text>
</g>
<g >
<title>____do_softirq (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="629" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1192.48" y="639.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (17,282,381 samples, 0.36%)</title><rect x="326.4" y="885" width="4.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="329.40" y="895.5" ></text>
</g>
<g >
<title>neigh_hh_output (84,482,386 samples, 1.77%)</title><rect x="870.5" y="549" width="20.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="873.45" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,275,698 samples, 0.09%)</title><rect x="1142.5" y="789" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1145.53" y="799.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="597" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1080.97" y="607.5" ></text>
</g>
<g >
<title>__arm64_sys_write (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="709" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1187.01" y="719.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1,017,341 samples, 0.02%)</title><rect x="874.8" y="149" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="877.79" y="159.5" ></text>
</g>
<g >
<title>blk_cgroup_congested (1,962,555 samples, 0.04%)</title><rect x="80.0" y="677" width="0.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="83.02" y="687.5" ></text>
</g>
<g >
<title>el0_svc (292,160,656 samples, 6.12%)</title><rect x="843.4" y="869" width="72.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="846.45" y="879.5" >el0_svc</text>
</g>
<g >
<title>neigh_hh_output (34,305,749 samples, 0.72%)</title><rect x="1083.0" y="565" width="8.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1085.96" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,899,117 samples, 0.04%)</title><rect x="1167.9" y="901" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1170.87" y="911.5" ></text>
</g>
<g >
<title>ip_rcv (2,674,412 samples, 0.06%)</title><rect x="1112.3" y="341" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1115.30" y="351.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (15,742,617 samples, 0.33%)</title><rect x="1142.5" y="837" width="3.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1145.53" y="847.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (9,358,850 samples, 0.20%)</title><rect x="1143.6" y="805" width="2.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1146.59" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,316,460 samples, 0.05%)</title><rect x="1119.1" y="789" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1122.12" y="799.5" ></text>
</g>
<g >
<title>el0_da (1,319,076 samples, 0.03%)</title><rect x="12.0" y="789" width="0.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="14.98" y="799.5" ></text>
</g>
<g >
<title>el0_interrupt (2,188,358 samples, 0.05%)</title><rect x="462.7" y="837" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="465.69" y="847.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,279,212 samples, 0.13%)</title><rect x="331.2" y="837" width="1.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="334.25" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,191,259 samples, 0.13%)</title><rect x="1122.8" y="869" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1125.81" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (368,559,652 samples, 7.72%)</title><rect x="128.4" y="949" width="91.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="131.39" y="959.5" >__asan_sta..</text>
</g>
<g >
<title>__netif_receive_skb (66,678,067 samples, 1.40%)</title><rect x="872.0" y="357" width="16.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="874.98" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (816,492 samples, 0.02%)</title><rect x="1100.8" y="949" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1103.84" y="959.5" ></text>
</g>
<g >
<title>handle_mm_fault (3,672,944 samples, 0.08%)</title><rect x="538.6" y="725" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="541.61" y="735.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="789" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1187.01" y="799.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (2,275,078 samples, 0.05%)</title><rect x="539.5" y="837" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="542.52" y="847.5" ></text>
</g>
<g >
<title>skb_release_data (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="389" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1097.46" y="399.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (660,430,019 samples, 13.83%)</title><rect x="915.7" y="917" width="163.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="918.65" y="927.5" >__asan_stack_malloc_2</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1,965,619 samples, 0.04%)</title><rect x="83.5" y="325" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="86.48" y="335.5" ></text>
</g>
<g >
<title>ip_local_deliver (1,965,619 samples, 0.04%)</title><rect x="83.5" y="357" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="86.48" y="367.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,451,646 samples, 0.05%)</title><rect x="1148.0" y="757" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1151.02" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,833,652 samples, 0.08%)</title><rect x="1104.6" y="917" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1107.58" y="927.5" ></text>
</g>
<g >
<title>tcp_ack (11,409,280 samples, 0.24%)</title><rect x="876.5" y="197" width="2.8" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="879.48" y="207.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (95,401,363 samples, 2.00%)</title><rect x="483.3" y="949" width="23.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="486.31" y="959.5" >_..</text>
</g>
<g >
<title>ip_output (1,017,341 samples, 0.02%)</title><rect x="874.8" y="101" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="877.79" y="111.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::vformat_to&lt;fmt::v9::appender, 0&gt; (51,629,192 samples, 1.08%)</title><rect x="1160.6" y="981" width="12.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1163.60" y="991.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (617,007,906 samples, 12.92%)</title><rect x="572.1" y="965" width="152.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="575.08" y="975.5" >std::__detail::_Map..</text>
</g>
<g >
<title>el0_svc (1,519,690 samples, 0.03%)</title><rect x="11.6" y="661" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="14.60" y="671.5" ></text>
</g>
<g >
<title>do_page_fault (4,991,456 samples, 0.10%)</title><rect x="231.3" y="853" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="234.33" y="863.5" ></text>
</g>
<g >
<title>__napi_poll (68,584,608 samples, 1.44%)</title><rect x="871.5" y="389" width="17.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="874.50" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (6,251,828 samples, 0.13%)</title><rect x="1101.4" y="981" width="1.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1104.45" y="991.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (4,222,877 samples, 0.09%)</title><rect x="1165.9" y="869" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1168.86" y="879.5" ></text>
</g>
<g >
<title>percpu_ref_get_many (2,323,064 samples, 0.05%)</title><rect x="332.2" y="629" width="0.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="335.22" y="639.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (617,007,906 samples, 12.92%)</title><rect x="572.1" y="981" width="152.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="575.08" y="991.5" >std::unordered_map&lt;..</text>
</g>
<g >
<title>__sock_release (4,225,966 samples, 0.09%)</title><rect x="1189.0" y="917" width="1.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1191.96" y="927.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (82,145,273 samples, 1.72%)</title><rect x="870.5" y="533" width="20.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="873.45" y="543.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,079,325 samples, 0.04%)</title><rect x="1180.6" y="869" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1183.55" y="879.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (62,977,545 samples, 1.32%)</title><rect x="872.9" y="245" width="15.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="875.89" y="255.5" ></text>
</g>
<g >
<title>do_mmap (4,089,599 samples, 0.09%)</title><rect x="83.5" y="645" width="1.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="86.48" y="655.5" ></text>
</g>
<g >
<title>tcp_tso_segs (1,840,524 samples, 0.04%)</title><rect x="895.3" y="661" width="0.5" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="898.34" y="671.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator[] (816,492 samples, 0.02%)</title><rect x="1100.8" y="965" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1103.84" y="975.5" ></text>
</g>
<g >
<title>__sanitizer_internal_memmove (2,317,711 samples, 0.05%)</title><rect x="333.3" y="901" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="336.27" y="911.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;, 0ul&gt; (2,064,965 samples, 0.04%)</title><rect x="1159.2" y="917" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1162.19" y="927.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (1,722,970 samples, 0.04%)</title><rect x="1092.4" y="725" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1095.40" y="735.5" ></text>
</g>
<g >
<title>__sanitizer::MmapAlignedOrDieOnFatalError (1,519,690 samples, 0.03%)</title><rect x="11.6" y="741" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="14.60" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (294,338,589 samples, 6.16%)</title><rect x="842.9" y="885" width="72.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="845.91" y="895.5" >el0t_64_..</text>
</g>
<g >
<title>folio_add_new_anon_rmap (1,317,208 samples, 0.03%)</title><rect x="232.2" y="757" width="0.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="235.23" y="767.5" ></text>
</g>
<g >
<title>rmqueue (2,200,061 samples, 0.05%)</title><rect x="863.9" y="629" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="866.87" y="639.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="869" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1080.97" y="879.5" ></text>
</g>
<g >
<title>__napi_poll (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="709" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1080.97" y="719.5" ></text>
</g>
<g >
<title>__ip_finish_output (1,575,555 samples, 0.03%)</title><rect x="875.6" y="85" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="878.60" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (2,094,948 samples, 0.04%)</title><rect x="40.8" y="981" width="0.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="43.85" y="991.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (973,513,957 samples, 20.39%)</title><rect x="838.3" y="949" width="240.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="841.28" y="959.5" >tt::chat::server::EpollServer::..</text>
</g>
<g >
<title>fmt::v9::basic_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt; &gt;::get (2,203,792 samples, 0.05%)</title><rect x="1120.7" y="869" width="0.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1123.74" y="879.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (2,128,029 samples, 0.04%)</title><rect x="901.2" y="645" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="904.17" y="655.5" ></text>
</g>
<g >
<title>__pi_clear_page (1,253,029 samples, 0.03%)</title><rect x="31.8" y="709" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="34.77" y="719.5" ></text>
</g>
<g >
<title>char* fmt::v9::detail::to_pointer&lt;char&gt; (1,962,198 samples, 0.04%)</title><rect x="1116.1" y="853" width="0.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1119.12" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,192,665 samples, 0.13%)</title><rect x="1177.2" y="837" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1180.22" y="847.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (2,018,823 samples, 0.04%)</title><rect x="10.7" y="1061" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="13.68" y="1071.5" ></text>
</g>
<g >
<title>___interceptor_read.part.0 (69,666,383 samples, 1.46%)</title><rect x="14.0" y="1013" width="17.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="17.01" y="1023.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (4,906,180 samples, 0.10%)</title><rect x="1111.7" y="645" width="1.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1114.75" y="655.5" ></text>
</g>
<g >
<title>do_pte_missing (1,889,471 samples, 0.04%)</title><rect x="12.3" y="725" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="15.31" y="735.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (14,211,257 samples, 0.30%)</title><rect x="1104.0" y="965" width="3.5" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1107.03" y="975.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (21,572,185 samples, 0.45%)</title><rect x="1175.2" y="901" width="5.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1178.22" y="911.5" ></text>
</g>
<g >
<title>ip_rcv (1,965,619 samples, 0.04%)</title><rect x="83.5" y="389" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="86.48" y="399.5" ></text>
</g>
<g >
<title>__asan::CanPoisonMemory (2,303,811 samples, 0.05%)</title><rect x="329.7" y="869" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="332.71" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (270,214,067 samples, 5.66%)</title><rect x="590.9" y="917" width="66.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="593.88" y="927.5" >__asan_..</text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;, 0ul&gt; (1,838,117 samples, 0.04%)</title><rect x="723.7" y="885" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="726.66" y="895.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (2,287,011 samples, 0.05%)</title><rect x="1155.2" y="981" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1158.22" y="991.5" ></text>
</g>
<g >
<title>el0_svc (2,008,752 samples, 0.04%)</title><rect x="13.5" y="773" width="0.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="16.51" y="783.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (12,661,579 samples, 0.27%)</title><rect x="537.5" y="853" width="3.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="540.51" y="863.5" ></text>
</g>
<g >
<title>do_anonymous_page (2,626,645 samples, 0.06%)</title><rect x="82.8" y="645" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="85.84" y="655.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (1,837,248 samples, 0.04%)</title><rect x="331.8" y="629" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="334.77" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,516,970 samples, 0.03%)</title><rect x="1136.6" y="901" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1139.63" y="911.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (36,112,430 samples, 0.76%)</title><rect x="1082.5" y="645" width="8.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1085.51" y="655.5" ></text>
</g>
<g >
<title>tcp_rearm_rto.part.0 (2,320,377 samples, 0.05%)</title><rect x="894.3" y="629" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="897.31" y="639.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="805" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1192.48" y="815.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="741" width="0.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1187.01" y="751.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="741" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1192.48" y="751.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (6,504,299 samples, 0.14%)</title><rect x="861.8" y="597" width="1.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="864.84" y="607.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (2,163,569 samples, 0.05%)</title><rect x="1165.3" y="869" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1168.33" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,629,003 samples, 0.08%)</title><rect x="1130.1" y="805" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1133.08" y="815.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,319,076 samples, 0.03%)</title><rect x="12.0" y="661" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="14.98" y="671.5" ></text>
</g>
<g >
<title>bool std::operator==&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (4,066,109 samples, 0.09%)</title><rect x="835.7" y="837" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="838.75" y="847.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (3,862,391 samples, 0.08%)</title><rect x="875.0" y="165" width="1.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="878.04" y="175.5" ></text>
</g>
<g >
<title>inet_sendmsg (56,515,024 samples, 1.18%)</title><rect x="1079.4" y="773" width="14.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1082.44" y="783.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (6,622,470 samples, 0.14%)</title><rect x="1132.5" y="773" width="1.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1135.54" y="783.5" ></text>
</g>
<g >
<title>filp_flush (2,008,752 samples, 0.04%)</title><rect x="13.5" y="693" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="16.51" y="703.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (2,275,078 samples, 0.05%)</title><rect x="539.5" y="725" width="0.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="542.52" y="735.5" ></text>
</g>
<g >
<title>__skb_datagram_iter (19,610,966 samples, 0.41%)</title><rect x="24.8" y="741" width="4.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="27.80" y="751.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (2,103,209 samples, 0.04%)</title><rect x="539.0" y="661" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="542.00" y="671.5" ></text>
</g>
<g >
<title>sock_def_readable (1,793,482 samples, 0.04%)</title><rect x="1089.9" y="197" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1092.93" y="207.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (25,812,718 samples, 0.54%)</title><rect x="1084.0" y="261" width="6.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1087.00" y="271.5" ></text>
</g>
<g >
<title>call_on_irq_stack (2,178,872 samples, 0.05%)</title><rect x="720.6" y="741" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="723.63" y="751.5" ></text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2,019,693 samples, 0.04%)</title><rect x="1103.0" y="965" width="0.5" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1105.99" y="975.5" ></text>
</g>
<g >
<title>invoke_syscall (58,545,339 samples, 1.23%)</title><rect x="1079.4" y="837" width="14.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1082.44" y="847.5" ></text>
</g>
<g >
<title>__interceptor_trampoline_send (2,349,861 samples, 0.05%)</title><rect x="1099.7" y="949" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1102.69" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,312,869 samples, 0.09%)</title><rect x="1138.4" y="805" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1141.43" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (13,393,291 samples, 0.28%)</title><rect x="229.2" y="949" width="3.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="232.25" y="959.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (72,842,686 samples, 1.53%)</title><rect x="870.5" y="517" width="18.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="873.45" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::end (3,958,709 samples, 0.08%)</title><rect x="1152.8" y="901" width="0.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1155.76" y="911.5" ></text>
</g>
<g >
<title>handle_softirqs (2,046,963 samples, 0.04%)</title><rect x="125.8" y="773" width="0.5" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="128.83" y="783.5" ></text>
</g>
<g >
<title>folio_add_lru (1,319,076 samples, 0.03%)</title><rect x="12.0" y="629" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="14.98" y="639.5" ></text>
</g>
<g >
<title>tcp_recv_timestamp (1,938,976 samples, 0.04%)</title><rect x="21.8" y="773" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="24.83" y="783.5" ></text>
</g>
<g >
<title>ip_output (1,575,555 samples, 0.03%)</title><rect x="875.6" y="117" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="878.60" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="853" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1187.01" y="863.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::parse_client_command (4,150,470,270 samples, 86.93%)</title><rect x="128.0" y="1013" width="1025.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="130.99" y="1023.5" >tt::chat::server::EpollServer::parse_client_command</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (6,251,828 samples, 0.13%)</title><rect x="1101.4" y="965" width="1.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1104.45" y="975.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2,046,963 samples, 0.04%)</title><rect x="125.8" y="613" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="128.83" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,994,892 samples, 0.04%)</title><rect x="1173.8" y="901" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1176.79" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,734,773 samples, 0.04%)</title><rect x="1174.8" y="789" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1177.79" y="799.5" ></text>
</g>
<g >
<title>__do_softirq (4,906,180 samples, 0.10%)</title><rect x="1111.7" y="453" width="1.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1114.75" y="463.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (76,078,964 samples, 1.59%)</title><rect x="572.1" y="949" width="18.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="575.08" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,052,704 samples, 0.04%)</title><rect x="1154.7" y="949" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1157.71" y="959.5" ></text>
</g>
<g >
<title>el1h_64_irq (1,965,619 samples, 0.04%)</title><rect x="83.5" y="629" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="86.48" y="639.5" ></text>
</g>
<g >
<title>do_notify_resume (2,188,358 samples, 0.05%)</title><rect x="462.7" y="821" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="465.69" y="831.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (19,604,063 samples, 0.41%)</title><rect x="326.4" y="933" width="4.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="329.40" y="943.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (4,583,846 samples, 0.10%)</title><rect x="126.9" y="981" width="1.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="129.85" y="991.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (4,222,877 samples, 0.09%)</title><rect x="1165.9" y="853" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1168.86" y="863.5" ></text>
</g>
<g >
<title>__send (9,137,373 samples, 0.19%)</title><rect x="1111.3" y="933" width="2.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1114.26" y="943.5" ></text>
</g>
<g >
<title>handle_pte_fault (3,276,890 samples, 0.07%)</title><rect x="231.7" y="805" width="0.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="234.75" y="815.5" ></text>
</g>
<g >
<title>__mod_timer (2,320,377 samples, 0.05%)</title><rect x="894.3" y="581" width="0.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="897.31" y="591.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__detail::_Node_iterator&lt;int, true, false&gt;, bool&gt; std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique&lt;int const&amp;, int const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;int, false&gt; &gt; &gt; &gt; (1,633,617 samples, 0.03%)</title><rect x="1101.0" y="901" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1104.04" y="911.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2,398,268 samples, 0.05%)</title><rect x="657.1" y="549" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="660.07" y="559.5" ></text>
</g>
<g >
<title>tcp_rcv_established (59,172,854 samples, 1.24%)</title><rect x="873.8" y="213" width="14.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="876.83" y="223.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (185,406,460 samples, 3.88%)</title><rect x="436.9" y="965" width="45.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="439.94" y="975.5" >void..</text>
</g>
<g >
<title>el0t_64_sync (4,089,599 samples, 0.09%)</title><rect x="83.5" y="789" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="86.48" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::__1st_type&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt;::type&amp;&amp; std::__detail::_Select1st::operator (2,169,277 samples, 0.05%)</title><rect x="721.2" y="901" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="724.17" y="911.5" ></text>
</g>
<g >
<title>fclose (2,008,752 samples, 0.04%)</title><rect x="13.5" y="853" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="16.51" y="863.5" ></text>
</g>
<g >
<title>net_rx_action (1,537,026 samples, 0.03%)</title><rect x="305.3" y="741" width="0.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="308.27" y="751.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (4,001,662 samples, 0.08%)</title><rect x="839.8" y="917" width="1.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="842.81" y="927.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (41,317,745 samples, 0.87%)</title><rect x="1173.8" y="933" width="10.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1176.79" y="943.5" ></text>
</g>
<g >
<title>____do_softirq (2,129,583 samples, 0.04%)</title><rect x="590.4" y="789" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="593.36" y="799.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (1,711,887 samples, 0.04%)</title><rect x="1134.7" y="773" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1137.72" y="783.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="773" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1153.69" y="783.5" ></text>
</g>
<g >
<title>handle_softirqs (1,537,026 samples, 0.03%)</title><rect x="305.3" y="757" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="308.27" y="767.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; spdlog::details::fmt_helper::time_fraction&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (4,275,829 samples, 0.09%)</title><rect x="1146.4" y="853" width="1.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1149.42" y="863.5" ></text>
</g>
<g >
<title>spdlog::details::os::localtime (2,008,752 samples, 0.04%)</title><rect x="13.5" y="933" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="16.51" y="943.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (2,202,194 samples, 0.05%)</title><rect x="326.8" y="645" width="0.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="329.84" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (660,430,019 samples, 13.83%)</title><rect x="915.7" y="933" width="163.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="918.65" y="943.5" >__asan_stack_malloc_2</text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,030,347 samples, 0.08%)</title><rect x="1114.6" y="901" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1117.58" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,225,383 samples, 0.05%)</title><rect x="1184.9" y="917" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1187.87" y="927.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (9,358,850 samples, 0.20%)</title><rect x="1143.6" y="773" width="2.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1146.59" y="783.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="501" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1097.46" y="511.5" ></text>
</g>
<g >
<title>all (4,774,593,076 samples, 100%)</title><rect x="10.0" y="1141" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1151.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (816,492 samples, 0.02%)</title><rect x="1100.8" y="933" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1103.84" y="943.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;, __sanitizer::LargeMmapAllocatorPtrArrayStatic&gt;::Allocate (1,889,471 samples, 0.04%)</title><rect x="12.3" y="949" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="15.31" y="959.5" ></text>
</g>
<g >
<title>char* fmt::v9::format_int::format_unsigned&lt;unsigned int&gt; (2,451,646 samples, 0.05%)</title><rect x="1148.0" y="805" width="0.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1151.02" y="815.5" ></text>
</g>
<g >
<title>tcp_current_mss (2,088,175 samples, 0.04%)</title><rect x="897.3" y="693" width="0.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="900.30" y="703.5" ></text>
</g>
<g >
<title>do_translation_fault (3,672,944 samples, 0.08%)</title><rect x="538.6" y="757" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="541.61" y="767.5" ></text>
</g>
<g >
<title>_IO_file_write (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="757" width="0.5" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1153.69" y="767.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (8,185,592 samples, 0.17%)</title><rect x="331.2" y="853" width="2.1" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="334.25" y="863.5" ></text>
</g>
<g >
<title>__handle_mm_fault (9,347,354 samples, 0.20%)</title><rect x="79.6" y="757" width="2.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="82.57" y="767.5" ></text>
</g>
<g >
<title>void tt::chat::check_error&lt;bool, char const*&gt; (1,865,959 samples, 0.04%)</title><rect x="1186.4" y="1013" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1189.38" y="1023.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (31,956,054 samples, 0.67%)</title><rect x="22.3" y="773" width="7.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="25.31" y="783.5" ></text>
</g>
<g >
<title>handle_mm_fault (9,347,354 samples, 0.20%)</title><rect x="79.6" y="773" width="2.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="82.57" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,581,994 samples, 0.12%)</title><rect x="1168.3" y="901" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1171.34" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,936,974 samples, 0.04%)</title><rect x="1147.0" y="805" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1150.00" y="815.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__detail::_Node_iterator&lt;int, true, false&gt;, bool&gt; std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert&lt;int const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;int, false&gt; &gt; &gt; &gt; (1,633,617 samples, 0.03%)</title><rect x="1101.0" y="933" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1104.04" y="943.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1,722,970 samples, 0.04%)</title><rect x="1092.4" y="693" width="0.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1095.40" y="703.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (9,137,373 samples, 0.19%)</title><rect x="1111.3" y="949" width="2.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1114.26" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,835,633 samples, 0.04%)</title><rect x="1118.1" y="837" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1121.14" y="847.5" ></text>
</g>
<g >
<title>invoke_syscall (282,157,750 samples, 5.91%)</title><rect x="845.4" y="821" width="69.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="848.43" y="831.5" >invoke_..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,940,754 samples, 0.08%)</title><rect x="1153.7" y="981" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1156.74" y="991.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1,537,026 samples, 0.03%)</title><rect x="305.3" y="597" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="308.27" y="607.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (16,373,827 samples, 0.34%)</title><rect x="537.5" y="901" width="4.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="540.51" y="911.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (4,643,792 samples, 0.10%)</title><rect x="1139.5" y="821" width="1.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1142.50" y="831.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1,729,326 samples, 0.04%)</title><rect x="20.5" y="773" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="23.51" y="783.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (2,202,194 samples, 0.05%)</title><rect x="326.8" y="677" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="329.84" y="687.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (2,320,377 samples, 0.05%)</title><rect x="894.3" y="661" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="897.31" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;int, false&gt;::_M_incr (9,475,918 samples, 0.20%)</title><rect x="735.1" y="949" width="2.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="738.11" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (3,865,430 samples, 0.08%)</title><rect x="1183.1" y="805" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1186.05" y="815.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (4,042,589 samples, 0.08%)</title><rect x="1135.6" y="933" width="1.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1138.63" y="943.5" ></text>
</g>
<g >
<title>do_page_fault (1,889,471 samples, 0.04%)</title><rect x="12.3" y="789" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="15.31" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,019,693 samples, 0.04%)</title><rect x="1103.0" y="949" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1105.99" y="959.5" ></text>
</g>
<g >
<title>prep_compound_page (1,727,790 samples, 0.04%)</title><rect x="863.4" y="629" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="866.44" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,042,589 samples, 0.08%)</title><rect x="1135.6" y="901" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1138.63" y="911.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (2,263,458 samples, 0.05%)</title><rect x="540.1" y="821" width="0.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="543.08" y="831.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1,965,619 samples, 0.04%)</title><rect x="83.5" y="549" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="86.48" y="559.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (27,921,111 samples, 0.58%)</title><rect x="897.8" y="709" width="6.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="900.82" y="719.5" ></text>
</g>
<g >
<title>tcp_write_xmit (2,139,176 samples, 0.04%)</title><rect x="1084.6" y="197" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1087.56" y="207.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1,906,380 samples, 0.04%)</title><rect x="332.8" y="629" width="0.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="335.80" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (5,762,058 samples, 0.12%)</title><rect x="1106.1" y="917" width="1.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1109.12" y="927.5" ></text>
</g>
<g >
<title>do_translation_fault (2,275,078 samples, 0.05%)</title><rect x="539.5" y="757" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="542.52" y="767.5" ></text>
</g>
<g >
<title>el0t_64_sync (294,338,589 samples, 6.16%)</title><rect x="842.9" y="901" width="72.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="845.91" y="911.5" >el0t_64_..</text>
</g>
<g >
<title>_IO_fwrite (8,248,191 samples, 0.17%)</title><rect x="1150.2" y="853" width="2.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1153.20" y="863.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (1,734,773 samples, 0.04%)</title><rect x="1174.8" y="805" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1177.79" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,821,250 samples, 0.04%)</title><rect x="1164.4" y="885" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1167.42" y="895.5" ></text>
</g>
<g >
<title> (2,001,536 samples, 0.04%)</title><rect x="737.4" y="949" width="0.5" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="740.45" y="959.5" ></text>
</g>
<g >
<title>release_sock (4,213,573 samples, 0.09%)</title><rect x="1079.4" y="741" width="1.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1082.44" y="751.5" ></text>
</g>
<g >
<title>void spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (107,960,080 samples, 2.26%)</title><rect x="1159.7" y="1013" width="26.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1162.70" y="1023.5" >v..</text>
</g>
<g >
<title>__asan::AsanInitInternal (6,466,642 samples, 0.14%)</title><rect x="11.2" y="1077" width="1.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="14.17" y="1087.5" ></text>
</g>
<g >
<title>tcp_close (4,225,966 samples, 0.09%)</title><rect x="1189.0" y="885" width="1.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1191.96" y="895.5" ></text>
</g>
<g >
<title>fmt::v9::format_int::format_int (3,865,430 samples, 0.08%)</title><rect x="1183.1" y="885" width="0.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1186.05" y="895.5" ></text>
</g>
<g >
<title>napi_consume_skb (4,281,745 samples, 0.09%)</title><rect x="1090.4" y="405" width="1.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1093.38" y="415.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (4,089,599 samples, 0.09%)</title><rect x="83.5" y="661" width="1.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="86.48" y="671.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (4,089,599 samples, 0.09%)</title><rect x="83.5" y="805" width="1.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="86.48" y="815.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (1,711,887 samples, 0.04%)</title><rect x="1134.7" y="693" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1137.72" y="703.5" ></text>
</g>
<g >
<title>__arch_copy_to_user (8,599,690 samples, 0.18%)</title><rect x="25.3" y="709" width="2.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="28.33" y="719.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="725" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1153.69" y="735.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="821" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1080.97" y="831.5" ></text>
</g>
<g >
<title>do_notify_resume (1,812,100 samples, 0.04%)</title><rect x="78.7" y="853" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="81.68" y="863.5" ></text>
</g>
<g >
<title>inet_sendmsg (229,938,106 samples, 4.82%)</title><rect x="847.9" y="757" width="56.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="850.89" y="767.5" >inet_s..</text>
</g>
<g >
<title>el0t_64_sync_handler (6,230,760 samples, 0.13%)</title><rect x="326.8" y="837" width="1.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="329.84" y="847.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (10,503,303 samples, 0.22%)</title><rect x="331.2" y="917" width="2.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="334.25" y="927.5" ></text>
</g>
<g >
<title>net_rx_action (1,965,619 samples, 0.04%)</title><rect x="83.5" y="469" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="86.48" y="479.5" ></text>
</g>
<g >
<title>tcp_rcv_established (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="453" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1097.46" y="463.5" ></text>
</g>
<g >
<title>decltype  (9,843,960 samples, 0.21%)</title><rect x="1157.3" y="949" width="2.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1160.27" y="959.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (6,716,244 samples, 0.14%)</title><rect x="82.8" y="853" width="1.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="85.84" y="863.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (66,678,067 samples, 1.40%)</title><rect x="872.0" y="341" width="16.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="874.98" y="351.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,907,423 samples, 0.08%)</title><rect x="1141.6" y="837" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1144.57" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (190,070,530 samples, 3.98%)</title><rect x="389.7" y="933" width="47.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="392.69" y="943.5" >__as..</text>
</g>
<g >
<title>__do_softirq (2,398,268 samples, 0.05%)</title><rect x="657.1" y="741" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="660.07" y="751.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (9,358,850 samples, 0.20%)</title><rect x="1143.6" y="741" width="2.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1146.59" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (2,016,594 samples, 0.04%)</title><rect x="1163.5" y="917" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1166.49" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,460,575 samples, 0.07%)</title><rect x="1172.5" y="901" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1175.51" y="911.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (1,537,026 samples, 0.03%)</title><rect x="305.3" y="517" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="308.27" y="527.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (2,069,370 samples, 0.04%)</title><rect x="1151.2" y="549" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1154.21" y="559.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (60,785,883 samples, 1.27%)</title><rect x="873.4" y="229" width="15.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="876.43" y="239.5" ></text>
</g>
<g >
<title>net_rx_action (2,046,963 samples, 0.04%)</title><rect x="125.8" y="757" width="0.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="128.83" y="767.5" ></text>
</g>
<g >
<title>do_el0_svc (4,182,325 samples, 0.09%)</title><rect x="1151.2" y="709" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1154.21" y="719.5" ></text>
</g>
<g >
<title>mmput (8,538,267 samples, 0.18%)</title><rect x="1186.8" y="965" width="2.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1189.85" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,287,011 samples, 0.05%)</title><rect x="1155.2" y="933" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1158.22" y="943.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (2,076,298 samples, 0.04%)</title><rect x="1155.8" y="981" width="0.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1158.79" y="991.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,644,345 samples, 0.08%)</title><rect x="1159.7" y="981" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1162.70" y="991.5" ></text>
</g>
<g >
<title>el0_interrupt (2,398,268 samples, 0.05%)</title><rect x="657.1" y="837" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="660.07" y="847.5" ></text>
</g>
<g >
<title>check_heap_object (1,847,807 samples, 0.04%)</title><rect x="29.2" y="693" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="32.19" y="703.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (4,182,325 samples, 0.09%)</title><rect x="1151.2" y="741" width="1.0" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1154.21" y="751.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,226,935 samples, 0.05%)</title><rect x="878.2" y="133" width="0.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="881.19" y="143.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,398,268 samples, 0.05%)</title><rect x="657.1" y="789" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="660.07" y="799.5" ></text>
</g>
<g >
<title>decltype  (8,494,258 samples, 0.18%)</title><rect x="1108.5" y="901" width="2.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1111.50" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (90,285,924 samples, 1.89%)</title><rect x="788.7" y="869" width="22.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="791.72" y="879.5" >_..</text>
</g>
<g >
<title>el0t_64_irq (2,178,872 samples, 0.05%)</title><rect x="720.6" y="853" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="723.63" y="863.5" ></text>
</g>
<g >
<title>__do_softirq (2,178,872 samples, 0.05%)</title><rect x="720.6" y="709" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="723.63" y="719.5" ></text>
</g>
<g >
<title>down_read (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="613" width="0.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1187.01" y="623.5" ></text>
</g>
<g >
<title>handle_mm_fault (4,160,312 samples, 0.09%)</title><rect x="331.8" y="725" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="334.77" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,177,585 samples, 0.05%)</title><rect x="721.7" y="853" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="724.71" y="863.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="565" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1153.69" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (295,760,395 samples, 6.19%)</title><rect x="232.6" y="949" width="73.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="235.56" y="959.5" >__asan_s..</text>
</g>
<g >
<title>do_softirq_own_stack (2,046,963 samples, 0.04%)</title><rect x="125.8" y="837" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="128.83" y="847.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="709" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1153.69" y="719.5" ></text>
</g>
<g >
<title>el1_interrupt (1,965,619 samples, 0.04%)</title><rect x="83.5" y="597" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="86.48" y="607.5" ></text>
</g>
<g >
<title>do_mem_abort (1,253,029 samples, 0.03%)</title><rect x="1078.6" y="853" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1081.56" y="863.5" ></text>
</g>
<g >
<title>kmalloc_reserve (1,890,835 samples, 0.04%)</title><rect x="874.3" y="133" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="877.32" y="143.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (10,611,312 samples, 0.22%)</title><rect x="1138.4" y="853" width="2.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1141.43" y="863.5" ></text>
</g>
<g >
<title>ip_output (4,906,180 samples, 0.10%)</title><rect x="1111.7" y="629" width="1.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1114.75" y="639.5" ></text>
</g>
<g >
<title>__do_softirq (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="613" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1192.48" y="623.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (11,887,061 samples, 0.25%)</title><rect x="864.4" y="709" width="3.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="867.41" y="719.5" ></text>
</g>
<g >
<title>___interceptor_memcmp (4,066,109 samples, 0.09%)</title><rect x="835.7" y="789" width="1.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="838.75" y="799.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (1,734,773 samples, 0.04%)</title><rect x="1174.8" y="853" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1177.79" y="863.5" ></text>
</g>
<g >
<title>aa_file_perm (8,501,284 samples, 0.18%)</title><rect x="18.4" y="789" width="2.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="21.41" y="799.5" ></text>
</g>
<g >
<title>_IO_file_write (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="837" width="0.5" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1187.01" y="847.5" ></text>
</g>
<g >
<title>__run_timers (2,129,583 samples, 0.04%)</title><rect x="590.4" y="725" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="593.36" y="735.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1,575,555 samples, 0.03%)</title><rect x="875.6" y="37" width="0.4" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="878.60" y="47.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="565" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1080.97" y="575.5" ></text>
</g>
<g >
<title>call_on_irq_stack (2,398,268 samples, 0.05%)</title><rect x="657.1" y="773" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="660.07" y="783.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1,648,217 samples, 0.03%)</title><rect x="1112.3" y="197" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1115.30" y="207.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender, int, 0&gt; (6,080,580 samples, 0.13%)</title><rect x="1116.1" y="869" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1119.12" y="879.5" ></text>
</g>
<g >
<title>net_rx_action (34,305,749 samples, 0.72%)</title><rect x="1083.0" y="421" width="8.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1085.96" y="431.5" ></text>
</g>
<g >
<title>_IO_fwrite (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="901" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1187.01" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (150,466,261 samples, 3.15%)</title><rect x="41.9" y="933" width="37.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="44.94" y="943.5" >__a..</text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (104,053,253 samples, 2.18%)</title><rect x="811.0" y="917" width="25.8" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="814.04" y="927.5" >s..</text>
</g>
<g >
<title>el0t_64_sync (2,207,475 samples, 0.05%)</title><rect x="329.2" y="853" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="332.16" y="863.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="469" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1153.69" y="479.5" ></text>
</g>
<g >
<title>__pte_offset_map (1,933,804 samples, 0.04%)</title><rect x="327.4" y="693" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="330.39" y="703.5" ></text>
</g>
<g >
<title>do_translation_fault (1,889,471 samples, 0.04%)</title><rect x="12.3" y="805" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="15.31" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,064,965 samples, 0.04%)</title><rect x="1159.2" y="853" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1162.19" y="863.5" ></text>
</g>
<g >
<title>skb_release_data (1,878,130 samples, 0.04%)</title><rect x="24.3" y="741" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="27.33" y="751.5" ></text>
</g>
<g >
<title>el0_interrupt (1,537,026 samples, 0.03%)</title><rect x="305.3" y="869" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="308.27" y="879.5" ></text>
</g>
<g >
<title>__slab_free (2,067,612 samples, 0.04%)</title><rect x="1186.8" y="869" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1189.85" y="879.5" ></text>
</g>
<g >
<title>tcp_established_options (2,088,175 samples, 0.04%)</title><rect x="897.3" y="677" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="900.30" y="687.5" ></text>
</g>
<g >
<title>tcp_push (7,170,647 samples, 0.15%)</title><rect x="1111.7" y="725" width="1.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1114.75" y="735.5" ></text>
</g>
<g >
<title>el0t_64_irq (2,188,358 samples, 0.05%)</title><rect x="462.7" y="885" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="465.69" y="895.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (9,568,701 samples, 0.20%)</title><rect x="899.3" y="661" width="2.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="902.33" y="671.5" ></text>
</g>
<g >
<title>call_on_irq_stack (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="645" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.48" y="655.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,253,029 samples, 0.03%)</title><rect x="31.8" y="869" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="34.77" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,181,649 samples, 0.13%)</title><rect x="1121.3" y="885" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1124.29" y="895.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char*, char*&gt; (2,188,201 samples, 0.05%)</title><rect x="1134.2" y="773" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1137.18" y="783.5" ></text>
</g>
<g >
<title>__send (65,586,984 samples, 1.37%)</title><rect x="1078.9" y="933" width="16.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1081.87" y="943.5" ></text>
</g>
<g >
<title>mas_store_prealloc (1,519,690 samples, 0.03%)</title><rect x="11.6" y="501" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="14.60" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_hash_code (4,300,884 samples, 0.09%)</title><rect x="836.8" y="917" width="1.0" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="839.75" y="927.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (9,358,850 samples, 0.20%)</title><rect x="1143.6" y="789" width="2.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1146.59" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (18,637,205 samples, 0.39%)</title><rect x="1095.1" y="933" width="4.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1098.08" y="943.5" ></text>
</g>
<g >
<title>skb_attempt_defer_free (4,020,495 samples, 0.08%)</title><rect x="23.8" y="757" width="1.0" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="26.80" y="767.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (2,030,315 samples, 0.04%)</title><rect x="1093.4" y="789" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1096.41" y="799.5" ></text>
</g>
<g >
<title>get_random_u16 (1,017,341 samples, 0.02%)</title><rect x="13.3" y="917" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="16.26" y="927.5" ></text>
</g>
<g >
<title>tcp_ack (2,154,353 samples, 0.05%)</title><rect x="1079.4" y="677" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1082.44" y="687.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (4,369,970 samples, 0.09%)</title><rect x="219.5" y="965" width="1.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="222.48" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,275,698 samples, 0.09%)</title><rect x="1142.5" y="805" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1145.53" y="815.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (6,251,828 samples, 0.13%)</title><rect x="1101.4" y="949" width="1.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1104.45" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,835,633 samples, 0.04%)</title><rect x="1118.1" y="821" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1121.14" y="831.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2,398,268 samples, 0.05%)</title><rect x="657.1" y="661" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="660.07" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,935,866 samples, 0.04%)</title><rect x="1165.9" y="821" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1168.86" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,338,855 samples, 0.05%)</title><rect x="1146.4" y="837" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1149.42" y="847.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (2,287,011 samples, 0.05%)</title><rect x="1166.3" y="805" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1169.34" y="815.5" ></text>
</g>
<g >
<title>__mmput (8,538,267 samples, 0.18%)</title><rect x="1186.8" y="949" width="2.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1189.85" y="959.5" ></text>
</g>
<g >
<title>ktime_get (7,879,786 samples, 0.17%)</title><rect x="891.9" y="661" width="1.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="894.87" y="671.5" ></text>
</g>
<g >
<title>__inet_lookup_skb (2,191,662 samples, 0.05%)</title><rect x="872.9" y="229" width="0.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="875.89" y="239.5" ></text>
</g>
<g >
<title>fmt::v9::detail::count_digits (1,995,299 samples, 0.04%)</title><rect x="1117.1" y="837" width="0.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1120.13" y="847.5" ></text>
</g>
<g >
<title>process_backlog (66,678,067 samples, 1.40%)</title><rect x="872.0" y="373" width="16.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="874.98" y="383.5" ></text>
</g>
<g >
<title>el0_da (5,810,524 samples, 0.12%)</title><rect x="538.1" y="789" width="1.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="541.08" y="799.5" ></text>
</g>
<g >
<title>__pi_clear_page (9,425,106 samples, 0.20%)</title><rect x="858.4" y="613" width="2.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="861.43" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,921,922 samples, 0.04%)</title><rect x="1108.0" y="901" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1111.02" y="911.5" ></text>
</g>
<g >
<title>void spdlog::details::fmt_helper::append_int&lt;int&gt; (3,865,430 samples, 0.08%)</title><rect x="1183.1" y="901" width="0.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1186.05" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,108,069 samples, 0.04%)</title><rect x="1145.9" y="725" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1148.90" y="735.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (1,959,682 samples, 0.04%)</title><rect x="231.7" y="741" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="234.75" y="751.5" ></text>
</g>
<g >
<title>ip_finish_output2 (88,722,536 samples, 1.86%)</title><rect x="869.4" y="565" width="21.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="872.40" y="575.5" >i..</text>
</g>
<g >
<title>do_page_fault (1,944,063 samples, 0.04%)</title><rect x="1107.5" y="805" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1110.54" y="815.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_channel_message (3,555,273,685 samples, 74.46%)</title><rect x="222.2" y="997" width="878.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="225.19" y="1007.5" >tt::chat::server::EpollServer::handle_channel_message</text>
</g>
<g >
<title>pty_write (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="501" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1153.69" y="511.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (66,678,067 samples, 1.40%)</title><rect x="872.0" y="277" width="16.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="874.98" y="287.5" ></text>
</g>
<g >
<title>sk_reset_timer (2,320,377 samples, 0.05%)</title><rect x="894.3" y="613" width="0.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="897.31" y="623.5" ></text>
</g>
<g >
<title>char* fmt::v9::format_int::format_signed&lt;int&gt; (2,451,646 samples, 0.05%)</title><rect x="1148.0" y="821" width="0.6" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1151.02" y="831.5" ></text>
</g>
<g >
<title>__ip_finish_output (1,245,932 samples, 0.03%)</title><rect x="850.4" y="549" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="853.39" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt;::end (4,281,501 samples, 0.09%)</title><rect x="1149.1" y="869" width="1.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1152.14" y="879.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,234,153 samples, 0.05%)</title><rect x="1090.9" y="357" width="0.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1093.88" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2,336,771 samples, 0.05%)</title><rect x="566.0" y="917" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="568.96" y="927.5" ></text>
</g>
<g >
<title>el0_da (1,944,063 samples, 0.04%)</title><rect x="1107.5" y="853" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1110.54" y="863.5" ></text>
</g>
<g >
<title>std::conditional&lt;std::is_same&lt;char, char&gt;::value, fmt::v9::appender, std::back_insert_iterator&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; &gt;::type fmt::v9::detail::get_iterator&lt;char&gt; (4,030,347 samples, 0.08%)</title><rect x="1114.6" y="917" width="1.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1117.58" y="927.5" ></text>
</g>
<g >
<title>el0_interrupt (2,178,872 samples, 0.05%)</title><rect x="720.6" y="805" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="723.63" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (336,740,290 samples, 7.05%)</title><rect x="483.3" y="965" width="83.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="486.31" y="975.5" >std::__cx..</text>
</g>
<g >
<title>__irq_exit_rcu (2,129,583 samples, 0.04%)</title><rect x="590.4" y="837" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="593.36" y="847.5" ></text>
</g>
<g >
<title>ip_queue_xmit (36,112,430 samples, 0.76%)</title><rect x="1082.5" y="661" width="8.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1085.51" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (19,707,166 samples, 0.41%)</title><rect x="567.2" y="965" width="4.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="570.21" y="975.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,253,029 samples, 0.03%)</title><rect x="31.8" y="885" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="34.77" y="895.5" ></text>
</g>
<g >
<title>do_mem_abort (2,275,078 samples, 0.05%)</title><rect x="539.5" y="773" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="542.52" y="783.5" ></text>
</g>
<g >
<title>call_on_irq_stack (70,542,273 samples, 1.48%)</title><rect x="871.0" y="469" width="17.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="874.02" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2,078,856 samples, 0.04%)</title><rect x="571.0" y="949" width="0.5" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="574.01" y="959.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (5,810,524 samples, 0.12%)</title><rect x="538.1" y="805" width="1.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="541.08" y="815.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (3,598,858 samples, 0.08%)</title><rect x="80.5" y="693" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="83.51" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (2,052,704 samples, 0.04%)</title><rect x="1154.7" y="997" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1157.71" y="1007.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (1,734,773 samples, 0.04%)</title><rect x="1174.8" y="837" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1177.79" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (79,030,902 samples, 1.66%)</title><rect x="463.2" y="917" width="19.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="466.23" y="927.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (1,519,690 samples, 0.03%)</title><rect x="11.6" y="757" width="0.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.60" y="767.5" ></text>
</g>
<g >
<title>__alloc_pages (1,889,471 samples, 0.04%)</title><rect x="12.3" y="629" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="15.31" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,740,724 samples, 0.04%)</title><rect x="1182.1" y="837" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1185.07" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (185,406,460 samples, 3.88%)</title><rect x="436.9" y="981" width="45.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="439.94" y="991.5" >std:..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,281,501 samples, 0.09%)</title><rect x="1149.1" y="837" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1152.14" y="847.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (2,139,176 samples, 0.04%)</title><rect x="1084.6" y="149" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1087.56" y="159.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,654,651 samples, 0.03%)</title><rect x="1140.6" y="725" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1143.64" y="735.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (58,545,339 samples, 1.23%)</title><rect x="1079.4" y="853" width="14.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1082.44" y="863.5" ></text>
</g>
<g >
<title>__slab_free (2,226,935 samples, 0.05%)</title><rect x="878.2" y="117" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="881.19" y="127.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,903,031 samples, 0.12%)</title><rect x="1160.6" y="965" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1163.60" y="975.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,263,458 samples, 0.05%)</title><rect x="540.1" y="661" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="543.08" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,124,877 samples, 0.04%)</title><rect x="1120.2" y="853" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1123.22" y="863.5" ></text>
</g>
<g >
<title>run_timer_softirq (2,178,872 samples, 0.05%)</title><rect x="720.6" y="677" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="723.63" y="687.5" ></text>
</g>
<g >
<title>neigh_hh_output (1,575,555 samples, 0.03%)</title><rect x="875.6" y="53" width="0.4" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="878.60" y="63.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,188,201 samples, 0.05%)</title><rect x="1134.2" y="693" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1137.18" y="703.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,398,268 samples, 0.05%)</title><rect x="657.1" y="805" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="660.07" y="815.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (1,812,100 samples, 0.04%)</title><rect x="78.7" y="885" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="81.68" y="895.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,129,583 samples, 0.04%)</title><rect x="590.4" y="853" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="593.36" y="863.5" ></text>
</g>
<g >
<title>tcp_ack (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="517" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1080.97" y="527.5" ></text>
</g>
<g >
<title>sk_forced_mem_schedule (2,151,623 samples, 0.05%)</title><rect x="904.2" y="693" width="0.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="907.19" y="703.5" ></text>
</g>
<g >
<title>do_anonymous_page (4,160,312 samples, 0.09%)</title><rect x="331.8" y="661" width="1.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="334.77" y="671.5" ></text>
</g>
<g >
<title>el0_da (2,275,078 samples, 0.05%)</title><rect x="539.5" y="789" width="0.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="542.52" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,762,058 samples, 0.12%)</title><rect x="1106.1" y="885" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1109.12" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,217,991 samples, 0.05%)</title><rect x="1104.0" y="917" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1107.03" y="927.5" ></text>
</g>
<g >
<title>___interceptor_fwrite.part.0 (8,248,191 samples, 0.17%)</title><rect x="1150.2" y="869" width="2.0" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1153.20" y="879.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (2,264,467 samples, 0.05%)</title><rect x="1113.0" y="677" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1115.96" y="687.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (1,965,619 samples, 0.04%)</title><rect x="83.5" y="565" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="86.48" y="575.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (70,542,273 samples, 1.48%)</title><rect x="871.0" y="485" width="17.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="874.02" y="495.5" ></text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::format_arg fmt::v9::detail::get_arg&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, int&gt; (2,203,792 samples, 0.05%)</title><rect x="1120.7" y="885" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1123.74" y="895.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,046,963 samples, 0.04%)</title><rect x="125.8" y="869" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="128.83" y="879.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,738,405 samples, 0.04%)</title><rect x="11.2" y="773" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="14.17" y="783.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (1,995,624 samples, 0.04%)</title><rect x="867.4" y="677" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="870.35" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,761,564 samples, 0.04%)</title><rect x="1164.0" y="885" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1166.99" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,944,063 samples, 0.04%)</title><rect x="1107.5" y="901" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1110.54" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1,091,755 samples, 0.02%)</title><rect x="436.7" y="949" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="439.67" y="959.5" ></text>
</g>
<g >
<title>do_translation_fault (1,319,076 samples, 0.03%)</title><rect x="12.0" y="757" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="14.98" y="767.5" ></text>
</g>
<g >
<title>do_pte_missing (4,160,312 samples, 0.09%)</title><rect x="331.8" y="677" width="1.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="334.77" y="687.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,020,628 samples, 0.02%)</title><rect x="13.3" y="997" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="16.26" y="1007.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,654,651 samples, 0.03%)</title><rect x="1140.6" y="741" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1143.64" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::internal_allocator (1,319,076 samples, 0.03%)</title><rect x="12.0" y="853" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="14.98" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,792,551 samples, 0.12%)</title><rect x="1157.3" y="933" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1160.27" y="943.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1,889,471 samples, 0.04%)</title><rect x="12.3" y="645" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="15.31" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,068,008 samples, 0.04%)</title><rect x="1101.4" y="885" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1104.45" y="895.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (2,390,436 samples, 0.05%)</title><rect x="847.3" y="757" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="850.30" y="767.5" ></text>
</g>
<g >
<title>vma_expand (2,123,980 samples, 0.04%)</title><rect x="84.0" y="613" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="86.97" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,644,345 samples, 0.08%)</title><rect x="1159.7" y="965" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1162.70" y="975.5" ></text>
</g>
<g >
<title>el1h_64_irq (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="805" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1097.46" y="815.5" ></text>
</g>
<g >
<title>do_el0_svc (9,137,373 samples, 0.19%)</title><rect x="1111.3" y="869" width="2.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1114.26" y="879.5" ></text>
</g>
<g >
<title>get_signal (12,764,233 samples, 0.27%)</title><rect x="1186.8" y="1029" width="3.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1189.85" y="1039.5" ></text>
</g>
<g >
<title>net_rx_action (2,674,412 samples, 0.06%)</title><rect x="1112.3" y="421" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1115.30" y="431.5" ></text>
</g>
<g >
<title>__release_sock (1,966,726 samples, 0.04%)</title><rect x="1111.3" y="725" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1114.26" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,287,011 samples, 0.05%)</title><rect x="1166.3" y="741" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1169.34" y="751.5" ></text>
</g>
<g >
<title>sock_recvmsg (43,379,622 samples, 0.91%)</title><rect x="20.5" y="821" width="10.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="23.51" y="831.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (2,419,332 samples, 0.05%)</title><rect x="834.1" y="805" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="837.09" y="815.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,889,471 samples, 0.04%)</title><rect x="12.3" y="661" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="15.31" y="671.5" ></text>
</g>
<g >
<title>[libfmt.so.9.1.0] (10,503,303 samples, 0.22%)</title><rect x="331.2" y="933" width="2.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="334.25" y="943.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,253,029 samples, 0.03%)</title><rect x="31.8" y="965" width="0.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="34.77" y="975.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (44,807,114 samples, 0.94%)</title><rect x="1173.8" y="949" width="11.1" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1176.79" y="959.5" ></text>
</g>
<g >
<title>el1_interrupt (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="773" width="0.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1097.46" y="783.5" ></text>
</g>
<g >
<title>__lruvec_stat_mod_folio (1,317,208 samples, 0.03%)</title><rect x="232.2" y="741" width="0.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="235.23" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,209,766 samples, 0.05%)</title><rect x="1182.5" y="789" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1185.50" y="799.5" ></text>
</g>
<g >
<title>tcp_rcv_established (23,519,740 samples, 0.49%)</title><rect x="1084.6" y="229" width="5.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1087.56" y="239.5" ></text>
</g>
<g >
<title>el0t_64_irq (2,398,268 samples, 0.05%)</title><rect x="657.1" y="885" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="660.07" y="895.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="549" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1097.46" y="559.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (2,129,583 samples, 0.04%)</title><rect x="590.4" y="885" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="593.36" y="895.5" ></text>
</g>
<g >
<title>handle_mm_fault (4,135,998 samples, 0.09%)</title><rect x="326.8" y="757" width="1.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="329.84" y="767.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (2,087,897 samples, 0.04%)</title><rect x="126.3" y="965" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="129.34" y="975.5" ></text>
</g>
<g >
<title>ip_local_deliver (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="613" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1080.97" y="623.5" ></text>
</g>
<g >
<title>__sanitizer::MmapFixedImpl (4,089,599 samples, 0.09%)</title><rect x="83.5" y="821" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="86.48" y="831.5" ></text>
</g>
<g >
<title>__napi_poll (1,537,026 samples, 0.03%)</title><rect x="305.3" y="725" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="308.27" y="735.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (13,634,548 samples, 0.29%)</title><rect x="1142.5" y="821" width="3.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1145.53" y="831.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,728,807 samples, 0.06%)</title><rect x="10.0" y="1061" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" ></text>
</g>
<g >
<title>validate_xmit_xfrm (2,324,956 samples, 0.05%)</title><rect x="890.2" y="517" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="893.18" y="527.5" ></text>
</g>
<g >
<title>do_page_fault (9,347,354 samples, 0.20%)</title><rect x="79.6" y="789" width="2.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="82.57" y="799.5" ></text>
</g>
<g >
<title>el0_svc (4,182,325 samples, 0.09%)</title><rect x="1151.2" y="725" width="1.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1154.21" y="735.5" ></text>
</g>
<g >
<title>__do_softirq (2,046,963 samples, 0.04%)</title><rect x="125.8" y="789" width="0.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="128.83" y="799.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1,944,063 samples, 0.04%)</title><rect x="1107.5" y="933" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1110.54" y="943.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1,091,755 samples, 0.02%)</title><rect x="436.7" y="917" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="439.67" y="927.5" ></text>
</g>
<g >
<title>do_page_fault (4,160,312 samples, 0.09%)</title><rect x="331.8" y="741" width="1.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="334.77" y="751.5" ></text>
</g>
<g >
<title>el0_interrupt (2,129,583 samples, 0.04%)</title><rect x="590.4" y="869" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="593.36" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,076,298 samples, 0.04%)</title><rect x="1155.8" y="917" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1158.79" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (81,693,039 samples, 1.71%)</title><rect x="738.5" y="917" width="20.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="741.47" y="927.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (4,426,253 samples, 0.09%)</title><rect x="1119.1" y="837" width="1.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1122.12" y="847.5" ></text>
</g>
<g >
<title>el0t_64_irq (1,812,100 samples, 0.04%)</title><rect x="78.7" y="917" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="81.68" y="927.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::grow (1,654,651 samples, 0.03%)</title><rect x="1140.6" y="821" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1143.64" y="831.5" ></text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::advance_to (1,977,832 samples, 0.04%)</title><rect x="1135.1" y="869" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1138.14" y="879.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (16,864,909 samples, 0.35%)</title><rect x="1131.0" y="821" width="4.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1133.97" y="831.5" ></text>
</g>
<g >
<title>inet_release (4,225,966 samples, 0.09%)</title><rect x="1189.0" y="901" width="1.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1191.96" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (90,285,924 samples, 1.89%)</title><rect x="788.7" y="885" width="22.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="791.72" y="895.5" >_..</text>
</g>
<g >
<title>irq_exit_rcu (1,537,026 samples, 0.03%)</title><rect x="305.3" y="853" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="308.27" y="863.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (92,983,799 samples, 1.95%)</title><rect x="868.9" y="661" width="23.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="871.89" y="671.5" >_..</text>
</g>
<g >
<title>MemcmpInterceptorCommon (4,066,109 samples, 0.09%)</title><rect x="835.7" y="773" width="1.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="838.75" y="783.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,275,078 samples, 0.05%)</title><rect x="539.5" y="805" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="542.52" y="815.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (4,089,599 samples, 0.09%)</title><rect x="83.5" y="773" width="1.0" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="86.48" y="783.5" ></text>
</g>
<g >
<title>el0_da (6,230,760 samples, 0.13%)</title><rect x="326.8" y="821" width="1.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="329.84" y="831.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;::try_reserve (3,900,088 samples, 0.08%)</title><rect x="1134.2" y="805" width="0.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1137.18" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,342,351 samples, 0.13%)</title><rect x="1131.0" y="789" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1133.97" y="799.5" ></text>
</g>
<g >
<title>__sock_sendmsg (9,137,373 samples, 0.19%)</title><rect x="1111.3" y="789" width="2.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1114.26" y="799.5" ></text>
</g>
<g >
<title>__send (302,862,753 samples, 6.34%)</title><rect x="840.8" y="917" width="74.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="843.80" y="927.5" >__send</text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (6,622,470 samples, 0.14%)</title><rect x="1132.5" y="757" width="1.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1135.54" y="767.5" ></text>
</g>
<g >
<title>ip_rcv (66,678,067 samples, 1.40%)</title><rect x="872.0" y="325" width="16.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="874.98" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__detail::_Node_iterator&lt;int, true, false&gt;, bool&gt; std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_insert_unique_aux&lt;int const&amp;, std::__detail::_AllocNode&lt;std::allocator&lt;std::__detail::_Hash_node&lt;int, false&gt; &gt; &gt; &gt; (1,633,617 samples, 0.03%)</title><rect x="1101.0" y="917" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1104.04" y="927.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (3,712,248 samples, 0.08%)</title><rect x="540.6" y="869" width="1.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="543.64" y="879.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,769,786 samples, 0.04%)</title><rect x="82.4" y="853" width="0.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="85.40" y="863.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,573,115 samples, 0.05%)</title><rect x="10.0" y="1029" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (4,183,820 samples, 0.09%)</title><rect x="1102.0" y="933" width="1.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1104.96" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,962,198 samples, 0.04%)</title><rect x="1116.1" y="805" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1119.12" y="815.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (1,519,690 samples, 0.03%)</title><rect x="11.6" y="629" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="14.60" y="639.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (1,993,815 samples, 0.04%)</title><rect x="570.5" y="885" width="0.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="573.52" y="895.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1,952,188 samples, 0.04%)</title><rect x="1082.0" y="661" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1085.03" y="671.5" ></text>
</g>
<g >
<title>do_group_exit (12,764,233 samples, 0.27%)</title><rect x="1186.8" y="1013" width="3.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1189.85" y="1023.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="581" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1097.46" y="591.5" ></text>
</g>
<g >
<title>do_mem_abort (6,230,760 samples, 0.13%)</title><rect x="326.8" y="805" width="1.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="329.84" y="815.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,020,628 samples, 0.02%)</title><rect x="13.3" y="1013" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="16.26" y="1023.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (1,245,932 samples, 0.03%)</title><rect x="850.4" y="437" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="853.39" y="447.5" ></text>
</g>
<g >
<title>skb_clone (2,022,175 samples, 0.04%)</title><rect x="893.8" y="661" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="896.81" y="671.5" ></text>
</g>
<g >
<title>spdlog::details::full_formatter::format (32,743,913 samples, 0.69%)</title><rect x="1141.1" y="869" width="8.0" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1144.05" y="879.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (1,890,835 samples, 0.04%)</title><rect x="874.3" y="117" width="0.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="877.32" y="127.5" ></text>
</g>
<g >
<title>____fput (4,225,966 samples, 0.09%)</title><rect x="1189.0" y="965" width="1.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1191.96" y="975.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (12,964,821 samples, 0.27%)</title><rect x="1131.0" y="805" width="3.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1133.97" y="815.5" ></text>
</g>
<g >
<title>do_page_fault (1,769,786 samples, 0.04%)</title><rect x="82.4" y="789" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="85.40" y="799.5" ></text>
</g>
<g >
<title>process_backlog (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="613" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1097.46" y="623.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (4,978,942 samples, 0.10%)</title><rect x="888.5" y="517" width="1.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="891.45" y="527.5" ></text>
</g>
<g >
<title>do_page_fault (1,319,076 samples, 0.03%)</title><rect x="12.0" y="741" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="14.98" y="751.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char*, char*&gt; (1,654,651 samples, 0.03%)</title><rect x="1140.6" y="773" width="0.5" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1143.64" y="783.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (9,137,373 samples, 0.19%)</title><rect x="1111.3" y="901" width="2.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1114.26" y="911.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (6,760,050 samples, 0.14%)</title><rect x="877.6" y="181" width="1.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="880.63" y="191.5" ></text>
</g>
<g >
<title>fmt::v9::detail::count_digits (2,451,646 samples, 0.05%)</title><rect x="1148.0" y="773" width="0.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1151.02" y="783.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (2,111,590 samples, 0.04%)</title><rect x="1148.6" y="837" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1151.62" y="847.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_create_command (816,492 samples, 0.02%)</title><rect x="1100.8" y="997" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1103.84" y="1007.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1,245,932 samples, 0.03%)</title><rect x="850.4" y="533" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="853.39" y="543.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (8,201,784 samples, 0.17%)</title><rect x="879.3" y="149" width="2.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="882.30" y="159.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,124,877 samples, 0.04%)</title><rect x="1120.2" y="869" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1123.22" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2,336,771 samples, 0.05%)</title><rect x="566.0" y="933" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="568.96" y="943.5" ></text>
</g>
<g >
<title>run_timer_softirq (2,129,583 samples, 0.04%)</title><rect x="590.4" y="741" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="593.36" y="751.5" ></text>
</g>
<g >
<title>arch_counter_get_cntvct (5,690,189 samples, 0.12%)</title><rect x="892.4" y="645" width="1.4" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="895.41" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (76,078,964 samples, 1.59%)</title><rect x="572.1" y="933" width="18.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="575.08" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,792,551 samples, 0.12%)</title><rect x="1157.3" y="917" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1160.27" y="927.5" ></text>
</g>
<g >
<title>fmt::v9::detail::vformat_to&lt;char&gt; (51,850,802 samples, 1.09%)</title><rect x="1122.8" y="885" width="12.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1125.81" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (386,399,430 samples, 8.09%)</title><rect x="32.5" y="1013" width="95.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="35.49" y="1023.5" >std::__cxx1..</text>
</g>
<g >
<title>do_pte_missing (7,512,446 samples, 0.16%)</title><rect x="80.0" y="725" width="1.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="83.02" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,591,318 samples, 0.03%)</title><rect x="330.3" y="805" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="333.28" y="815.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (11,816,657 samples, 0.25%)</title><rect x="1164.0" y="917" width="2.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1166.99" y="927.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (24,223,649 samples, 0.51%)</title><rect x="858.4" y="709" width="6.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="861.43" y="719.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (4,906,180 samples, 0.10%)</title><rect x="1111.7" y="533" width="1.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1114.75" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::rfind (377,156,522 samples, 7.90%)</title><rect x="128.4" y="997" width="93.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="131.39" y="1007.5" >std::__cxx1..</text>
</g>
<g >
<title>arch_local_irq_restore (2,151,623 samples, 0.05%)</title><rect x="904.2" y="677" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="907.19" y="687.5" ></text>
</g>
<g >
<title>el0t_64_irq (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="901" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1080.97" y="911.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (2,209,766 samples, 0.05%)</title><rect x="1182.5" y="837" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1185.50" y="847.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (1,791,530 samples, 0.04%)</title><rect x="307.2" y="949" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="310.22" y="959.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (3,258,095 samples, 0.07%)</title><rect x="11.2" y="805" width="0.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.17" y="815.5" ></text>
</g>
<g >
<title>rw_verify_area (10,635,687 samples, 0.22%)</title><rect x="17.9" y="837" width="2.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="20.88" y="847.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (8,233,843 samples, 0.17%)</title><rect x="1164.9" y="885" width="2.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1167.87" y="895.5" ></text>
</g>
<g >
<title>iterate_tty_write (2,069,370 samples, 0.04%)</title><rect x="1151.2" y="581" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1154.21" y="591.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (4,182,325 samples, 0.09%)</title><rect x="1151.2" y="597" width="1.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1154.21" y="607.5" ></text>
</g>
<g >
<title>do_translation_fault (1,769,786 samples, 0.04%)</title><rect x="82.4" y="805" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="85.40" y="815.5" ></text>
</g>
<g >
<title>tcp_ack (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="437" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1097.46" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,577,171 samples, 0.10%)</title><rect x="11.2" y="949" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.17" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (176,522,540 samples, 3.70%)</title><rect x="41.4" y="981" width="43.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="44.36" y="991.5" >std:..</text>
</g>
<g >
<title>ip_finish_output (88,722,536 samples, 1.86%)</title><rect x="869.4" y="597" width="21.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="872.40" y="607.5" >i..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,192,665 samples, 0.13%)</title><rect x="1177.2" y="853" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1180.22" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,183,820 samples, 0.09%)</title><rect x="1102.0" y="901" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1104.96" y="911.5" ></text>
</g>
<g >
<title>do_signal (12,764,233 samples, 0.27%)</title><rect x="1186.8" y="1045" width="3.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1189.85" y="1055.5" ></text>
</g>
<g >
<title>__pi_clear_page (1,889,471 samples, 0.04%)</title><rect x="12.3" y="597" width="0.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="15.31" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,995,299 samples, 0.04%)</title><rect x="1117.1" y="805" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1120.13" y="815.5" ></text>
</g>
<g >
<title>do_pte_missing (1,253,029 samples, 0.03%)</title><rect x="1078.6" y="757" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1081.56" y="767.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (4,213,573 samples, 0.09%)</title><rect x="1079.4" y="709" width="1.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1082.44" y="719.5" ></text>
</g>
<g >
<title>__schedule (1,812,100 samples, 0.04%)</title><rect x="78.7" y="821" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="81.68" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,944,063 samples, 0.04%)</title><rect x="1107.5" y="917" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1110.54" y="927.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,906,380 samples, 0.04%)</title><rect x="332.8" y="741" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="335.80" y="751.5" ></text>
</g>
<g >
<title>tcp_try_rmem_schedule (1,026,195 samples, 0.02%)</title><rect x="1112.7" y="197" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1115.71" y="207.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1,537,026 samples, 0.03%)</title><rect x="305.3" y="677" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="308.27" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (14,993,650 samples, 0.31%)</title><rect x="1125.3" y="821" width="3.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1128.29" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,329,032 samples, 0.05%)</title><rect x="1171.9" y="869" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1174.93" y="879.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (65,586,984 samples, 1.37%)</title><rect x="1078.9" y="949" width="16.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1081.87" y="959.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,944,063 samples, 0.04%)</title><rect x="1107.5" y="885" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1110.54" y="895.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,810,524 samples, 0.12%)</title><rect x="538.1" y="837" width="1.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="541.08" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,977,832 samples, 0.04%)</title><rect x="1135.1" y="853" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1138.14" y="863.5" ></text>
</g>
<g >
<title>handle_softirqs (2,398,268 samples, 0.05%)</title><rect x="657.1" y="725" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="660.07" y="735.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="725" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1097.46" y="735.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (268,331,528 samples, 5.62%)</title><rect x="845.9" y="805" width="66.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="848.90" y="815.5" >__arm64..</text>
</g>
<g >
<title>[libc.so.6] (4,182,325 samples, 0.09%)</title><rect x="1151.2" y="805" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1154.21" y="815.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (4,226,900 samples, 0.09%)</title><rect x="220.6" y="965" width="1.0" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="223.56" y="975.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;::try_reserve (2,109,793 samples, 0.04%)</title><rect x="1119.7" y="805" width="0.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1122.70" y="815.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,519,690 samples, 0.03%)</title><rect x="11.6" y="677" width="0.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="14.60" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,183,820 samples, 0.09%)</title><rect x="1102.0" y="917" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1104.96" y="927.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (4,583,846 samples, 0.10%)</title><rect x="126.9" y="949" width="1.1" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="129.85" y="959.5" ></text>
</g>
<g >
<title>call_on_irq_stack (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="789" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1080.97" y="799.5" ></text>
</g>
<g >
<title>el0_svc (12,764,233 samples, 0.27%)</title><rect x="1186.8" y="1077" width="3.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1189.85" y="1087.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (50,942,434 samples, 1.07%)</title><rect x="1173.8" y="981" width="12.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1176.79" y="991.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2,198,954 samples, 0.05%)</title><rect x="1187.4" y="885" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1190.36" y="895.5" ></text>
</g>
<g >
<title>kmalloc_reserve (9,568,701 samples, 0.20%)</title><rect x="899.3" y="677" width="2.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="902.33" y="687.5" ></text>
</g>
<g >
<title>do_page_fault (1,591,318 samples, 0.03%)</title><rect x="330.3" y="709" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="333.28" y="719.5" ></text>
</g>
<g >
<title>___interceptor_memcmp (4,369,970 samples, 0.09%)</title><rect x="219.5" y="949" width="1.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="222.48" y="959.5" ></text>
</g>
<g >
<title>____do_softirq (2,178,872 samples, 0.05%)</title><rect x="720.6" y="725" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="723.63" y="735.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (104,053,253 samples, 2.18%)</title><rect x="811.0" y="885" width="25.8" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="814.04" y="895.5" >s..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (2,287,011 samples, 0.05%)</title><rect x="1155.2" y="965" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1158.22" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_5 (3,463,082 samples, 0.07%)</title><rect x="31.2" y="997" width="0.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="34.23" y="1007.5" ></text>
</g>
<g >
<title>uncharge_folio (2,198,954 samples, 0.05%)</title><rect x="1187.4" y="837" width="0.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1190.36" y="847.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (4,643,792 samples, 0.10%)</title><rect x="1139.5" y="773" width="1.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1142.50" y="783.5" ></text>
</g>
<g >
<title>do_raw_spin_lock (1,719,492 samples, 0.04%)</title><rect x="872.0" y="245" width="0.4" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="874.98" y="255.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,329,032 samples, 0.05%)</title><rect x="1171.9" y="853" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1174.93" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (15,066,428 samples, 0.32%)</title><rect x="1107.5" y="949" width="3.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1110.54" y="959.5" ></text>
</g>
<g >
<title>__arm64_sys_write (4,182,325 samples, 0.09%)</title><rect x="1151.2" y="661" width="1.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1154.21" y="671.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (2,209,766 samples, 0.05%)</title><rect x="1182.5" y="885" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1185.50" y="895.5" ></text>
</g>
<g >
<title>fmt::v9::detail::format_decimal_result&lt;char*&gt; fmt::v9::detail::format_decimal&lt;char, unsigned int&gt; (3,865,430 samples, 0.08%)</title><rect x="1183.1" y="837" width="0.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1186.05" y="847.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::get_time_ (2,008,752 samples, 0.04%)</title><rect x="13.5" y="949" width="0.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="16.51" y="959.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (2,086,433 samples, 0.04%)</title><rect x="1137.4" y="885" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1140.39" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,088,918 samples, 0.04%)</title><rect x="1117.6" y="853" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1120.62" y="863.5" ></text>
</g>
<g >
<title>_IO_do_write (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="789" width="0.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1153.69" y="799.5" ></text>
</g>
<g >
<title>ksys_read (56,399,670 samples, 1.18%)</title><rect x="17.3" y="869" width="13.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="20.29" y="879.5" ></text>
</g>
<g >
<title>__napi_poll (2,674,412 samples, 0.06%)</title><rect x="1112.3" y="405" width="0.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1115.30" y="415.5" ></text>
</g>
<g >
<title>__sanitizer::LoadedModule::addAddressRange (1,889,471 samples, 0.04%)</title><rect x="12.3" y="981" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="15.31" y="991.5" ></text>
</g>
<g >
<title>process_backlog (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="549" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1192.48" y="559.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (7,265,736 samples, 0.15%)</title><rect x="1178.8" y="853" width="1.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1181.75" y="863.5" ></text>
</g>
<g >
<title>ip_local_deliver (66,678,067 samples, 1.40%)</title><rect x="872.0" y="293" width="16.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="874.98" y="303.5" ></text>
</g>
<g >
<title>skb_release_data (2,255,091 samples, 0.05%)</title><rect x="878.7" y="149" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="881.74" y="159.5" ></text>
</g>
<g >
<title>do_exit (12,764,233 samples, 0.27%)</title><rect x="1186.8" y="997" width="3.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1189.85" y="1007.5" ></text>
</g>
<g >
<title>____do_softirq (2,398,268 samples, 0.05%)</title><rect x="657.1" y="757" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="660.07" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,949,906 samples, 0.19%)</title><rect x="1169.7" y="869" width="2.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1172.72" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,925,330 samples, 0.04%)</title><rect x="723.2" y="885" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="726.19" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,068,008 samples, 0.04%)</title><rect x="1101.4" y="901" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1104.45" y="911.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (2,046,963 samples, 0.04%)</title><rect x="125.8" y="581" width="0.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="128.83" y="591.5" ></text>
</g>
<g >
<title>do_pte_missing (2,626,645 samples, 0.06%)</title><rect x="82.8" y="661" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="85.84" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,191,259 samples, 0.13%)</title><rect x="1122.8" y="853" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1125.81" y="863.5" ></text>
</g>
<g >
<title>ip_finish_output2 (4,906,180 samples, 0.10%)</title><rect x="1111.7" y="581" width="1.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1114.75" y="591.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (1,962,198 samples, 0.04%)</title><rect x="1116.1" y="837" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1119.12" y="847.5" ></text>
</g>
<g >
<title>___interceptor_memcpy (2,004,239 samples, 0.04%)</title><rect x="306.2" y="965" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="309.19" y="975.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="581" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1080.97" y="591.5" ></text>
</g>
<g >
<title>folio_add_new_anon_rmap (1,253,029 samples, 0.03%)</title><rect x="1078.6" y="725" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1081.56" y="735.5" ></text>
</g>
<g >
<title>apparmor_file_permission (8,501,284 samples, 0.18%)</title><rect x="18.4" y="805" width="2.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="21.41" y="815.5" ></text>
</g>
<g >
<title>do_anonymous_page (7,512,446 samples, 0.16%)</title><rect x="80.0" y="709" width="1.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="83.02" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,903,031 samples, 0.12%)</title><rect x="1160.6" y="949" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1163.60" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,287,011 samples, 0.05%)</title><rect x="1166.3" y="757" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1169.34" y="767.5" ></text>
</g>
<g >
<title>pthread_getspecific (2,003,147 samples, 0.04%)</title><rect x="84.5" y="885" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="87.50" y="895.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (1,950,733 samples, 0.04%)</title><rect x="1091.9" y="677" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1094.92" y="687.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_buckets (2,177,585 samples, 0.05%)</title><rect x="721.7" y="885" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="724.71" y="895.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (2,398,268 samples, 0.05%)</title><rect x="657.1" y="853" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="660.07" y="863.5" ></text>
</g>
<g >
<title>__check_object_size (2,069,370 samples, 0.04%)</title><rect x="1151.2" y="565" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1154.21" y="575.5" ></text>
</g>
<g >
<title>zap_pte_range (4,271,701 samples, 0.09%)</title><rect x="1187.9" y="853" width="1.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1190.90" y="863.5" ></text>
</g>
<g >
<title>__libc_start_main (4,750,590,856 samples, 99.50%)</title><rect x="12.8" y="1093" width="1174.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="15.78" y="1103.5" >__libc_start_main</text>
</g>
<g >
<title>el0t_64_sync (1,519,690 samples, 0.03%)</title><rect x="11.6" y="693" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="14.60" y="703.5" ></text>
</g>
<g >
<title>tcp_sendmsg (9,137,373 samples, 0.19%)</title><rect x="1111.3" y="757" width="2.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1114.26" y="767.5" ></text>
</g>
<g >
<title>do_mem_abort (1,591,318 samples, 0.03%)</title><rect x="330.3" y="741" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="333.28" y="751.5" ></text>
</g>
<g >
<title>bpf_skops_write_hdr_opt.isra.0 (1,648,217 samples, 0.03%)</title><rect x="1112.3" y="165" width="0.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1115.30" y="175.5" ></text>
</g>
<g >
<title>el0_da (1,889,471 samples, 0.04%)</title><rect x="12.3" y="837" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="15.31" y="847.5" ></text>
</g>
<g >
<title>do_mem_abort (9,347,354 samples, 0.20%)</title><rect x="79.6" y="821" width="2.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="82.57" y="831.5" ></text>
</g>
<g >
<title>do_translation_fault (2,263,458 samples, 0.05%)</title><rect x="540.1" y="693" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="543.08" y="703.5" ></text>
</g>
<g >
<title>mas_walk (1,591,318 samples, 0.03%)</title><rect x="330.3" y="677" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="333.28" y="687.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (1,734,773 samples, 0.04%)</title><rect x="1174.8" y="821" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1177.79" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (3,865,430 samples, 0.08%)</title><rect x="1183.1" y="821" width="0.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1186.05" y="831.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1,317,208 samples, 0.03%)</title><rect x="232.2" y="709" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="235.23" y="719.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_deallocate_buckets (816,492 samples, 0.02%)</title><rect x="1100.8" y="885" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1103.84" y="895.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::AllocateBatch (3,258,095 samples, 0.07%)</title><rect x="11.2" y="821" width="0.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="14.17" y="831.5" ></text>
</g>
<g >
<title>alloc_anon_folio (1,253,029 samples, 0.03%)</title><rect x="31.8" y="805" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="34.77" y="815.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::run (4,750,590,856 samples, 99.50%)</title><rect x="12.8" y="1045" width="1174.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="15.78" y="1055.5" >tt::chat::server::EpollServer::run</text>
</g>
<g >
<title>ip_rcv_finish (1,965,619 samples, 0.04%)</title><rect x="83.5" y="373" width="0.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="86.48" y="383.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (1,906,380 samples, 0.04%)</title><rect x="332.8" y="789" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="335.80" y="799.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (2,220,342 samples, 0.05%)</title><rect x="541.0" y="837" width="0.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="544.01" y="847.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2,003,147 samples, 0.04%)</title><rect x="84.5" y="901" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="87.50" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (190,070,530 samples, 3.98%)</title><rect x="389.7" y="949" width="47.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="392.69" y="959.5" >std:..</text>
</g>
<g >
<title>__napi_poll (30,024,004 samples, 0.63%)</title><rect x="1083.0" y="405" width="7.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1085.96" y="415.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char*, char*&gt; (2,188,201 samples, 0.05%)</title><rect x="1134.2" y="741" width="0.5" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1137.18" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,086,433 samples, 0.04%)</title><rect x="1137.4" y="869" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1140.39" y="879.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (2,287,011 samples, 0.05%)</title><rect x="1166.3" y="837" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1169.34" y="847.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (6,512,097 samples, 0.14%)</title><rect x="567.8" y="901" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="570.79" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (217,890,670 samples, 4.56%)</title><rect x="784.0" y="933" width="53.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="786.97" y="943.5" >std::..</text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,220,342 samples, 0.05%)</title><rect x="541.0" y="853" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="544.01" y="863.5" ></text>
</g>
<g >
<title>__schedule (2,419,332 samples, 0.05%)</title><rect x="834.1" y="725" width="0.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="837.09" y="735.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (9,087,429 samples, 0.19%)</title><rect x="904.7" y="741" width="2.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="907.72" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,275,078 samples, 0.05%)</title><rect x="539.5" y="821" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="542.52" y="831.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (2,046,963 samples, 0.04%)</title><rect x="125.8" y="901" width="0.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="128.83" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,909,937 samples, 0.08%)</title><rect x="1185.4" y="933" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1188.42" y="943.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,008,752 samples, 0.04%)</title><rect x="13.5" y="885" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.51" y="895.5" ></text>
</g>
<g >
<title>el0t_64_sync (12,764,233 samples, 0.27%)</title><rect x="1186.8" y="1109" width="3.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1189.85" y="1119.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (7,017,925 samples, 0.15%)</title><rect x="27.5" y="693" width="1.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="30.45" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (75,817,473 samples, 1.59%)</title><rect x="307.7" y="933" width="18.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="310.66" y="943.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,178,872 samples, 0.05%)</title><rect x="720.6" y="773" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="723.63" y="783.5" ></text>
</g>
<g >
<title>invoke_syscall (1,906,380 samples, 0.04%)</title><rect x="332.8" y="661" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="335.80" y="671.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (1,591,318 samples, 0.03%)</title><rect x="330.3" y="693" width="0.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="333.28" y="703.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (2,240,730 samples, 0.05%)</title><rect x="1093.9" y="853" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1096.91" y="863.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (2,139,176 samples, 0.04%)</title><rect x="1084.6" y="181" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1087.56" y="191.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,018,823 samples, 0.04%)</title><rect x="10.7" y="949" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.68" y="959.5" ></text>
</g>
<g >
<title>_IO_do_write (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="869" width="0.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1187.01" y="879.5" ></text>
</g>
<g >
<title>alloc_anon_folio (1,959,682 samples, 0.04%)</title><rect x="231.7" y="757" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="234.75" y="767.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (4,747,630 samples, 0.10%)</title><rect x="10.0" y="1077" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="661" width="0.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1153.69" y="671.5" ></text>
</g>
<g >
<title>__sys_sendto (266,191,633 samples, 5.58%)</title><rect x="845.9" y="789" width="65.8" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="848.90" y="799.5" >__sys_s..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,042,589 samples, 0.08%)</title><rect x="1135.6" y="917" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1138.63" y="927.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (4,089,599 samples, 0.09%)</title><rect x="83.5" y="725" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="86.48" y="735.5" ></text>
</g>
<g >
<title>tcp_event_new_data_sent (1,971,580 samples, 0.04%)</title><rect x="876.0" y="165" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="878.99" y="175.5" ></text>
</g>
<g >
<title>el0t_64_sync (4,182,325 samples, 0.09%)</title><rect x="1151.2" y="757" width="1.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1154.21" y="767.5" ></text>
</g>
<g >
<title>tcp_wmem_schedule (2,356,131 samples, 0.05%)</title><rect x="1092.8" y="741" width="0.6" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1095.82" y="751.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (1,245,932 samples, 0.03%)</title><rect x="850.4" y="485" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="853.39" y="495.5" ></text>
</g>
<g >
<title>__inet_lookup_established (1,965,619 samples, 0.04%)</title><rect x="83.5" y="277" width="0.5" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="86.48" y="287.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (49,945,320 samples, 1.05%)</title><rect x="1080.5" y="741" width="12.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1083.48" y="751.5" ></text>
</g>
<g >
<title>tcp_check_space (2,264,467 samples, 0.05%)</title><rect x="1113.0" y="661" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1115.96" y="671.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (1,253,029 samples, 0.03%)</title><rect x="31.8" y="789" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="34.77" y="799.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="421" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1097.46" y="431.5" ></text>
</g>
<g >
<title>server (4,774,589,997 samples, 100.00%)</title><rect x="10.0" y="1125" width="1180.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="13.00" y="1135.5" >server</text>
</g>
<g >
<title>release_pages (2,198,954 samples, 0.05%)</title><rect x="1187.4" y="869" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1190.36" y="879.5" ></text>
</g>
<g >
<title>release_pages (1,319,076 samples, 0.03%)</title><rect x="12.0" y="597" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="14.98" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,935,866 samples, 0.04%)</title><rect x="1165.9" y="837" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1168.86" y="847.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (2,419,332 samples, 0.05%)</title><rect x="834.1" y="709" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="837.09" y="719.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (95,421,536 samples, 2.00%)</title><rect x="307.7" y="965" width="23.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="310.66" y="975.5" >s..</text>
</g>
<g >
<title>release_sock (7,489,237 samples, 0.16%)</title><rect x="849.4" y="725" width="1.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="852.36" y="735.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_deallocate_buckets (2,177,585 samples, 0.05%)</title><rect x="721.7" y="901" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="724.71" y="911.5" ></text>
</g>
<g >
<title>__lruvec_stat_mod_folio (1,253,029 samples, 0.03%)</title><rect x="1078.6" y="709" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1081.56" y="719.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2,198,954 samples, 0.05%)</title><rect x="1187.4" y="917" width="0.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1190.36" y="927.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2,674,412 samples, 0.06%)</title><rect x="1112.3" y="277" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1115.30" y="287.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (7,265,736 samples, 0.15%)</title><rect x="1178.8" y="757" width="1.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1181.75" y="767.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (2,263,458 samples, 0.05%)</title><rect x="540.1" y="837" width="0.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="543.08" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (176,522,540 samples, 3.70%)</title><rect x="41.4" y="965" width="43.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="44.36" y="975.5" >std:..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (8,113,784 samples, 0.17%)</title><rect x="1175.2" y="885" width="2.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1178.22" y="895.5" ></text>
</g>
<g >
<title>__napi_poll (1,965,619 samples, 0.04%)</title><rect x="83.5" y="453" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="86.48" y="463.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (1,846,670 samples, 0.04%)</title><rect x="1184.0" y="645" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1187.01" y="655.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (1,519,690 samples, 0.03%)</title><rect x="11.6" y="485" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="14.60" y="495.5" ></text>
</g>
<g >
<title>el0_da (1,738,405 samples, 0.04%)</title><rect x="11.2" y="741" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="14.17" y="751.5" ></text>
</g>
<g >
<title>MemcmpInterceptorCommon (2,016,215 samples, 0.04%)</title><rect x="220.1" y="917" width="0.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="223.06" y="927.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (4,906,180 samples, 0.10%)</title><rect x="1111.7" y="501" width="1.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1114.75" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (13,771,366 samples, 0.29%)</title><rect x="1156.3" y="965" width="3.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1159.30" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,936,974 samples, 0.04%)</title><rect x="1147.0" y="821" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1150.00" y="831.5" ></text>
</g>
<g >
<title>up_read (2,094,762 samples, 0.04%)</title><rect x="327.9" y="773" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="330.87" y="783.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (4,182,325 samples, 0.09%)</title><rect x="1151.2" y="693" width="1.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1154.21" y="703.5" ></text>
</g>
<g >
<title>__sk_mem_raise_allocated (1,026,195 samples, 0.02%)</title><rect x="1112.7" y="181" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1115.71" y="191.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; fmt::v9::detail::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (295,760,395 samples, 6.19%)</title><rect x="232.6" y="965" width="73.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="235.56" y="975.5" >fmt::v9:..</text>
</g>
<g >
<title>ip_local_deliver_finish (2,398,268 samples, 0.05%)</title><rect x="657.1" y="581" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="660.07" y="591.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,626,645 samples, 0.06%)</title><rect x="82.8" y="709" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="85.84" y="719.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,959,682 samples, 0.04%)</title><rect x="231.7" y="677" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="234.75" y="687.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (2,198,954 samples, 0.05%)</title><rect x="1187.4" y="853" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1190.36" y="863.5" ></text>
</g>
<g >
<title>mod_timer (1,818,047 samples, 0.04%)</title><rect x="894.9" y="629" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="897.89" y="639.5" ></text>
</g>
<g >
<title>ip_rcv_finish (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="629" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1080.97" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (13,032,938 samples, 0.27%)</title><rect x="567.8" y="949" width="3.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="570.79" y="959.5" ></text>
</g>
<g >
<title>_copy_from_iter (3,023,695 samples, 0.06%)</title><rect x="866.6" y="693" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="869.60" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,076,298 samples, 0.04%)</title><rect x="1155.8" y="901" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1158.79" y="911.5" ></text>
</g>
<g >
<title>char const* fmt::v9::detail::parse_replacement_field&lt;char, fmt::v9::detail::vformat_to&lt;char&gt; (23,094,541 samples, 0.48%)</title><rect x="1115.6" y="901" width="5.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1118.58" y="911.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (6,716,244 samples, 0.14%)</title><rect x="82.8" y="869" width="1.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="85.84" y="879.5" ></text>
</g>
<g >
<title>invoke_syscall (60,790,759 samples, 1.27%)</title><rect x="16.2" y="901" width="15.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="19.20" y="911.5" ></text>
</g>
<g >
<title>kfree_skbmem (2,142,365 samples, 0.04%)</title><rect x="23.8" y="741" width="0.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="26.80" y="751.5" ></text>
</g>
<g >
<title>___interceptor_memcpy (1,602,215 samples, 0.03%)</title><rect x="127.1" y="933" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="130.09" y="943.5" ></text>
</g>
<g >
<title>rcu_all_qs (1,722,970 samples, 0.04%)</title><rect x="1092.4" y="661" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1095.40" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2,252,595 samples, 0.05%)</title><rect x="571.5" y="949" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="574.52" y="959.5" ></text>
</g>
<g >
<title>__mod_timer (1,818,047 samples, 0.04%)</title><rect x="894.9" y="613" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="897.89" y="623.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (6,279,212 samples, 0.13%)</title><rect x="331.2" y="805" width="1.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="334.25" y="815.5" ></text>
</g>
<g >
<title>fmt::v9::detail::format_decimal_result&lt;char*&gt; fmt::v9::detail::format_decimal&lt;char, unsigned int&gt; (1,995,299 samples, 0.04%)</title><rect x="1117.1" y="853" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1120.13" y="863.5" ></text>
</g>
<g >
<title>el0_svc (4,089,599 samples, 0.09%)</title><rect x="83.5" y="757" width="1.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="86.48" y="767.5" ></text>
</g>
<g >
<title>ip_finish_output (36,112,430 samples, 0.76%)</title><rect x="1082.5" y="613" width="8.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1085.51" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,909,937 samples, 0.08%)</title><rect x="1185.4" y="917" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1188.42" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,342,777 samples, 0.05%)</title><rect x="567.2" y="949" width="0.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="570.21" y="959.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (2,209,766 samples, 0.05%)</title><rect x="1182.5" y="853" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1185.50" y="863.5" ></text>
</g>
<g >
<title>process_backlog (1,537,026 samples, 0.03%)</title><rect x="305.3" y="709" width="0.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="308.27" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,994,892 samples, 0.04%)</title><rect x="1173.8" y="917" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1176.79" y="927.5" ></text>
</g>
<g >
<title>invoke_syscall (1,020,628 samples, 0.02%)</title><rect x="13.3" y="933" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="16.26" y="943.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (11,214,272 samples, 0.23%)</title><rect x="10.0" y="1093" width="2.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1103.5" ></text>
</g>
<g >
<title>mas_wr_node_store (1,519,690 samples, 0.03%)</title><rect x="11.6" y="469" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="14.60" y="479.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,622,470 samples, 0.14%)</title><rect x="1132.5" y="693" width="1.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1135.54" y="703.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char*, char*&gt; (1,654,651 samples, 0.03%)</title><rect x="1140.6" y="757" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1143.64" y="767.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (1,906,380 samples, 0.04%)</title><rect x="332.8" y="837" width="0.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="335.80" y="847.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;::end (102,395,300 samples, 2.14%)</title><rect x="758.7" y="965" width="25.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="761.66" y="975.5" >s..</text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (2,093,889 samples, 0.04%)</title><rect x="850.7" y="645" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="853.70" y="655.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_and_push_buffer (2,094,125 samples, 0.04%)</title><rect x="1150.7" y="485" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1153.69" y="495.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (7,265,736 samples, 0.15%)</title><rect x="1178.8" y="837" width="1.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1181.75" y="847.5" ></text>
</g>
<g >
<title>do_el0_svc (58,545,339 samples, 1.23%)</title><rect x="1079.4" y="869" width="14.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1082.44" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (36,015,878 samples, 0.75%)</title><rect x="725.1" y="965" width="8.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="728.14" y="975.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2,172,381 samples, 0.05%)</title><rect x="1103.5" y="949" width="0.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1106.49" y="959.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1,245,932 samples, 0.03%)</title><rect x="850.4" y="501" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="853.39" y="511.5" ></text>
</g>
<g >
<title>do_pte_missing (1,319,076 samples, 0.03%)</title><rect x="12.0" y="677" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="14.98" y="687.5" ></text>
</g>
<g >
<title>do_page_fault (1,253,029 samples, 0.03%)</title><rect x="1078.6" y="821" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1081.56" y="831.5" ></text>
</g>
<g >
<title>nf_hook_slow (1,017,341 samples, 0.02%)</title><rect x="874.8" y="85" width="0.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="877.79" y="95.5" ></text>
</g>
<g >
<title>__aarch64_cas1_acq_rel (4,638,770 samples, 0.10%)</title><rect x="567.8" y="885" width="1.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="570.79" y="895.5" ></text>
</g>
<g >
<title>aa_inet_msg_perm (9,087,429 samples, 0.19%)</title><rect x="904.7" y="725" width="2.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="907.72" y="735.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::get_buffer&lt;char&gt; (2,125,743 samples, 0.04%)</title><rect x="1114.1" y="917" width="0.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1117.06" y="927.5" ></text>
</g>
<g >
<title>invoke_syscall (4,182,325 samples, 0.09%)</title><rect x="1151.2" y="677" width="1.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1154.21" y="687.5" ></text>
</g>
<g >
<title>memset (2,054,856 samples, 0.04%)</title><rect x="1085.1" y="213" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1088.09" y="223.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,123,083 samples, 0.04%)</title><rect x="1116.6" y="821" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1119.60" y="831.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (4,978,942 samples, 0.10%)</title><rect x="888.5" y="453" width="1.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="891.45" y="463.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1,648,217 samples, 0.03%)</title><rect x="1112.3" y="213" width="0.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1115.30" y="223.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (6,622,470 samples, 0.14%)</title><rect x="1132.5" y="725" width="1.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1135.54" y="735.5" ></text>
</g>
<g >
<title>__cond_resched (1,854,894 samples, 0.04%)</title><rect x="849.9" y="693" width="0.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="852.93" y="703.5" ></text>
</g>
<g >
<title>__kfree_skb (4,482,026 samples, 0.09%)</title><rect x="878.2" y="165" width="1.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="881.19" y="175.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (2,287,011 samples, 0.05%)</title><rect x="1166.3" y="773" width="0.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1169.34" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,109,793 samples, 0.04%)</title><rect x="1119.7" y="741" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1122.70" y="751.5" ></text>
</g>
<g >
<title>do_mem_abort (1,253,029 samples, 0.03%)</title><rect x="31.8" y="933" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="34.77" y="943.5" ></text>
</g>
<g >
<title>ip_local_deliver (2,046,963 samples, 0.04%)</title><rect x="125.8" y="645" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="128.83" y="655.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (60,092,549 samples, 1.26%)</title><rect x="1137.4" y="901" width="14.8" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1140.39" y="911.5" ></text>
</g>
<g >
<title>check_heap_object (3,402,180 samples, 0.07%)</title><rect x="865.8" y="661" width="0.8" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="868.76" y="671.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,626,645 samples, 0.06%)</title><rect x="82.8" y="805" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="85.84" y="815.5" ></text>
</g>
<g >
<title>expire_timers (2,178,872 samples, 0.05%)</title><rect x="720.6" y="645" width="0.6" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="723.63" y="655.5" ></text>
</g>
<g >
<title>do_mem_abort (2,626,645 samples, 0.06%)</title><rect x="82.8" y="757" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="85.84" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,030,347 samples, 0.08%)</title><rect x="1114.6" y="885" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1117.58" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (1,633,617 samples, 0.03%)</title><rect x="1101.0" y="885" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1104.04" y="895.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (2,008,752 samples, 0.04%)</title><rect x="13.5" y="741" width="0.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="16.51" y="751.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (220,937,904 samples, 4.63%)</title><rect x="382.3" y="965" width="54.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="385.33" y="975.5" >void ..</text>
</g>
<g >
<title>alloc_pages_mpol (24,223,649 samples, 0.51%)</title><rect x="858.4" y="661" width="6.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="861.43" y="671.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (7,265,736 samples, 0.15%)</title><rect x="1178.8" y="805" width="1.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1181.75" y="815.5" ></text>
</g>
<g >
<title>spdlog::details::log_msg::log_msg (1,566,124 samples, 0.03%)</title><rect x="1137.0" y="917" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1140.00" y="927.5" ></text>
</g>
<g >
<title>___interceptor_memcpy (1,602,215 samples, 0.03%)</title><rect x="127.1" y="917" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="130.09" y="927.5" ></text>
</g>
<g >
<title>do_pte_missing (1,253,029 samples, 0.03%)</title><rect x="31.8" y="837" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="34.77" y="847.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; spdlog::details::fmt_helper::time_fraction&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (5,827,609 samples, 0.12%)</title><rect x="1181.1" y="901" width="1.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1184.06" y="911.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (1,854,894 samples, 0.04%)</title><rect x="849.9" y="661" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="852.93" y="671.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,319,076 samples, 0.03%)</title><rect x="12.0" y="821" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="14.98" y="831.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::base_iterator&lt;fmt::v9::appender&gt; (1,821,250 samples, 0.04%)</title><rect x="1164.4" y="901" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1167.42" y="911.5" ></text>
</g>
<g >
<title>fmt::v9::detail::vformat_to&lt;char&gt; (22,220,624 samples, 0.47%)</title><rect x="1167.9" y="949" width="5.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1170.87" y="959.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1,017,341 samples, 0.02%)</title><rect x="874.8" y="117" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="877.79" y="127.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2,674,412 samples, 0.06%)</title><rect x="1112.3" y="373" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1115.30" y="383.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,383,183 samples, 0.09%)</title><rect x="1129.0" y="821" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1131.99" y="831.5" ></text>
</g>
<g >
<title>operator new (1,711,887 samples, 0.04%)</title><rect x="1134.7" y="757" width="0.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1137.72" y="767.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,263,458 samples, 0.05%)</title><rect x="540.1" y="773" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="543.08" y="783.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (2,240,730 samples, 0.05%)</title><rect x="1093.9" y="837" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1096.91" y="847.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; spdlog::details::to_string_view&lt;char, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (3,644,345 samples, 0.08%)</title><rect x="1159.7" y="997" width="0.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1162.70" y="1007.5" ></text>
</g>
<g >
<title>ip_finish_output (1,575,555 samples, 0.03%)</title><rect x="875.6" y="101" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="878.60" y="111.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (66,678,067 samples, 1.40%)</title><rect x="872.0" y="261" width="16.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="874.98" y="271.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (13,032,938 samples, 0.27%)</title><rect x="567.8" y="933" width="3.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="570.79" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (9,358,850 samples, 0.20%)</title><rect x="1143.6" y="709" width="2.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1146.59" y="719.5" ></text>
</g>
<g >
<title>__napi_poll (2,046,963 samples, 0.04%)</title><rect x="125.8" y="741" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="128.83" y="751.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="837" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1080.97" y="847.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="661" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.48" y="671.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,018,823 samples, 0.04%)</title><rect x="10.7" y="933" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.68" y="943.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (4,577,171 samples, 0.10%)</title><rect x="11.2" y="981" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.17" y="991.5" ></text>
</g>
<g >
<title>el0t_64_irq (2,419,332 samples, 0.05%)</title><rect x="834.1" y="821" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="837.09" y="831.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (4,906,180 samples, 0.10%)</title><rect x="1111.7" y="677" width="1.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1114.75" y="687.5" ></text>
</g>
<g >
<title>__kfree_skb (2,093,889 samples, 0.04%)</title><rect x="850.7" y="629" width="0.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="853.70" y="639.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (2,008,752 samples, 0.04%)</title><rect x="13.5" y="965" width="0.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="16.51" y="975.5" ></text>
</g>
<g >
<title>fmt::v9::vformat[abi:cxx11] (116,223,813 samples, 2.43%)</title><rect x="305.7" y="981" width="28.7" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="308.65" y="991.5" >fm..</text>
</g>
<g >
<title>handle_pte_fault (2,626,645 samples, 0.06%)</title><rect x="82.8" y="677" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="85.84" y="687.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (42,449,758 samples, 0.89%)</title><rect x="1080.9" y="677" width="10.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1083.94" y="687.5" ></text>
</g>
<g >
<title>raw_v4_input (1,981,030 samples, 0.04%)</title><rect x="872.4" y="245" width="0.5" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="875.40" y="255.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (8,248,191 samples, 0.17%)</title><rect x="1150.2" y="837" width="2.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1153.20" y="847.5" ></text>
</g>
<g >
<title>_dl_catch_exception (4,577,171 samples, 0.10%)</title><rect x="11.2" y="965" width="1.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="14.17" y="975.5" ></text>
</g>
<g >
<title>call_on_irq_stack (34,305,749 samples, 0.72%)</title><rect x="1083.0" y="485" width="8.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1085.96" y="495.5" ></text>
</g>
<g >
<title>__alloc_skb (1,890,835 samples, 0.04%)</title><rect x="874.3" y="149" width="0.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="877.32" y="159.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::AllocateBatch (1,519,690 samples, 0.03%)</title><rect x="11.6" y="773" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="14.60" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,865,959 samples, 0.04%)</title><rect x="1186.4" y="981" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.38" y="991.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (16,860,932 samples, 0.35%)</title><rect x="1168.3" y="917" width="4.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1171.34" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (116,071,753 samples, 2.43%)</title><rect x="512.9" y="917" width="28.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="515.87" y="927.5" >st..</text>
</g>
<g >
<title>do_translation_fault (4,160,312 samples, 0.09%)</title><rect x="331.8" y="757" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="334.77" y="767.5" ></text>
</g>
<g >
<title>ip_queue_xmit (88,722,536 samples, 1.86%)</title><rect x="869.4" y="645" width="21.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="872.40" y="655.5" >i..</text>
</g>
<g >
<title>process_backlog (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="693" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1080.97" y="703.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_deallocate_buckets (816,492 samples, 0.02%)</title><rect x="1100.8" y="901" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1103.84" y="911.5" ></text>
</g>
<g >
<title>std::ios_base_library_init (2,018,823 samples, 0.04%)</title><rect x="10.7" y="1045" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="13.68" y="1055.5" ></text>
</g>
<g >
<title>el0_da (1,769,786 samples, 0.04%)</title><rect x="82.4" y="837" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="85.40" y="847.5" ></text>
</g>
<g >
<title>__asan::GetCurrentThread (2,299,892 samples, 0.05%)</title><rect x="569.4" y="885" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="572.40" y="895.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (1,602,215 samples, 0.03%)</title><rect x="127.1" y="901" width="0.4" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="130.09" y="911.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (13,458,401 samples, 0.28%)</title><rect x="1177.2" y="885" width="3.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1180.22" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,108,069 samples, 0.04%)</title><rect x="1145.9" y="709" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1148.90" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,958,709 samples, 0.08%)</title><rect x="1152.8" y="885" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1155.76" y="895.5" ></text>
</g>
<g >
<title>____do_softirq (4,906,180 samples, 0.10%)</title><rect x="1111.7" y="469" width="1.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1114.75" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,008,752 samples, 0.04%)</title><rect x="13.5" y="869" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.51" y="879.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (2,292,978 samples, 0.05%)</title><rect x="1084.0" y="229" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1087.00" y="239.5" ></text>
</g>
<g >
<title>ip_rcv (25,812,718 samples, 0.54%)</title><rect x="1084.0" y="341" width="6.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1087.00" y="351.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (7,265,736 samples, 0.15%)</title><rect x="1178.8" y="821" width="1.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1181.75" y="831.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (2,102,977 samples, 0.04%)</title><rect x="1083.5" y="341" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1086.48" y="351.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,951,033 samples, 0.04%)</title><rect x="81.4" y="613" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="84.40" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (2,016,594 samples, 0.04%)</title><rect x="1163.5" y="933" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1166.49" y="943.5" ></text>
</g>
<g >
<title>tcp_ack (2,093,889 samples, 0.04%)</title><rect x="850.7" y="661" width="0.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="853.70" y="671.5" ></text>
</g>
<g >
<title>invoke_syscall (2,008,752 samples, 0.04%)</title><rect x="13.5" y="725" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="16.51" y="735.5" ></text>
</g>
<g >
<title>do_el0_svc (2,177,933 samples, 0.05%)</title><rect x="842.9" y="869" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="845.91" y="879.5" ></text>
</g>
<g >
<title>__sanitizer_free_hook@plt (1,873,327 samples, 0.04%)</title><rect x="568.9" y="869" width="0.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="571.93" y="879.5" ></text>
</g>
<g >
<title>do_mem_abort (5,810,524 samples, 0.12%)</title><rect x="538.1" y="773" width="1.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="541.08" y="783.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;int&gt;::_M_addr (1,907,456 samples, 0.04%)</title><rect x="734.0" y="933" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="737.04" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (31,823,991 samples, 0.67%)</title><rect x="33.0" y="965" width="7.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="35.98" y="975.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (2,398,268 samples, 0.05%)</title><rect x="657.1" y="869" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="660.07" y="879.5" ></text>
</g>
<g >
<title>tt::chat::server::ChannelManager::join_channel (1,633,617 samples, 0.03%)</title><rect x="1101.0" y="981" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1104.04" y="991.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,889,471 samples, 0.04%)</title><rect x="12.3" y="613" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="15.31" y="623.5" ></text>
</g>
<g >
<title>__do_softirq (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="677" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1097.46" y="687.5" ></text>
</g>
<g >
<title>call_on_irq_stack (4,906,180 samples, 0.10%)</title><rect x="1111.7" y="485" width="1.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1114.75" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,026,116 samples, 0.17%)</title><rect x="326.4" y="869" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="329.40" y="879.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (3,768,538 samples, 0.08%)</title><rect x="1174.3" y="917" width="0.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1177.29" y="927.5" ></text>
</g>
<g >
<title>do_softirq (34,305,749 samples, 0.72%)</title><rect x="1083.0" y="517" width="8.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1085.96" y="527.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1,998,689 samples, 0.04%)</title><rect x="889.7" y="517" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="892.68" y="527.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,319,076 samples, 0.03%)</title><rect x="12.0" y="693" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="14.98" y="703.5" ></text>
</g>
<g >
<title>tcp_try_coalesce (2,059,220 samples, 0.04%)</title><rect x="1080.0" y="645" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1082.97" y="655.5" ></text>
</g>
<g >
<title>ip_output (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="789" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1192.48" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (102,395,300 samples, 2.14%)</title><rect x="758.7" y="917" width="25.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="761.66" y="927.5" >_..</text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (18,134,675 samples, 0.38%)</title><rect x="1155.2" y="1013" width="4.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1158.22" y="1023.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,769,786 samples, 0.04%)</title><rect x="82.4" y="869" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="85.40" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (1,633,617 samples, 0.03%)</title><rect x="1101.0" y="869" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1104.04" y="879.5" ></text>
</g>
<g >
<title>put_cpu_partial (2,067,612 samples, 0.04%)</title><rect x="1186.8" y="853" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1189.85" y="863.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (50,942,434 samples, 1.07%)</title><rect x="1173.8" y="965" width="12.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1176.79" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (270,214,067 samples, 5.66%)</title><rect x="590.9" y="901" width="66.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="593.88" y="911.5" >__asan_..</text>
</g>
<g >
<title>__handle_mm_fault (1,889,471 samples, 0.04%)</title><rect x="12.3" y="757" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="15.31" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,865,959 samples, 0.04%)</title><rect x="1186.4" y="997" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1189.38" y="1007.5" ></text>
</g>
<g >
<title>__netif_receive_skb (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="677" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1080.97" y="687.5" ></text>
</g>
<g >
<title>tcp_push (116,725,893 samples, 2.44%)</title><rect x="867.4" y="709" width="28.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="870.35" y="719.5" >tc..</text>
</g>
<g >
<title>netif_rx_internal (4,978,942 samples, 0.10%)</title><rect x="888.5" y="469" width="1.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="891.45" y="479.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_new_connection (133,954,172 samples, 2.81%)</title><rect x="1153.7" y="1029" width="33.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1156.74" y="1039.5" >tt..</text>
</g>
<g >
<title>vma_alloc_folio (1,253,029 samples, 0.03%)</title><rect x="31.8" y="773" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="34.77" y="783.5" ></text>
</g>
<g >
<title>skb_release_data (4,281,745 samples, 0.09%)</title><rect x="1090.4" y="389" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1093.38" y="399.5" ></text>
</g>
<g >
<title>__tcp_close (4,225,966 samples, 0.09%)</title><rect x="1189.0" y="869" width="1.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1191.96" y="879.5" ></text>
</g>
<g >
<title>el0_interrupt (2,390,864 samples, 0.05%)</title><rect x="1078.0" y="853" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1080.97" y="863.5" ></text>
</g>
<g >
<title>do_page_fault (3,672,944 samples, 0.08%)</title><rect x="538.6" y="741" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="541.61" y="751.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (49,757,925 samples, 1.04%)</title><rect x="1137.9" y="885" width="12.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1140.91" y="895.5" ></text>
</g>
<g >
<title>__sanitizer::AddModuleSegments (1,889,471 samples, 0.04%)</title><rect x="12.3" y="997" width="0.5" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="15.31" y="1007.5" ></text>
</g>
<g >
<title>remove_vma (2,067,612 samples, 0.04%)</title><rect x="1186.8" y="917" width="0.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1189.85" y="927.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (66,155,303 samples, 1.39%)</title><rect x="1137.4" y="917" width="16.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1140.39" y="927.5" ></text>
</g>
<g >
<title>__napi_poll (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="629" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1097.46" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,086,433 samples, 0.04%)</title><rect x="1137.4" y="853" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1140.39" y="863.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (1,519,690 samples, 0.03%)</title><rect x="11.6" y="549" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="14.60" y="559.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (6,622,470 samples, 0.14%)</title><rect x="1132.5" y="789" width="1.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1135.54" y="799.5" ></text>
</g>
<g >
<title>call_timer_fn (2,129,583 samples, 0.04%)</title><rect x="590.4" y="693" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="593.36" y="703.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (34,305,749 samples, 0.72%)</title><rect x="1083.0" y="533" width="8.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1085.96" y="543.5" ></text>
</g>
<g >
<title>el0t_64_sync (4,991,456 samples, 0.10%)</title><rect x="231.3" y="933" width="1.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="234.33" y="943.5" ></text>
</g>
<g >
<title>skb_page_frag_refill (24,223,649 samples, 0.51%)</title><rect x="858.4" y="693" width="6.0" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="861.43" y="703.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (6,716,244 samples, 0.14%)</title><rect x="82.8" y="885" width="1.7" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="85.84" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1,838,117 samples, 0.04%)</title><rect x="723.7" y="853" width="0.4" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="726.66" y="863.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (1,537,026 samples, 0.03%)</title><rect x="305.3" y="885" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="308.27" y="895.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (2,149,762 samples, 0.05%)</title><rect x="1188.4" y="837" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1191.42" y="847.5" ></text>
</g>
<g >
<title>do_page_fault (1,253,029 samples, 0.03%)</title><rect x="31.8" y="901" width="0.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="34.77" y="911.5" ></text>
</g>
<g >
<title>tcp_rcv_established (3,339,821 samples, 0.07%)</title><rect x="850.4" y="677" width="0.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="853.39" y="687.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (2,198,954 samples, 0.05%)</title><rect x="1187.4" y="901" width="0.5" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1190.36" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (75,817,473 samples, 1.59%)</title><rect x="307.7" y="917" width="18.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="310.66" y="927.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (116,725,893 samples, 2.44%)</title><rect x="867.4" y="693" width="28.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="870.35" y="703.5" >__..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,847,397 samples, 0.04%)</title><rect x="1164.9" y="853" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1167.87" y="863.5" ></text>
</g>
<g >
<title>tcp_write_xmit (46,344,413 samples, 0.97%)</title><rect x="1080.9" y="693" width="11.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1083.94" y="703.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (2,263,458 samples, 0.05%)</title><rect x="540.1" y="805" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="543.08" y="815.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (2,209,766 samples, 0.05%)</title><rect x="1182.5" y="869" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1185.50" y="879.5" ></text>
</g>
<g >
<title>tcp_data_queue (2,059,220 samples, 0.04%)</title><rect x="1080.0" y="677" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1082.97" y="687.5" ></text>
</g>
<g >
<title>check_heap_object (2,069,370 samples, 0.04%)</title><rect x="1151.2" y="533" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1154.21" y="543.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,253,029 samples, 0.03%)</title><rect x="1078.6" y="741" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1081.56" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (2,068,008 samples, 0.04%)</title><rect x="1101.4" y="917" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1104.45" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,104,045 samples, 0.04%)</title><rect x="1152.2" y="869" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1155.24" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (11,993,266 samples, 0.25%)</title><rect x="1104.6" y="933" width="2.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1107.58" y="943.5" ></text>
</g>
<g >
<title>call_on_irq_stack (2,129,583 samples, 0.04%)</title><rect x="590.4" y="805" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="593.36" y="815.5" ></text>
</g>
<g >
<title>_dl_exception_create_format (4,577,171 samples, 0.10%)</title><rect x="11.2" y="901" width="1.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="14.17" y="911.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (4,527,026 samples, 0.09%)</title><rect x="569.4" y="901" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="572.40" y="911.5" ></text>
</g>
<g >
<title>memcpy@plt (2,155,895 samples, 0.05%)</title><rect x="306.7" y="965" width="0.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="309.69" y="975.5" ></text>
</g>
<g >
<title>do_mem_abort (1,769,786 samples, 0.04%)</title><rect x="82.4" y="821" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="85.40" y="831.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1,245,932 samples, 0.03%)</title><rect x="850.4" y="613" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="853.39" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,898,055 samples, 0.08%)</title><rect x="1166.9" y="901" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1169.91" y="911.5" ></text>
</g>
<g >
<title>inet_sendmsg (9,137,373 samples, 0.19%)</title><rect x="1111.3" y="773" width="2.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1114.26" y="783.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (19,936,079 samples, 0.42%)</title><rect x="79.6" y="901" width="4.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="82.57" y="911.5" ></text>
</g>
<g >
<title>el0_interrupt (2,419,332 samples, 0.05%)</title><rect x="834.1" y="773" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="837.09" y="783.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,046,963 samples, 0.04%)</title><rect x="125.8" y="853" width="0.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="128.83" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,940,754 samples, 0.08%)</title><rect x="1153.7" y="965" width="1.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1156.74" y="975.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,263,458 samples, 0.05%)</title><rect x="540.1" y="741" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="543.08" y="751.5" ></text>
</g>
<g >
<title>std::ctype&lt;char&gt;::ctype (2,018,823 samples, 0.04%)</title><rect x="10.7" y="981" width="0.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="13.68" y="991.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (2,046,963 samples, 0.04%)</title><rect x="125.8" y="693" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="128.83" y="703.5" ></text>
</g>
<g >
<title>tcp_write_xmit (112,616,067 samples, 2.36%)</title><rect x="868.4" y="677" width="27.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="871.37" y="687.5" >t..</text>
</g>
<g >
<title>do_pte_missing (2,202,194 samples, 0.05%)</title><rect x="326.8" y="709" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="329.84" y="719.5" ></text>
</g>
<g >
<title>fmt::v9::detail::format_decimal_result&lt;char*&gt; fmt::v9::detail::format_decimal&lt;char, unsigned int&gt; (2,451,646 samples, 0.05%)</title><rect x="1148.0" y="789" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1151.02" y="799.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,398,268 samples, 0.05%)</title><rect x="657.1" y="821" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="660.07" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (9,347,354 samples, 0.20%)</title><rect x="79.6" y="853" width="2.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="82.57" y="863.5" ></text>
</g>
<g >
<title>el0_da (2,263,458 samples, 0.05%)</title><rect x="540.1" y="725" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="543.08" y="735.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (2,004,239 samples, 0.04%)</title><rect x="306.2" y="949" width="0.5" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="309.19" y="959.5" ></text>
</g>
<g >
<title>process_backlog (2,046,963 samples, 0.04%)</title><rect x="125.8" y="725" width="0.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="128.83" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,121,199 samples, 0.04%)</title><rect x="1137.9" y="853" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1140.91" y="863.5" ></text>
</g>
<g >
<title>alloc_anon_folio (2,626,645 samples, 0.06%)</title><rect x="82.8" y="629" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="85.84" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (29,775,619 samples, 0.62%)</title><rect x="382.3" y="949" width="7.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="385.33" y="959.5" ></text>
</g>
<g >
<title>__fput (4,225,966 samples, 0.09%)</title><rect x="1189.0" y="949" width="1.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1191.96" y="959.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (11,278,938 samples, 0.24%)</title><rect x="1169.7" y="901" width="2.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1172.72" y="911.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;tt::chat::server::ChannelManager, std::default_delete&lt;tt::chat::server::ChannelManager&gt; &gt;::_M_ptr (2,001,536 samples, 0.04%)</title><rect x="737.4" y="917" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="740.45" y="927.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (4,271,701 samples, 0.09%)</title><rect x="1187.9" y="869" width="1.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1190.90" y="879.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,263,458 samples, 0.05%)</title><rect x="540.1" y="757" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="543.08" y="767.5" ></text>
</g>
<g >
<title>do_page_fault (2,263,458 samples, 0.05%)</title><rect x="540.1" y="677" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="543.08" y="687.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char*, char*&gt; (2,108,069 samples, 0.04%)</title><rect x="1145.9" y="789" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1148.90" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (247,657,254 samples, 5.19%)</title><rect x="660.0" y="885" width="61.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="662.96" y="895.5" >__asan..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::AllocateBatch (1,889,471 samples, 0.04%)</title><rect x="12.3" y="917" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="15.31" y="927.5" ></text>
</g>
<g >
<title>_start (4,750,590,856 samples, 99.50%)</title><rect x="12.8" y="1109" width="1174.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="15.78" y="1119.5" >_start</text>
</g>
<g >
<title>irq_exit_rcu (2,178,872 samples, 0.05%)</title><rect x="720.6" y="789" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="723.63" y="799.5" ></text>
</g>
<g >
<title>invoke_syscall (4,089,599 samples, 0.09%)</title><rect x="83.5" y="709" width="1.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="86.48" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,312,869 samples, 0.09%)</title><rect x="1138.4" y="821" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1141.43" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (169,388,937 samples, 3.55%)</title><rect x="85.0" y="981" width="41.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="87.99" y="991.5" >std..</text>
</g>
<g >
<title>mmap_region (2,123,980 samples, 0.04%)</title><rect x="84.0" y="629" width="0.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="86.97" y="639.5" ></text>
</g>
<g >
<title>unmap_single_vma.isra.0 (4,271,701 samples, 0.09%)</title><rect x="1187.9" y="901" width="1.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1190.90" y="911.5" ></text>
</g>
<g >
<title>expire_timers (2,129,583 samples, 0.04%)</title><rect x="590.4" y="709" width="0.5" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="593.36" y="719.5" ></text>
</g>
<g >
<title>__napi_poll (2,104,226 samples, 0.04%)</title><rect x="1189.5" y="565" width="0.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1192.48" y="575.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (2,209,766 samples, 0.05%)</title><rect x="1182.5" y="805" width="0.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1185.50" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (99,697,926 samples, 2.09%)</title><rect x="512.9" y="901" width="24.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="515.87" y="911.5" >_..</text>
</g>
<g >
<title>__mod_lruvec_state (1,317,208 samples, 0.03%)</title><rect x="232.2" y="725" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="235.23" y="735.5" ></text>
</g>
<g >
<title>____do_softirq (2,505,061 samples, 0.05%)</title><rect x="1094.5" y="693" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1097.46" y="703.5" ></text>
</g>
</g>
</svg>
