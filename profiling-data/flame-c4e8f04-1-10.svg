<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="774.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="757" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="757" > </text>
<g id="frames">
<g >
<title>___interceptor_malloc (2,077,313 samples, 4.35%)</title><rect x="661.2" y="437" width="51.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="664.20" y="447.5" >___in..</text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (1,529,696 samples, 3.20%)</title><rect x="179.2" y="117" width="37.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="182.23" y="127.5" >vma..</text>
</g>
<g >
<title>do_translation_fault (1,529,696 samples, 3.20%)</title><rect x="179.2" y="245" width="37.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="182.23" y="255.5" >do_..</text>
</g>
<g >
<title>unmap_single_vma.isra.0 (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="469" width="53.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1139.36" y="479.5" >unmap..</text>
</g>
<g >
<title>do_softirq_own_stack (1,734,993 samples, 3.63%)</title><rect x="136.4" y="261" width="42.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="139.37" y="271.5" >do_s..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32LocalCache&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt; &gt;::Refill (1,529,696 samples, 3.20%)</title><rect x="179.2" y="373" width="37.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="182.23" y="383.5" >__s..</text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (3,129,568 samples, 6.55%)</title><rect x="10.1" y="645" width="77.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.08" y="655.5" >[ld-linu..</text>
</g>
<g >
<title>__handle_mm_fault (2,077,313 samples, 4.35%)</title><rect x="661.2" y="277" width="51.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="664.20" y="287.5" >__han..</text>
</g>
<g >
<title>free_page_and_swap_cache (769,865 samples, 1.61%)</title><rect x="68.4" y="133" width="19.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="71.37" y="143.5" ></text>
</g>
<g >
<title>__alloc_pages (769,865 samples, 1.61%)</title><rect x="68.4" y="405" width="19.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="71.37" y="415.5" ></text>
</g>
<g >
<title>__d_free (2,049,737 samples, 4.29%)</title><rect x="488.7" y="213" width="50.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="491.70" y="223.5" >__d_f..</text>
</g>
<g >
<title>el0t_64_irq_handler (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="677" width="53.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1139.36" y="687.5" >el0t_..</text>
</g>
<g >
<title>el0_svc (20,389 samples, 0.04%)</title><rect x="295.0" y="645" width="0.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="297.97" y="655.5" ></text>
</g>
<g >
<title>do_page_fault (2,077,313 samples, 4.35%)</title><rect x="661.2" y="309" width="51.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="664.20" y="319.5" >do_pa..</text>
</g>
<g >
<title>do_el0_svc (20,389 samples, 0.04%)</title><rect x="295.0" y="629" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="297.97" y="639.5" ></text>
</g>
<g >
<title>_start (34,037,106 samples, 71.26%)</title><rect x="295.5" y="693" width="840.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="298.47" y="703.5" >_start</text>
</g>
<g >
<title>__arm64_sys_execve (20,389 samples, 0.04%)</title><rect x="295.0" y="581" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="297.97" y="591.5" ></text>
</g>
<g >
<title>load_elf_binary (20,389 samples, 0.04%)</title><rect x="295.0" y="485" width="0.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="297.97" y="495.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,529,696 samples, 3.20%)</title><rect x="179.2" y="197" width="37.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="182.23" y="207.5" >__h..</text>
</g>
<g >
<title>rcu_report_qs_rnp (1,734,993 samples, 3.63%)</title><rect x="136.4" y="133" width="42.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="139.37" y="143.5" >rcu_..</text>
</g>
<g >
<title>kmem_cache_free (2,049,737 samples, 4.29%)</title><rect x="488.7" y="197" width="50.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="491.70" y="207.5" >kmem_..</text>
</g>
<g >
<title>__interception::InterceptFunction (4,511,131 samples, 9.44%)</title><rect x="136.4" y="613" width="111.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="139.37" y="623.5" >__interceptio..</text>
</g>
<g >
<title>InitializeCommonInterceptors (4,511,131 samples, 9.44%)</title><rect x="136.4" y="629" width="111.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="139.37" y="639.5" >InitializeCom..</text>
</g>
<g >
<title>el0_da (2,077,313 samples, 4.35%)</title><rect x="661.2" y="341" width="51.3" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="664.20" y="351.5" >el0_da</text>
</g>
<g >
<title>tcp_recvmsg_locked (2,145,138 samples, 4.49%)</title><rect x="901.8" y="357" width="53.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="904.76" y="367.5" >tcp_r..</text>
</g>
<g >
<title>__irq_exit_rcu (769,865 samples, 1.61%)</title><rect x="68.4" y="293" width="19.0" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="71.37" y="303.5" ></text>
</g>
<g >
<title>mas_store_gfp (1,908,586 samples, 4.00%)</title><rect x="247.8" y="389" width="47.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="250.81" y="399.5" >mas_..</text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (4,511,131 samples, 9.44%)</title><rect x="136.4" y="565" width="111.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="139.37" y="575.5" >[ld-linux-aar..</text>
</g>
<g >
<title>__asan::asan_malloc (2,077,313 samples, 4.35%)</title><rect x="661.2" y="421" width="51.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="664.20" y="431.5" >__asa..</text>
</g>
<g >
<title>el0_svc_common.constprop.0 (1,908,586 samples, 4.00%)</title><rect x="247.8" y="485" width="47.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="250.81" y="495.5" >el0_..</text>
</g>
<g >
<title>handle_mm_fault (1,529,696 samples, 3.20%)</title><rect x="179.2" y="213" width="37.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="182.23" y="223.5" >han..</text>
</g>
<g >
<title>invoke_syscall (1,908,586 samples, 4.00%)</title><rect x="247.8" y="469" width="47.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="250.81" y="479.5" >invo..</text>
</g>
<g >
<title>el0t_64_irq_handler (1,734,993 samples, 3.63%)</title><rect x="136.4" y="341" width="42.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="139.37" y="351.5" >el0t..</text>
</g>
<g >
<title>rcu_core_si (1,734,993 samples, 3.63%)</title><rect x="136.4" y="181" width="42.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="139.37" y="191.5" >rcu_..</text>
</g>
<g >
<title>percpu_ref_put_many.constprop.0 (769,865 samples, 1.61%)</title><rect x="68.4" y="69" width="19.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="71.37" y="79.5" ></text>
</g>
<g >
<title>__folio_put (769,865 samples, 1.61%)</title><rect x="68.4" y="117" width="19.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="71.37" y="127.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_5 (3,789,362 samples, 7.93%)</title><rect x="1042.7" y="597" width="93.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1045.74" y="607.5" >__asan_stac..</text>
</g>
<g >
<title>__alloc_pages (1,529,696 samples, 3.20%)</title><rect x="179.2" y="69" width="37.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="182.23" y="79.5" >__a..</text>
</g>
<g >
<title>alloc_pages_mpol (769,865 samples, 1.61%)</title><rect x="68.4" y="421" width="19.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="71.37" y="431.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,077,313 samples, 4.35%)</title><rect x="661.2" y="373" width="51.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="664.20" y="383.5" >el0t_..</text>
</g>
<g >
<title>__pi_clear_page (1,529,696 samples, 3.20%)</title><rect x="179.2" y="37" width="37.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="182.23" y="47.5" >__p..</text>
</g>
<g >
<title>sock_read_iter (7,911,217 samples, 16.56%)</title><rect x="809.2" y="421" width="195.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="812.17" y="431.5" >sock_read_iter</text>
</g>
<g >
<title>spdlog::logger::log (2,077,313 samples, 4.35%)</title><rect x="661.2" y="613" width="51.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="664.20" y="623.5" >spdlo..</text>
</g>
<g >
<title>el0t_64_sync (20,389 samples, 0.04%)</title><rect x="295.0" y="677" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="297.97" y="687.5" ></text>
</g>
<g >
<title>do_vmi_munmap (1,908,586 samples, 4.00%)</title><rect x="247.8" y="421" width="47.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="250.81" y="431.5" >do_v..</text>
</g>
<g >
<title>el0t_64_sync_handler (20,389 samples, 0.04%)</title><rect x="295.0" y="661" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="297.97" y="671.5" ></text>
</g>
<g >
<title>__arm64_sys_epoll_pwait (1,884,251 samples, 3.94%)</title><rect x="442.2" y="517" width="46.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="445.15" y="527.5" >__ar..</text>
</g>
<g >
<title>do_group_exit (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="581" width="53.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1139.36" y="591.5" >do_gr..</text>
</g>
<g >
<title>handle_softirqs (2,049,737 samples, 4.29%)</title><rect x="488.7" y="277" width="50.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="491.70" y="287.5" >handl..</text>
</g>
<g >
<title>rcu_do_batch (2,049,737 samples, 4.29%)</title><rect x="488.7" y="229" width="50.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="491.70" y="239.5" >rcu_d..</text>
</g>
<g >
<title>do_anonymous_page (1,529,696 samples, 3.20%)</title><rect x="179.2" y="149" width="37.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="182.23" y="159.5" >do_..</text>
</g>
<g >
<title>_dl_catch_exception (4,511,131 samples, 9.44%)</title><rect x="136.4" y="549" width="111.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="139.37" y="559.5" >_dl_catch_exc..</text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,602,349 samples, 3.35%)</title><rect x="28.8" y="597" width="39.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="31.79" y="607.5" >[ld..</text>
</g>
<g >
<title>__sanitizer::InternalAlloc (4,511,131 samples, 9.44%)</title><rect x="136.4" y="453" width="111.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="139.37" y="463.5" >__sanitizer::..</text>
</g>
<g >
<title>___interceptor_read.part.0 (11,823,339 samples, 24.75%)</title><rect x="712.5" y="597" width="292.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="715.52" y="607.5" >___interceptor_read.part.0</text>
</g>
<g >
<title>all (47,763,590 samples, 100%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>do_epoll_pwait.part.0 (6,982,466 samples, 14.62%)</title><rect x="488.7" y="485" width="172.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="491.70" y="495.5" >do_epoll_pwait.part.0</text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (4,511,131 samples, 9.44%)</title><rect x="136.4" y="501" width="111.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="139.37" y="511.5" >[ld-linux-aar..</text>
</g>
<g >
<title>alloc_anon_folio (1,529,696 samples, 3.20%)</title><rect x="179.2" y="133" width="37.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="182.23" y="143.5" >all..</text>
</g>
<g >
<title>do_exit (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="565" width="53.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1139.36" y="575.5" >do_exit</text>
</g>
<g >
<title>unmap_page_range (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="453" width="53.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1139.36" y="463.5" >unmap..</text>
</g>
<g >
<title>handle_softirqs (769,865 samples, 1.61%)</title><rect x="68.4" y="213" width="19.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="71.37" y="223.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (769,865 samples, 1.61%)</title><rect x="68.4" y="277" width="19.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="71.37" y="287.5" ></text>
</g>
<g >
<title>rcu_report_qs_rdp (1,734,993 samples, 3.63%)</title><rect x="136.4" y="149" width="42.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="139.37" y="159.5" >rcu_..</text>
</g>
<g >
<title>irq_exit_rcu (2,049,737 samples, 4.29%)</title><rect x="488.7" y="373" width="50.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="491.70" y="383.5" >irq_e..</text>
</g>
<g >
<title>call_on_irq_stack (1,734,993 samples, 3.63%)</title><rect x="136.4" y="245" width="42.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="139.37" y="255.5" >call..</text>
</g>
<g >
<title>el1_interrupt (2,049,737 samples, 4.29%)</title><rect x="488.7" y="389" width="50.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="491.70" y="399.5" >el1_i..</text>
</g>
<g >
<title>[unknown] (20,389 samples, 0.04%)</title><rect x="295.0" y="693" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="297.97" y="703.5" ></text>
</g>
<g >
<title>do_page_fault (1,529,696 samples, 3.20%)</title><rect x="179.2" y="229" width="37.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="182.23" y="239.5" >do_..</text>
</g>
<g >
<title>__mmput (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="517" width="53.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1139.36" y="527.5" >__mmput</text>
</g>
<g >
<title>__lsan::InitializePlatformSpecificModules (1,908,586 samples, 4.00%)</title><rect x="247.8" y="645" width="47.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="250.81" y="655.5" >__ls..</text>
</g>
<g >
<title>el0t_64_sync_handler (769,865 samples, 1.61%)</title><rect x="68.4" y="581" width="19.0" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="71.37" y="591.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_client_data (17,155,790 samples, 35.92%)</title><rect x="712.5" y="613" width="423.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="715.52" y="623.5" >tt::chat::server::EpollServer::handle_client_data</text>
</g>
<g >
<title>shift_arg_pages (20,389 samples, 0.04%)</title><rect x="295.0" y="453" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="297.97" y="463.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (1,529,696 samples, 3.20%)</title><rect x="179.2" y="341" width="37.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="182.23" y="351.5" >__s..</text>
</g>
<g >
<title>do_notify_resume (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="629" width="53.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1139.36" y="639.5" >do_no..</text>
</g>
<g >
<title>el0t_64_sync_handler (9,909,998 samples, 20.75%)</title><rect x="759.8" y="549" width="244.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="762.79" y="559.5" >el0t_64_sync_handler</text>
</g>
<g >
<title>obj_cgroup_charge (2,077,313 samples, 4.35%)</title><rect x="661.2" y="197" width="51.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="664.20" y="207.5" >obj_c..</text>
</g>
<g >
<title>dl_iterate_phdr (1,908,586 samples, 4.00%)</title><rect x="247.8" y="613" width="47.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="250.81" y="623.5" >dl_i..</text>
</g>
<g >
<title>__anon_vma_prepare (2,077,313 samples, 4.35%)</title><rect x="661.2" y="213" width="51.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="664.20" y="223.5" >__ano..</text>
</g>
<g >
<title>handle_mm_fault (2,077,313 samples, 4.35%)</title><rect x="661.2" y="293" width="51.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="664.20" y="303.5" >handl..</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (1,982,438 samples, 4.15%)</title><rect x="87.4" y="645" width="49.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="90.39" y="655.5" >[lib..</text>
</g>
<g >
<title>__el0_irq_handler_common (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="661" width="53.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1139.36" y="671.5" >__el0..</text>
</g>
<g >
<title>do_epoll_wait (6,982,466 samples, 14.62%)</title><rect x="488.7" y="469" width="172.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="491.70" y="479.5" >do_epoll_wait</text>
</g>
<g >
<title>el0t_64_sync (10,861,040 samples, 22.74%)</title><rect x="392.9" y="597" width="268.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="395.88" y="607.5" >el0t_64_sync</text>
</g>
<g >
<title>do_execveat_common.isra.0 (20,389 samples, 0.04%)</title><rect x="295.0" y="565" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="297.97" y="575.5" ></text>
</g>
<g >
<title>inet_recvmsg (5,892,784 samples, 12.34%)</title><rect x="809.2" y="389" width="145.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="812.17" y="399.5" >inet_recvmsg</text>
</g>
<g >
<title>__el0_irq_handler_common (1,734,993 samples, 3.63%)</title><rect x="136.4" y="325" width="42.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="139.37" y="335.5" >__el..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::AllocateBatch (3,264,689 samples, 6.84%)</title><rect x="136.4" y="405" width="80.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="139.37" y="415.5" >__sanitiz..</text>
</g>
<g >
<title>handle_pte_fault (1,529,696 samples, 3.20%)</title><rect x="179.2" y="181" width="37.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="182.23" y="191.5" >han..</text>
</g>
<g >
<title>ep_item_poll.isra.0 (1,476,866 samples, 3.09%)</title><rect x="586.5" y="421" width="36.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="589.46" y="431.5" >ep_..</text>
</g>
<g >
<title>__irq_exit_rcu (1,734,993 samples, 3.63%)</title><rect x="136.4" y="277" width="42.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="139.37" y="287.5" >__ir..</text>
</g>
<g >
<title>call_on_irq_stack (2,049,737 samples, 4.29%)</title><rect x="488.7" y="325" width="50.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="491.70" y="335.5" >call_..</text>
</g>
<g >
<title>__do_softirq (1,734,993 samples, 3.63%)</title><rect x="136.4" y="213" width="42.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="139.37" y="223.5" >__do..</text>
</g>
<g >
<title>handle_pte_fault (769,865 samples, 1.61%)</title><rect x="68.4" y="485" width="19.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="71.37" y="495.5" ></text>
</g>
<g >
<title>ep_poll (6,982,466 samples, 14.62%)</title><rect x="488.7" y="453" width="172.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="491.70" y="463.5" >ep_poll</text>
</g>
<g >
<title>setup_arg_pages (20,389 samples, 0.04%)</title><rect x="295.0" y="469" width="0.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="297.97" y="479.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,908,586 samples, 4.00%)</title><rect x="247.8" y="341" width="47.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="250.81" y="351.5" >kmem..</text>
</g>
<g >
<title>__sanitizer::ListOfModules::init (1,908,586 samples, 4.00%)</title><rect x="247.8" y="629" width="47.2" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="250.81" y="639.5" >__sa..</text>
</g>
<g >
<title>wp_page_copy (769,865 samples, 1.61%)</title><rect x="68.4" y="453" width="19.0" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="71.37" y="463.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (5,112,006 samples, 10.70%)</title><rect x="10.1" y="661" width="126.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.08" y="671.5" >[ld-linux-aarch..</text>
</g>
<g >
<title>skb_copy_datagram_iter (2,145,138 samples, 4.49%)</title><rect x="901.8" y="341" width="53.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="904.76" y="351.5" >skb_c..</text>
</g>
<g >
<title>_IO_doallocbuf (2,077,313 samples, 4.35%)</title><rect x="661.2" y="469" width="51.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="664.20" y="479.5" >_IO_d..</text>
</g>
<g >
<title>__slab_free (1,908,586 samples, 4.00%)</title><rect x="247.8" y="325" width="47.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="250.81" y="335.5" >__sl..</text>
</g>
<g >
<title>el0t_64_sync_handler (2,077,313 samples, 4.35%)</title><rect x="661.2" y="357" width="51.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="664.20" y="367.5" >el0t_..</text>
</g>
<g >
<title>vma_alloc_folio (1,529,696 samples, 3.20%)</title><rect x="179.2" y="101" width="37.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="182.23" y="111.5" >vma..</text>
</g>
<g >
<title>get_page_from_freelist (769,865 samples, 1.61%)</title><rect x="68.4" y="389" width="19.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="71.37" y="399.5" ></text>
</g>
<g >
<title>dlsym (4,511,131 samples, 9.44%)</title><rect x="136.4" y="597" width="111.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="139.37" y="607.5" >dlsym</text>
</g>
<g >
<title>el0t_64_sync (1,529,696 samples, 3.20%)</title><rect x="179.2" y="309" width="37.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="182.23" y="319.5" >el0..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (3,264,689 samples, 6.84%)</title><rect x="136.4" y="389" width="80.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="139.37" y="399.5" >__sanitiz..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (1,529,696 samples, 3.20%)</title><rect x="179.2" y="325" width="37.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="182.23" y="335.5" >__s..</text>
</g>
<g >
<title>tt::chat::server::EpollServer::run (34,037,106 samples, 71.26%)</title><rect x="295.5" y="629" width="840.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="298.47" y="639.5" >tt::chat::server::EpollServer::run</text>
</g>
<g >
<title>mutex_unlock (1,548,658 samples, 3.24%)</title><rect x="622.9" y="437" width="38.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="625.94" y="447.5" >mut..</text>
</g>
<g >
<title>aa_inet_msg_perm (2,018,433 samples, 4.23%)</title><rect x="954.8" y="357" width="49.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="957.75" y="367.5" >aa_in..</text>
</g>
<g >
<title>el1_interrupt (769,865 samples, 1.61%)</title><rect x="68.4" y="325" width="19.0" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="71.37" y="335.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (2,077,313 samples, 4.35%)</title><rect x="661.2" y="389" width="51.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="664.20" y="399.5" >__asa..</text>
</g>
<g >
<title>handle_pte_fault (2,077,313 samples, 4.35%)</title><rect x="661.2" y="261" width="51.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="664.20" y="271.5" >handl..</text>
</g>
<g >
<title>____do_softirq (769,865 samples, 1.61%)</title><rect x="68.4" y="245" width="19.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="71.37" y="255.5" ></text>
</g>
<g >
<title>tlb_remove_table_rcu (769,865 samples, 1.61%)</title><rect x="68.4" y="149" width="19.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="71.37" y="159.5" ></text>
</g>
<g >
<title>__slab_free (2,049,737 samples, 4.29%)</title><rect x="488.7" y="181" width="50.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="491.70" y="191.5" >__sla..</text>
</g>
<g >
<title>get_page_from_freelist (1,529,696 samples, 3.20%)</title><rect x="179.2" y="53" width="37.8" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="182.23" y="63.5" >get..</text>
</g>
<g >
<title>arch_local_irq_restore (2,049,737 samples, 4.29%)</title><rect x="488.7" y="149" width="50.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="491.70" y="159.5" >arch_..</text>
</g>
<g >
<title>__asan_stack_free_5 (1,543,089 samples, 3.23%)</title><rect x="1004.6" y="597" width="38.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1007.62" y="607.5" >__a..</text>
</g>
<g >
<title>__asan::Allocator::Allocate (2,077,313 samples, 4.35%)</title><rect x="661.2" y="405" width="51.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="664.20" y="415.5" >__asa..</text>
</g>
<g >
<title>handle_mm_fault (769,865 samples, 1.61%)</title><rect x="68.4" y="517" width="19.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="71.37" y="527.5" ></text>
</g>
<g >
<title>get_signal (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="597" width="53.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1139.36" y="607.5" >get_s..</text>
</g>
<g >
<title>alloc_pages_mpol (1,529,696 samples, 3.20%)</title><rect x="179.2" y="85" width="37.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="182.23" y="95.5" >all..</text>
</g>
<g >
<title>__asan::InitializeAsanInterceptors (4,511,131 samples, 9.44%)</title><rect x="136.4" y="645" width="111.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="139.37" y="655.5" >__asan::Initi..</text>
</g>
<g >
<title>el0t_64_sync (9,909,998 samples, 20.75%)</title><rect x="759.8" y="565" width="244.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="762.79" y="575.5" >el0t_64_sync</text>
</g>
<g >
<title>rcu_core (1,734,993 samples, 3.63%)</title><rect x="136.4" y="165" width="42.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="139.37" y="175.5" >rcu_..</text>
</g>
<g >
<title>__libc_start_main (34,037,106 samples, 71.26%)</title><rect x="295.5" y="677" width="840.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="298.47" y="687.5" >__libc_start_main</text>
</g>
<g >
<title>spdlog::logger::sink_it_ (2,077,313 samples, 4.35%)</title><rect x="661.2" y="581" width="51.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="664.20" y="591.5" >spdlo..</text>
</g>
<g >
<title>rcu_core_si (2,049,737 samples, 4.29%)</title><rect x="488.7" y="261" width="50.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="491.70" y="271.5" >rcu_c..</text>
</g>
<g >
<title>do_vmi_align_munmap (1,908,586 samples, 4.00%)</title><rect x="247.8" y="405" width="47.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="250.81" y="415.5" >do_v..</text>
</g>
<g >
<title>irq_exit_rcu (769,865 samples, 1.61%)</title><rect x="68.4" y="309" width="19.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="71.37" y="319.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (2,077,313 samples, 4.35%)</title><rect x="661.2" y="565" width="51.3" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="664.20" y="575.5" >spdlo..</text>
</g>
<g >
<title>___interceptor_malloc (4,511,131 samples, 9.44%)</title><rect x="136.4" y="469" width="111.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="139.37" y="479.5" >___intercepto..</text>
</g>
<g >
<title>do_wp_page (2,077,313 samples, 4.35%)</title><rect x="661.2" y="245" width="51.3" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="664.20" y="255.5" >do_wp..</text>
</g>
<g >
<title>do_wp_page (769,865 samples, 1.61%)</title><rect x="68.4" y="469" width="19.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="71.37" y="479.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (10,861,040 samples, 22.74%)</title><rect x="392.9" y="581" width="268.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="395.88" y="591.5" >el0t_64_sync_handler</text>
</g>
<g >
<title>do_softirq_own_stack (2,049,737 samples, 4.29%)</title><rect x="488.7" y="341" width="50.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="491.70" y="351.5" >do_so..</text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (3,129,568 samples, 6.55%)</title><rect x="10.1" y="613" width="77.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.08" y="623.5" >[ld-linu..</text>
</g>
<g >
<title>el0_interrupt (1,734,993 samples, 3.63%)</title><rect x="136.4" y="309" width="42.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="139.37" y="319.5" >el0_..</text>
</g>
<g >
<title>__pi_clear_page (769,865 samples, 1.61%)</title><rect x="68.4" y="373" width="19.0" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="71.37" y="383.5" ></text>
</g>
<g >
<title>swake_up_one (1,734,993 samples, 3.63%)</title><rect x="136.4" y="85" width="42.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="139.37" y="95.5" >swak..</text>
</g>
<g >
<title>__arm64_sys_munmap (1,908,586 samples, 4.00%)</title><rect x="247.8" y="453" width="47.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="250.81" y="463.5" >__ar..</text>
</g>
<g >
<title>do_el0_svc (8,866,717 samples, 18.56%)</title><rect x="442.2" y="549" width="219.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="445.15" y="559.5" >do_el0_svc</text>
</g>
<g >
<title>_IO_fwrite (2,077,313 samples, 4.35%)</title><rect x="661.2" y="517" width="51.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="664.20" y="527.5" >_IO_f..</text>
</g>
<g >
<title>server (47,760,545 samples, 99.99%)</title><rect x="10.1" y="709" width="1179.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="13.08" y="719.5" >server</text>
</g>
<g >
<title>__arm64_sys_epoll_pwait (6,982,466 samples, 14.62%)</title><rect x="488.7" y="501" width="172.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="491.70" y="511.5" >__arm64_sys_epoll_pwait</text>
</g>
<g >
<title>zap_pte_range (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="421" width="53.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1139.36" y="431.5" >zap_p..</text>
</g>
<g >
<title>el0t_64_sync (769,865 samples, 1.61%)</title><rect x="68.4" y="597" width="19.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="71.37" y="607.5" ></text>
</g>
<g >
<title>call_on_irq_stack (769,865 samples, 1.61%)</title><rect x="68.4" y="261" width="19.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="71.37" y="271.5" ></text>
</g>
<g >
<title>invoke_syscall (20,389 samples, 0.04%)</title><rect x="295.0" y="597" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="297.97" y="607.5" ></text>
</g>
<g >
<title>vma_expand (20,389 samples, 0.04%)</title><rect x="295.0" y="437" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="297.97" y="447.5" ></text>
</g>
<g >
<title>_IO_file_overflow (2,077,313 samples, 4.35%)</title><rect x="661.2" y="485" width="51.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="664.20" y="495.5" >_IO_f..</text>
</g>
<g >
<title>main (34,037,106 samples, 71.26%)</title><rect x="295.5" y="645" width="840.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="298.47" y="655.5" >main</text>
</g>
<g >
<title>__arm64_sys_read (7,911,217 samples, 16.56%)</title><rect x="809.2" y="469" width="195.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="812.17" y="479.5" >__arm64_sys_read</text>
</g>
<g >
<title>mas_preallocate (20,389 samples, 0.04%)</title><rect x="295.0" y="421" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="297.97" y="431.5" ></text>
</g>
<g >
<title>invoke_syscall (6,982,466 samples, 14.62%)</title><rect x="488.7" y="517" width="172.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="491.70" y="527.5" >invoke_syscall</text>
</g>
<g >
<title>epoll_pwait (12,878,038 samples, 26.96%)</title><rect x="343.1" y="613" width="318.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="346.05" y="623.5" >epoll_pwait</text>
</g>
<g >
<title>__sanitizer_internal_memset (1,246,442 samples, 2.61%)</title><rect x="217.0" y="421" width="30.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="220.02" y="431.5" >__..</text>
</g>
<g >
<title>el1h_64_irq (2,049,737 samples, 4.29%)</title><rect x="488.7" y="421" width="50.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="491.70" y="431.5" >el1h_..</text>
</g>
<g >
<title>__sanitizer::dl_iterate_phdr_cb (1,908,586 samples, 4.00%)</title><rect x="247.8" y="597" width="47.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="250.81" y="607.5" >__sa..</text>
</g>
<g >
<title>____do_softirq (1,734,993 samples, 3.63%)</title><rect x="136.4" y="229" width="42.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="139.37" y="239.5" >____..</text>
</g>
<g >
<title>el1h_64_irq (769,865 samples, 1.61%)</title><rect x="68.4" y="357" width="19.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="71.37" y="367.5" ></text>
</g>
<g >
<title>____do_softirq (2,049,737 samples, 4.29%)</title><rect x="488.7" y="309" width="50.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="491.70" y="319.5" >____d..</text>
</g>
<g >
<title>___interceptor_fwrite.part.0 (2,077,313 samples, 4.35%)</title><rect x="661.2" y="533" width="51.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="664.20" y="543.5" >___in..</text>
</g>
<g >
<title>do_mem_abort (769,865 samples, 1.61%)</title><rect x="68.4" y="549" width="19.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="71.37" y="559.5" ></text>
</g>
<g >
<title>rcu_core_si (769,865 samples, 1.61%)</title><rect x="68.4" y="197" width="19.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="71.37" y="207.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,908,586 samples, 4.00%)</title><rect x="247.8" y="533" width="47.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="250.81" y="543.5" >el0t..</text>
</g>
<g >
<title>ep_send_events (5,433,808 samples, 11.38%)</title><rect x="488.7" y="437" width="134.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="491.70" y="447.5" >ep_send_events</text>
</g>
<g >
<title>unmap_vmas (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="485" width="53.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1139.36" y="495.5" >unmap..</text>
</g>
<g >
<title>el0_da (769,865 samples, 1.61%)</title><rect x="68.4" y="565" width="19.0" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="71.37" y="575.5" ></text>
</g>
<g >
<title>el0_svc (9,909,998 samples, 20.75%)</title><rect x="759.8" y="533" width="244.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="762.79" y="543.5" >el0_svc</text>
</g>
<g >
<title>spdlog::logger::log_it_ (2,077,313 samples, 4.35%)</title><rect x="661.2" y="597" width="51.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="664.20" y="607.5" >spdlo..</text>
</g>
<g >
<title>release_sock (1,913,603 samples, 4.01%)</title><rect x="854.5" y="357" width="47.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="857.48" y="367.5" >rele..</text>
</g>
<g >
<title>el0t_64_irq (1,734,993 samples, 3.63%)</title><rect x="136.4" y="357" width="42.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="139.37" y="367.5" >el0t..</text>
</g>
<g >
<title>swake_up_one_online (1,734,993 samples, 3.63%)</title><rect x="136.4" y="101" width="42.8" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="139.37" y="111.5" >swak..</text>
</g>
<g >
<title>uncharge_batch (769,865 samples, 1.61%)</title><rect x="68.4" y="85" width="19.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="71.37" y="95.5" ></text>
</g>
<g >
<title>do_page_fault (769,865 samples, 1.61%)</title><rect x="68.4" y="533" width="19.0" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="71.37" y="543.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (2,077,313 samples, 4.35%)</title><rect x="661.2" y="501" width="51.3" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="664.20" y="511.5" >_IO_f..</text>
</g>
<g >
<title>security_socket_recvmsg (2,018,433 samples, 4.23%)</title><rect x="954.8" y="389" width="49.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="957.75" y="399.5" >secur..</text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (11,531,723 samples, 24.14%)</title><rect x="10.1" y="693" width="284.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.08" y="703.5" >[ld-linux-aarch64.so.1]</text>
</g>
<g >
<title>el0_svc (10,861,040 samples, 22.74%)</title><rect x="392.9" y="565" width="268.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="395.88" y="575.5" >el0_svc</text>
</g>
<g >
<title>__vm_munmap (1,908,586 samples, 4.00%)</title><rect x="247.8" y="437" width="47.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="250.81" y="447.5" >__vm..</text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,982,438 samples, 4.15%)</title><rect x="87.4" y="597" width="49.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="90.39" y="607.5" >[ld-..</text>
</g>
<g >
<title>std::ios_base_library_init (1,982,438 samples, 4.15%)</title><rect x="87.4" y="629" width="49.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="90.39" y="639.5" >std:..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32LocalCache&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt; &gt;::Refill (3,264,689 samples, 6.84%)</title><rect x="136.4" y="421" width="80.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="139.37" y="431.5" >__sanitiz..</text>
</g>
<g >
<title>__do_softirq (2,049,737 samples, 4.29%)</title><rect x="488.7" y="293" width="50.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="491.70" y="303.5" >__do_..</text>
</g>
<g >
<title>__sanitizer::internal_allocator (1,246,442 samples, 2.61%)</title><rect x="217.0" y="437" width="30.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="220.02" y="447.5" >__..</text>
</g>
<g >
<title>__handle_mm_fault (769,865 samples, 1.61%)</title><rect x="68.4" y="501" width="19.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="71.37" y="511.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (3,129,568 samples, 6.55%)</title><rect x="10.1" y="629" width="77.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.08" y="639.5" >[ld-linu..</text>
</g>
<g >
<title>wp_page_copy (2,077,313 samples, 4.35%)</title><rect x="661.2" y="229" width="51.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="664.20" y="239.5" >wp_pa..</text>
</g>
<g >
<title>do_signal (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="613" width="53.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1139.36" y="623.5" >do_si..</text>
</g>
<g >
<title>do_pte_missing (1,529,696 samples, 3.20%)</title><rect x="179.2" y="165" width="37.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="182.23" y="175.5" >do_..</text>
</g>
<g >
<title>mas_wr_walk (20,389 samples, 0.04%)</title><rect x="295.0" y="405" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="297.97" y="415.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (723,764 samples, 1.52%)</title><rect x="50.5" y="581" width="17.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="53.49" y="591.5" ></text>
</g>
<g >
<title>do_el0_svc (7,911,217 samples, 16.56%)</title><rect x="809.2" y="517" width="195.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="812.17" y="527.5" >do_el0_svc</text>
</g>
<g >
<title>el0_svc (1,908,586 samples, 4.00%)</title><rect x="247.8" y="517" width="47.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="250.81" y="527.5" >el0_..</text>
</g>
<g >
<title>exit_mm (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="549" width="53.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1139.36" y="559.5" >exit_mm</text>
</g>
<g >
<title>invoke_syscall (7,911,217 samples, 16.56%)</title><rect x="809.2" y="485" width="195.4" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="812.17" y="495.5" >invoke_syscall</text>
</g>
<g >
<title>ep_done_scan (1,907,205 samples, 3.99%)</title><rect x="539.3" y="421" width="47.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="542.34" y="431.5" >ep_d..</text>
</g>
<g >
<title>__asan_stack_malloc_5 (3,789,362 samples, 7.93%)</title><rect x="1042.7" y="581" width="93.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1045.74" y="591.5" >__asan_stac..</text>
</g>
<g >
<title>do_mem_abort (1,529,696 samples, 3.20%)</title><rect x="179.2" y="261" width="37.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="182.23" y="271.5" >do_..</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="437" width="53.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1139.36" y="447.5" >zap_p..</text>
</g>
<g >
<title>put_cpu_partial (2,049,737 samples, 4.29%)</title><rect x="488.7" y="165" width="50.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="491.70" y="175.5" >put_c..</text>
</g>
<g >
<title>mas_destroy (1,908,586 samples, 4.00%)</title><rect x="247.8" y="357" width="47.2" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="250.81" y="367.5" >mas_..</text>
</g>
<g >
<title>bprm_execve.part.0 (20,389 samples, 0.04%)</title><rect x="295.0" y="533" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="297.97" y="543.5" ></text>
</g>
<g >
<title>el0_interrupt (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="645" width="53.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1139.36" y="655.5" >el0_i..</text>
</g>
<g >
<title>mmput (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="533" width="53.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1139.36" y="543.5" >mmput</text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (11,531,723 samples, 24.14%)</title><rect x="10.1" y="677" width="284.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.08" y="687.5" >[ld-linux-aarch64.so.1]</text>
</g>
<g >
<title>__irq_exit_rcu (2,049,737 samples, 4.29%)</title><rect x="488.7" y="357" width="50.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="491.70" y="367.5" >__irq..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (1,734,993 samples, 3.63%)</title><rect x="136.4" y="373" width="42.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="139.37" y="383.5" >__sa..</text>
</g>
<g >
<title>el0_svc_common.constprop.0 (20,389 samples, 0.04%)</title><rect x="295.0" y="613" width="0.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="297.97" y="623.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (7,911,217 samples, 16.56%)</title><rect x="809.2" y="501" width="195.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="812.17" y="511.5" >el0_svc_common.constprop.0</text>
</g>
<g >
<title>sock_recvmsg (7,911,217 samples, 16.56%)</title><rect x="809.2" y="405" width="195.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="812.17" y="415.5" >sock_recvmsg</text>
</g>
<g >
<title>el0t_64_irq (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="693" width="53.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1139.36" y="703.5" >el0t_..</text>
</g>
<g >
<title>exec_binprm (20,389 samples, 0.04%)</title><rect x="295.0" y="517" width="0.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="297.97" y="527.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,908,586 samples, 4.00%)</title><rect x="247.8" y="549" width="47.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="250.81" y="559.5" >el0t..</text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;, __sanitizer::LargeMmapAllocatorPtrArrayStatic&gt;::Allocate (3,264,689 samples, 6.84%)</title><rect x="136.4" y="437" width="80.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="139.37" y="447.5" >__sanitiz..</text>
</g>
<g >
<title>el0_da (1,529,696 samples, 3.20%)</title><rect x="179.2" y="277" width="37.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="182.23" y="287.5" >el0..</text>
</g>
<g >
<title>rcu_gp_kthread_wake (1,734,993 samples, 3.63%)</title><rect x="136.4" y="117" width="42.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="139.37" y="127.5" >rcu_..</text>
</g>
<g >
<title>bprm_execve (20,389 samples, 0.04%)</title><rect x="295.0" y="549" width="0.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="297.97" y="559.5" ></text>
</g>
<g >
<title>__asan::AsanInitInternal (6,419,717 samples, 13.44%)</title><rect x="136.4" y="661" width="158.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="139.37" y="671.5" >__asan::AsanInitInte..</text>
</g>
<g >
<title>[libc.so.6] (4,511,131 samples, 9.44%)</title><rect x="136.4" y="533" width="111.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="139.37" y="543.5" >[libc.so.6]</text>
</g>
<g >
<title>el0t_64_sync_handler (1,529,696 samples, 3.20%)</title><rect x="179.2" y="293" width="37.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="182.23" y="303.5" >el0..</text>
</g>
<g >
<title>vfs_read (7,911,217 samples, 16.56%)</title><rect x="809.2" y="437" width="195.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="812.17" y="447.5" >vfs_read</text>
</g>
<g >
<title>rcu_core (769,865 samples, 1.61%)</title><rect x="68.4" y="181" width="19.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="71.37" y="191.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,734,993 samples, 3.63%)</title><rect x="136.4" y="293" width="42.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="139.37" y="303.5" >irq_..</text>
</g>
<g >
<title>read (11,823,339 samples, 24.75%)</title><rect x="712.5" y="581" width="292.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="715.52" y="591.5" >read</text>
</g>
<g >
<title>do_el0_svc (1,908,586 samples, 4.00%)</title><rect x="247.8" y="501" width="47.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="250.81" y="511.5" >do_e..</text>
</g>
<g >
<title>apparmor_socket_recvmsg (2,018,433 samples, 4.23%)</title><rect x="954.8" y="373" width="49.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="957.75" y="383.5" >appar..</text>
</g>
<g >
<title>search_binary_handler (20,389 samples, 0.04%)</title><rect x="295.0" y="501" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="297.97" y="511.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_range_ (2,077,313 samples, 4.35%)</title><rect x="661.2" y="549" width="51.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="664.20" y="559.5" >spdlo..</text>
</g>
<g >
<title>[libc.so.6] (4,511,131 samples, 9.44%)</title><rect x="136.4" y="517" width="111.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="139.37" y="527.5" >[libc.so.6]</text>
</g>
<g >
<title>__sanitizer::internal_munmap (1,908,586 samples, 4.00%)</title><rect x="247.8" y="565" width="47.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="250.81" y="575.5" >__sa..</text>
</g>
<g >
<title>[libc.so.6] (34,037,106 samples, 71.26%)</title><rect x="295.5" y="661" width="840.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="298.47" y="671.5" >[libc.so.6]</text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,982,438 samples, 4.15%)</title><rect x="87.4" y="613" width="49.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="90.39" y="623.5" >[ld-..</text>
</g>
<g >
<title>vma_alloc_folio (769,865 samples, 1.61%)</title><rect x="68.4" y="437" width="19.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="71.37" y="447.5" ></text>
</g>
<g >
<title>_dl_exception_create_format (4,511,131 samples, 9.44%)</title><rect x="136.4" y="485" width="111.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="139.37" y="495.5" >_dl_exception..</text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::AllocateBatch (1,529,696 samples, 3.20%)</title><rect x="179.2" y="357" width="37.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="182.23" y="367.5" >__s..</text>
</g>
<g >
<title>el1h_64_irq_handler (2,049,737 samples, 4.29%)</title><rect x="488.7" y="405" width="50.6" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="491.70" y="415.5" >el1h_..</text>
</g>
<g >
<title>mas_nomem (1,908,586 samples, 4.00%)</title><rect x="247.8" y="373" width="47.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="250.81" y="383.5" >mas_..</text>
</g>
<g >
<title>exit_mmap (2,171,327 samples, 4.55%)</title><rect x="1136.4" y="501" width="53.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1139.36" y="511.5" >exit_..</text>
</g>
<g >
<title>el0_svc_common.constprop.0 (8,866,717 samples, 18.56%)</title><rect x="442.2" y="533" width="219.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="445.15" y="543.5" >el0_svc_common.constprop.0</text>
</g>
<g >
<title>__do_softirq (769,865 samples, 1.61%)</title><rect x="68.4" y="229" width="19.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="71.37" y="239.5" ></text>
</g>
<g >
<title>tcp_recvmsg (5,892,784 samples, 12.34%)</title><rect x="809.2" y="373" width="145.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="812.17" y="383.5" >tcp_recvmsg</text>
</g>
<g >
<title>ksys_read (7,911,217 samples, 16.56%)</title><rect x="809.2" y="453" width="195.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="812.17" y="463.5" >ksys_read</text>
</g>
<g >
<title>el1h_64_irq_handler (769,865 samples, 1.61%)</title><rect x="68.4" y="341" width="19.0" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="71.37" y="351.5" ></text>
</g>
<g >
<title>handle_softirqs (1,734,993 samples, 3.63%)</title><rect x="136.4" y="197" width="42.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="139.37" y="207.5" >hand..</text>
</g>
<g >
<title>__mem_cgroup_uncharge (769,865 samples, 1.61%)</title><rect x="68.4" y="101" width="19.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="71.37" y="111.5" ></text>
</g>
<g >
<title>_IO_file_doallocate (2,077,313 samples, 4.35%)</title><rect x="661.2" y="453" width="51.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="664.20" y="463.5" >_IO_f..</text>
</g>
<g >
<title>__sanitizer::UnmapOrDie (1,908,586 samples, 4.00%)</title><rect x="247.8" y="581" width="47.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="250.81" y="591.5" >__sa..</text>
</g>
<g >
<title>[libc.so.6] (4,511,131 samples, 9.44%)</title><rect x="136.4" y="581" width="111.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="139.37" y="591.5" >[libc.so.6]</text>
</g>
<g >
<title>rcu_core (2,049,737 samples, 4.29%)</title><rect x="488.7" y="245" width="50.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="491.70" y="255.5" >rcu_c..</text>
</g>
<g >
<title>do_mem_abort (2,077,313 samples, 4.35%)</title><rect x="661.2" y="325" width="51.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="664.20" y="335.5" >do_me..</text>
</g>
<g >
<title>rcu_do_batch (769,865 samples, 1.61%)</title><rect x="68.4" y="165" width="19.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="71.37" y="175.5" ></text>
</g>
</g>
</svg>
