<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1126" onload="init(evt)" viewBox="0 0 1200 1126" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1126.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1109" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1109" > </text>
<g id="frames">
<g >
<title>_dl_exception_create_format (1,946,263 samples, 0.05%)</title><rect x="12.8" y="869" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="15.82" y="879.5" ></text>
</g>
<g >
<title>loopback_xmit (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="453" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1096.75" y="463.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2,049,173 samples, 0.05%)</title><rect x="1186.9" y="853" width="0.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1189.87" y="863.5" ></text>
</g>
<g >
<title>char* fmt::v9::detail::to_pointer&lt;char&gt; (4,324,042 samples, 0.12%)</title><rect x="1098.6" y="789" width="1.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1101.63" y="799.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (6,085,102 samples, 0.16%)</title><rect x="869.8" y="597" width="1.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="872.77" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,977,710 samples, 0.05%)</title><rect x="1091.9" y="805" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1094.87" y="815.5" ></text>
</g>
<g >
<title>process_backlog (16,163,540 samples, 0.43%)</title><rect x="1072.7" y="325" width="5.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1075.65" y="335.5" ></text>
</g>
<g >
<title>__sanitizer::GetThreadStackTopAndBottom (1,834,332 samples, 0.05%)</title><rect x="10.8" y="917" width="0.6" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="13.83" y="927.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (2,107,611 samples, 0.06%)</title><rect x="1172.3" y="837" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1175.31" y="847.5" ></text>
</g>
<g >
<title>tcp_write_xmit (4,099,924 samples, 0.11%)</title><rect x="816.0" y="581" width="1.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="819.00" y="591.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::equal_to&lt;int&gt;, true&gt;::_M_cget (1,934,483 samples, 0.05%)</title><rect x="680.5" y="805" width="0.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="683.48" y="815.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,120,750 samples, 0.08%)</title><rect x="11.8" y="933" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.84" y="943.5" ></text>
</g>
<g >
<title>__sanitizer::MemoryMappingLayout::MemoryMappingLayout (1,834,332 samples, 0.05%)</title><rect x="10.8" y="901" width="0.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="13.83" y="911.5" ></text>
</g>
<g >
<title>find_mergeable_anon_vma (1,946,263 samples, 0.05%)</title><rect x="12.8" y="565" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="15.82" y="575.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1,920,708 samples, 0.05%)</title><rect x="396.7" y="501" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="399.72" y="511.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (31,780,582 samples, 0.85%)</title><rect x="1070.0" y="885" width="10.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1072.97" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2,865,160 samples, 0.08%)</title><rect x="1085.2" y="885" width="0.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1088.21" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_5 (6,935,142 samples, 0.18%)</title><rect x="28.7" y="949" width="2.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="31.68" y="959.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,946,263 samples, 0.05%)</title><rect x="12.8" y="965" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.82" y="975.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="597" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1146.41" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,251,539 samples, 0.11%)</title><rect x="1152.3" y="805" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1155.30" y="815.5" ></text>
</g>
<g >
<title>simple_copy_to_iter (6,680,054 samples, 0.18%)</title><rect x="24.9" y="661" width="2.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="27.85" y="671.5" ></text>
</g>
<g >
<title>invoke_syscall (1,834,332 samples, 0.05%)</title><rect x="10.8" y="741" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="13.83" y="751.5" ></text>
</g>
<g >
<title>tcp_reset (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="293" width="0.6" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="1192.40" y="303.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (2,003,202 samples, 0.05%)</title><rect x="1160.7" y="789" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1163.69" y="799.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (90,650,213 samples, 2.42%)</title><rect x="826.8" y="629" width="28.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="829.75" y="639.5" >__..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (6,005,362 samples, 0.16%)</title><rect x="1083.3" y="901" width="1.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1086.32" y="911.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt;::allocate (1,982,687 samples, 0.05%)</title><rect x="1082.0" y="853" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1084.96" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (4,139,715 samples, 0.11%)</title><rect x="1089.9" y="853" width="1.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1092.94" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,200,377 samples, 0.06%)</title><rect x="1169.9" y="853" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1172.87" y="863.5" ></text>
</g>
<g >
<title>ip_rcv (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="437" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1192.40" y="447.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::get_buffer&lt;char&gt; (2,066,707 samples, 0.06%)</title><rect x="1154.3" y="901" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1157.25" y="911.5" ></text>
</g>
<g >
<title>ena_timer_service (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="597" width="0.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1071.47" y="607.5" ></text>
</g>
<g >
<title>mas_walk (1,297,014 samples, 0.03%)</title><rect x="30.4" y="805" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="33.45" y="815.5" ></text>
</g>
<g >
<title>call_timer_fn (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="613" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1071.47" y="623.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (2,048,946 samples, 0.05%)</title><rect x="816.0" y="533" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="819.00" y="543.5" ></text>
</g>
<g >
<title>security_socket_recvmsg (3,528,299 samples, 0.09%)</title><rect x="27.0" y="741" width="1.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="29.95" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (1,647,063 samples, 0.04%)</title><rect x="11.8" y="725" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.84" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (238,392,534 samples, 6.35%)</title><rect x="539.1" y="853" width="75.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="542.07" y="863.5" >__asan_s..</text>
</g>
<g >
<title>ip_protocol_deliver_rcu (12,181,673 samples, 0.32%)</title><rect x="1073.2" y="213" width="3.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1076.20" y="223.5" ></text>
</g>
<g >
<title>memblock_is_map_memory (5,605,400 samples, 0.15%)</title><rect x="823.6" y="581" width="1.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="826.56" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (57,412,863 samples, 1.53%)</title><rect x="275.1" y="869" width="18.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="278.07" y="879.5" ></text>
</g>
<g >
<title>handle_softirqs (3,765,077 samples, 0.10%)</title><rect x="349.2" y="693" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="352.20" y="703.5" ></text>
</g>
<g >
<title>decltype  (10,863,195 samples, 0.29%)</title><rect x="1150.2" y="885" width="3.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1153.22" y="895.5" ></text>
</g>
<g >
<title>____fput (3,803,577 samples, 0.10%)</title><rect x="1188.8" y="901" width="1.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1191.80" y="911.5" ></text>
</g>
<g >
<title>vsnprintf (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="517" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1071.47" y="527.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;, __sanitizer::LargeMmapAllocatorPtrArrayStatic&gt;::Allocate (1,647,063 samples, 0.04%)</title><rect x="11.8" y="789" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="14.84" y="799.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::parse_client_command (3,262,622,780 samples, 86.97%)</title><rect x="119.0" y="949" width="1026.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="122.03" y="959.5" >tt::chat::server::EpollServer::parse_client_command</text>
</g>
<g >
<title>kmem_cache_free (2,116,400 samples, 0.06%)</title><rect x="836.5" y="69" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="839.53" y="79.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (2,401,585 samples, 0.06%)</title><rect x="497.6" y="565" width="0.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="500.64" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt;::begin (2,102,693 samples, 0.06%)</title><rect x="1185.2" y="853" width="0.6" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="1188.16" y="863.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_and_push_buffer (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="501" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1188.82" y="511.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,892,175 samples, 0.05%)</title><rect x="1186.3" y="869" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1189.28" y="879.5" ></text>
</g>
<g >
<title>___interceptor_malloc (3,120,750 samples, 0.08%)</title><rect x="11.8" y="821" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="14.84" y="831.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (36,164,142 samples, 0.96%)</title><rect x="1070.0" y="901" width="11.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1072.97" y="911.5" ></text>
</g>
<g >
<title>tcp_write_xmit (25,549,598 samples, 0.68%)</title><rect x="1071.9" y="629" width="8.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1074.93" y="639.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (1,359,675 samples, 0.04%)</title><rect x="30.0" y="741" width="0.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="33.02" y="751.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (22,734,087 samples, 0.61%)</title><rect x="294.5" y="901" width="7.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="297.47" y="911.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1,444,639 samples, 0.04%)</title><rect x="681.1" y="885" width="0.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="684.09" y="895.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1,920,708 samples, 0.05%)</title><rect x="396.7" y="453" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="399.72" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;int, false&gt;::_M_next (2,246,388 samples, 0.06%)</title><rect x="694.5" y="869" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="697.53" y="879.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char*, char*&gt; (5,905,330 samples, 0.16%)</title><rect x="1105.6" y="661" width="1.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1108.55" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (72,700,241 samples, 1.94%)</title><rect x="746.5" y="805" width="22.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="749.50" y="815.5" >_..</text>
</g>
<g >
<title>char* fmt::v9::format_int::format_unsigned&lt;unsigned int&gt; (3,976,817 samples, 0.11%)</title><rect x="1183.2" y="789" width="1.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1186.24" y="799.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1,920,708 samples, 0.05%)</title><rect x="396.7" y="293" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="399.72" y="303.5" ></text>
</g>
<g >
<title>tty_write (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="597" width="0.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1188.82" y="607.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (7,500,602 samples, 0.20%)</title><rect x="1179.6" y="725" width="2.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1182.58" y="735.5" ></text>
</g>
<g >
<title>unmap_region (2,211,913 samples, 0.06%)</title><rect x="298.3" y="469" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="301.27" y="479.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2,081,379 samples, 0.06%)</title><rect x="519.7" y="837" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="522.75" y="847.5" ></text>
</g>
<g >
<title>el0t_64_sync (4,575,844 samples, 0.12%)</title><rect x="297.5" y="677" width="1.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="300.52" y="687.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,771,650 samples, 0.05%)</title><rect x="297.0" y="757" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="299.97" y="767.5" ></text>
</g>
<g >
<title>__arm64_sys_read (1,834,332 samples, 0.05%)</title><rect x="10.8" y="725" width="0.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="13.83" y="735.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1,920,708 samples, 0.05%)</title><rect x="396.7" y="437" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="399.72" y="447.5" ></text>
</g>
<g >
<title>_dl_catch_exception (3,120,750 samples, 0.08%)</title><rect x="11.8" y="901" width="1.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="14.84" y="911.5" ></text>
</g>
<g >
<title>ip_local_deliver (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="405" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1192.40" y="415.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,473,687 samples, 0.04%)</title><rect x="12.4" y="661" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="15.35" y="671.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::base_iterator&lt;fmt::v9::appender&gt; (3,705,614 samples, 0.10%)</title><rect x="1112.7" y="789" width="1.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1115.71" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (96,646,960 samples, 2.58%)</title><rect x="468.0" y="853" width="30.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="471.00" y="863.5" >st..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_key_equals (210,981,847 samples, 5.62%)</title><rect x="614.7" y="837" width="66.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="617.72" y="847.5" >std::__..</text>
</g>
<g >
<title>tcp_rcv_established (1,920,708 samples, 0.05%)</title><rect x="396.7" y="469" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="399.72" y="479.5" ></text>
</g>
<g >
<title>invoke_syscall (229,393,846 samples, 6.11%)</title><rect x="807.6" y="757" width="72.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="810.62" y="767.5" >invoke_s..</text>
</g>
<g >
<title>el0t_64_sync (2,054,609 samples, 0.05%)</title><rect x="293.8" y="789" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="296.83" y="799.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (2,401,585 samples, 0.06%)</title><rect x="497.6" y="725" width="0.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="500.64" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,043,248 samples, 0.27%)</title><rect x="1131.6" y="645" width="3.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1134.61" y="655.5" ></text>
</g>
<g >
<title>check_heap_object (7,763,256 samples, 0.21%)</title><rect x="822.9" y="597" width="2.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="825.88" y="607.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_and_push_buffer (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="453" width="0.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1146.96" y="463.5" ></text>
</g>
<g >
<title>el0_svc (7,503,005 samples, 0.20%)</title><rect x="14.1" y="917" width="2.3" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="17.05" y="927.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (28,498,104 samples, 0.76%)</title><rect x="1173.0" y="837" width="8.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1175.97" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,232,019 samples, 0.06%)</title><rect x="1161.3" y="853" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1164.32" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (23,174,875 samples, 0.62%)</title><rect x="738.5" y="853" width="7.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="741.53" y="863.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="885" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1096.75" y="895.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (46,639,000 samples, 1.24%)</title><rect x="1171.6" y="885" width="14.7" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1174.61" y="895.5" ></text>
</g>
<g >
<title>sock_def_readable (6,059,760 samples, 0.16%)</title><rect x="1075.1" y="117" width="1.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1078.13" y="127.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (58,954,258 samples, 1.57%)</title><rect x="401.9" y="837" width="18.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="404.94" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,036,921 samples, 0.05%)</title><rect x="1094.4" y="869" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1097.38" y="879.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (9,946,506 samples, 0.27%)</title><rect x="1186.9" y="1029" width="3.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1189.87" y="1039.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,251,539 samples, 0.11%)</title><rect x="1152.3" y="789" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1155.30" y="799.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (2,341,850 samples, 0.06%)</title><rect x="1082.6" y="885" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1085.58" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (37,423,011 samples, 1.00%)</title><rect x="421.2" y="885" width="11.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="424.22" y="895.5" ></text>
</g>
<g >
<title>el0_svc (29,165,244 samples, 0.78%)</title><rect x="18.9" y="885" width="9.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="21.89" y="895.5" ></text>
</g>
<g >
<title>tcp_try_rmem_schedule (2,105,859 samples, 0.06%)</title><rect x="845.8" y="133" width="0.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="848.85" y="143.5" ></text>
</g>
<g >
<title>get_signal (9,946,506 samples, 0.27%)</title><rect x="1186.9" y="965" width="3.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1189.87" y="975.5" ></text>
</g>
<g >
<title>el0t_64_sync (7,503,005 samples, 0.20%)</title><rect x="14.1" y="949" width="2.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="17.05" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,657,236 samples, 0.04%)</title><rect x="1101.3" y="773" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1104.32" y="783.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="597" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1192.40" y="607.5" ></text>
</g>
<g >
<title>inet_sendmsg (31,780,582 samples, 0.85%)</title><rect x="1070.0" y="709" width="10.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1072.97" y="719.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (4,575,844 samples, 0.12%)</title><rect x="297.5" y="485" width="1.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="300.52" y="495.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (149,212,334 samples, 3.98%)</title><rect x="350.4" y="853" width="46.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="353.39" y="863.5" >__as..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,008,495 samples, 0.11%)</title><rect x="1103.7" y="757" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1106.68" y="767.5" ></text>
</g>
<g >
<title>skb_copy_datagram_iter (13,070,653 samples, 0.35%)</title><rect x="22.8" y="693" width="4.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="25.84" y="703.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (4,575,844 samples, 0.12%)</title><rect x="297.5" y="613" width="1.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="300.52" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,692,920 samples, 0.05%)</title><rect x="1181.9" y="725" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1184.94" y="735.5" ></text>
</g>
<g >
<title>fmt::v9::format_int::format_int (2,163,472 samples, 0.06%)</title><rect x="1140.2" y="773" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1143.22" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (61,682,966 samples, 1.64%)</title><rect x="275.1" y="885" width="19.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="278.07" y="895.5" ></text>
</g>
<g >
<title>ip_rcv (52,747,043 samples, 1.41%)</title><rect x="831.2" y="261" width="16.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="834.20" y="271.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,156,691 samples, 0.06%)</title><rect x="1123.0" y="629" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1126.04" y="639.5" ></text>
</g>
<g >
<title>__check_object_size (11,841,154 samples, 0.32%)</title><rect x="822.3" y="629" width="3.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="825.34" y="639.5" ></text>
</g>
<g >
<title>net_rx_action (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="517" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1192.40" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (4,200,969 samples, 0.11%)</title><rect x="117.7" y="917" width="1.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="120.71" y="927.5" ></text>
</g>
<g >
<title>mas_prev (1,946,263 samples, 0.05%)</title><rect x="12.8" y="549" width="0.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="15.82" y="559.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::grow (8,034,515 samples, 0.21%)</title><rect x="1134.8" y="741" width="2.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1137.77" y="751.5" ></text>
</g>
<g >
<title>__do_softirq (16,163,540 samples, 0.43%)</title><rect x="1072.7" y="389" width="5.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1075.65" y="399.5" ></text>
</g>
<g >
<title>do_softirq (16,163,540 samples, 0.43%)</title><rect x="1072.7" y="453" width="5.0" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1075.65" y="463.5" ></text>
</g>
<g >
<title>expire_timers (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="629" width="0.7" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1071.47" y="639.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1,861,841 samples, 0.05%)</title><rect x="613.5" y="485" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="616.47" y="495.5" ></text>
</g>
<g >
<title>ip_finish_output (1,920,708 samples, 0.05%)</title><rect x="396.7" y="357" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="399.72" y="367.5" ></text>
</g>
<g >
<title>__sanitizer::StackDepotBase&lt;__sanitizer::StackDepotNode, 1, 20&gt;::Put (2,081,379 samples, 0.06%)</title><rect x="519.7" y="805" width="0.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="522.75" y="815.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3,765,077 samples, 0.10%)</title><rect x="349.2" y="789" width="1.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="352.20" y="799.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,191,532 samples, 0.06%)</title><rect x="73.7" y="853" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="76.73" y="863.5" ></text>
</g>
<g >
<title>tcp_filter (2,157,591 samples, 0.06%)</title><rect x="832.7" y="165" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="835.69" y="175.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::get_buffer&lt;char&gt; (5,706,390 samples, 0.15%)</title><rect x="1096.3" y="853" width="1.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1099.29" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,139,715 samples, 0.11%)</title><rect x="1089.9" y="837" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1092.94" y="847.5" ></text>
</g>
<g >
<title>operator new (11,524,433 samples, 0.31%)</title><rect x="70.8" y="869" width="3.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="73.79" y="879.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (10,901,665 samples, 0.29%)</title><rect x="10.0" y="1045" width="3.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1055.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (4,256,204 samples, 0.11%)</title><rect x="1122.4" y="677" width="1.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1125.38" y="687.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,771,650 samples, 0.05%)</title><rect x="297.0" y="773" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="299.97" y="783.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1,992,540 samples, 0.05%)</title><rect x="349.8" y="581" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="352.76" y="591.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,156,691 samples, 0.06%)</title><rect x="1123.0" y="613" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1126.04" y="623.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator[] (2,341,850 samples, 0.06%)</title><rect x="1082.6" y="901" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1085.58" y="911.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2,048,946 samples, 0.05%)</title><rect x="816.0" y="549" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="819.00" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,559,823 samples, 0.09%)</title><rect x="1136.2" y="693" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1139.18" y="703.5" ></text>
</g>
<g >
<title>fmt::v9::detail::format_decimal_result&lt;char*&gt; fmt::v9::detail::format_decimal&lt;char, unsigned int&gt; (3,976,817 samples, 0.11%)</title><rect x="1183.2" y="773" width="1.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1186.24" y="783.5" ></text>
</g>
<g >
<title>invoke_syscall (31,780,582 samples, 0.85%)</title><rect x="1070.0" y="773" width="10.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1072.97" y="783.5" ></text>
</g>
<g >
<title>___interceptor_read.part.0 (1,725,818 samples, 0.05%)</title><rect x="17.0" y="933" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="20.04" y="943.5" ></text>
</g>
<g >
<title>napi_consume_skb (2,109,049 samples, 0.06%)</title><rect x="847.8" y="325" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="850.79" y="335.5" ></text>
</g>
<g >
<title>do_translation_fault (1,834,332 samples, 0.05%)</title><rect x="10.8" y="565" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="13.83" y="575.5" ></text>
</g>
<g >
<title>__ip_finish_output (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="693" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1192.40" y="703.5" ></text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;int&amp;&gt;::type&gt;::type, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (1,638,085 samples, 0.04%)</title><rect x="1125.6" y="869" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1128.65" y="879.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1,920,708 samples, 0.05%)</title><rect x="396.7" y="565" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="399.72" y="575.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_range_ (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="869" width="0.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1188.82" y="879.5" ></text>
</g>
<g >
<title>__do_softirq (3,765,077 samples, 0.10%)</title><rect x="349.2" y="709" width="1.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="352.20" y="719.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (11,870,005 samples, 0.32%)</title><rect x="1103.7" y="773" width="3.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1106.68" y="783.5" ></text>
</g>
<g >
<title>__sys_sendto (31,780,582 samples, 0.85%)</title><rect x="1070.0" y="741" width="10.0" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1072.97" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,152,432 samples, 0.06%)</title><rect x="1156.8" y="837" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1159.83" y="847.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (10,043,248 samples, 0.27%)</title><rect x="1131.6" y="677" width="3.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1134.61" y="687.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1,920,708 samples, 0.05%)</title><rect x="396.7" y="613" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="399.72" y="623.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (4,547,240 samples, 0.12%)</title><rect x="1126.2" y="821" width="1.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1129.16" y="831.5" ></text>
</g>
<g >
<title>ip_rcv (1,992,540 samples, 0.05%)</title><rect x="349.8" y="597" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="352.76" y="607.5" ></text>
</g>
<g >
<title>mmap_region (4,575,844 samples, 0.12%)</title><rect x="297.5" y="517" width="1.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="300.52" y="527.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,946,263 samples, 0.05%)</title><rect x="12.8" y="725" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="15.82" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,916,595 samples, 0.10%)</title><rect x="1115.9" y="725" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1118.87" y="735.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (1,883,558 samples, 0.05%)</title><rect x="1188.8" y="837" width="0.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1191.80" y="847.5" ></text>
</g>
<g >
<title>refill_obj_stock (1,883,558 samples, 0.05%)</title><rect x="1188.8" y="821" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1191.80" y="831.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (4,150,252 samples, 0.11%)</title><rect x="17.6" y="933" width="1.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="20.59" y="943.5" ></text>
</g>
<g >
<title>folio_add_new_anon_rmap (1,898,887 samples, 0.05%)</title><rect x="72.0" y="629" width="0.6" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="75.03" y="639.5" ></text>
</g>
<g >
<title>__run_timers (1,861,841 samples, 0.05%)</title><rect x="613.5" y="629" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="616.47" y="639.5" ></text>
</g>
<g >
<title>__ip_finish_output (2,048,946 samples, 0.05%)</title><rect x="816.0" y="485" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="819.00" y="495.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (4,194,521 samples, 0.11%)</title><rect x="1160.0" y="837" width="1.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1163.00" y="847.5" ></text>
</g>
<g >
<title>exit_mm (6,142,929 samples, 0.16%)</title><rect x="1186.9" y="917" width="1.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1189.87" y="927.5" ></text>
</g>
<g >
<title>__napi_poll (1,920,708 samples, 0.05%)</title><rect x="396.7" y="645" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="399.72" y="655.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (65,401,867 samples, 1.74%)</title><rect x="829.9" y="565" width="20.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="832.85" y="575.5" ></text>
</g>
<g >
<title>_IO_file_write (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="773" width="0.5" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1188.82" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (1,965,532 samples, 0.05%)</title><rect x="1156.2" y="869" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1159.21" y="879.5" ></text>
</g>
<g >
<title>__arch_copy_to_user (3,716,248 samples, 0.10%)</title><rect x="24.9" y="645" width="1.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="27.85" y="655.5" ></text>
</g>
<g >
<title>_IO_file_write (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="693" width="0.6" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1146.41" y="703.5" ></text>
</g>
<g >
<title>ip_queue_xmit (67,593,110 samples, 1.80%)</title><rect x="829.9" y="581" width="21.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="832.85" y="591.5" >i..</text>
</g>
<g >
<title>ip_finish_output2 (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="677" width="0.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1192.40" y="687.5" ></text>
</g>
<g >
<title>_IO_file_overflow (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="741" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1146.41" y="751.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (4,575,844 samples, 0.12%)</title><rect x="297.5" y="741" width="1.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="300.52" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,564,901 samples, 0.07%)</title><rect x="496.8" y="757" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="499.84" y="767.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_join_command (6,270,255 samples, 0.17%)</title><rect x="1081.3" y="933" width="2.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1084.35" y="943.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (6,251,563 samples, 0.17%)</title><rect x="1118.3" y="693" width="2.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1121.31" y="703.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2,049,173 samples, 0.05%)</title><rect x="1186.9" y="821" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1189.87" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,973,615 samples, 0.05%)</title><rect x="1086.1" y="853" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1089.11" y="863.5" ></text>
</g>
<g >
<title>inet_put_port (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="229" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1192.40" y="239.5" ></text>
</g>
<g >
<title>____do_softirq (1,861,841 samples, 0.05%)</title><rect x="613.5" y="693" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="616.47" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,465,602 samples, 0.04%)</title><rect x="1139.1" y="741" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1142.13" y="751.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,639,275 samples, 0.07%)</title><rect x="10.0" y="997" width="0.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1007.5" ></text>
</g>
<g >
<title>___interceptor_strlen.part.0 (4,468,746 samples, 0.12%)</title><rect x="200.6" y="901" width="1.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="203.59" y="911.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (7,930,109 samples, 0.21%)</title><rect x="1074.5" y="181" width="2.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1077.54" y="191.5" ></text>
</g>
<g >
<title>tcp_established_options (5,987,337 samples, 0.16%)</title><rect x="857.2" y="613" width="1.9" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="860.20" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (4,738,888 samples, 0.13%)</title><rect x="1088.4" y="853" width="1.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1091.45" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (10,825,789 samples, 0.29%)</title><rect x="398.5" y="885" width="3.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="401.54" y="895.5" ></text>
</g>
<g >
<title>el0_svc (2,401,585 samples, 0.06%)</title><rect x="497.6" y="645" width="0.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="500.64" y="655.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,834,332 samples, 0.05%)</title><rect x="10.8" y="805" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="13.83" y="815.5" ></text>
</g>
<g >
<title>tcp_data_queue (6,059,760 samples, 0.16%)</title><rect x="1075.1" y="149" width="1.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1078.13" y="159.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char*, char*&gt; (2,156,427 samples, 0.06%)</title><rect x="1120.3" y="661" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1123.28" y="671.5" ></text>
</g>
<g >
<title>call_on_irq_stack (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="581" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.40" y="591.5" ></text>
</g>
<g >
<title>do_notify_resume (2,031,854 samples, 0.05%)</title><rect x="612.8" y="757" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="615.83" y="767.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,103,467 samples, 0.06%)</title><rect x="200.6" y="885" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="203.59" y="895.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::PopulateFreeList (1,647,063 samples, 0.04%)</title><rect x="11.8" y="741" width="0.6" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="14.84" y="751.5" ></text>
</g>
<g >
<title>ethtool_sprintf (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="533" width="0.7" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1071.47" y="543.5" ></text>
</g>
<g >
<title>el0_da (2,215,494 samples, 0.06%)</title><rect x="293.1" y="757" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="296.13" y="767.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="421" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1192.40" y="431.5" ></text>
</g>
<g >
<title>do_mem_abort (2,215,494 samples, 0.06%)</title><rect x="293.1" y="741" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="296.13" y="751.5" ></text>
</g>
<g >
<title>ena_dump_stats_to_buf (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="581" width="0.7" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1071.47" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,251,563 samples, 0.17%)</title><rect x="1118.3" y="645" width="2.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1121.31" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,995,713 samples, 0.05%)</title><rect x="1141.6" y="789" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1144.58" y="799.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,946,263 samples, 0.05%)</title><rect x="12.8" y="885" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="15.82" y="895.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (2,401,585 samples, 0.06%)</title><rect x="497.6" y="757" width="0.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="500.64" y="767.5" ></text>
</g>
<g >
<title>___interceptor_strlen.part.0 (1,783,719 samples, 0.05%)</title><rect x="398.0" y="885" width="0.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="400.98" y="895.5" ></text>
</g>
<g >
<title>call_on_irq_stack (1,920,708 samples, 0.05%)</title><rect x="396.7" y="725" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="399.72" y="735.5" ></text>
</g>
<g >
<title>__asan::PoisonShadow (1,963,005 samples, 0.05%)</title><rect x="72.6" y="805" width="0.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="75.63" y="815.5" ></text>
</g>
<g >
<title>server (3,751,503,537 samples, 100.00%)</title><rect x="10.0" y="1061" width="1180.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="13.00" y="1071.5" >server</text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;int, true, false&gt;::operator++ (2,246,388 samples, 0.06%)</title><rect x="694.5" y="901" width="0.7" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="697.53" y="911.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,120,065 samples, 0.06%)</title><rect x="274.4" y="901" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="277.40" y="911.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (45,622,981 samples, 1.22%)</title><rect x="1156.2" y="901" width="14.4" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1159.21" y="911.5" ></text>
</g>
<g >
<title>do_page_fault (2,054,609 samples, 0.05%)</title><rect x="293.8" y="725" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="296.83" y="735.5" ></text>
</g>
<g >
<title>__sock_sendmsg (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="725" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1096.75" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (9,721,323 samples, 0.26%)</title><rect x="1108.7" y="805" width="3.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1111.65" y="815.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (1,954,147 samples, 0.05%)</title><rect x="118.4" y="853" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="121.42" y="863.5" ></text>
</g>
<g >
<title>down_read_trylock (2,099,513 samples, 0.06%)</title><rect x="1122.4" y="533" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1125.38" y="543.5" ></text>
</g>
<g >
<title>__napi_poll (54,872,865 samples, 1.46%)</title><rect x="830.5" y="325" width="17.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="833.53" y="335.5" ></text>
</g>
<g >
<title>__arm64_sys_epoll_pwait (7,503,005 samples, 0.20%)</title><rect x="14.1" y="853" width="2.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="17.05" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,514,216 samples, 0.12%)</title><rect x="1150.2" y="853" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1153.22" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,156,629 samples, 0.06%)</title><rect x="1145.3" y="901" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1148.26" y="911.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (3,637,323 samples, 0.10%)</title><rect x="1087.3" y="853" width="1.1" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1090.30" y="863.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (6,251,563 samples, 0.17%)</title><rect x="1118.3" y="677" width="2.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1121.31" y="687.5" ></text>
</g>
<g >
<title>do_mem_abort (2,564,901 samples, 0.07%)</title><rect x="496.8" y="709" width="0.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="499.84" y="719.5" ></text>
</g>
<g >
<title>[libc.so.6] (6,554,584 samples, 0.17%)</title><rect x="495.6" y="773" width="2.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="498.58" y="783.5" ></text>
</g>
<g >
<title> (3,827,062 samples, 0.10%)</title><rect x="695.2" y="885" width="1.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="698.24" y="895.5" ></text>
</g>
<g >
<title>fmt::v9::detail::format_decimal_result&lt;char*&gt; fmt::v9::detail::format_decimal&lt;char, unsigned int&gt; (1,657,236 samples, 0.04%)</title><rect x="1101.3" y="789" width="0.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1104.32" y="799.5" ></text>
</g>
<g >
<title>ip_output (1,861,841 samples, 0.05%)</title><rect x="613.5" y="469" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="616.47" y="479.5" ></text>
</g>
<g >
<title>lock_sock_nested (2,008,067 samples, 0.05%)</title><rect x="20.9" y="709" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="23.93" y="719.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (15,377,182 samples, 0.41%)</title><rect x="839.2" y="85" width="4.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="842.21" y="95.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (2,156,427 samples, 0.06%)</title><rect x="1120.3" y="693" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1123.28" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (600,211,652 samples, 16.00%)</title><rect x="880.4" y="869" width="188.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="883.37" y="879.5" >__asan_stack_malloc_2</text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,508,527 samples, 0.12%)</title><rect x="1121.0" y="677" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1123.96" y="687.5" ></text>
</g>
<g >
<title>do_page_fault (2,099,513 samples, 0.06%)</title><rect x="1122.4" y="549" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1125.38" y="559.5" ></text>
</g>
<g >
<title>decltype  (5,955,915 samples, 0.16%)</title><rect x="1091.9" y="837" width="1.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1094.87" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (84,250,171 samples, 2.25%)</title><rect x="770.4" y="789" width="26.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="773.43" y="799.5" >_..</text>
</g>
<g >
<title>tcp_data_ready (17,622,553 samples, 0.47%)</title><rect x="838.5" y="117" width="5.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="841.50" y="127.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (4,256,204 samples, 0.11%)</title><rect x="1122.4" y="709" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1125.38" y="719.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (4,474,692 samples, 0.12%)</title><rect x="1134.8" y="709" width="1.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1137.77" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (37,423,011 samples, 1.00%)</title><rect x="421.2" y="853" width="11.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="424.22" y="863.5" ></text>
</g>
<g >
<title>el0t_64_sync (29,165,244 samples, 0.78%)</title><rect x="18.9" y="917" width="9.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="21.89" y="927.5" ></text>
</g>
<g >
<title>handle_softirqs (1,920,708 samples, 0.05%)</title><rect x="396.7" y="677" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="399.72" y="687.5" ></text>
</g>
<g >
<title>tt::chat::server::ChannelManager::get_members (187,664,133 samples, 5.00%)</title><rect x="737.9" y="901" width="59.0" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="740.90" y="911.5" >tt::ch..</text>
</g>
<g >
<title>el0_da (1,965,532 samples, 0.05%)</title><rect x="1156.2" y="805" width="0.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1159.21" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (3,754,893 samples, 0.10%)</title><rect x="1147.8" y="885" width="1.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1150.81" y="895.5" ></text>
</g>
<g >
<title>ip_local_deliver (1,904,211 samples, 0.05%)</title><rect x="679.9" y="501" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="682.88" y="511.5" ></text>
</g>
<g >
<title>do_anonymous_page (2,215,494 samples, 0.06%)</title><rect x="293.1" y="629" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="296.13" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (3,963,921 samples, 0.11%)</title><rect x="206.1" y="885" width="1.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="209.09" y="895.5" ></text>
</g>
<g >
<title>invoke_syscall (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="773" width="0.7" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1096.75" y="783.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (1,956,180 samples, 0.05%)</title><rect x="1104.9" y="693" width="0.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1107.94" y="703.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (2,125,822 samples, 0.06%)</title><rect x="830.5" y="277" width="0.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="833.53" y="287.5" ></text>
</g>
<g >
<title>__do_softirq (1,861,841 samples, 0.05%)</title><rect x="613.5" y="677" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="616.47" y="687.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (2,329,689 samples, 0.06%)</title><rect x="420.5" y="853" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="423.49" y="863.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;::try_reserve (10,921,158 samples, 0.29%)</title><rect x="1120.3" y="741" width="3.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1123.28" y="751.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,215,494 samples, 0.06%)</title><rect x="293.1" y="805" width="0.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="296.13" y="815.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::broadcast_to_channel (1,226,276,655 samples, 32.69%)</title><rect x="683.4" y="917" width="385.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="686.44" y="927.5" >tt::chat::server::EpollServer::broadcast_to_channel</text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,638,085 samples, 0.04%)</title><rect x="1125.6" y="837" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1128.65" y="847.5" ></text>
</g>
<g >
<title>el0t_64_irq (1,904,211 samples, 0.05%)</title><rect x="679.9" y="789" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="682.88" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (96,791,815 samples, 2.58%)</title><rect x="433.0" y="869" width="30.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="435.99" y="879.5" >__..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (58,954,258 samples, 1.57%)</title><rect x="401.9" y="853" width="18.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="404.94" y="863.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true&gt;::_M_bucket_index (72,700,241 samples, 1.94%)</title><rect x="746.5" y="837" width="22.9" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="749.50" y="847.5" >s..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,102,693 samples, 0.06%)</title><rect x="1185.2" y="821" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1188.16" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,054,596 samples, 0.11%)</title><rect x="1158.7" y="821" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1161.73" y="831.5" ></text>
</g>
<g >
<title>call_on_irq_stack (59,209,781 samples, 1.58%)</title><rect x="830.5" y="405" width="18.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="833.53" y="415.5" ></text>
</g>
<g >
<title>tcp_send_mss (12,142,751 samples, 0.32%)</title><rect x="855.3" y="645" width="3.8" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="858.26" y="655.5" ></text>
</g>
<g >
<title>__asan::CanPoisonMemory (1,535,262 samples, 0.04%)</title><rect x="73.2" y="821" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="76.25" y="831.5" ></text>
</g>
<g >
<title>_start (3,730,635,948 samples, 99.44%)</title><rect x="13.4" y="1045" width="1173.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="16.44" y="1055.5" >_start</text>
</g>
<g >
<title>do_wp_page (2,054,609 samples, 0.05%)</title><rect x="293.8" y="661" width="0.7" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="296.83" y="671.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,861,841 samples, 0.05%)</title><rect x="613.5" y="757" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="616.47" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,865,160 samples, 0.08%)</title><rect x="1085.2" y="837" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1088.21" y="847.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,982,687 samples, 0.05%)</title><rect x="1082.0" y="885" width="0.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1084.96" y="895.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (21,032,817 samples, 0.56%)</title><rect x="1117.1" y="757" width="6.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1120.10" y="767.5" ></text>
</g>
<g >
<title>tcp_sendmsg (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="693" width="0.7" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1096.75" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (9,721,323 samples, 0.26%)</title><rect x="1108.7" y="821" width="3.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1111.65" y="831.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (31,780,582 samples, 0.85%)</title><rect x="1070.0" y="757" width="10.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1072.97" y="767.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,783,719 samples, 0.05%)</title><rect x="398.0" y="869" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="400.98" y="879.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="709" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1146.41" y="719.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (863,300,460 samples, 23.01%)</title><rect x="797.6" y="885" width="271.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="800.61" y="895.5" >tt::chat::server::EpollServer::send_..</text>
</g>
<g >
<title>ip_local_deliver_finish (1,992,540 samples, 0.05%)</title><rect x="349.8" y="549" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="352.76" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,110,665 samples, 0.06%)</title><rect x="1113.9" y="757" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1116.88" y="767.5" ></text>
</g>
<g >
<title>el0_da (1,771,650 samples, 0.05%)</title><rect x="297.0" y="725" width="0.5" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="299.97" y="735.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,965,532 samples, 0.05%)</title><rect x="1156.2" y="677" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1159.21" y="687.5" ></text>
</g>
<g >
<title>try_charge_memcg (1,359,675 samples, 0.04%)</title><rect x="30.0" y="725" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="33.02" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,710,992 samples, 0.05%)</title><rect x="1098.1" y="789" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1101.09" y="799.5" ></text>
</g>
<g >
<title>process_backlog (1,920,708 samples, 0.05%)</title><rect x="396.7" y="629" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="399.72" y="639.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::default_arg_formatter&lt;char&gt;::operator (14,289,903 samples, 0.38%)</title><rect x="1156.8" y="869" width="4.5" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1159.83" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (57,412,863 samples, 1.53%)</title><rect x="275.1" y="853" width="18.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="278.07" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,779,135 samples, 0.05%)</title><rect x="1097.5" y="821" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1100.53" y="831.5" ></text>
</g>
<g >
<title>__build_skb_around (9,910,051 samples, 0.26%)</title><rect x="860.3" y="613" width="3.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="863.28" y="623.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1,992,540 samples, 0.05%)</title><rect x="349.8" y="533" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="352.76" y="543.5" ></text>
</g>
<g >
<title>__sock_sendmsg (31,780,582 samples, 0.85%)</title><rect x="1070.0" y="725" width="10.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1072.97" y="735.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;tt::chat::server::ChannelManager, std::default_delete&lt;tt::chat::server::ChannelManager&gt; &gt;::get (3,827,062 samples, 0.10%)</title><rect x="695.2" y="869" width="1.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="698.24" y="879.5" ></text>
</g>
<g >
<title>__netif_receive_skb (54,872,865 samples, 1.46%)</title><rect x="830.5" y="293" width="17.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="833.53" y="303.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (9,975,188 samples, 0.27%)</title><rect x="1073.9" y="197" width="3.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1076.90" y="207.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1,861,841 samples, 0.05%)</title><rect x="613.5" y="517" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="616.47" y="527.5" ></text>
</g>
<g >
<title>__sanitizer::ReadFileToBuffer (1,834,332 samples, 0.05%)</title><rect x="10.8" y="869" width="0.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="13.83" y="879.5" ></text>
</g>
<g >
<title>sock_poll (1,450,096 samples, 0.04%)</title><rect x="14.7" y="757" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="17.71" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (61,682,966 samples, 1.64%)</title><rect x="275.1" y="901" width="19.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="278.07" y="911.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1,992,540 samples, 0.05%)</title><rect x="349.8" y="485" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="352.76" y="495.5" ></text>
</g>
<g >
<title>do_mem_abort (2,054,609 samples, 0.05%)</title><rect x="293.8" y="741" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="296.83" y="751.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1,920,708 samples, 0.05%)</title><rect x="396.7" y="597" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="399.72" y="607.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::run (3,730,635,948 samples, 99.44%)</title><rect x="13.4" y="981" width="1173.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="16.44" y="991.5" >tt::chat::server::EpollServer::run</text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,069,379 samples, 0.06%)</title><rect x="1125.0" y="837" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1128.00" y="847.5" ></text>
</g>
<g >
<title>__asan::GetMallocContextSize (2,197,614 samples, 0.06%)</title><rect x="520.4" y="837" width="0.7" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="523.40" y="847.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1,897,701 samples, 0.05%)</title><rect x="849.8" y="453" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="852.83" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_key_equals (84,250,171 samples, 2.25%)</title><rect x="770.4" y="805" width="26.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="773.43" y="815.5" >s..</text>
</g>
<g >
<title>__skb_datagram_iter (13,070,653 samples, 0.35%)</title><rect x="22.8" y="677" width="4.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="25.84" y="687.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="517" width="0.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1096.75" y="527.5" ></text>
</g>
<g >
<title>folio_add_lru (2,215,494 samples, 0.06%)</title><rect x="293.1" y="597" width="0.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="296.13" y="607.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (8,956,169 samples, 0.24%)</title><rect x="495.6" y="837" width="2.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="498.58" y="847.5" ></text>
</g>
<g >
<title>tcp_wmem_schedule (5,936,175 samples, 0.16%)</title><rect x="871.7" y="645" width="1.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="874.68" y="655.5" ></text>
</g>
<g >
<title>ip_finish_output2 (1,920,708 samples, 0.05%)</title><rect x="396.7" y="325" width="0.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="399.72" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,222,575 samples, 0.06%)</title><rect x="1093.0" y="773" width="0.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1096.05" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,805,690 samples, 0.10%)</title><rect x="1142.2" y="773" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1145.21" y="783.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (2,197,314 samples, 0.06%)</title><rect x="815.3" y="645" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="818.31" y="655.5" ></text>
</g>
<g >
<title>memset (1,676,709 samples, 0.04%)</title><rect x="878.7" y="725" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="881.68" y="735.5" ></text>
</g>
<g >
<title>operator new (4,256,204 samples, 0.11%)</title><rect x="1122.4" y="693" width="1.3" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1125.38" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,977,710 samples, 0.05%)</title><rect x="1091.9" y="821" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1094.87" y="831.5" ></text>
</g>
<g >
<title>rseq_get_rseq_cs.isra.0 (2,056,236 samples, 0.05%)</title><rect x="1067.2" y="741" width="0.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1070.22" y="751.5" ></text>
</g>
<g >
<title>n_tty_write (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="501" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1146.96" y="511.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,109,875 samples, 0.06%)</title><rect x="1168.5" y="789" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1171.47" y="799.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::print_range_ (3,882,874 samples, 0.10%)</title><rect x="1143.4" y="821" width="1.2" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1146.41" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,638,085 samples, 0.04%)</title><rect x="1125.6" y="821" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1128.65" y="831.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,965,532 samples, 0.05%)</title><rect x="1156.2" y="741" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1159.21" y="751.5" ></text>
</g>
<g >
<title>__netif_receive_skb (16,163,540 samples, 0.43%)</title><rect x="1072.7" y="309" width="5.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1075.65" y="319.5" ></text>
</g>
<g >
<title>do_page_fault (1,815,937 samples, 0.05%)</title><rect x="296.4" y="677" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="299.39" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,014,467 samples, 0.05%)</title><rect x="1091.2" y="821" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1094.24" y="831.5" ></text>
</g>
<g >
<title>spdlog::default_logger_raw (2,011,509 samples, 0.05%)</title><rect x="16.4" y="965" width="0.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="19.41" y="975.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (9,957,971 samples, 0.27%)</title><rect x="798.9" y="853" width="3.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="801.85" y="863.5" ></text>
</g>
<g >
<title>lock_mm_and_find_vma (1,834,332 samples, 0.05%)</title><rect x="10.8" y="549" width="0.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="13.83" y="559.5" ></text>
</g>
<g >
<title>vfs_read (1,834,332 samples, 0.05%)</title><rect x="10.8" y="693" width="0.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="13.83" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,120,750 samples, 0.08%)</title><rect x="11.8" y="885" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.84" y="895.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,992,540 samples, 0.05%)</title><rect x="349.8" y="389" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="352.76" y="399.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (4,270,103 samples, 0.11%)</title><rect x="293.1" y="821" width="1.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="296.13" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,003,202 samples, 0.05%)</title><rect x="1160.7" y="773" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1163.69" y="783.5" ></text>
</g>
<g >
<title>do_translation_fault (2,099,513 samples, 0.06%)</title><rect x="1122.4" y="565" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1125.38" y="575.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="469" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1192.40" y="479.5" ></text>
</g>
<g >
<title>iterate_tty_write (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="565" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1188.82" y="575.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;, 0ul&gt; (3,978,205 samples, 0.11%)</title><rect x="1092.5" y="805" width="1.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1095.49" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,063,382 samples, 0.06%)</title><rect x="1084.6" y="869" width="0.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1087.56" y="879.5" ></text>
</g>
<g >
<title>__sk_dst_check (2,191,243 samples, 0.06%)</title><rect x="850.4" y="565" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="853.42" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,069,379 samples, 0.06%)</title><rect x="1125.0" y="853" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1128.00" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (112,392,991 samples, 3.00%)</title><rect x="39.1" y="917" width="35.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="42.07" y="927.5" >st..</text>
</g>
<g >
<title>[libc.so.6] (1,946,263 samples, 0.05%)</title><rect x="12.8" y="901" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.82" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (26,435,664 samples, 0.70%)</title><rect x="686.2" y="901" width="8.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="689.22" y="911.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;, 0ul&gt; (4,251,539 samples, 0.11%)</title><rect x="1152.3" y="853" width="1.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1155.30" y="863.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="533" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1146.96" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,946,263 samples, 0.05%)</title><rect x="12.8" y="917" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="15.82" y="927.5" ></text>
</g>
<g >
<title>fmt::v9::detail::vformat_to&lt;char&gt; (29,367,546 samples, 0.78%)</title><rect x="1161.3" y="885" width="9.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1164.32" y="895.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_equals (84,250,171 samples, 2.25%)</title><rect x="770.4" y="821" width="26.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="773.43" y="831.5" >s..</text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (17,946,450 samples, 0.48%)</title><rect x="1176.3" y="821" width="5.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1179.29" y="831.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (31,780,582 samples, 0.85%)</title><rect x="1070.0" y="789" width="10.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1072.97" y="799.5" ></text>
</g>
<g >
<title>do_anonymous_page (2,564,901 samples, 0.07%)</title><rect x="496.8" y="597" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="499.84" y="607.5" ></text>
</g>
<g >
<title>__sys_sendto (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="741" width="0.7" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="1096.75" y="751.5" ></text>
</g>
<g >
<title>operator new (4,270,103 samples, 0.11%)</title><rect x="293.1" y="853" width="1.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="296.13" y="863.5" ></text>
</g>
<g >
<title>ptep_clear_flush (2,054,609 samples, 0.05%)</title><rect x="293.8" y="629" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="296.83" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,120,750 samples, 0.08%)</title><rect x="11.8" y="869" width="1.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.84" y="879.5" ></text>
</g>
<g >
<title>void spdlog::logger::log&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (161,772,681 samples, 4.31%)</title><rect x="1094.4" y="901" width="50.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1097.38" y="911.5" >void ..</text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;::try_reserve (8,034,515 samples, 0.21%)</title><rect x="1134.8" y="757" width="2.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1137.77" y="767.5" ></text>
</g>
<g >
<title>security_socket_sendmsg (10,008,611 samples, 0.27%)</title><rect x="874.3" y="693" width="3.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="877.25" y="703.5" ></text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (221,283,937 samples, 5.90%)</title><rect x="204.8" y="917" width="69.6" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="207.80" y="927.5" >fmt::v9..</text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; fmt::v9::detail::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (211,055,163 samples, 5.63%)</title><rect x="207.3" y="901" width="66.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="210.34" y="911.5" >fmt::v9..</text>
</g>
<g >
<title>do_notify_resume (9,946,506 samples, 0.27%)</title><rect x="1186.9" y="997" width="3.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1189.87" y="1007.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (60,718,476 samples, 1.62%)</title><rect x="1126.2" y="853" width="19.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1129.16" y="863.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (2,401,585 samples, 0.06%)</title><rect x="497.6" y="485" width="0.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="500.64" y="495.5" ></text>
</g>
<g >
<title>check_heap_object (1,820,600 samples, 0.05%)</title><rect x="1070.6" y="613" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1073.57" y="623.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,492,655 samples, 0.07%)</title><rect x="10.0" y="965" width="0.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,248,160 samples, 0.11%)</title><rect x="1100.0" y="773" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1102.99" y="783.5" ></text>
</g>
<g >
<title>neigh_hh_output (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="501" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1096.75" y="511.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="901" width="0.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1096.75" y="911.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1,992,540 samples, 0.05%)</title><rect x="349.8" y="629" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="352.76" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (2,237,559 samples, 0.06%)</title><rect x="1171.6" y="837" width="0.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1174.61" y="847.5" ></text>
</g>
<g >
<title>do_page_fault (4,143,223 samples, 0.11%)</title><rect x="71.3" y="725" width="1.3" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="74.32" y="735.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,946,263 samples, 0.05%)</title><rect x="12.8" y="645" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="15.82" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,905,330 samples, 0.16%)</title><rect x="1105.6" y="645" width="1.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1108.55" y="655.5" ></text>
</g>
<g >
<title>el0_da (1,473,687 samples, 0.04%)</title><rect x="12.4" y="725" width="0.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="15.35" y="735.5" ></text>
</g>
<g >
<title>__arch_copy_from_user (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="469" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1146.41" y="479.5" ></text>
</g>
<g >
<title>write (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="709" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1146.96" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,969,887 samples, 0.05%)</title><rect x="1147.2" y="885" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1150.19" y="895.5" ></text>
</g>
<g >
<title>get_vma_policy (1,473,687 samples, 0.04%)</title><rect x="12.4" y="533" width="0.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="15.35" y="543.5" ></text>
</g>
<g >
<title>do_pte_missing (1,898,887 samples, 0.05%)</title><rect x="72.0" y="661" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="75.03" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1,943,777 samples, 0.05%)</title><rect x="1083.9" y="869" width="0.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1086.95" y="879.5" ></text>
</g>
<g >
<title>___interceptor_read.part.0 (35,041,314 samples, 0.93%)</title><rect x="17.0" y="949" width="11.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="20.04" y="959.5" ></text>
</g>
<g >
<title>decltype  (3,971,208 samples, 0.11%)</title><rect x="681.5" y="853" width="1.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="684.54" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,820,865 samples, 0.05%)</title><rect x="1171.0" y="885" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1174.03" y="895.5" ></text>
</g>
<g >
<title>el1_abort (1,834,332 samples, 0.05%)</title><rect x="10.8" y="597" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="13.83" y="607.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="677" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1096.75" y="687.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;&gt; (6,348,979 samples, 0.17%)</title><rect x="1151.6" y="869" width="2.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1154.64" y="879.5" ></text>
</g>
<g >
<title>invoke_syscall (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="661" width="0.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1188.82" y="671.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::end (61,122,108 samples, 1.63%)</title><rect x="718.7" y="885" width="19.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="721.68" y="895.5" ></text>
</g>
<g >
<title>__arm64_sys_mmap (2,401,585 samples, 0.06%)</title><rect x="497.6" y="581" width="0.8" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="500.64" y="591.5" ></text>
</g>
<g >
<title>__do_softirq (59,209,781 samples, 1.58%)</title><rect x="830.5" y="373" width="18.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="833.53" y="383.5" ></text>
</g>
<g >
<title>__lsan::DisabledInThisThread (2,329,689 samples, 0.06%)</title><rect x="420.5" y="789" width="0.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="423.49" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,977,709 samples, 0.05%)</title><rect x="1139.6" y="757" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1142.60" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,149,076 samples, 0.06%)</title><rect x="1098.6" y="757" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1101.63" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,009,563 samples, 0.05%)</title><rect x="1149.6" y="885" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1152.59" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,109,875 samples, 0.06%)</title><rect x="1168.5" y="773" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1171.47" y="783.5" ></text>
</g>
<g >
<title>__arm64_sys_read (29,165,244 samples, 0.78%)</title><rect x="18.9" y="821" width="9.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="21.89" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,003,202 samples, 0.05%)</title><rect x="1160.7" y="757" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1163.69" y="767.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (1,920,708 samples, 0.05%)</title><rect x="396.7" y="805" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="399.72" y="815.5" ></text>
</g>
<g >
<title>el0_svc (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="709" width="0.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1188.82" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,692,920 samples, 0.05%)</title><rect x="1181.9" y="709" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1184.94" y="719.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (4,204,629 samples, 0.11%)</title><rect x="1128.3" y="789" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1131.33" y="799.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1,904,211 samples, 0.05%)</title><rect x="679.9" y="373" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="682.88" y="383.5" ></text>
</g>
<g >
<title>__asan::AsanInitIsRunning (1,869,214 samples, 0.05%)</title><rect x="879.8" y="853" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="882.78" y="863.5" ></text>
</g>
<g >
<title>tcp_send_ack (1,861,841 samples, 0.05%)</title><rect x="613.5" y="549" width="0.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="616.47" y="559.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_client_data (3,586,880,316 samples, 95.61%)</title><rect x="17.0" y="965" width="1128.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="20.04" y="975.5" >tt::chat::server::EpollServer::handle_client_data</text>
</g>
<g >
<title>__sanitizer::internal_mmap (4,575,844 samples, 0.12%)</title><rect x="297.5" y="693" width="1.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="300.52" y="703.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="837" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1096.75" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,174,966 samples, 0.06%)</title><rect x="1099.3" y="757" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1102.30" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (7,500,602 samples, 0.20%)</title><rect x="1179.6" y="693" width="2.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1182.58" y="703.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,215,494 samples, 0.06%)</title><rect x="293.1" y="773" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="296.13" y="783.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (2,003,202 samples, 0.05%)</title><rect x="1160.7" y="805" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1163.69" y="815.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,564,901 samples, 0.07%)</title><rect x="496.8" y="645" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="499.84" y="655.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (11,841,154 samples, 0.32%)</title><rect x="822.3" y="613" width="3.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="825.34" y="623.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::grow (4,204,629 samples, 0.11%)</title><rect x="1128.3" y="757" width="1.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1131.33" y="767.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,965,532 samples, 0.05%)</title><rect x="1156.2" y="709" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1159.21" y="719.5" ></text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (1,473,687 samples, 0.04%)</title><rect x="12.4" y="565" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="15.35" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,547,240 samples, 0.12%)</title><rect x="1126.2" y="805" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1129.16" y="815.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (6,251,563 samples, 0.17%)</title><rect x="1118.3" y="661" width="2.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1121.31" y="671.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (1,946,263 samples, 0.05%)</title><rect x="12.8" y="773" width="0.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="15.82" y="783.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (1,692,920 samples, 0.05%)</title><rect x="1181.9" y="741" width="0.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1184.94" y="751.5" ></text>
</g>
<g >
<title>do_mem_abort (2,156,691 samples, 0.06%)</title><rect x="1123.0" y="597" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1126.04" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,710,992 samples, 0.05%)</title><rect x="1098.1" y="773" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1101.09" y="783.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="741" width="0.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1188.82" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (137,648,052 samples, 3.67%)</title><rect x="74.4" y="885" width="43.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="77.42" y="895.5" >__as..</text>
</g>
<g >
<title>____do_softirq (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="565" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1192.40" y="575.5" ></text>
</g>
<g >
<title>do_page_fault (1,473,687 samples, 0.04%)</title><rect x="12.4" y="677" width="0.4" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="15.35" y="687.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::GetFromAllocator (2,401,585 samples, 0.06%)</title><rect x="497.6" y="741" width="0.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="500.64" y="751.5" ></text>
</g>
<g >
<title>tcp_ack (4,049,717 samples, 0.11%)</title><rect x="817.3" y="597" width="1.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="820.29" y="607.5" ></text>
</g>
<g >
<title>do_pte_missing (2,215,494 samples, 0.06%)</title><rect x="293.1" y="645" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="296.13" y="655.5" ></text>
</g>
<g >
<title>operator new (1,982,687 samples, 0.05%)</title><rect x="1082.0" y="837" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1084.96" y="847.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,946,263 samples, 0.05%)</title><rect x="12.8" y="629" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="15.82" y="639.5" ></text>
</g>
<g >
<title>alloc_anon_folio (1,473,687 samples, 0.04%)</title><rect x="12.4" y="581" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="15.35" y="591.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (1,904,211 samples, 0.05%)</title><rect x="679.9" y="773" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="682.88" y="783.5" ></text>
</g>
<g >
<title>do_mmap (4,575,844 samples, 0.12%)</title><rect x="297.5" y="533" width="1.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="300.52" y="543.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char*, char*&gt; (2,156,427 samples, 0.06%)</title><rect x="1120.3" y="709" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1123.28" y="719.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (22,593,842 samples, 0.60%)</title><rect x="1162.0" y="853" width="7.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1165.03" y="863.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender, int, 0&gt; (11,940,430 samples, 0.32%)</title><rect x="1098.1" y="805" width="3.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1101.09" y="815.5" ></text>
</g>
<g >
<title>el0_da (1,946,263 samples, 0.05%)</title><rect x="12.8" y="709" width="0.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="15.82" y="719.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="581" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1188.82" y="591.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (10,111,659 samples, 0.27%)</title><rect x="1117.1" y="741" width="3.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1120.10" y="751.5" ></text>
</g>
<g >
<title>release_pages (2,049,173 samples, 0.05%)</title><rect x="1186.9" y="805" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1189.87" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,274,801 samples, 0.11%)</title><rect x="1163.6" y="805" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1166.64" y="815.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (16,163,540 samples, 0.43%)</title><rect x="1072.7" y="293" width="5.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1075.65" y="303.5" ></text>
</g>
<g >
<title>mmap_region (2,401,585 samples, 0.06%)</title><rect x="497.6" y="517" width="0.8" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="500.64" y="527.5" ></text>
</g>
<g >
<title>spdlog::details::registry::registry (2,011,509 samples, 0.05%)</title><rect x="16.4" y="933" width="0.6" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="19.41" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,175,201 samples, 0.06%)</title><rect x="1129.0" y="709" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1131.97" y="719.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (3,893,695 samples, 0.10%)</title><rect x="612.8" y="789" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="615.83" y="799.5" ></text>
</g>
<g >
<title>__sanitizer::MmapFixedImpl (4,575,844 samples, 0.12%)</title><rect x="297.5" y="709" width="1.5" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="300.52" y="719.5" ></text>
</g>
<g >
<title>__fget_light (4,055,165 samples, 0.11%)</title><rect x="877.4" y="677" width="1.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="880.40" y="687.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (48,531,175 samples, 1.29%)</title><rect x="1171.6" y="917" width="15.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1174.61" y="927.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (2,329,689 samples, 0.06%)</title><rect x="420.5" y="821" width="0.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="423.49" y="831.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="789" width="0.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1096.75" y="799.5" ></text>
</g>
<g >
<title>invoke_syscall (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="581" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1146.41" y="591.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (29,167,722 samples, 0.78%)</title><rect x="1114.5" y="773" width="9.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1117.54" y="783.5" ></text>
</g>
<g >
<title>mas_prev_slot (1,946,263 samples, 0.05%)</title><rect x="12.8" y="533" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="15.82" y="543.5" ></text>
</g>
<g >
<title>apparmor_socket_recvmsg (3,528,299 samples, 0.09%)</title><rect x="27.0" y="725" width="1.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="29.95" y="735.5" ></text>
</g>
<g >
<title>do_group_exit (9,946,506 samples, 0.27%)</title><rect x="1186.9" y="949" width="3.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1189.87" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (72,700,241 samples, 1.94%)</title><rect x="746.5" y="821" width="22.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="749.50" y="831.5" >_..</text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (22,409,216 samples, 0.60%)</title><rect x="1146.6" y="949" width="7.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1149.59" y="959.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (4,278,993 samples, 0.11%)</title><rect x="519.7" y="885" width="1.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="522.75" y="895.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (1,725,818 samples, 0.05%)</title><rect x="17.0" y="917" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="20.04" y="927.5" ></text>
</g>
<g >
<title>tcp_current_mss (10,149,946 samples, 0.27%)</title><rect x="855.9" y="629" width="3.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="858.89" y="639.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1,904,211 samples, 0.05%)</title><rect x="679.9" y="485" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="682.88" y="495.5" ></text>
</g>
<g >
<title>__sanitizer::internal_allocator (1,473,687 samples, 0.04%)</title><rect x="12.4" y="789" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="15.35" y="799.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,771,650 samples, 0.05%)</title><rect x="297.0" y="677" width="0.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="299.97" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,274,801 samples, 0.11%)</title><rect x="1163.6" y="821" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1166.64" y="831.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (22,593,842 samples, 0.60%)</title><rect x="1162.0" y="869" width="7.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1165.03" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,341,850 samples, 0.06%)</title><rect x="1082.6" y="853" width="0.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1085.58" y="863.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;&gt; (3,971,208 samples, 0.11%)</title><rect x="681.5" y="837" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="684.54" y="847.5" ></text>
</g>
<g >
<title>dlsym (3,120,750 samples, 0.08%)</title><rect x="11.8" y="949" width="1.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="14.84" y="959.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,114,453 samples, 0.06%)</title><rect x="1101.8" y="789" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1104.84" y="799.5" ></text>
</g>
<g >
<title>tcp_poll (1,450,096 samples, 0.04%)</title><rect x="14.7" y="741" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="17.71" y="751.5" ></text>
</g>
<g >
<title>read (29,165,244 samples, 0.78%)</title><rect x="18.9" y="933" width="9.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="21.89" y="943.5" ></text>
</g>
<g >
<title>tt::chat::server::ChannelManager::join_channel (2,341,850 samples, 0.06%)</title><rect x="1082.6" y="917" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1085.58" y="927.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt;::data (2,164,552 samples, 0.06%)</title><rect x="273.7" y="901" width="0.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="276.72" y="911.5" ></text>
</g>
<g >
<title>tcp_push (90,650,213 samples, 2.42%)</title><rect x="826.8" y="645" width="28.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="829.75" y="655.5" >tc..</text>
</g>
<g >
<title>tcp_sendmsg (193,575,691 samples, 5.16%)</title><rect x="812.7" y="677" width="60.8" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="815.66" y="687.5" >tcp_se..</text>
</g>
<g >
<title>el0_svc_common.constprop.0 (7,503,005 samples, 0.20%)</title><rect x="14.1" y="885" width="2.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="17.05" y="895.5" ></text>
</g>
<g >
<title>skb_release_head_state (2,166,732 samples, 0.06%)</title><rect x="837.8" y="101" width="0.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="840.82" y="111.5" ></text>
</g>
<g >
<title>do_pte_missing (1,473,687 samples, 0.04%)</title><rect x="12.4" y="613" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="15.35" y="623.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (17,701,138 samples, 0.47%)</title><rect x="1101.8" y="805" width="5.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1104.84" y="815.5" ></text>
</g>
<g >
<title>__arm64_sys_write (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="565" width="0.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1146.41" y="575.5" ></text>
</g>
<g >
<title>el0t_64_irq (3,765,077 samples, 0.10%)</title><rect x="349.2" y="853" width="1.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="352.20" y="863.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char*, char*&gt; (4,474,692 samples, 0.12%)</title><rect x="1134.8" y="725" width="1.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1137.77" y="735.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_name_command (196,923,547 samples, 5.25%)</title><rect x="1083.3" y="933" width="62.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1086.32" y="943.5" >tt::ch..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (66,269,724 samples, 1.77%)</title><rect x="697.8" y="869" width="20.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="700.83" y="879.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::grow (5,905,330 samples, 0.16%)</title><rect x="1105.6" y="725" width="1.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1108.55" y="735.5" ></text>
</g>
<g >
<title>raw_v4_input (2,206,485 samples, 0.06%)</title><rect x="1073.2" y="197" width="0.7" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1076.20" y="207.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,473,687 samples, 0.04%)</title><rect x="12.4" y="757" width="0.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="15.35" y="767.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::base_iterator&lt;fmt::v9::appender&gt; (4,054,596 samples, 0.11%)</title><rect x="1158.7" y="837" width="1.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1161.73" y="847.5" ></text>
</g>
<g >
<title>__sk_mem_raise_allocated (5,936,175 samples, 0.16%)</title><rect x="871.7" y="613" width="1.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="874.68" y="623.5" ></text>
</g>
<g >
<title>fmt::v9::format_arg_store&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::remove_cv&lt;std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&gt;::type&gt; fmt::v9::make_format_args&lt;fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (1,820,865 samples, 0.05%)</title><rect x="1171.0" y="917" width="0.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1174.03" y="927.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,054,609 samples, 0.05%)</title><rect x="293.8" y="677" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="296.83" y="687.5" ></text>
</g>
<g >
<title>el0t_64_sync (5,834,634 samples, 0.16%)</title><rect x="70.8" y="805" width="1.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="73.79" y="815.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (15,586,685 samples, 0.42%)</title><rect x="1102.5" y="789" width="4.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1105.51" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,309,929 samples, 0.06%)</title><rect x="1183.8" y="741" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1186.77" y="751.5" ></text>
</g>
<g >
<title>pty_write (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="517" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1188.82" y="527.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::vformat_to&lt;fmt::v9::appender, 0&gt; (53,801,215 samples, 1.43%)</title><rect x="1153.6" y="917" width="17.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1156.64" y="927.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="677" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1146.96" y="687.5" ></text>
</g>
<g >
<title>do_mem_abort (1,473,687 samples, 0.04%)</title><rect x="12.4" y="709" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="15.35" y="719.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::default_arg_formatter&lt;char&gt;::operator (29,641,568 samples, 0.79%)</title><rect x="1098.1" y="821" width="9.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1101.09" y="831.5" ></text>
</g>
<g >
<title>__sanitizer_internal_memset (1,473,687 samples, 0.04%)</title><rect x="12.4" y="773" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="15.35" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,465,602 samples, 0.04%)</title><rect x="1139.1" y="757" width="0.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1142.13" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (1,900,896 samples, 0.05%)</title><rect x="1149.0" y="885" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1151.99" y="895.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,946,263 samples, 0.05%)</title><rect x="12.8" y="741" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="15.82" y="751.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (45,188,904 samples, 1.20%)</title><rect x="1171.6" y="869" width="14.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1174.61" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (32,542,718 samples, 0.87%)</title><rect x="340.2" y="885" width="10.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="343.15" y="895.5" ></text>
</g>
<g >
<title>ksys_write (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="581" width="0.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1146.96" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (14,517,852 samples, 0.39%)</title><rect x="463.4" y="853" width="4.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="466.43" y="863.5" ></text>
</g>
<g >
<title>_IO_fwrite (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="837" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1188.82" y="847.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (3,882,874 samples, 0.10%)</title><rect x="1143.4" y="773" width="1.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1146.41" y="783.5" ></text>
</g>
<g >
<title>handle_softirqs (1,861,841 samples, 0.05%)</title><rect x="613.5" y="661" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="616.47" y="671.5" ></text>
</g>
<g >
<title>do_translation_fault (4,143,223 samples, 0.11%)</title><rect x="71.3" y="741" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="74.32" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4,251,539 samples, 0.11%)</title><rect x="1152.3" y="837" width="1.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1155.30" y="847.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1,884,408 samples, 0.05%)</title><rect x="1070.0" y="629" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1072.97" y="639.5" ></text>
</g>
<g >
<title>spdlog::logger::log_it_ (60,718,476 samples, 1.62%)</title><rect x="1126.2" y="869" width="19.1" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1129.16" y="879.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (7,500,602 samples, 0.20%)</title><rect x="1179.6" y="773" width="2.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1182.58" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,705,614 samples, 0.10%)</title><rect x="1112.7" y="773" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1115.71" y="783.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (16,848,985 samples, 0.45%)</title><rect x="1088.4" y="901" width="5.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1091.45" y="911.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,473,687 samples, 0.04%)</title><rect x="12.4" y="597" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="15.35" y="607.5" ></text>
</g>
<g >
<title>tcp_write_xmit (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="629" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1096.75" y="639.5" ></text>
</g>
<g >
<title>do_translation_fault (1,473,687 samples, 0.04%)</title><rect x="12.4" y="693" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="15.35" y="703.5" ></text>
</g>
<g >
<title>___interceptor_send.part.0 (257,276,841 samples, 6.86%)</title><rect x="798.9" y="869" width="80.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="801.85" y="879.5" >___interc..</text>
</g>
<g >
<title>___slab_alloc (2,026,973 samples, 0.05%)</title><rect x="865.9" y="597" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="868.91" y="607.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (59,209,781 samples, 1.58%)</title><rect x="830.5" y="421" width="18.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="833.53" y="431.5" ></text>
</g>
<g >
<title>__run_timers (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="645" width="0.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1071.47" y="655.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,215,494 samples, 0.06%)</title><rect x="293.1" y="789" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="296.13" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (87,690,791 samples, 2.34%)</title><rect x="468.0" y="837" width="27.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="471.00" y="847.5" >_..</text>
</g>
<g >
<title>__local_bh_enable_ip (59,209,781 samples, 1.58%)</title><rect x="830.5" y="453" width="18.7" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="833.53" y="463.5" ></text>
</g>
<g >
<title>seq_read_iter (1,834,332 samples, 0.05%)</title><rect x="10.8" y="661" width="0.6" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="13.83" y="671.5" ></text>
</g>
<g >
<title>spdlog::details::full_formatter::format (38,741,041 samples, 1.03%)</title><rect x="1173.0" y="853" width="12.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1175.97" y="863.5" ></text>
</g>
<g >
<title>__sock_sendmsg (205,827,332 samples, 5.49%)</title><rect x="812.7" y="709" width="64.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="815.66" y="719.5" >__sock_..</text>
</g>
<g >
<title>tcp_rcv_established (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="325" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1192.40" y="335.5" ></text>
</g>
<g >
<title>operator delete (4,278,993 samples, 0.11%)</title><rect x="519.7" y="853" width="1.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="522.75" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (61,283,947 samples, 1.63%)</title><rect x="401.9" y="869" width="19.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="404.94" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (2,321,131 samples, 0.06%)</title><rect x="521.1" y="885" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="524.09" y="895.5" ></text>
</g>
<g >
<title>el0_svc (1,834,332 samples, 0.05%)</title><rect x="10.8" y="789" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="13.83" y="799.5" ></text>
</g>
<g >
<title>arch_counter_get_cntvct (2,050,978 samples, 0.05%)</title><rect x="816.6" y="549" width="0.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="819.64" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,029,428 samples, 0.05%)</title><rect x="1128.3" y="661" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1131.33" y="671.5" ></text>
</g>
<g >
<title>__netif_receive_skb (1,904,211 samples, 0.05%)</title><rect x="679.9" y="565" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="682.88" y="575.5" ></text>
</g>
<g >
<title>__check_object_size (2,212,007 samples, 0.06%)</title><rect x="819.6" y="645" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="822.55" y="655.5" ></text>
</g>
<g >
<title>spdlog::details::full_formatter::format (37,924,589 samples, 1.01%)</title><rect x="1129.7" y="805" width="11.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1132.65" y="815.5" ></text>
</g>
<g >
<title>invoke_syscall (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="613" width="0.6" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1146.96" y="623.5" ></text>
</g>
<g >
<title>lock_sock_nested (6,548,986 samples, 0.17%)</title><rect x="812.7" y="661" width="2.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="815.66" y="671.5" ></text>
</g>
<g >
<title>do_epoll_pwait.part.0 (7,503,005 samples, 0.20%)</title><rect x="14.1" y="837" width="2.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="17.05" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (149,212,334 samples, 3.98%)</title><rect x="350.4" y="869" width="46.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="353.39" y="879.5" >__as..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,097,440 samples, 0.06%)</title><rect x="1151.6" y="837" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1154.64" y="847.5" ></text>
</g>
<g >
<title>_IO_do_write (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="725" width="0.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1146.41" y="735.5" ></text>
</g>
<g >
<title>__netif_rx (2,132,905 samples, 0.06%)</title><rect x="849.2" y="421" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="852.16" y="431.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1,884,408 samples, 0.05%)</title><rect x="1070.0" y="645" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1072.97" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,309,929 samples, 0.06%)</title><rect x="1183.8" y="725" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1186.77" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,349,137 samples, 0.06%)</title><rect x="1127.6" y="773" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1130.59" y="783.5" ></text>
</g>
<g >
<title>handle_softirqs (56,981,914 samples, 1.52%)</title><rect x="830.5" y="357" width="18.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="833.53" y="367.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,445,848 samples, 0.28%)</title><rect x="1176.3" y="773" width="3.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1179.29" y="783.5" ></text>
</g>
<g >
<title>do_mem_abort (1,946,263 samples, 0.05%)</title><rect x="12.8" y="693" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="15.82" y="703.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (2,401,585 samples, 0.06%)</title><rect x="497.6" y="773" width="0.8" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="500.64" y="783.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1,904,211 samples, 0.05%)</title><rect x="679.9" y="421" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="682.88" y="431.5" ></text>
</g>
<g >
<title>tcp_ack (14,129,722 samples, 0.38%)</title><rect x="834.1" y="133" width="4.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="837.06" y="143.5" ></text>
</g>
<g >
<title>char const* std::addressof&lt;char const&gt; (2,321,131 samples, 0.06%)</title><rect x="521.1" y="837" width="0.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="524.09" y="847.5" ></text>
</g>
<g >
<title>unmap_single_vma.isra.0 (4,093,756 samples, 0.11%)</title><rect x="1187.5" y="837" width="1.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1190.52" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,221,294 samples, 0.17%)</title><rect x="1129.7" y="725" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1132.65" y="735.5" ></text>
</g>
<g >
<title>do_page_fault (2,656,689 samples, 0.07%)</title><rect x="30.0" y="837" width="0.9" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="33.02" y="847.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,771,650 samples, 0.05%)</title><rect x="297.0" y="661" width="0.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="299.97" y="671.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (1,956,180 samples, 0.05%)</title><rect x="1104.9" y="661" width="0.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1107.94" y="671.5" ></text>
</g>
<g >
<title>clear_rseq_cs.isra.0 (2,019,038 samples, 0.05%)</title><rect x="1066.6" y="741" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1069.59" y="751.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (109,532,747 samples, 2.92%)</title><rect x="398.5" y="901" width="34.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="401.54" y="911.5" >vo..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_eq (1,934,483 samples, 0.05%)</title><rect x="680.5" y="821" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="683.48" y="831.5" ></text>
</g>
<g >
<title>run_timer_softirq (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="661" width="0.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1071.47" y="671.5" ></text>
</g>
<g >
<title>ip_local_deliver (1,992,540 samples, 0.05%)</title><rect x="349.8" y="565" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="352.76" y="575.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::min&lt;unsigned long&gt; (4,316,739 samples, 0.12%)</title><rect x="199.2" y="901" width="1.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="202.24" y="911.5" ></text>
</g>
<g >
<title>neigh_hh_output (63,240,387 samples, 1.69%)</title><rect x="830.5" y="485" width="19.9" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="833.53" y="495.5" ></text>
</g>
<g >
<title>net_rx_action (1,920,708 samples, 0.05%)</title><rect x="396.7" y="661" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="399.72" y="671.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,473,687 samples, 0.04%)</title><rect x="12.4" y="645" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="15.35" y="655.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1,904,211 samples, 0.05%)</title><rect x="679.9" y="437" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="682.88" y="447.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,820,865 samples, 0.05%)</title><rect x="1171.0" y="869" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1174.03" y="879.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (1,946,263 samples, 0.05%)</title><rect x="12.8" y="949" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="15.82" y="959.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (16,264,542 samples, 0.43%)</title><rect x="1129.7" y="757" width="5.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1132.65" y="767.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; fmt::v9::detail::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,638,085 samples, 0.04%)</title><rect x="1125.6" y="853" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1128.65" y="863.5" ></text>
</g>
<g >
<title>[libfmt.so.9.1.0] (10,216,073 samples, 0.27%)</title><rect x="296.4" y="837" width="3.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="299.39" y="847.5" ></text>
</g>
<g >
<title>bool fmt::v9::detail::find&lt;false, char, char const*&gt; (2,018,387 samples, 0.05%)</title><rect x="1111.7" y="821" width="0.6" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1114.71" y="831.5" ></text>
</g>
<g >
<title>____do_softirq (1,920,708 samples, 0.05%)</title><rect x="396.7" y="709" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="399.72" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,551,654 samples, 0.28%)</title><rect x="1173.0" y="805" width="3.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1175.97" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (26,435,664 samples, 0.70%)</title><rect x="686.2" y="885" width="8.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="689.22" y="895.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,771,650 samples, 0.05%)</title><rect x="297.0" y="581" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="299.97" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_5 (6,935,142 samples, 0.18%)</title><rect x="28.7" y="933" width="2.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="31.68" y="943.5" ></text>
</g>
<g >
<title>el0_svc (9,946,506 samples, 0.27%)</title><rect x="1186.9" y="1013" width="3.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1189.87" y="1023.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,716,680 samples, 0.10%)</title><rect x="1102.5" y="773" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1105.51" y="783.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="501" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1146.41" y="511.5" ></text>
</g>
<g >
<title>__interceptor_trampoline_memcpy (2,085,178 samples, 0.06%)</title><rect x="397.3" y="837" width="0.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="400.32" y="847.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="757" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1071.47" y="767.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,473,687 samples, 0.04%)</title><rect x="12.4" y="549" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="15.35" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,248,160 samples, 0.11%)</title><rect x="1100.0" y="757" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1102.99" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (137,648,052 samples, 3.67%)</title><rect x="74.4" y="917" width="43.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="77.42" y="927.5" >std:..</text>
</g>
<g >
<title>__sanitizer::GetThreadStackAndTls (1,834,332 samples, 0.05%)</title><rect x="10.8" y="933" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="13.83" y="943.5" ></text>
</g>
<g >
<title>__schedule (1,465,602 samples, 0.04%)</title><rect x="15.9" y="741" width="0.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="18.95" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,009,563 samples, 0.05%)</title><rect x="1149.6" y="869" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1152.59" y="879.5" ></text>
</g>
<g >
<title>tty_write (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="517" width="0.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1146.41" y="527.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1,920,708 samples, 0.05%)</title><rect x="396.7" y="405" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="399.72" y="415.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (66,309,266 samples, 1.77%)</title><rect x="498.4" y="853" width="20.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="501.40" y="863.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,564,901 samples, 0.07%)</title><rect x="496.8" y="629" width="0.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="499.84" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (1,969,887 samples, 0.05%)</title><rect x="1147.2" y="917" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1150.19" y="927.5" ></text>
</g>
<g >
<title>operator new (8,956,169 samples, 0.24%)</title><rect x="495.6" y="821" width="2.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="498.58" y="831.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (1,692,920 samples, 0.05%)</title><rect x="1181.9" y="773" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1184.94" y="783.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,771,650 samples, 0.05%)</title><rect x="297.0" y="741" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="299.97" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (1,965,532 samples, 0.05%)</title><rect x="1156.2" y="853" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1159.21" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,156,629 samples, 0.06%)</title><rect x="1145.3" y="933" width="0.6" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1148.26" y="943.5" ></text>
</g>
<g >
<title>ip_finish_output (21,005,270 samples, 0.56%)</title><rect x="1071.9" y="549" width="6.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1074.93" y="559.5" ></text>
</g>
<g >
<title>exit_mmap (6,142,929 samples, 0.16%)</title><rect x="1186.9" y="869" width="1.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1189.87" y="879.5" ></text>
</g>
<g >
<title>do_pte_missing (2,564,901 samples, 0.07%)</title><rect x="496.8" y="613" width="0.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="499.84" y="623.5" ></text>
</g>
<g >
<title>__sanitizer::ReadFromFile (1,834,332 samples, 0.05%)</title><rect x="10.8" y="853" width="0.6" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="13.83" y="863.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (1,861,841 samples, 0.05%)</title><rect x="613.5" y="565" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="616.47" y="575.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (17,946,450 samples, 0.48%)</title><rect x="1176.3" y="805" width="5.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1179.29" y="815.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (513,833,945 samples, 13.70%)</title><rect x="521.8" y="901" width="161.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="524.82" y="911.5" >std::__detail::_Map_..</text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (6,251,563 samples, 0.17%)</title><rect x="1118.3" y="725" width="2.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1121.31" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,637,323 samples, 0.10%)</title><rect x="1087.3" y="837" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1090.30" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (209,067,750 samples, 5.57%)</title><rect x="207.3" y="869" width="65.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="210.34" y="879.5" >__asan_..</text>
</g>
<g >
<title>__aarch64_cas8_acq_rel (1,946,263 samples, 0.05%)</title><rect x="12.8" y="757" width="0.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="15.82" y="767.5" ></text>
</g>
<g >
<title>ip_queue_xmit (23,152,905 samples, 0.62%)</title><rect x="1071.9" y="597" width="7.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1074.93" y="607.5" ></text>
</g>
<g >
<title>__slab_free (1,998,231 samples, 0.05%)</title><rect x="837.2" y="37" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="840.19" y="47.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (1,815,937 samples, 0.05%)</title><rect x="296.4" y="661" width="0.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="299.39" y="671.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt;::basic_string_view&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,987,413 samples, 0.05%)</title><rect x="273.1" y="885" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="276.10" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (3,888,354 samples, 0.10%)</title><rect x="1157.5" y="837" width="1.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1160.51" y="847.5" ></text>
</g>
<g >
<title>el0t_64_irq (1,920,708 samples, 0.05%)</title><rect x="396.7" y="837" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="399.72" y="847.5" ></text>
</g>
<g >
<title>spdlog::pattern_formatter::format (50,279,758 samples, 1.34%)</title><rect x="1127.6" y="821" width="15.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1130.59" y="831.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,047,767 samples, 0.05%)</title><rect x="682.1" y="789" width="0.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="685.15" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,163,472 samples, 0.06%)</title><rect x="1140.2" y="677" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1143.22" y="687.5" ></text>
</g>
<g >
<title>do_translation_fault (2,215,494 samples, 0.06%)</title><rect x="293.1" y="725" width="0.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="296.13" y="735.5" ></text>
</g>
<g >
<title>iterate_tty_write (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="517" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1146.96" y="527.5" ></text>
</g>
<g >
<title>__libc_start_main (3,730,635,948 samples, 99.44%)</title><rect x="13.4" y="1029" width="1173.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="16.44" y="1039.5" >__libc_start_main</text>
</g>
<g >
<title>_dl_exception_create_format (3,120,750 samples, 0.08%)</title><rect x="11.8" y="837" width="1.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="14.84" y="847.5" ></text>
</g>
<g >
<title>aa_inet_msg_perm (1,907,393 samples, 0.05%)</title><rect x="874.3" y="677" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="877.25" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,998,203 samples, 0.05%)</title><rect x="1083.3" y="869" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1086.32" y="879.5" ></text>
</g>
<g >
<title>inet_recvmsg (19,156,430 samples, 0.51%)</title><rect x="20.9" y="741" width="6.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="23.93" y="751.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::vformat_to&lt;char&gt; (85,547,435 samples, 2.28%)</title><rect x="1098.1" y="853" width="26.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1101.09" y="863.5" >v..</text>
</g>
<g >
<title>net_rx_action (1,904,211 samples, 0.05%)</title><rect x="679.9" y="613" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="682.88" y="623.5" ></text>
</g>
<g >
<title>__alloc_skb (36,244,243 samples, 0.97%)</title><rect x="860.3" y="629" width="11.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="863.28" y="639.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (9,332,901 samples, 0.25%)</title><rect x="70.8" y="837" width="2.9" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="73.79" y="847.5" ></text>
</g>
<g >
<title>__check_object_size (2,963,806 samples, 0.08%)</title><rect x="26.0" y="645" width="1.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="29.02" y="655.5" ></text>
</g>
<g >
<title>process_backlog (1,904,211 samples, 0.05%)</title><rect x="679.9" y="581" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="682.88" y="591.5" ></text>
</g>
<g >
<title>InitializeCommonInterceptors (1,361,045 samples, 0.04%)</title><rect x="11.4" y="965" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="14.41" y="975.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (1,977,709 samples, 0.05%)</title><rect x="1139.6" y="773" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1142.60" y="783.5" ></text>
</g>
<g >
<title>el0_da (1,815,937 samples, 0.05%)</title><rect x="296.4" y="725" width="0.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="299.39" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,251,563 samples, 0.17%)</title><rect x="1118.3" y="629" width="2.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1121.31" y="639.5" ></text>
</g>
<g >
<title>seq_read (1,834,332 samples, 0.05%)</title><rect x="10.8" y="677" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="13.83" y="687.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (2,215,494 samples, 0.06%)</title><rect x="293.1" y="581" width="0.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="296.13" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (306,329,588 samples, 8.17%)</title><rect x="301.6" y="917" width="96.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="304.62" y="927.5" >std::__cxx1..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (210,981,847 samples, 5.62%)</title><rect x="614.7" y="853" width="66.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="617.72" y="863.5" >std::__..</text>
</g>
<g >
<title>tcp_v4_do_rcv (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="341" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1192.40" y="351.5" ></text>
</g>
<g >
<title>ktime_get (2,050,978 samples, 0.05%)</title><rect x="816.6" y="565" width="0.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="819.64" y="575.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,054,609 samples, 0.05%)</title><rect x="293.8" y="773" width="0.7" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="296.83" y="783.5" ></text>
</g>
<g >
<title>__netif_rx (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="437" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1096.75" y="447.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,043,248 samples, 0.27%)</title><rect x="1131.6" y="661" width="3.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1134.61" y="671.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (2,963,806 samples, 0.08%)</title><rect x="26.0" y="629" width="1.0" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="29.02" y="639.5" ></text>
</g>
<g >
<title>do_page_fault (1,946,263 samples, 0.05%)</title><rect x="12.8" y="677" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="15.82" y="687.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (8,162,093 samples, 0.22%)</title><rect x="1066.6" y="805" width="2.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1069.59" y="815.5" ></text>
</g>
<g >
<title>___interceptor_malloc (1,946,263 samples, 0.05%)</title><rect x="12.8" y="853" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="15.82" y="863.5" ></text>
</g>
<g >
<title>tcp_data_queue (17,622,553 samples, 0.47%)</title><rect x="838.5" y="133" width="5.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="841.50" y="143.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,047,767 samples, 0.05%)</title><rect x="682.1" y="773" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="685.15" y="783.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (3,916,595 samples, 0.10%)</title><rect x="1115.9" y="757" width="1.2" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1118.87" y="767.5" ></text>
</g>
<g >
<title>inet_sendmsg (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="709" width="0.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1096.75" y="719.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (2,107,611 samples, 0.06%)</title><rect x="1172.3" y="853" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1175.31" y="863.5" ></text>
</g>
<g >
<title>tt::chat::server::ChannelManager* const&amp; std::__get_helper&lt;0ul, tt::chat::server::ChannelManager*, std::default_delete&lt;tt::chat::server::ChannelManager&gt; &gt; (1,956,653 samples, 0.05%)</title><rect x="695.8" y="821" width="0.6" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="698.83" y="831.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (6,059,760 samples, 0.16%)</title><rect x="1075.1" y="101" width="1.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1078.13" y="111.5" ></text>
</g>
<g >
<title>wp_page_copy (1,771,650 samples, 0.05%)</title><rect x="297.0" y="613" width="0.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="299.97" y="623.5" ></text>
</g>
<g >
<title>vfs_read (27,244,327 samples, 0.73%)</title><rect x="19.5" y="789" width="8.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="22.50" y="799.5" ></text>
</g>
<g >
<title>el0_interrupt (3,765,077 samples, 0.10%)</title><rect x="349.2" y="805" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="352.20" y="815.5" ></text>
</g>
<g >
<title>call_on_irq_stack (16,163,540 samples, 0.43%)</title><rect x="1072.7" y="421" width="5.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1075.65" y="431.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (1,779,135 samples, 0.05%)</title><rect x="1097.5" y="837" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1100.53" y="847.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (4,575,844 samples, 0.12%)</title><rect x="297.5" y="549" width="1.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="300.52" y="559.5" ></text>
</g>
<g >
<title>do_softirq (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="613" width="0.6" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="1192.40" y="623.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (4,346,576 samples, 0.12%)</title><rect x="1070.6" y="629" width="1.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="1073.57" y="639.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (4,251,539 samples, 0.11%)</title><rect x="1152.3" y="821" width="1.3" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1155.30" y="831.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (3,754,893 samples, 0.10%)</title><rect x="1147.8" y="901" width="1.2" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1150.81" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,943,777 samples, 0.05%)</title><rect x="1083.9" y="837" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1086.95" y="847.5" ></text>
</g>
<g >
<title>ip_output (21,005,270 samples, 0.56%)</title><rect x="1071.9" y="565" width="6.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1074.93" y="575.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="661" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1146.41" y="671.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (2,191,532 samples, 0.06%)</title><rect x="73.7" y="821" width="0.7" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="76.73" y="831.5" ></text>
</g>
<g >
<title>___interceptor_memcpy (4,200,969 samples, 0.11%)</title><rect x="117.7" y="869" width="1.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="120.71" y="879.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (4,099,924 samples, 0.11%)</title><rect x="816.0" y="597" width="1.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="819.00" y="607.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::grow (10,921,158 samples, 0.29%)</title><rect x="1120.3" y="725" width="3.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1123.28" y="735.5" ></text>
</g>
<g >
<title>_copy_from_iter (2,423,443 samples, 0.06%)</title><rect x="820.2" y="645" width="0.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="823.25" y="655.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (1,755,859 samples, 0.05%)</title><rect x="1072.7" y="277" width="0.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1075.65" y="287.5" ></text>
</g>
<g >
<title>el0_interrupt (3,893,695 samples, 0.10%)</title><rect x="612.8" y="773" width="1.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="615.83" y="783.5" ></text>
</g>
<g >
<title>neigh_hh_output (1,920,708 samples, 0.05%)</title><rect x="396.7" y="309" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="399.72" y="319.5" ></text>
</g>
<g >
<title>[libc.so.6] (5,834,634 samples, 0.16%)</title><rect x="70.8" y="821" width="1.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="73.79" y="831.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="453" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1192.40" y="463.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="213" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1192.40" y="223.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="789" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1188.82" y="799.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (4,256,204 samples, 0.11%)</title><rect x="1122.4" y="661" width="1.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1125.38" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::clear (2,067,807 samples, 0.06%)</title><rect x="1145.9" y="933" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1148.94" y="943.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (43,795,661 samples, 1.17%)</title><rect x="833.4" y="165" width="13.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="836.37" y="175.5" ></text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::advance_to (4,074,713 samples, 0.11%)</title><rect x="1123.7" y="805" width="1.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1126.72" y="815.5" ></text>
</g>
<g >
<title>_IO_do_write (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="805" width="0.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1188.82" y="815.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,982,687 samples, 0.05%)</title><rect x="1082.0" y="805" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1084.96" y="815.5" ></text>
</g>
<g >
<title>__ip_finish_output (1,920,708 samples, 0.05%)</title><rect x="396.7" y="341" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="399.72" y="351.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (2,132,905 samples, 0.06%)</title><rect x="849.2" y="405" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="852.16" y="415.5" ></text>
</g>
<g >
<title>std::__ptr_traits_ptr_to&lt;char const*, char const, false&gt;::pointer_to (2,321,131 samples, 0.06%)</title><rect x="521.1" y="853" width="0.7" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="524.09" y="863.5" ></text>
</g>
<g >
<title>fmt::v9::detail::format_decimal_result&lt;char*&gt; fmt::v9::detail::format_decimal&lt;char, unsigned int&gt; (2,163,472 samples, 0.06%)</title><rect x="1140.2" y="725" width="0.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1143.22" y="735.5" ></text>
</g>
<g >
<title>do_el0_svc (2,401,585 samples, 0.06%)</title><rect x="497.6" y="629" width="0.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="500.64" y="639.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (1,692,920 samples, 0.05%)</title><rect x="1181.9" y="821" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1184.94" y="831.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,473,687 samples, 0.04%)</title><rect x="12.4" y="629" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="15.35" y="639.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (7,500,602 samples, 0.20%)</title><rect x="1179.6" y="789" width="2.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1182.58" y="799.5" ></text>
</g>
<g >
<title>tcp_data_ready (5,728,819 samples, 0.15%)</title><rect x="844.0" y="133" width="1.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="847.04" y="143.5" ></text>
</g>
<g >
<title>mmput (6,142,929 samples, 0.16%)</title><rect x="1186.9" y="901" width="1.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1189.87" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (4,383,560 samples, 0.12%)</title><rect x="1080.0" y="885" width="1.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1082.97" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (54,845,178 samples, 1.46%)</title><rect x="521.8" y="869" width="17.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="524.82" y="879.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,359,675 samples, 0.04%)</title><rect x="30.0" y="757" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="33.02" y="767.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (6,110,128 samples, 0.16%)</title><rect x="867.2" y="597" width="1.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="870.16" y="607.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,359,675 samples, 0.04%)</title><rect x="30.0" y="789" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="33.02" y="799.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (3,971,208 samples, 0.11%)</title><rect x="681.5" y="885" width="1.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="684.54" y="895.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (23,152,905 samples, 0.62%)</title><rect x="1071.9" y="581" width="7.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1074.93" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (84,250,171 samples, 2.25%)</title><rect x="770.4" y="773" width="26.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="773.43" y="783.5" >_..</text>
</g>
<g >
<title>el0t_64_sync_handler (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="645" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1146.41" y="655.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="645" width="0.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1192.40" y="655.5" ></text>
</g>
<g >
<title>___interceptor_memchr (2,018,387 samples, 0.05%)</title><rect x="1111.7" y="789" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1114.71" y="799.5" ></text>
</g>
<g >
<title>__slab_free (2,116,400 samples, 0.06%)</title><rect x="836.5" y="53" width="0.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="839.53" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_key_equals (3,754,893 samples, 0.10%)</title><rect x="1147.8" y="869" width="1.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1150.81" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (37,423,011 samples, 1.00%)</title><rect x="421.2" y="869" width="11.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="424.22" y="879.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (1,884,408 samples, 0.05%)</title><rect x="1070.0" y="581" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1072.97" y="591.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (137,648,052 samples, 3.67%)</title><rect x="74.4" y="901" width="43.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="77.42" y="911.5" >__as..</text>
</g>
<g >
<title>tcp_stream_memory_free (1,450,096 samples, 0.04%)</title><rect x="14.7" y="725" width="0.5" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="17.71" y="735.5" ></text>
</g>
<g >
<title>fmt::v9::vformat[abi:cxx11] (86,537,118 samples, 2.31%)</title><rect x="274.4" y="917" width="27.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="277.40" y="927.5" >f..</text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;, 0ul&gt; (2,047,767 samples, 0.05%)</title><rect x="682.1" y="821" width="0.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="685.15" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (250,892,007 samples, 6.69%)</title><rect x="119.6" y="901" width="78.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="122.63" y="911.5" >__asan_st..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,812,515 samples, 0.05%)</title><rect x="1086.7" y="853" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1089.73" y="863.5" ></text>
</g>
<g >
<title>do_pte_missing (1,359,675 samples, 0.04%)</title><rect x="30.0" y="773" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="33.02" y="783.5" ></text>
</g>
<g >
<title>do_mem_abort (1,965,532 samples, 0.05%)</title><rect x="1156.2" y="789" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1159.21" y="799.5" ></text>
</g>
<g >
<title>__sanitizer_internal_memmove (6,405,052 samples, 0.17%)</title><rect x="299.6" y="837" width="2.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="302.61" y="847.5" ></text>
</g>
<g >
<title>ip_output (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="725" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1192.40" y="735.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (7,503,005 samples, 0.20%)</title><rect x="14.1" y="933" width="2.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="17.05" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,349,137 samples, 0.06%)</title><rect x="1127.6" y="789" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1130.59" y="799.5" ></text>
</g>
<g >
<title>fput (2,496,544 samples, 0.07%)</title><rect x="15.2" y="773" width="0.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="18.16" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,067,067 samples, 0.30%)</title><rect x="1165.0" y="789" width="3.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1167.99" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,444,639 samples, 0.04%)</title><rect x="681.1" y="805" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="684.09" y="815.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,473,687 samples, 0.04%)</title><rect x="12.4" y="741" width="0.4" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="15.35" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,445,848 samples, 0.28%)</title><rect x="1176.3" y="789" width="3.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1179.29" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (209,067,750 samples, 5.57%)</title><rect x="207.3" y="885" width="65.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="210.34" y="895.5" >__asan_..</text>
</g>
<g >
<title>do_mem_abort (1,834,332 samples, 0.05%)</title><rect x="10.8" y="581" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="13.83" y="591.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (2,226,794 samples, 0.06%)</title><rect x="854.6" y="597" width="0.7" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="857.56" y="607.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (1,692,920 samples, 0.05%)</title><rect x="1181.9" y="789" width="0.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1184.94" y="799.5" ></text>
</g>
<g >
<title>ip_output (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="565" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1096.75" y="575.5" ></text>
</g>
<g >
<title>ip_finish_output (2,048,946 samples, 0.05%)</title><rect x="816.0" y="501" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="819.00" y="511.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="741" width="0.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1071.47" y="751.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1,992,540 samples, 0.05%)</title><rect x="349.8" y="613" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="352.76" y="623.5" ></text>
</g>
<g >
<title>char* fmt::v9::format_int::format_unsigned&lt;unsigned int&gt; (2,163,472 samples, 0.06%)</title><rect x="1140.2" y="741" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1143.22" y="751.5" ></text>
</g>
<g >
<title>neigh_hh_output (16,163,540 samples, 0.43%)</title><rect x="1072.7" y="501" width="5.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1075.65" y="511.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (2,179,139 samples, 0.06%)</title><rect x="1140.9" y="757" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1143.90" y="767.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (16,621,125 samples, 0.44%)</title><rect x="296.4" y="853" width="5.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="299.39" y="863.5" ></text>
</g>
<g >
<title>unmap_vmas (4,093,756 samples, 0.11%)</title><rect x="1187.5" y="853" width="1.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1190.52" y="863.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,815,937 samples, 0.05%)</title><rect x="296.4" y="757" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="299.39" y="767.5" ></text>
</g>
<g >
<title>tcp_recvmsg_locked (17,148,363 samples, 0.46%)</title><rect x="21.6" y="709" width="5.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="24.56" y="719.5" ></text>
</g>
<g >
<title>sock_recvmsg (22,684,729 samples, 0.60%)</title><rect x="20.9" y="757" width="7.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="23.93" y="767.5" ></text>
</g>
<g >
<title>el0_svc (31,780,582 samples, 0.85%)</title><rect x="1070.0" y="821" width="10.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1072.97" y="831.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (4,270,103 samples, 0.11%)</title><rect x="293.1" y="837" width="1.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="296.13" y="847.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (1,444,639 samples, 0.04%)</title><rect x="681.1" y="853" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="684.09" y="863.5" ></text>
</g>
<g >
<title>tcp_stream_alloc_skb (38,086,017 samples, 1.02%)</title><rect x="859.7" y="645" width="12.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="862.70" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,036,921 samples, 0.05%)</title><rect x="1094.4" y="853" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1097.38" y="863.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (7,500,602 samples, 0.20%)</title><rect x="1179.6" y="757" width="2.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1182.58" y="767.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (1,920,708 samples, 0.05%)</title><rect x="396.7" y="757" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="399.72" y="767.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (2,107,611 samples, 0.06%)</title><rect x="1172.3" y="757" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1175.31" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (7,423,453 samples, 0.20%)</title><rect x="1086.1" y="885" width="2.3" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1089.11" y="895.5" ></text>
</g>
<g >
<title>invoke_syscall (7,503,005 samples, 0.20%)</title><rect x="14.1" y="869" width="2.3" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="17.05" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (2,085,178 samples, 0.06%)</title><rect x="397.3" y="869" width="0.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="400.32" y="879.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (16,163,540 samples, 0.43%)</title><rect x="1072.7" y="437" width="5.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1075.65" y="447.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (2,029,428 samples, 0.05%)</title><rect x="1128.3" y="725" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1131.33" y="735.5" ></text>
</g>
<g >
<title>vma_complete (2,363,931 samples, 0.06%)</title><rect x="297.5" y="453" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="300.52" y="463.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (4,383,560 samples, 0.12%)</title><rect x="1080.0" y="869" width="1.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1082.97" y="879.5" ></text>
</g>
<g >
<title>__mmput (6,142,929 samples, 0.16%)</title><rect x="1186.9" y="885" width="1.9" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1189.87" y="895.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (149,212,334 samples, 3.98%)</title><rect x="350.4" y="885" width="46.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="353.39" y="895.5" >std:..</text>
</g>
<g >
<title>el0_svc (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="629" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1146.41" y="639.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (8,410,033 samples, 0.22%)</title><rect x="835.9" y="117" width="2.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="838.86" y="127.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,923,441 samples, 0.05%)</title><rect x="681.5" y="821" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="684.54" y="831.5" ></text>
</g>
<g >
<title>inet_release (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="837" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1192.40" y="847.5" ></text>
</g>
<g >
<title>void spdlog::logger::log&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (105,655,286 samples, 2.82%)</title><rect x="1153.6" y="949" width="33.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1156.64" y="959.5" >vo..</text>
</g>
<g >
<title>__asan::InitializeAsanInterceptors (4,481,795 samples, 0.12%)</title><rect x="11.4" y="997" width="1.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="14.41" y="1007.5" ></text>
</g>
<g >
<title>pty_write (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="469" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1146.96" y="479.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (600,211,652 samples, 16.00%)</title><rect x="880.4" y="853" width="188.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="883.37" y="863.5" >__asan_stack_malloc_2</text>
</g>
<g >
<title>tcp_event_new_data_sent (2,090,751 samples, 0.06%)</title><rect x="853.9" y="597" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="856.91" y="607.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (12,137,471 samples, 0.32%)</title><rect x="1157.5" y="853" width="3.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1160.51" y="863.5" ></text>
</g>
<g >
<title>std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;int const&amp;&gt; (3,978,205 samples, 0.11%)</title><rect x="1092.5" y="821" width="1.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1095.49" y="831.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;::PopulateFreeArray (4,575,844 samples, 0.12%)</title><rect x="297.5" y="725" width="1.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="300.52" y="735.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt;::end (3,805,690 samples, 0.10%)</title><rect x="1142.2" y="805" width="1.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1145.21" y="815.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (4,200,969 samples, 0.11%)</title><rect x="117.7" y="885" width="1.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="120.71" y="895.5" ></text>
</g>
<g >
<title>net_rx_action (2,227,867 samples, 0.06%)</title><rect x="848.5" y="357" width="0.7" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="851.46" y="367.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (1,956,180 samples, 0.05%)</title><rect x="1104.9" y="709" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1107.94" y="719.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (1,904,211 samples, 0.05%)</title><rect x="679.9" y="549" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="682.88" y="559.5" ></text>
</g>
<g >
<title>el0t_64_sync (241,200,830 samples, 6.43%)</title><rect x="803.9" y="837" width="75.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="806.91" y="847.5" >el0t_64_..</text>
</g>
<g >
<title>__asan_stack_malloc_1 (250,892,007 samples, 6.69%)</title><rect x="119.6" y="885" width="78.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="122.63" y="895.5" >__asan_st..</text>
</g>
<g >
<title>__netif_receive_skb_one_core (52,747,043 samples, 1.41%)</title><rect x="831.2" y="277" width="16.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="834.20" y="287.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,232,019 samples, 0.06%)</title><rect x="1161.3" y="869" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1164.32" y="879.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1,904,211 samples, 0.05%)</title><rect x="679.9" y="453" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="682.88" y="463.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="485" width="0.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1096.75" y="495.5" ></text>
</g>
<g >
<title>do_el0_svc (4,575,844 samples, 0.12%)</title><rect x="297.5" y="629" width="1.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="300.52" y="639.5" ></text>
</g>
<g >
<title>do_translation_fault (2,564,901 samples, 0.07%)</title><rect x="496.8" y="693" width="0.8" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="499.84" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (209,047,364 samples, 5.57%)</title><rect x="614.7" y="821" width="65.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="617.72" y="831.5" >__asan_..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (111,316,466 samples, 2.97%)</title><rect x="398.0" y="917" width="35.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="400.98" y="927.5" >st..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (2,865,160 samples, 0.08%)</title><rect x="1085.2" y="869" width="0.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1088.21" y="879.5" ></text>
</g>
<g >
<title>call_on_irq_stack (3,765,077 samples, 0.10%)</title><rect x="349.2" y="741" width="1.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="352.20" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (8,156,052 samples, 0.22%)</title><rect x="519.3" y="917" width="2.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="522.26" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,174,966 samples, 0.06%)</title><rect x="1099.3" y="741" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1102.30" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (66,269,724 samples, 1.77%)</title><rect x="697.8" y="853" width="20.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="700.83" y="863.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (14,006,939 samples, 0.37%)</title><rect x="822.3" y="645" width="4.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="825.34" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (3,978,205 samples, 0.11%)</title><rect x="1092.5" y="789" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1095.49" y="799.5" ></text>
</g>
<g >
<title>_copy_from_iter (2,165,785 samples, 0.06%)</title><rect x="826.1" y="629" width="0.7" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="829.07" y="639.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (2,014,467 samples, 0.05%)</title><rect x="1091.2" y="853" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1094.24" y="863.5" ></text>
</g>
<g >
<title>[libc.so.6] (3,730,635,948 samples, 99.44%)</title><rect x="13.4" y="1013" width="1173.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="16.44" y="1023.5" >[libc.so.6]</text>
</g>
<g >
<title>invoke_syscall (2,401,585 samples, 0.06%)</title><rect x="497.6" y="597" width="0.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="500.64" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (1,982,687 samples, 0.05%)</title><rect x="1082.0" y="901" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1084.96" y="911.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1,904,211 samples, 0.05%)</title><rect x="679.9" y="693" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="682.88" y="703.5" ></text>
</g>
<g >
<title>void spdlog::details::fmt_helper::append_int&lt;int&gt; (4,342,611 samples, 0.12%)</title><rect x="1140.2" y="789" width="1.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1143.22" y="799.5" ></text>
</g>
<g >
<title>inet_sendmsg (195,818,721 samples, 5.22%)</title><rect x="812.7" y="693" width="61.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="815.66" y="703.5" >inet_s..</text>
</g>
<g >
<title>kmalloc_reserve (11,957,355 samples, 0.32%)</title><rect x="865.3" y="613" width="3.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="868.32" y="623.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (4,270,103 samples, 0.11%)</title><rect x="293.1" y="869" width="1.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="296.13" y="879.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_new_connection (132,288,938 samples, 3.53%)</title><rect x="1145.3" y="965" width="41.6" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1148.26" y="975.5" >tt:..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,943,777 samples, 0.05%)</title><rect x="1083.9" y="821" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1086.95" y="831.5" ></text>
</g>
<g >
<title>tcp_close (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="821" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1192.40" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (8,901,517 samples, 0.24%)</title><rect x="202.0" y="917" width="2.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="205.00" y="927.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (278,440,014 samples, 7.42%)</title><rect x="31.5" y="933" width="87.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="34.45" y="943.5" >void std::..</text>
</g>
<g >
<title>char* fmt::v9::format_int::format_signed&lt;int&gt; (2,163,472 samples, 0.06%)</title><rect x="1140.2" y="757" width="0.7" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1143.22" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,074,713 samples, 0.11%)</title><rect x="1123.7" y="789" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1126.72" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,156,629 samples, 0.06%)</title><rect x="1145.3" y="917" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1148.26" y="927.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (1,920,708 samples, 0.05%)</title><rect x="396.7" y="821" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="399.72" y="831.5" ></text>
</g>
<g >
<title>__fput (3,803,577 samples, 0.10%)</title><rect x="1188.8" y="885" width="1.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1191.80" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,865,160 samples, 0.08%)</title><rect x="1085.2" y="853" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1088.21" y="863.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (4,114,047 samples, 0.11%)</title><rect x="872.3" y="597" width="1.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="875.25" y="607.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,998,231 samples, 0.05%)</title><rect x="837.2" y="53" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="840.19" y="63.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="629" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1146.96" y="639.5" ></text>
</g>
<g >
<title>tcp_delack_timer (1,861,841 samples, 0.05%)</title><rect x="613.5" y="581" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="616.47" y="591.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="357" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1192.40" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_bucket_index (74,849,643 samples, 2.00%)</title><rect x="745.8" y="853" width="23.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="748.82" y="863.5" >s..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (61,122,108 samples, 1.63%)</title><rect x="718.7" y="853" width="19.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="721.68" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,705,614 samples, 0.10%)</title><rect x="1112.7" y="757" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1115.71" y="767.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::write&lt;char, fmt::v9::appender&gt; (34,984,001 samples, 0.93%)</title><rect x="1112.7" y="805" width="11.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1115.71" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,142,099 samples, 0.14%)</title><rect x="1162.0" y="821" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.03" y="831.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (2,069,379 samples, 0.06%)</title><rect x="1125.0" y="869" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1128.00" y="879.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (513,833,945 samples, 13.70%)</title><rect x="521.8" y="917" width="161.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="524.82" y="927.5" >std::unordered_map&lt;i..</text>
</g>
<g >
<title>__sanitizer::mem_is_zero (1,954,147 samples, 0.05%)</title><rect x="118.4" y="837" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="121.42" y="847.5" ></text>
</g>
<g >
<title>tcp_done (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="261" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1192.40" y="271.5" ></text>
</g>
<g >
<title>mas_store_prealloc (2,363,931 samples, 0.06%)</title><rect x="297.5" y="437" width="0.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="300.52" y="447.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (3,765,077 samples, 0.10%)</title><rect x="349.2" y="757" width="1.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="352.20" y="767.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="853" width="0.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1096.75" y="863.5" ></text>
</g>
<g >
<title>task_work_run (3,803,577 samples, 0.10%)</title><rect x="1188.8" y="917" width="1.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1191.80" y="927.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (16,163,540 samples, 0.43%)</title><rect x="1072.7" y="469" width="5.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1075.65" y="479.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,639,275 samples, 0.07%)</title><rect x="10.0" y="1013" width="0.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1023.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (1,692,920 samples, 0.05%)</title><rect x="1181.9" y="837" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1184.94" y="847.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (865,469,647 samples, 23.07%)</title><rect x="796.9" y="901" width="272.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="799.93" y="911.5" >tt::chat::server::EpollServer::send_..</text>
</g>
<g >
<title>char* fmt::v9::format_int::format_signed&lt;int&gt; (3,976,817 samples, 0.11%)</title><rect x="1183.2" y="805" width="1.3" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="1186.24" y="815.5" ></text>
</g>
<g >
<title>unmap_page_range (4,093,756 samples, 0.11%)</title><rect x="1187.5" y="821" width="1.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1190.52" y="831.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (63,240,387 samples, 1.69%)</title><rect x="830.5" y="469" width="19.9" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="833.53" y="479.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,927,255 samples, 0.10%)</title><rect x="1096.3" y="821" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1099.29" y="831.5" ></text>
</g>
<g >
<title>char const* fmt::v9::detail::parse_replacement_field&lt;char, fmt::v9::detail::vformat_to&lt;char&gt; (33,587,224 samples, 0.90%)</title><rect x="1098.1" y="837" width="10.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1101.09" y="847.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (7,423,453 samples, 0.20%)</title><rect x="1086.1" y="901" width="2.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1089.11" y="911.5" ></text>
</g>
<g >
<title>do_mem_abort (2,099,513 samples, 0.06%)</title><rect x="1122.4" y="581" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1125.38" y="591.5" ></text>
</g>
<g >
<title>el0_svc (4,575,844 samples, 0.12%)</title><rect x="297.5" y="645" width="1.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="300.52" y="655.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="677" width="0.5" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1188.82" y="687.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (10,043,248 samples, 0.27%)</title><rect x="1131.6" y="693" width="3.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1134.61" y="703.5" ></text>
</g>
<g >
<title>_IO_do_write (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="757" width="0.6" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="1146.96" y="767.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char const*, char*&gt; (2,107,611 samples, 0.06%)</title><rect x="1172.3" y="741" width="0.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1175.31" y="751.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (10,043,248 samples, 0.27%)</title><rect x="1131.6" y="709" width="3.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1134.61" y="719.5" ></text>
</g>
<g >
<title>n_tty_write (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="549" width="0.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1188.82" y="559.5" ></text>
</g>
<g >
<title>el0_svc (241,200,830 samples, 6.43%)</title><rect x="803.9" y="805" width="75.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="806.91" y="815.5" >el0_svc</text>
</g>
<g >
<title>do_mem_abort (1,771,650 samples, 0.05%)</title><rect x="297.0" y="709" width="0.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="299.97" y="719.5" ></text>
</g>
<g >
<title>call_on_irq_stack (1,861,841 samples, 0.05%)</title><rect x="613.5" y="709" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="616.47" y="719.5" ></text>
</g>
<g >
<title>handle_softirqs (16,163,540 samples, 0.43%)</title><rect x="1072.7" y="373" width="5.0" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1075.65" y="383.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (10,901,665 samples, 0.29%)</title><rect x="10.0" y="1029" width="3.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="1039.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,099,513 samples, 0.06%)</title><rect x="1122.4" y="645" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1125.38" y="655.5" ></text>
</g>
<g >
<title>tcp_sendmsg (31,780,582 samples, 0.85%)</title><rect x="1070.0" y="693" width="10.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1072.97" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,900,896 samples, 0.05%)</title><rect x="1149.0" y="853" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1151.99" y="863.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="373" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1192.40" y="383.5" ></text>
</g>
<g >
<title>sockfd_lookup_light (4,055,165 samples, 0.11%)</title><rect x="877.4" y="709" width="1.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="880.40" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,958,665 samples, 0.05%)</title><rect x="1153.6" y="901" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1156.64" y="911.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (2,208,536 samples, 0.06%)</title><rect x="198.5" y="901" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="201.54" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,163,472 samples, 0.06%)</title><rect x="1140.2" y="693" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1143.22" y="703.5" ></text>
</g>
<g >
<title>enqueue_to_backlog (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="405" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1096.75" y="415.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (24,299,057 samples, 0.65%)</title><rect x="1129.7" y="789" width="7.6" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1132.65" y="799.5" ></text>
</g>
<g >
<title>el0_da (2,656,689 samples, 0.07%)</title><rect x="30.0" y="885" width="0.9" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="33.02" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,114,453 samples, 0.06%)</title><rect x="1101.8" y="773" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1104.84" y="783.5" ></text>
</g>
<g >
<title>net_rx_action (56,981,914 samples, 1.52%)</title><rect x="830.5" y="341" width="18.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="833.53" y="351.5" ></text>
</g>
<g >
<title>tcp_rearm_rto (2,396,693 samples, 0.06%)</title><rect x="1079.2" y="613" width="0.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1082.22" y="623.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="757" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1192.40" y="767.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="437" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1146.96" y="447.5" ></text>
</g>
<g >
<title>tcp_ack (1,870,349 samples, 0.05%)</title><rect x="1074.5" y="149" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1077.54" y="159.5" ></text>
</g>
<g >
<title>aa_inet_msg_perm (6,111,324 samples, 0.16%)</title><rect x="875.5" y="661" width="1.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="878.48" y="671.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt;::AllocateBatch (1,647,063 samples, 0.04%)</title><rect x="11.8" y="757" width="0.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="14.84" y="767.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (238,392,534 samples, 6.35%)</title><rect x="539.1" y="885" width="75.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="542.07" y="895.5" >std::_Ha..</text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::vformat_to&lt;fmt::v9::appender, 0&gt; (95,309,820 samples, 2.54%)</title><rect x="1095.0" y="869" width="30.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1098.02" y="879.5" >fm..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::operator[] (185,675,298 samples, 4.95%)</title><rect x="738.5" y="869" width="58.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="741.53" y="879.5" >std::_..</text>
</g>
<g >
<title>el0_svc_common.constprop.0 (229,393,846 samples, 6.11%)</title><rect x="807.6" y="773" width="72.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="810.62" y="783.5" >el0_svc_..</text>
</g>
<g >
<title>_IO_file_write (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="725" width="0.6" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="1146.96" y="735.5" ></text>
</g>
<g >
<title>__kfree_skb (4,114,631 samples, 0.11%)</title><rect x="836.5" y="101" width="1.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="839.53" y="111.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,900,896 samples, 0.05%)</title><rect x="1149.0" y="869" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1151.99" y="879.5" ></text>
</g>
<g >
<title>____do_softirq (1,904,211 samples, 0.05%)</title><rect x="679.9" y="661" width="0.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="682.88" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,047,767 samples, 0.05%)</title><rect x="682.1" y="757" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="685.15" y="767.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char*, char*&gt; (2,029,428 samples, 0.05%)</title><rect x="1128.3" y="709" width="0.7" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1131.33" y="719.5" ></text>
</g>
<g >
<title>do_translation_fault (1,965,532 samples, 0.05%)</title><rect x="1156.2" y="773" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1159.21" y="783.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char const*, char*&gt; (2,107,611 samples, 0.06%)</title><rect x="1172.3" y="773" width="0.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1175.31" y="783.5" ></text>
</g>
<g >
<title>net_rx_action (16,163,540 samples, 0.43%)</title><rect x="1072.7" y="357" width="5.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1075.65" y="367.5" ></text>
</g>
<g >
<title>kfree_skbmem (2,096,569 samples, 0.06%)</title><rect x="817.9" y="549" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="820.90" y="559.5" ></text>
</g>
<g >
<title>process_backlog (1,992,540 samples, 0.05%)</title><rect x="349.8" y="645" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="352.76" y="655.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (9,332,901 samples, 0.25%)</title><rect x="70.8" y="853" width="2.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="73.79" y="863.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (4,007,159 samples, 0.11%)</title><rect x="1083.9" y="885" width="1.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1086.95" y="895.5" ></text>
</g>
<g >
<title>___interceptor_fwrite.part.0 (3,882,874 samples, 0.10%)</title><rect x="1143.4" y="805" width="1.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1146.41" y="815.5" ></text>
</g>
<g >
<title>sk_filter_trim_cap (2,157,591 samples, 0.06%)</title><rect x="832.7" y="149" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="835.69" y="159.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,117,891 samples, 0.06%)</title><rect x="1184.5" y="805" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1187.49" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,179,139 samples, 0.06%)</title><rect x="1140.9" y="741" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1143.90" y="751.5" ></text>
</g>
<g >
<title>process_backlog (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="485" width="0.6" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1192.40" y="495.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (29,165,244 samples, 0.78%)</title><rect x="18.9" y="853" width="9.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="21.89" y="863.5" ></text>
</g>
<g >
<title>tcp_rcv_established (8,149,641 samples, 0.22%)</title><rect x="816.0" y="613" width="2.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="819.00" y="623.5" ></text>
</g>
<g >
<title>arch_local_irq_enable (1,465,602 samples, 0.04%)</title><rect x="15.9" y="725" width="0.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="18.95" y="735.5" ></text>
</g>
<g >
<title>el0_interrupt (8,162,093 samples, 0.22%)</title><rect x="1066.6" y="789" width="2.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1069.59" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (1,945,718 samples, 0.05%)</title><rect x="1081.3" y="917" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1084.35" y="927.5" ></text>
</g>
<g >
<title>skb_release_data (2,109,049 samples, 0.06%)</title><rect x="847.8" y="309" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="850.79" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,965,532 samples, 0.05%)</title><rect x="1156.2" y="725" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1159.21" y="735.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,215,494 samples, 0.06%)</title><rect x="293.1" y="677" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="296.13" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (213,101,464 samples, 5.68%)</title><rect x="614.1" y="869" width="67.0" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="617.06" y="879.5" >std::_H..</text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (1,992,540 samples, 0.05%)</title><rect x="349.8" y="453" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="352.76" y="463.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,175,201 samples, 0.06%)</title><rect x="1129.0" y="725" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1131.97" y="735.5" ></text>
</g>
<g >
<title>__send (247,318,870 samples, 6.59%)</title><rect x="802.0" y="853" width="77.8" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="804.99" y="863.5" >__send</text>
</g>
<g >
<title>___interceptor_send (2,120,446 samples, 0.06%)</title><rect x="798.2" y="869" width="0.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="801.19" y="879.5" ></text>
</g>
<g >
<title>ep_send_events (6,037,403 samples, 0.16%)</title><rect x="14.1" y="789" width="1.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="17.05" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,117,891 samples, 0.06%)</title><rect x="1184.5" y="821" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1187.49" y="831.5" ></text>
</g>
<g >
<title>ktime_get_with_offset (2,226,008 samples, 0.06%)</title><rect x="1077.0" y="213" width="0.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1080.03" y="223.5" ></text>
</g>
<g >
<title>do_vmi_munmap (2,401,585 samples, 0.06%)</title><rect x="497.6" y="501" width="0.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="500.64" y="511.5" ></text>
</g>
<g >
<title>do_el0_svc (7,503,005 samples, 0.20%)</title><rect x="14.1" y="901" width="2.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="17.05" y="911.5" ></text>
</g>
<g >
<title>__send (31,780,582 samples, 0.85%)</title><rect x="1070.0" y="869" width="10.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1072.97" y="879.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (1,692,920 samples, 0.05%)</title><rect x="1181.9" y="757" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1184.94" y="767.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1,900,896 samples, 0.05%)</title><rect x="1149.0" y="917" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1151.99" y="927.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,755,630 samples, 0.05%)</title><rect x="1092.5" y="773" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1095.49" y="783.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;::begin (70,695,896 samples, 1.88%)</title><rect x="696.4" y="901" width="22.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="699.44" y="911.5" >s..</text>
</g>
<g >
<title>fmt::v9::detail::abort_fuzzing_if (4,508,527 samples, 0.12%)</title><rect x="1121.0" y="709" width="1.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1123.96" y="719.5" ></text>
</g>
<g >
<title>std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;::end (61,122,108 samples, 1.63%)</title><rect x="718.7" y="901" width="19.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="721.68" y="911.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1,920,708 samples, 0.05%)</title><rect x="396.7" y="741" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="399.72" y="751.5" ></text>
</g>
<g >
<title>__anon_vma_prepare (1,946,263 samples, 0.05%)</title><rect x="12.8" y="581" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="15.82" y="591.5" ></text>
</g>
<g >
<title>__sanitizer::MmapFixedImpl (2,401,585 samples, 0.06%)</title><rect x="497.6" y="709" width="0.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="500.64" y="719.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (29,165,244 samples, 0.78%)</title><rect x="18.9" y="901" width="9.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="21.89" y="911.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1,771,650 samples, 0.05%)</title><rect x="297.0" y="565" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="299.97" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,666,888 samples, 0.04%)</title><rect x="1183.2" y="757" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1186.24" y="767.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::end (2,008,604 samples, 0.05%)</title><rect x="1144.6" y="837" width="0.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1147.63" y="847.5" ></text>
</g>
<g >
<title>main (3,730,635,948 samples, 99.44%)</title><rect x="13.4" y="997" width="1173.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="16.44" y="1007.5" >main</text>
</g>
<g >
<title>void spdlog::logger::log_&lt;int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (159,735,760 samples, 4.26%)</title><rect x="1095.0" y="885" width="50.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1098.02" y="895.5" >void ..</text>
</g>
<g >
<title>do_page_fault (1,965,532 samples, 0.05%)</title><rect x="1156.2" y="757" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1159.21" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (61,283,947 samples, 1.63%)</title><rect x="401.9" y="885" width="19.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="404.94" y="895.5" ></text>
</g>
<g >
<title>sock_def_readable (5,728,819 samples, 0.15%)</title><rect x="844.0" y="117" width="1.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="847.04" y="127.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (54,845,178 samples, 1.46%)</title><rect x="521.8" y="885" width="17.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="524.82" y="895.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (8,162,093 samples, 0.22%)</title><rect x="1066.6" y="821" width="2.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1069.59" y="831.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (5,728,819 samples, 0.15%)</title><rect x="844.0" y="101" width="1.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="847.04" y="111.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (213,101,464 samples, 5.68%)</title><rect x="614.1" y="885" width="67.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="617.06" y="895.5" >std::_H..</text>
</g>
<g >
<title>invoke_syscall (4,575,844 samples, 0.12%)</title><rect x="297.5" y="597" width="1.5" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="300.52" y="607.5" ></text>
</g>
<g >
<title>ena_get_strings (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="549" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1071.47" y="559.5" ></text>
</g>
<g >
<title>kmem_cache_alloc_node (8,250,408 samples, 0.22%)</title><rect x="869.1" y="613" width="2.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="872.08" y="623.5" ></text>
</g>
<g >
<title>wp_page_copy (2,054,609 samples, 0.05%)</title><rect x="293.8" y="645" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="296.83" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,055,995 samples, 0.11%)</title><rect x="1095.0" y="837" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1098.02" y="847.5" ></text>
</g>
<g >
<title>vfs_write (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="613" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1188.82" y="623.5" ></text>
</g>
<g >
<title>do_output_char (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="533" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1188.82" y="543.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (4,243,890 samples, 0.11%)</title><rect x="821.0" y="597" width="1.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="824.01" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (96,791,815 samples, 2.58%)</title><rect x="433.0" y="885" width="30.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="435.99" y="895.5" >__..</text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str_noinline&lt;char, char const*, fmt::v9::appender&gt; (31,278,387 samples, 0.83%)</title><rect x="1113.9" y="789" width="9.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1116.88" y="799.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (3,120,750 samples, 0.08%)</title><rect x="11.8" y="917" width="1.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.84" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (2,169,187 samples, 0.06%)</title><rect x="796.9" y="885" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="799.93" y="895.5" ></text>
</g>
<g >
<title>do_el0_svc (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="645" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1146.96" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,945,656 samples, 0.11%)</title><rect x="1107.4" y="805" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1110.41" y="815.5" ></text>
</g>
<g >
<title>__sanitizer::internal_read (1,834,332 samples, 0.05%)</title><rect x="10.8" y="837" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.83" y="847.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::handle_channel_message (2,795,661,260 samples, 74.52%)</title><rect x="202.0" y="933" width="879.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="205.00" y="943.5" >tt::chat::server::EpollServer::handle_channel_message</text>
</g>
<g >
<title>__irq_exit_rcu (1,861,841 samples, 0.05%)</title><rect x="613.5" y="741" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="616.47" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (8,156,052 samples, 0.22%)</title><rect x="519.3" y="901" width="2.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="522.26" y="911.5" ></text>
</g>
<g >
<title>el0t_64_sync (9,946,506 samples, 0.27%)</title><rect x="1186.9" y="1045" width="3.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1189.87" y="1055.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,779,135 samples, 0.05%)</title><rect x="1097.5" y="805" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1100.53" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (24,198,002 samples, 0.65%)</title><rect x="31.5" y="901" width="7.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="34.45" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,008,495 samples, 0.11%)</title><rect x="1103.7" y="741" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1106.68" y="751.5" ></text>
</g>
<g >
<title>___interceptor_memchr (2,018,387 samples, 0.05%)</title><rect x="1111.7" y="805" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1114.71" y="815.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (23,152,905 samples, 0.62%)</title><rect x="1071.9" y="613" width="7.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1074.93" y="623.5" ></text>
</g>
<g >
<title>ip_output (65,401,867 samples, 1.74%)</title><rect x="829.9" y="549" width="20.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="832.85" y="559.5" ></text>
</g>
<g >
<title>do_epoll_wait (7,503,005 samples, 0.20%)</title><rect x="14.1" y="821" width="2.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="17.05" y="831.5" ></text>
</g>
<g >
<title>do_softirq (59,209,781 samples, 1.58%)</title><rect x="830.5" y="437" width="18.7" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="833.53" y="447.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,063,382 samples, 0.06%)</title><rect x="1084.6" y="853" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1087.56" y="863.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (188,230,093 samples, 5.02%)</title><rect x="338.8" y="901" width="59.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="341.77" y="911.5" >void s..</text>
</g>
<g >
<title>el0t_64_sync (31,780,582 samples, 0.85%)</title><rect x="1070.0" y="853" width="10.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1072.97" y="863.5" ></text>
</g>
<g >
<title>___interceptor_fwrite.part.0 (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="853" width="0.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1188.82" y="863.5" ></text>
</g>
<g >
<title>get_random_u16 (1,828,968 samples, 0.05%)</title><rect x="879.2" y="741" width="0.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="882.20" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,502,031 samples, 0.04%)</title><rect x="1170.6" y="885" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1173.56" y="895.5" ></text>
</g>
<g >
<title>call_on_irq_stack (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="725" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1071.47" y="735.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (3,765,077 samples, 0.10%)</title><rect x="349.2" y="821" width="1.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="352.20" y="831.5" ></text>
</g>
<g >
<title>__release_sock (1,884,408 samples, 0.05%)</title><rect x="1070.0" y="661" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1072.97" y="671.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,812,515 samples, 0.05%)</title><rect x="1086.7" y="837" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1089.73" y="847.5" ></text>
</g>
<g >
<title>arch_counter_get_cntvct (6,947,480 samples, 0.19%)</title><rect x="851.7" y="581" width="2.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="854.72" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (274,265,893 samples, 7.31%)</title><rect x="433.0" y="901" width="86.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="435.99" y="911.5" >std::__cxx..</text>
</g>
<g >
<title>folio_add_lru_vma (2,215,494 samples, 0.06%)</title><rect x="293.1" y="613" width="0.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="296.13" y="623.5" ></text>
</g>
<g >
<title>__el0_irq_handler_common (1,904,211 samples, 0.05%)</title><rect x="679.9" y="757" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="682.88" y="767.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (29,896,174 samples, 0.80%)</title><rect x="1070.6" y="677" width="9.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1073.57" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (61,122,108 samples, 1.63%)</title><rect x="718.7" y="869" width="19.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="721.68" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,982,687 samples, 0.05%)</title><rect x="1082.0" y="869" width="0.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1084.96" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,200,377 samples, 0.06%)</title><rect x="1169.9" y="837" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1172.87" y="847.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1,920,708 samples, 0.05%)</title><rect x="396.7" y="517" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="399.72" y="527.5" ></text>
</g>
<g >
<title>check_heap_object (1,622,748 samples, 0.04%)</title><rect x="26.4" y="613" width="0.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="29.44" y="623.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,099,513 samples, 0.06%)</title><rect x="1122.4" y="613" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1125.38" y="623.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,564,901 samples, 0.07%)</title><rect x="496.8" y="741" width="0.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="499.84" y="751.5" ></text>
</g>
<g >
<title>ip_rcv (14,407,681 samples, 0.38%)</title><rect x="1073.2" y="277" width="4.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1076.20" y="287.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (24,198,002 samples, 0.65%)</title><rect x="31.5" y="917" width="7.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="34.45" y="927.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (31,780,582 samples, 0.85%)</title><rect x="1070.0" y="837" width="10.0" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1072.97" y="847.5" ></text>
</g>
<g >
<title>__fdget (4,055,165 samples, 0.11%)</title><rect x="877.4" y="693" width="1.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="880.40" y="703.5" ></text>
</g>
<g >
<title>spdlog::details::registry::instance (2,011,509 samples, 0.05%)</title><rect x="16.4" y="949" width="0.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="19.41" y="959.5" ></text>
</g>
<g >
<title>fmt::v9::detail::count_digits (2,163,472 samples, 0.06%)</title><rect x="1140.2" y="709" width="0.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1143.22" y="719.5" ></text>
</g>
<g >
<title>do_el0_svc (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="693" width="0.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1188.82" y="703.5" ></text>
</g>
<g >
<title>el1h_64_sync (1,834,332 samples, 0.05%)</title><rect x="10.8" y="629" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.83" y="639.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1,465,602 samples, 0.04%)</title><rect x="15.9" y="773" width="0.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="18.95" y="783.5" ></text>
</g>
<g >
<title>__xfrm_policy_check2.constprop.0 (2,278,209 samples, 0.06%)</title><rect x="832.0" y="165" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="834.98" y="175.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,716,680 samples, 0.10%)</title><rect x="1102.5" y="757" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1105.51" y="767.5" ></text>
</g>
<g >
<title>el0_svc (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="661" width="0.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1146.96" y="671.5" ></text>
</g>
<g >
<title>ip_finish_output (1,861,841 samples, 0.05%)</title><rect x="613.5" y="453" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="616.47" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (3,754,893 samples, 0.10%)</title><rect x="1147.8" y="917" width="1.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1150.81" y="927.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (2,243,030 samples, 0.06%)</title><rect x="873.5" y="677" width="0.8" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="876.55" y="687.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (2,048,946 samples, 0.05%)</title><rect x="816.0" y="565" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="819.00" y="575.5" ></text>
</g>
<g >
<title>ip_local_deliver (1,920,708 samples, 0.05%)</title><rect x="396.7" y="549" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="399.72" y="559.5" ></text>
</g>
<g >
<title>do_wp_page (1,771,650 samples, 0.05%)</title><rect x="297.0" y="629" width="0.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="299.97" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,927,255 samples, 0.10%)</title><rect x="1096.3" y="837" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1099.29" y="847.5" ></text>
</g>
<g >
<title>apparmor_socket_sendmsg (8,101,218 samples, 0.22%)</title><rect x="874.9" y="677" width="2.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="877.85" y="687.5" ></text>
</g>
<g >
<title>do_signal (9,946,506 samples, 0.27%)</title><rect x="1186.9" y="981" width="3.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1189.87" y="991.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (4,738,888 samples, 0.13%)</title><rect x="1088.4" y="869" width="1.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1091.45" y="879.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; spdlog::details::to_string_view&lt;char, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt; (2,036,921 samples, 0.05%)</title><rect x="1094.4" y="885" width="0.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1097.38" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (113,472,255 samples, 3.02%)</title><rect x="303.1" y="901" width="35.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="306.08" y="911.5" >__a..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (238,392,534 samples, 6.35%)</title><rect x="539.1" y="869" width="75.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="542.07" y="879.5" >std::__d..</text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (12,872,758 samples, 0.34%)</title><rect x="1149.6" y="917" width="4.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1152.59" y="927.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (50,690,660 samples, 1.35%)</title><rect x="831.2" y="213" width="15.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="834.20" y="223.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,860,096 samples, 0.10%)</title><rect x="1117.1" y="725" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1120.10" y="735.5" ></text>
</g>
<g >
<title>rcu_all_qs (2,215,977 samples, 0.06%)</title><rect x="868.4" y="581" width="0.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="871.39" y="591.5" ></text>
</g>
<g >
<title>el0t_64_irq (3,893,695 samples, 0.10%)</title><rect x="612.8" y="821" width="1.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="615.83" y="831.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1,992,540 samples, 0.05%)</title><rect x="349.8" y="501" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="352.76" y="511.5" ></text>
</g>
<g >
<title>____do_softirq (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="709" width="0.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1071.47" y="719.5" ></text>
</g>
<g >
<title>fmt::v9::detail::abort_fuzzing_if (3,559,823 samples, 0.09%)</title><rect x="1136.2" y="725" width="1.1" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1139.18" y="735.5" ></text>
</g>
<g >
<title>__do_softirq (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="693" width="0.7" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1071.47" y="703.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char*, char*&gt; (2,029,428 samples, 0.05%)</title><rect x="1128.3" y="741" width="0.7" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1131.33" y="751.5" ></text>
</g>
<g >
<title>do_wp_page (1,946,263 samples, 0.05%)</title><rect x="12.8" y="613" width="0.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="15.82" y="623.5" ></text>
</g>
<g >
<title>ip_finish_output2 (18,443,765 samples, 0.49%)</title><rect x="1071.9" y="517" width="5.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1074.93" y="527.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; spdlog::details::fmt_helper::time_fraction&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt; (1,465,602 samples, 0.04%)</title><rect x="1139.1" y="789" width="0.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1142.13" y="799.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (96,646,960 samples, 2.58%)</title><rect x="468.0" y="869" width="30.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="471.00" y="879.5" >st..</text>
</g>
<g >
<title>tcp_mtu_probe (2,022,380 samples, 0.05%)</title><rect x="826.8" y="613" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="829.75" y="623.5" ></text>
</g>
<g >
<title>handle_softirqs (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="677" width="0.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1071.47" y="687.5" ></text>
</g>
<g >
<title>spdlog::details::short_filename_formatter&lt;spdlog::details::null_scoped_padder&gt;::basename (5,839,610 samples, 0.16%)</title><rect x="1137.3" y="789" width="1.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1140.30" y="799.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="693" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1146.96" y="703.5" ></text>
</g>
<g >
<title>spdlog::details::fmt_helper::append_string_view (6,553,766 samples, 0.17%)</title><rect x="1127.6" y="805" width="2.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1130.59" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,107,611 samples, 0.06%)</title><rect x="1172.3" y="709" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1175.31" y="719.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (25,549,598 samples, 0.68%)</title><rect x="1071.9" y="645" width="8.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1074.93" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,754,893 samples, 0.10%)</title><rect x="1147.8" y="837" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1150.81" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,008,604 samples, 0.05%)</title><rect x="1144.6" y="821" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1147.63" y="831.5" ></text>
</g>
<g >
<title>InitializeCommonInterceptors (4,481,795 samples, 0.12%)</title><rect x="11.4" y="981" width="1.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="14.41" y="991.5" ></text>
</g>
<g >
<title>el0_da (2,564,901 samples, 0.07%)</title><rect x="496.8" y="725" width="0.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="499.84" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="741" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1146.96" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,152,862 samples, 0.11%)</title><rect x="1154.9" y="869" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1157.90" y="879.5" ></text>
</g>
<g >
<title>__release_sock (8,149,641 samples, 0.22%)</title><rect x="816.0" y="645" width="2.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="819.00" y="655.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,215,494 samples, 0.06%)</title><rect x="293.1" y="693" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="296.13" y="703.5" ></text>
</g>
<g >
<title>tcp_recvmsg (19,156,430 samples, 0.51%)</title><rect x="20.9" y="725" width="6.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="23.93" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,142,099 samples, 0.14%)</title><rect x="1162.0" y="837" width="1.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1165.03" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,149,076 samples, 0.06%)</title><rect x="1098.6" y="773" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1101.63" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,066,707 samples, 0.06%)</title><rect x="1154.3" y="869" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1157.25" y="879.5" ></text>
</g>
<g >
<title>vma_prepare (2,401,585 samples, 0.06%)</title><rect x="497.6" y="453" width="0.8" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="500.64" y="463.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::compare (2,208,536 samples, 0.06%)</title><rect x="198.5" y="885" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="201.54" y="895.5" ></text>
</g>
<g >
<title>ip_output (2,048,946 samples, 0.05%)</title><rect x="816.0" y="517" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="819.00" y="527.5" ></text>
</g>
<g >
<title>tcp_skb_entail (1,961,896 samples, 0.05%)</title><rect x="859.1" y="645" width="0.6" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="862.08" y="655.5" ></text>
</g>
<g >
<title>do_mem_abort (5,834,634 samples, 0.16%)</title><rect x="70.8" y="757" width="1.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="73.79" y="767.5" ></text>
</g>
<g >
<title>skb_free_head (1,998,231 samples, 0.05%)</title><rect x="837.2" y="69" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="840.19" y="79.5" ></text>
</g>
<g >
<title>run_timer_softirq (1,861,841 samples, 0.05%)</title><rect x="613.5" y="645" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="616.47" y="655.5" ></text>
</g>
<g >
<title>do_el0_svc (1,834,332 samples, 0.05%)</title><rect x="10.8" y="773" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.83" y="783.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (2,056,383 samples, 0.05%)</title><rect x="847.1" y="213" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="850.15" y="223.5" ></text>
</g>
<g >
<title>sock_def_readable (17,622,553 samples, 0.47%)</title><rect x="838.5" y="101" width="5.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="841.50" y="111.5" ></text>
</g>
<g >
<title>__update_cpu_freelist_fast (1,960,468 samples, 0.05%)</title><rect x="866.5" y="597" width="0.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="869.55" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,074,713 samples, 0.11%)</title><rect x="1123.7" y="773" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1126.72" y="783.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,054,609 samples, 0.05%)</title><rect x="293.8" y="709" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="296.83" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,637,323 samples, 0.10%)</title><rect x="1087.3" y="821" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1090.30" y="831.5" ></text>
</g>
<g >
<title>tcp_set_state (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="245" width="0.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1192.40" y="255.5" ></text>
</g>
<g >
<title>__ip_finish_output (65,401,867 samples, 1.74%)</title><rect x="829.9" y="517" width="20.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="832.85" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (2,085,178 samples, 0.06%)</title><rect x="397.3" y="885" width="0.7" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="400.32" y="895.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (2,132,905 samples, 0.06%)</title><rect x="849.2" y="453" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="852.16" y="463.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,102,693 samples, 0.06%)</title><rect x="1185.2" y="837" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1188.16" y="847.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1,920,708 samples, 0.05%)</title><rect x="396.7" y="421" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="399.72" y="431.5" ></text>
</g>
<g >
<title>mem_cgroup_handle_over_high (1,909,728 samples, 0.05%)</title><rect x="1067.9" y="757" width="0.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1070.87" y="767.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (1,904,211 samples, 0.05%)</title><rect x="679.9" y="709" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="682.88" y="719.5" ></text>
</g>
<g >
<title>__kfree_skb (1,992,540 samples, 0.05%)</title><rect x="349.8" y="437" width="0.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="352.76" y="447.5" ></text>
</g>
<g >
<title>__kfree_skb (2,096,569 samples, 0.06%)</title><rect x="817.9" y="565" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="820.90" y="575.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,805,690 samples, 0.10%)</title><rect x="1142.2" y="789" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1145.21" y="799.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (4,468,746 samples, 0.12%)</title><rect x="200.6" y="917" width="1.4" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="203.59" y="927.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (4,139,715 samples, 0.11%)</title><rect x="1089.9" y="869" width="1.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1092.94" y="879.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (6,005,362 samples, 0.16%)</title><rect x="1083.3" y="917" width="1.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1086.32" y="927.5" ></text>
</g>
<g >
<title>el0_interrupt (1,920,708 samples, 0.05%)</title><rect x="396.7" y="789" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="399.72" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,945,718 samples, 0.05%)</title><rect x="1081.3" y="869" width="0.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1084.35" y="879.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,401,585 samples, 0.06%)</title><rect x="497.6" y="661" width="0.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="500.64" y="671.5" ></text>
</g>
<g >
<title>ip_skb_dst_mtu (2,561,505 samples, 0.07%)</title><rect x="1077.7" y="533" width="0.8" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1080.73" y="543.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (8,163,431 samples, 0.22%)</title><rect x="296.4" y="789" width="2.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="299.39" y="799.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (1,834,332 samples, 0.05%)</title><rect x="10.8" y="757" width="0.6" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="13.83" y="767.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (85,834,500 samples, 2.29%)</title><rect x="769.9" y="837" width="27.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="772.93" y="847.5" >s..</text>
</g>
<g >
<title>__handle_mm_fault (1,359,675 samples, 0.04%)</title><rect x="30.0" y="805" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="33.02" y="815.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (1,982,687 samples, 0.05%)</title><rect x="1082.0" y="773" width="0.6" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1084.96" y="783.5" ></text>
</g>
<g >
<title>fmt::v9::detail::count_digits (2,309,929 samples, 0.06%)</title><rect x="1183.8" y="757" width="0.7" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1186.77" y="767.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (2,321,131 samples, 0.06%)</title><rect x="521.1" y="869" width="0.7" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="524.09" y="879.5" ></text>
</g>
<g >
<title>__arch_copy_to_user (1,834,332 samples, 0.05%)</title><rect x="10.8" y="645" width="0.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="13.83" y="655.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator32LocalCache&lt;__sanitizer::SizeClassAllocator32&lt;__sanitizer::AP32&gt; &gt;::Refill (1,647,063 samples, 0.04%)</title><rect x="11.8" y="773" width="0.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="14.84" y="783.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (2,525,976 samples, 0.07%)</title><rect x="1071.1" y="613" width="0.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1074.14" y="623.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="645" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1096.75" y="655.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1,861,841 samples, 0.05%)</title><rect x="613.5" y="501" width="0.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="616.47" y="511.5" ></text>
</g>
<g >
<title>alloc_pages (4,243,890 samples, 0.11%)</title><rect x="821.0" y="613" width="1.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="824.01" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,222,575 samples, 0.06%)</title><rect x="1093.0" y="741" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1096.05" y="751.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (5,834,634 samples, 0.16%)</title><rect x="70.8" y="789" width="1.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="73.79" y="799.5" ></text>
</g>
<g >
<title>tcp_data_ready (6,059,760 samples, 0.16%)</title><rect x="1075.1" y="133" width="1.9" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1078.13" y="143.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt;::basic_string_view&lt;std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (2,237,559 samples, 0.06%)</title><rect x="1171.6" y="853" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1174.61" y="863.5" ></text>
</g>
<g >
<title>spdlog::sinks::ansicolor_sink&lt;spdlog::details::console_mutex&gt;::log (58,709,872 samples, 1.56%)</title><rect x="1126.2" y="837" width="18.4" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="1129.16" y="847.5" ></text>
</g>
<g >
<title>el1h_64_sync_handler (1,834,332 samples, 0.05%)</title><rect x="10.8" y="613" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="13.83" y="623.5" ></text>
</g>
<g >
<title>std::common_type&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;::type std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000l&gt;, long, std::ratio&lt;1l, 1000l&gt; &gt; (1,465,602 samples, 0.04%)</title><rect x="1139.1" y="773" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1142.13" y="783.5" ></text>
</g>
<g >
<title>fmt::v9::basic_string_view&lt;char&gt; fmt::v9::detail::to_string_view&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1,820,865 samples, 0.05%)</title><rect x="1171.0" y="901" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1174.03" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,956,180 samples, 0.05%)</title><rect x="1104.9" y="629" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1107.94" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (10,825,789 samples, 0.29%)</title><rect x="398.5" y="869" width="3.4" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="401.54" y="879.5" ></text>
</g>
<g >
<title>__asan::asan_malloc (1,946,263 samples, 0.05%)</title><rect x="12.8" y="837" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="15.82" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,969,887 samples, 0.05%)</title><rect x="1147.2" y="869" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1150.19" y="879.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt; &gt;::operator[] (187,664,133 samples, 5.00%)</title><rect x="737.9" y="885" width="59.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="740.90" y="895.5" >std::u..</text>
</g>
<g >
<title>__napi_poll (1,904,211 samples, 0.05%)</title><rect x="679.9" y="597" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="682.88" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,152,432 samples, 0.06%)</title><rect x="1156.8" y="853" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1159.83" y="863.5" ></text>
</g>
<g >
<title>sock_close (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="869" width="0.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1192.40" y="879.5" ></text>
</g>
<g >
<title>call_rcu (2,363,931 samples, 0.06%)</title><rect x="297.5" y="373" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="300.52" y="383.5" ></text>
</g>
<g >
<title>handle_softirqs (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="533" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1192.40" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (112,392,991 samples, 3.00%)</title><rect x="39.1" y="901" width="35.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="42.07" y="911.5" >st..</text>
</g>
<g >
<title>_dl_catch_exception (1,946,263 samples, 0.05%)</title><rect x="12.8" y="933" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="15.82" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,054,596 samples, 0.11%)</title><rect x="1158.7" y="805" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1161.73" y="815.5" ></text>
</g>
<g >
<title>fmt::v9::detail::parse_format_string&lt;false, char, fmt::v9::detail::vformat_to&lt;char&gt; (51,960,211 samples, 1.39%)</title><rect x="1108.7" y="837" width="16.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1111.65" y="847.5" ></text>
</g>
<g >
<title>operator new (10,216,073 samples, 0.27%)</title><rect x="296.4" y="821" width="3.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="299.39" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,099,513 samples, 0.06%)</title><rect x="1122.4" y="629" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1125.38" y="639.5" ></text>
</g>
<g >
<title>__sock_release (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="853" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1192.40" y="863.5" ></text>
</g>
<g >
<title>std::vector&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;spdlog::details::flag_formatter, std::default_delete&lt;spdlog::details::flag_formatter&gt; &gt; &gt; &gt;::begin (1,995,713 samples, 0.05%)</title><rect x="1141.6" y="805" width="0.6" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="1144.58" y="815.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,815,937 samples, 0.05%)</title><rect x="296.4" y="741" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="299.39" y="751.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (2,156,691 samples, 0.06%)</title><rect x="1123.0" y="645" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1126.04" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,110,665 samples, 0.06%)</title><rect x="1113.9" y="773" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1116.88" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::rfind (263,767,718 samples, 7.03%)</title><rect x="119.0" y="933" width="83.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="122.03" y="943.5" >std::__cx..</text>
</g>
<g >
<title>el0t_64_sync_handler (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="725" width="0.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1188.82" y="735.5" ></text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::advance_to (3,945,656 samples, 0.11%)</title><rect x="1107.4" y="821" width="1.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1110.41" y="831.5" ></text>
</g>
<g >
<title>__send (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="869" width="0.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1096.75" y="879.5" ></text>
</g>
<g >
<title>__sanitizer::Symbolizer::LateInitialize (1,946,263 samples, 0.05%)</title><rect x="12.8" y="997" width="0.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="15.82" y="1007.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,883,558 samples, 0.05%)</title><rect x="1188.8" y="869" width="0.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1191.80" y="879.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::allocate (11,524,433 samples, 0.31%)</title><rect x="70.8" y="885" width="3.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="73.79" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (3,888,354 samples, 0.10%)</title><rect x="1157.5" y="821" width="1.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1160.51" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (241,200,830 samples, 6.43%)</title><rect x="803.9" y="821" width="75.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="806.91" y="831.5" >el0t_64_..</text>
</g>
<g >
<title>do_anonymous_page (1,898,887 samples, 0.05%)</title><rect x="72.0" y="645" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="75.03" y="655.5" ></text>
</g>
<g >
<title>tcp_send_active_reset (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="789" width="0.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1192.40" y="799.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (1,982,687 samples, 0.05%)</title><rect x="1082.0" y="821" width="0.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1084.96" y="831.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (2,085,178 samples, 0.06%)</title><rect x="397.3" y="853" width="0.7" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="400.32" y="863.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (2,107,611 samples, 0.06%)</title><rect x="1172.3" y="789" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1175.31" y="799.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (3,120,750 samples, 0.08%)</title><rect x="11.8" y="853" width="1.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="14.84" y="863.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (4,194,521 samples, 0.11%)</title><rect x="1160.0" y="821" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1163.00" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,066,707 samples, 0.06%)</title><rect x="1154.3" y="885" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1157.25" y="895.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (6,251,563 samples, 0.17%)</title><rect x="1118.3" y="709" width="2.0" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1121.31" y="719.5" ></text>
</g>
<g >
<title>handle_softirqs (1,904,211 samples, 0.05%)</title><rect x="679.9" y="629" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="682.88" y="639.5" ></text>
</g>
<g >
<title>ksys_read (29,165,244 samples, 0.78%)</title><rect x="18.9" y="805" width="9.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="21.89" y="815.5" ></text>
</g>
<g >
<title>expire_timers (1,861,841 samples, 0.05%)</title><rect x="613.5" y="613" width="0.6" height="15.0" fill="rgb(218,59,14)" rx="2" ry="2" />
<text  x="616.47" y="623.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;tt::chat::server::ChannelManager, std::default_delete&lt;tt::chat::server::ChannelManager&gt; &gt;::_M_ptr (3,827,062 samples, 0.10%)</title><rect x="695.2" y="853" width="1.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="698.24" y="863.5" ></text>
</g>
<g >
<title>netif_rx_internal (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="421" width="0.7" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="1096.75" y="431.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (4,575,844 samples, 0.12%)</title><rect x="297.5" y="773" width="1.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="300.52" y="783.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char*, char*&gt; (5,905,330 samples, 0.16%)</title><rect x="1105.6" y="677" width="1.8" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1108.55" y="687.5" ></text>
</g>
<g >
<title>__sanitizer::internal_mmap (2,401,585 samples, 0.06%)</title><rect x="497.6" y="693" width="0.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="500.64" y="703.5" ></text>
</g>
<g >
<title>__update_cpu_freelist_fast (6,126,429 samples, 0.16%)</title><rect x="863.4" y="613" width="1.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="866.40" y="623.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char*, char*&gt; (5,905,330 samples, 0.16%)</title><rect x="1105.6" y="709" width="1.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1108.55" y="719.5" ></text>
</g>
<g >
<title>do_el0_svc (229,393,846 samples, 6.11%)</title><rect x="807.6" y="789" width="72.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="810.62" y="799.5" >do_el0_svc</text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,191,319 samples, 0.06%)</title><rect x="1160.0" y="789" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1163.00" y="799.5" ></text>
</g>
<g >
<title>__split_vma (2,401,585 samples, 0.06%)</title><rect x="497.6" y="469" width="0.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="500.64" y="479.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1,904,211 samples, 0.05%)</title><rect x="679.9" y="389" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="682.88" y="399.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (2,174,966 samples, 0.06%)</title><rect x="1099.3" y="773" width="0.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1102.30" y="783.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_Scoped_node::_Scoped_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (5,955,915 samples, 0.16%)</title><rect x="1091.9" y="869" width="1.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1094.87" y="879.5" ></text>
</g>
<g >
<title>ip_local_deliver (14,407,681 samples, 0.38%)</title><rect x="1073.2" y="245" width="4.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1076.20" y="255.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,547,240 samples, 0.12%)</title><rect x="1126.2" y="789" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1129.16" y="799.5" ></text>
</g>
<g >
<title>__asan::AsanThread::ThreadStart (1,834,332 samples, 0.05%)</title><rect x="10.8" y="981" width="0.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="13.83" y="991.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,161,787 samples, 0.03%)</title><rect x="1112.3" y="805" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1115.35" y="815.5" ></text>
</g>
<g >
<title>__interceptor_read@plt (1,899,764 samples, 0.05%)</title><rect x="30.9" y="949" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="33.86" y="959.5" ></text>
</g>
<g >
<title>__sanitizer::ReadProcMaps (1,834,332 samples, 0.05%)</title><rect x="10.8" y="885" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.83" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_free_5 (1,941,302 samples, 0.05%)</title><rect x="28.1" y="949" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="31.06" y="959.5" ></text>
</g>
<g >
<title>__asan::CreateMainThread (1,834,332 samples, 0.05%)</title><rect x="10.8" y="997" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="13.83" y="1007.5" ></text>
</g>
<g >
<title>vfs_write (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="565" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1146.96" y="575.5" ></text>
</g>
<g >
<title>__alloc_pages (4,243,890 samples, 0.11%)</title><rect x="821.0" y="581" width="1.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="824.01" y="591.5" ></text>
</g>
<g >
<title>do_vmi_munmap (4,575,844 samples, 0.12%)</title><rect x="297.5" y="501" width="1.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="300.52" y="511.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[] (1,982,687 samples, 0.05%)</title><rect x="1082.0" y="917" width="0.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1084.96" y="927.5" ></text>
</g>
<g >
<title>aa_inet_msg_perm (3,528,299 samples, 0.09%)</title><rect x="27.0" y="709" width="1.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="29.95" y="719.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="581" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1096.75" y="591.5" ></text>
</g>
<g >
<title>write (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="677" width="0.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1146.41" y="687.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (4,575,844 samples, 0.12%)</title><rect x="297.5" y="757" width="1.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="300.52" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,191,319 samples, 0.06%)</title><rect x="1160.0" y="773" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1163.00" y="783.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,771,650 samples, 0.05%)</title><rect x="297.0" y="645" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="299.97" y="655.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,945,656 samples, 0.11%)</title><rect x="1107.4" y="789" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1110.41" y="799.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,771,650 samples, 0.05%)</title><rect x="297.0" y="533" width="0.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="299.97" y="543.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,161,787 samples, 0.03%)</title><rect x="1112.3" y="789" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1115.35" y="799.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="773" width="0.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1192.40" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,958,665 samples, 0.05%)</title><rect x="1153.6" y="885" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1156.64" y="895.5" ></text>
</g>
<g >
<title>ip_rcv_finish (14,407,681 samples, 0.38%)</title><rect x="1073.2" y="261" width="4.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1076.20" y="271.5" ></text>
</g>
<g >
<title>__arm64_sys_write (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="645" width="0.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1188.82" y="655.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (16,163,540 samples, 0.43%)</title><rect x="1072.7" y="485" width="5.0" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1075.65" y="495.5" ></text>
</g>
<g >
<title>loopback_xmit (2,132,905 samples, 0.06%)</title><rect x="849.2" y="437" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="852.16" y="447.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1,920,708 samples, 0.05%)</title><rect x="396.7" y="389" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="399.72" y="399.5" ></text>
</g>
<g >
<title>process_backlog (54,872,865 samples, 1.46%)</title><rect x="830.5" y="309" width="17.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="833.53" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (66,309,266 samples, 1.77%)</title><rect x="498.4" y="869" width="20.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="501.40" y="879.5" ></text>
</g>
<g >
<title>__asan::AsanThread::SetThreadStackAndTls (1,834,332 samples, 0.05%)</title><rect x="10.8" y="949" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.83" y="959.5" ></text>
</g>
<g >
<title>rmqueue (2,056,623 samples, 0.05%)</title><rect x="821.7" y="565" width="0.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="824.70" y="575.5" ></text>
</g>
<g >
<title>call_on_irq_stack (1,904,211 samples, 0.05%)</title><rect x="679.9" y="677" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="682.88" y="687.5" ></text>
</g>
<g >
<title>ksys_write (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="549" width="0.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1146.41" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (6,221,294 samples, 0.17%)</title><rect x="1129.7" y="741" width="1.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1132.65" y="751.5" ></text>
</g>
<g >
<title>sk_page_frag_refill (4,243,890 samples, 0.11%)</title><rect x="821.0" y="645" width="1.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="824.01" y="655.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (5,955,915 samples, 0.16%)</title><rect x="1091.9" y="853" width="1.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1094.87" y="863.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (8,149,641 samples, 0.22%)</title><rect x="816.0" y="629" width="2.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="819.00" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (3,963,921 samples, 0.11%)</title><rect x="206.1" y="901" width="1.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="209.09" y="911.5" ></text>
</g>
<g >
<title>__asan::AsanInitInternal (8,262,390 samples, 0.22%)</title><rect x="10.8" y="1013" width="2.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="13.83" y="1023.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,401,585 samples, 0.06%)</title><rect x="497.6" y="677" width="0.8" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="500.64" y="687.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (2,191,319 samples, 0.06%)</title><rect x="1160.0" y="805" width="0.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1163.00" y="815.5" ></text>
</g>
<g >
<title>tcp_clean_rtx_queue.constprop.0 (4,049,717 samples, 0.11%)</title><rect x="817.3" y="581" width="1.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="820.29" y="591.5" ></text>
</g>
<g >
<title>ksys_write (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="629" width="0.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1188.82" y="639.5" ></text>
</g>
<g >
<title>___interceptor_memcmp (2,208,536 samples, 0.06%)</title><rect x="198.5" y="869" width="0.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="201.54" y="879.5" ></text>
</g>
<g >
<title>el0t_64_irq (8,162,093 samples, 0.22%)</title><rect x="1066.6" y="837" width="2.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1069.59" y="847.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1,904,211 samples, 0.05%)</title><rect x="679.9" y="405" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="682.88" y="415.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (3,893,695 samples, 0.10%)</title><rect x="612.8" y="805" width="1.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="615.83" y="815.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (177,474,078 samples, 4.73%)</title><rect x="463.4" y="885" width="55.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="466.43" y="895.5" >void ..</text>
</g>
<g >
<title>__split_vma (2,363,931 samples, 0.06%)</title><rect x="297.5" y="469" width="0.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="300.52" y="479.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,910,782 samples, 0.05%)</title><rect x="1146.6" y="901" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1149.59" y="911.5" ></text>
</g>
<g >
<title>rw_verify_area (2,293,232 samples, 0.06%)</title><rect x="20.2" y="773" width="0.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="23.21" y="783.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (7,861,510 samples, 0.21%)</title><rect x="1104.9" y="757" width="2.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1107.94" y="767.5" ></text>
</g>
<g >
<title>do_page_fault (2,215,494 samples, 0.06%)</title><rect x="293.1" y="709" width="0.7" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="296.13" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,107,611 samples, 0.06%)</title><rect x="1172.3" y="725" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1175.31" y="735.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (2,329,689 samples, 0.06%)</title><rect x="420.5" y="805" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="423.49" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,156,427 samples, 0.06%)</title><rect x="1120.3" y="645" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1123.28" y="655.5" ></text>
</g>
<g >
<title>tcp_sendmsg_locked (173,315,064 samples, 4.62%)</title><rect x="819.0" y="661" width="54.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="822.03" y="671.5" >tcp_s..</text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,008,604 samples, 0.05%)</title><rect x="1144.6" y="805" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1147.63" y="815.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="469" width="0.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1096.75" y="479.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::assign_username (190,918,185 samples, 5.09%)</title><rect x="1085.2" y="917" width="60.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1088.21" y="927.5" >tt::ch..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (1,783,719 samples, 0.05%)</title><rect x="398.0" y="901" width="0.5" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="400.98" y="911.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (2,211,913 samples, 0.06%)</title><rect x="298.3" y="453" width="0.7" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="301.27" y="463.5" ></text>
</g>
<g >
<title>__asan::Allocator::Deallocate (2,081,379 samples, 0.06%)</title><rect x="519.7" y="821" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="522.75" y="831.5" ></text>
</g>
<g >
<title>___interceptor_send (1,869,214 samples, 0.05%)</title><rect x="879.8" y="869" width="0.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="882.78" y="879.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (2,383,631 samples, 0.06%)</title><rect x="825.3" y="597" width="0.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="828.32" y="607.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,052,642 samples, 0.05%)</title><rect x="299.0" y="789" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="301.96" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (11,067,067 samples, 0.30%)</title><rect x="1165.0" y="805" width="3.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1167.99" y="815.5" ></text>
</g>
<g >
<title>skb_release_data (1,992,540 samples, 0.05%)</title><rect x="349.8" y="421" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="352.76" y="431.5" ></text>
</g>
<g >
<title>sock_def_readable (1,884,408 samples, 0.05%)</title><rect x="1070.0" y="597" width="0.6" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1072.97" y="607.5" ></text>
</g>
<g >
<title>fmt::v9::appender fmt::v9::detail::copy_str&lt;char, char const*&gt; (17,451,743 samples, 0.47%)</title><rect x="1163.6" y="837" width="5.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1166.64" y="847.5" ></text>
</g>
<g >
<title>begin_current_label_crit_section (2,103,465 samples, 0.06%)</title><rect x="876.7" y="645" width="0.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="879.74" y="655.5" ></text>
</g>
<g >
<title>[libfmt.so.9.1.0] (16,621,125 samples, 0.44%)</title><rect x="296.4" y="869" width="5.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="299.39" y="879.5" ></text>
</g>
<g >
<title>tcp_rcv_established (7,930,109 samples, 0.21%)</title><rect x="1074.5" y="165" width="2.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1077.54" y="175.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;::try_reserve (5,905,330 samples, 0.16%)</title><rect x="1105.6" y="741" width="1.8" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1108.55" y="751.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (1,969,887 samples, 0.05%)</title><rect x="1147.2" y="901" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1150.19" y="911.5" ></text>
</g>
<g >
<title>do_translation_fault (2,656,689 samples, 0.07%)</title><rect x="30.0" y="853" width="0.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="33.02" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,508,527 samples, 0.12%)</title><rect x="1121.0" y="693" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1123.96" y="703.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,892,175 samples, 0.05%)</title><rect x="1186.3" y="853" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1189.28" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (2,067,807 samples, 0.06%)</title><rect x="1145.9" y="917" width="0.7" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1148.94" y="927.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1,904,211 samples, 0.05%)</title><rect x="679.9" y="517" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="682.88" y="527.5" ></text>
</g>
<g >
<title>__check_object_size (4,346,576 samples, 0.12%)</title><rect x="1070.6" y="645" width="1.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1073.57" y="655.5" ></text>
</g>
<g >
<title>fpsimd_restore_current_state (2,031,854 samples, 0.05%)</title><rect x="612.8" y="741" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="615.83" y="751.5" ></text>
</g>
<g >
<title>tcp_done_with_error (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="277" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1192.40" y="287.5" ></text>
</g>
<g >
<title>fmt::v9::basic_memory_buffer&lt;char, 250ul, std::allocator&lt;char&gt; &gt;::basic_memory_buffer (1,502,031 samples, 0.04%)</title><rect x="1170.6" y="917" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1173.56" y="927.5" ></text>
</g>
<g >
<title>tcp_push (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="661" width="0.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1096.75" y="671.5" ></text>
</g>
<g >
<title>vfs_write (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="533" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1146.41" y="543.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1,920,708 samples, 0.05%)</title><rect x="396.7" y="485" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="399.72" y="495.5" ></text>
</g>
<g >
<title>ip_queue_xmit (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="597" width="0.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1096.75" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,067,807 samples, 0.06%)</title><rect x="1145.9" y="885" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1148.94" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,502,031 samples, 0.04%)</title><rect x="1170.6" y="901" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1173.56" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,559,823 samples, 0.09%)</title><rect x="1136.2" y="709" width="1.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1139.18" y="719.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,945,718 samples, 0.05%)</title><rect x="1081.3" y="885" width="0.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1084.35" y="895.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4,143,223 samples, 0.11%)</title><rect x="71.3" y="693" width="1.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="74.32" y="703.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (1,444,639 samples, 0.04%)</title><rect x="681.1" y="837" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="684.09" y="847.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (2,014,467 samples, 0.05%)</title><rect x="1091.2" y="837" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1094.24" y="847.5" ></text>
</g>
<g >
<title>do_el0_svc (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="805" width="0.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1096.75" y="815.5" ></text>
</g>
<g >
<title>tcp_push (1,498,660 samples, 0.04%)</title><rect x="818.6" y="661" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="821.56" y="671.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, int, std::allocator&lt;int&gt;, std::__detail::_Identity, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::begin (68,307,158 samples, 1.82%)</title><rect x="697.2" y="885" width="21.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="700.19" y="895.5" >s..</text>
</g>
<g >
<title>skb_release_data (1,998,231 samples, 0.05%)</title><rect x="837.2" y="85" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="840.19" y="95.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,564,901 samples, 0.07%)</title><rect x="496.8" y="661" width="0.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="499.84" y="671.5" ></text>
</g>
<g >
<title>_IO_fwrite (3,882,874 samples, 0.10%)</title><rect x="1143.4" y="789" width="1.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1146.41" y="799.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="757" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1146.41" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,455,309 samples, 0.07%)</title><rect x="1182.5" y="821" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1185.47" y="831.5" ></text>
</g>
<g >
<title>__sk_mem_schedule (5,936,175 samples, 0.16%)</title><rect x="871.7" y="629" width="1.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="874.68" y="639.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,839,610 samples, 0.16%)</title><rect x="1137.3" y="757" width="1.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1140.30" y="767.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (22,409,216 samples, 0.60%)</title><rect x="1146.6" y="933" width="7.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1149.59" y="943.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,998,203 samples, 0.05%)</title><rect x="1083.3" y="885" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1086.32" y="895.5" ></text>
</g>
<g >
<title>__do_softirq (1,904,211 samples, 0.05%)</title><rect x="679.9" y="645" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="682.88" y="655.5" ></text>
</g>
<g >
<title>__sanitizer::InternalAlloc (3,120,750 samples, 0.08%)</title><rect x="11.8" y="805" width="1.0" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="14.84" y="815.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (2,179,139 samples, 0.06%)</title><rect x="1140.9" y="773" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1143.90" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,014,467 samples, 0.05%)</title><rect x="1091.2" y="805" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1094.24" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2,047,767 samples, 0.05%)</title><rect x="682.1" y="805" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="685.15" y="815.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (4,224,436 samples, 0.11%)</title><rect x="1145.3" y="949" width="1.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1148.26" y="959.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (2,049,173 samples, 0.05%)</title><rect x="1186.9" y="837" width="0.6" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1189.87" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (32,542,718 samples, 0.87%)</title><rect x="340.2" y="869" width="10.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="343.15" y="879.5" ></text>
</g>
<g >
<title>do_mmap (2,401,585 samples, 0.06%)</title><rect x="497.6" y="533" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="500.64" y="543.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (87,690,791 samples, 2.34%)</title><rect x="468.0" y="821" width="27.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="471.00" y="831.5" >_..</text>
</g>
<g >
<title>sock_read_iter (22,684,729 samples, 0.60%)</title><rect x="20.9" y="773" width="7.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="23.93" y="783.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (1,297,014 samples, 0.03%)</title><rect x="30.4" y="821" width="0.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="33.45" y="831.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,963,005 samples, 0.05%)</title><rect x="72.6" y="821" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="75.63" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (100,868,558 samples, 2.69%)</title><rect x="39.1" y="869" width="31.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="42.07" y="879.5" >__..</text>
</g>
<g >
<title>tcp_rcv_established (43,795,661 samples, 1.17%)</title><rect x="833.4" y="149" width="13.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="836.37" y="159.5" ></text>
</g>
<g >
<title>void spdlog::details::fmt_helper::append_int&lt;int&gt; (6,432,126 samples, 0.17%)</title><rect x="1182.5" y="837" width="2.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1185.47" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (238,392,534 samples, 6.35%)</title><rect x="539.1" y="837" width="75.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="542.07" y="847.5" >__asan_s..</text>
</g>
<g >
<title>irq_exit_rcu (1,920,708 samples, 0.05%)</title><rect x="396.7" y="773" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="399.72" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,666,888 samples, 0.04%)</title><rect x="1183.2" y="741" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1186.24" y="751.5" ></text>
</g>
<g >
<title>ip_local_deliver (52,747,043 samples, 1.41%)</title><rect x="831.2" y="229" width="16.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="834.20" y="239.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (1,956,180 samples, 0.05%)</title><rect x="1104.9" y="677" width="0.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1107.94" y="687.5" ></text>
</g>
<g >
<title>do_pte_missing (1,965,532 samples, 0.05%)</title><rect x="1156.2" y="693" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1159.21" y="703.5" ></text>
</g>
<g >
<title>skb_do_copy_data_nocache (4,346,576 samples, 0.12%)</title><rect x="1070.6" y="661" width="1.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1073.57" y="671.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (2,054,609 samples, 0.05%)</title><rect x="293.8" y="805" width="0.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="296.83" y="815.5" ></text>
</g>
<g >
<title>std::vector&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt;, std::allocator&lt;std::shared_ptr&lt;spdlog::sinks::sink&gt; &gt; &gt;::end (1,892,175 samples, 0.05%)</title><rect x="1186.3" y="885" width="0.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1189.28" y="895.5" ></text>
</g>
<g >
<title>__memcg_slab_free_hook (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="197" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1192.40" y="207.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (2,341,850 samples, 0.06%)</title><rect x="1082.6" y="869" width="0.7" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1085.58" y="879.5" ></text>
</g>
<g >
<title>ksys_read (1,834,332 samples, 0.05%)</title><rect x="10.8" y="709" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.83" y="719.5" ></text>
</g>
<g >
<title>do_notify_resume (5,985,002 samples, 0.16%)</title><rect x="1066.6" y="773" width="1.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1069.59" y="783.5" ></text>
</g>
<g >
<title>do_el0_svc (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="613" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1146.41" y="623.5" ></text>
</g>
<g >
<title>dlsym (1,946,263 samples, 0.05%)</title><rect x="12.8" y="981" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="15.82" y="991.5" ></text>
</g>
<g >
<title>do_mem_abort (1,815,937 samples, 0.05%)</title><rect x="296.4" y="709" width="0.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="299.39" y="719.5" ></text>
</g>
<g >
<title>ip_rcv (1,904,211 samples, 0.05%)</title><rect x="679.9" y="533" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="682.88" y="543.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (14,517,852 samples, 0.39%)</title><rect x="463.4" y="869" width="4.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="466.43" y="879.5" ></text>
</g>
<g >
<title>void spdlog::details::fmt_helper::pad3&lt;unsigned int&gt; (2,117,891 samples, 0.06%)</title><rect x="1184.5" y="837" width="0.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1187.49" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,657,236 samples, 0.04%)</title><rect x="1101.3" y="757" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1104.32" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,063,382 samples, 0.06%)</title><rect x="1084.6" y="837" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1087.56" y="847.5" ></text>
</g>
<g >
<title>__asan_region_is_poisoned (3,502,851 samples, 0.09%)</title><rect x="800.9" y="837" width="1.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="803.88" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,977,709 samples, 0.05%)</title><rect x="1139.6" y="741" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1142.60" y="751.5" ></text>
</g>
<g >
<title>main (2,191,532 samples, 0.06%)</title><rect x="73.7" y="837" width="0.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="76.73" y="847.5" ></text>
</g>
<g >
<title>write (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="757" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1188.82" y="767.5" ></text>
</g>
<g >
<title>__asan::AsanThread::Init (1,834,332 samples, 0.05%)</title><rect x="10.8" y="965" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.83" y="975.5" ></text>
</g>
<g >
<title>free_unref_page_commit (2,049,173 samples, 0.05%)</title><rect x="1186.9" y="789" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1189.87" y="799.5" ></text>
</g>
<g >
<title>process_output_block (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="485" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1146.96" y="495.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,956,180 samples, 0.05%)</title><rect x="1104.9" y="645" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1107.94" y="655.5" ></text>
</g>
<g >
<title>cubictcp_acked (1,870,349 samples, 0.05%)</title><rect x="1074.5" y="133" width="0.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1077.54" y="143.5" ></text>
</g>
<g >
<title>release_sock (12,212,981 samples, 0.33%)</title><rect x="814.7" y="661" width="3.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="817.72" y="671.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (223,371,154 samples, 5.95%)</title><rect x="808.9" y="741" width="70.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="811.94" y="751.5" >__arm64..</text>
</g>
<g >
<title>std::__new_allocator&lt;char&gt;::deallocate (4,278,993 samples, 0.11%)</title><rect x="519.7" y="869" width="1.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="522.75" y="879.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (50,690,660 samples, 1.35%)</title><rect x="831.2" y="197" width="15.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="834.20" y="207.5" ></text>
</g>
<g >
<title>tt::chat::server::EpollServer::send_message (38,760,089 samples, 1.03%)</title><rect x="1069.2" y="917" width="12.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1072.16" y="927.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (4,075,274 samples, 0.11%)</title><rect x="1066.6" y="757" width="1.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1069.59" y="767.5" ></text>
</g>
<g >
<title>do_softirq_own_stack (1,861,841 samples, 0.05%)</title><rect x="613.5" y="725" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="616.47" y="735.5" ></text>
</g>
<g >
<title>void spdlog::logger::log_&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (105,655,286 samples, 2.82%)</title><rect x="1153.6" y="933" width="33.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1156.64" y="943.5" >vo..</text>
</g>
<g >
<title>vma_alloc_zeroed_movable_folio (1,771,650 samples, 0.05%)</title><rect x="297.0" y="597" width="0.5" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="299.97" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (100,868,558 samples, 2.69%)</title><rect x="39.1" y="885" width="31.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="42.07" y="895.5" >__..</text>
</g>
<g >
<title>skb_page_frag_refill (4,243,890 samples, 0.11%)</title><rect x="821.0" y="629" width="1.3" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="824.01" y="639.5" ></text>
</g>
<g >
<title>__sys_sendto (217,455,836 samples, 5.80%)</title><rect x="810.3" y="725" width="68.4" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="813.28" y="735.5" >__sys_s..</text>
</g>
<g >
<title>ip_output (1,920,708 samples, 0.05%)</title><rect x="396.7" y="373" width="0.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="399.72" y="383.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,905,330 samples, 0.16%)</title><rect x="1105.6" y="629" width="1.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1108.55" y="639.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (1,692,920 samples, 0.05%)</title><rect x="1181.9" y="805" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1184.94" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (7,500,602 samples, 0.20%)</title><rect x="1179.6" y="709" width="2.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1182.58" y="719.5" ></text>
</g>
<g >
<title>fmt::v9::detail::vformat_to&lt;char&gt; (40,220,501 samples, 1.07%)</title><rect x="1112.3" y="821" width="12.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1115.35" y="831.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (4,575,844 samples, 0.12%)</title><rect x="297.5" y="565" width="1.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="300.52" y="575.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (2,363,931 samples, 0.06%)</title><rect x="297.5" y="421" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="300.52" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (278,440,014 samples, 7.42%)</title><rect x="31.5" y="949" width="87.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="34.45" y="959.5" >std::__cxx..</text>
</g>
<g >
<title>arch_local_irq_restore (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="485" width="0.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1188.82" y="495.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindFast (2,052,642 samples, 0.05%)</title><rect x="299.0" y="773" width="0.6" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="301.96" y="783.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (2,107,611 samples, 0.06%)</title><rect x="1172.3" y="805" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1175.31" y="815.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy&lt;char const*, char*&gt; (10,043,248 samples, 0.27%)</title><rect x="1131.6" y="725" width="3.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1134.61" y="735.5" ></text>
</g>
<g >
<title>fmt::v9::vformat[abi:cxx11] (2,865,160 samples, 0.08%)</title><rect x="1085.2" y="901" width="0.9" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1088.21" y="911.5" ></text>
</g>
<g >
<title>el0_svc (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="821" width="0.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1096.75" y="831.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (8,956,169 samples, 0.24%)</title><rect x="495.6" y="805" width="2.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="498.58" y="815.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (2,401,585 samples, 0.06%)</title><rect x="497.6" y="549" width="0.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="500.64" y="559.5" ></text>
</g>
<g >
<title>____do_softirq (16,163,540 samples, 0.43%)</title><rect x="1072.7" y="405" width="5.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1075.65" y="415.5" ></text>
</g>
<g >
<title>tcp_validate_incoming (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="309" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1192.40" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::unordered_set&lt;int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;int&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_node (87,650,780 samples, 2.34%)</title><rect x="769.4" y="853" width="27.5" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="772.36" y="863.5" >s..</text>
</g>
<g >
<title>el0t_64_sync (1,834,332 samples, 0.05%)</title><rect x="10.8" y="821" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="13.83" y="831.5" ></text>
</g>
<g >
<title>call_timer_fn (1,861,841 samples, 0.05%)</title><rect x="613.5" y="597" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="616.47" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,995,713 samples, 0.05%)</title><rect x="1141.6" y="773" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1144.58" y="783.5" ></text>
</g>
<g >
<title>__sanitizer::BufferedStackTrace::UnwindImpl (2,052,642 samples, 0.05%)</title><rect x="299.0" y="805" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="301.96" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_3 (8,901,517 samples, 0.24%)</title><rect x="202.0" y="901" width="2.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="205.00" y="911.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (50,690,660 samples, 1.35%)</title><rect x="831.2" y="181" width="15.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="834.20" y="191.5" ></text>
</g>
<g >
<title>wp_page_copy (1,946,263 samples, 0.05%)</title><rect x="12.8" y="597" width="0.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="15.82" y="607.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,946,263 samples, 0.05%)</title><rect x="12.8" y="821" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="15.82" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (1,965,532 samples, 0.05%)</title><rect x="1156.2" y="821" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1159.21" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,754,893 samples, 0.10%)</title><rect x="1147.8" y="853" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1150.81" y="863.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,923,441 samples, 0.05%)</title><rect x="681.5" y="805" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="684.54" y="815.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;&amp; fmt::v9::detail::get_container&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; (11,067,067 samples, 0.30%)</title><rect x="1165.0" y="821" width="3.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1167.99" y="831.5" ></text>
</g>
<g >
<title>__arm64_sys_write (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="597" width="0.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1146.96" y="607.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,755,630 samples, 0.05%)</title><rect x="1092.5" y="757" width="0.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1095.49" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,156,427 samples, 0.06%)</title><rect x="1120.3" y="629" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1123.28" y="639.5" ></text>
</g>
<g >
<title>kfree_skbmem (2,116,400 samples, 0.06%)</title><rect x="836.5" y="85" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="839.53" y="95.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,946,263 samples, 0.05%)</title><rect x="12.8" y="661" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="15.82" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (12,872,758 samples, 0.34%)</title><rect x="1149.6" y="901" width="4.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1152.59" y="911.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,097,440 samples, 0.06%)</title><rect x="1151.6" y="853" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1154.64" y="863.5" ></text>
</g>
<g >
<title>mas_wr_node_store (2,363,931 samples, 0.06%)</title><rect x="297.5" y="405" width="0.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="300.52" y="415.5" ></text>
</g>
<g >
<title>do_translation_fault (1,815,937 samples, 0.05%)</title><rect x="296.4" y="693" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="299.39" y="703.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (4,093,756 samples, 0.11%)</title><rect x="1187.5" y="805" width="1.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1190.52" y="815.5" ></text>
</g>
<g >
<title>__napi_poll (16,163,540 samples, 0.43%)</title><rect x="1072.7" y="341" width="5.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1075.65" y="351.5" ></text>
</g>
<g >
<title>ip_send_check (2,147,635 samples, 0.06%)</title><rect x="1078.5" y="565" width="0.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1081.54" y="575.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,898,887 samples, 0.05%)</title><rect x="72.0" y="677" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="75.03" y="687.5" ></text>
</g>
<g >
<title>el0_interrupt (1,904,211 samples, 0.05%)</title><rect x="679.9" y="741" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="682.88" y="751.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="773" width="0.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1071.47" y="783.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::rfind (259,298,972 samples, 6.91%)</title><rect x="119.0" y="917" width="81.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="122.03" y="927.5" >std::__cx..</text>
</g>
<g >
<title>__arm64_sys_mmap (4,575,844 samples, 0.12%)</title><rect x="297.5" y="581" width="1.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="300.52" y="591.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (1,904,211 samples, 0.05%)</title><rect x="679.9" y="469" width="0.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="682.88" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;int, false&gt;::_M_incr (2,246,388 samples, 0.06%)</title><rect x="694.5" y="885" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="697.53" y="895.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (66,309,266 samples, 1.77%)</title><rect x="498.4" y="837" width="20.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="501.40" y="847.5" ></text>
</g>
<g >
<title>__memcg_slab_free_hook (1,883,558 samples, 0.05%)</title><rect x="1188.8" y="853" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1191.80" y="863.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (2,107,611 samples, 0.06%)</title><rect x="1172.3" y="821" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1175.31" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,029,428 samples, 0.05%)</title><rect x="1128.3" y="677" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1131.33" y="687.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,139,715 samples, 0.11%)</title><rect x="1089.9" y="821" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1092.94" y="831.5" ></text>
</g>
<g >
<title>ep_poll (7,503,005 samples, 0.20%)</title><rect x="14.1" y="805" width="2.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="17.05" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,860,096 samples, 0.10%)</title><rect x="1117.1" y="709" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1120.10" y="719.5" ></text>
</g>
<g >
<title>el0t_64_irq_handler (3,765,077 samples, 0.10%)</title><rect x="349.2" y="837" width="1.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="352.20" y="847.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (2,109,875 samples, 0.06%)</title><rect x="1168.5" y="821" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1171.47" y="831.5" ></text>
</g>
<g >
<title>fmt::v9::detail::buffer&lt;char&gt;::try_reserve (4,204,629 samples, 0.11%)</title><rect x="1128.3" y="773" width="1.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1131.33" y="783.5" ></text>
</g>
<g >
<title>__do_softirq (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="549" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1192.40" y="559.5" ></text>
</g>
<g >
<title>tcp_ack (1,992,540 samples, 0.05%)</title><rect x="349.8" y="469" width="0.6" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="352.76" y="479.5" ></text>
</g>
<g >
<title>[ld-linux-aarch64.so.1] (2,639,275 samples, 0.07%)</title><rect x="10.0" y="981" width="0.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="991.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="389" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1192.40" y="399.5" ></text>
</g>
<g >
<title>__interception::InterceptFunction (3,120,750 samples, 0.08%)</title><rect x="11.8" y="965" width="1.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="14.84" y="975.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,218,310 samples, 0.11%)</title><rect x="1114.5" y="757" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1117.54" y="767.5" ></text>
</g>
<g >
<title>__arm64_sys_sendto (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="757" width="0.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1096.75" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (2,455,309 samples, 0.07%)</title><rect x="1182.5" y="805" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1185.47" y="815.5" ></text>
</g>
<g >
<title>tcp_data_ready (1,884,408 samples, 0.05%)</title><rect x="1070.0" y="613" width="0.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1072.97" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (209,047,364 samples, 5.57%)</title><rect x="614.7" y="805" width="65.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="617.72" y="815.5" >__asan_..</text>
</g>
<g >
<title>epoll_pwait (7,503,005 samples, 0.20%)</title><rect x="14.1" y="965" width="2.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="17.05" y="975.5" ></text>
</g>
<g >
<title>arch_local_irq_restore (1,883,558 samples, 0.05%)</title><rect x="1188.8" y="805" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1191.80" y="815.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (2,656,689 samples, 0.07%)</title><rect x="30.0" y="901" width="0.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="33.02" y="911.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt;* std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;int const&amp;&gt;, std::tuple&lt;&gt; &gt; (3,971,208 samples, 0.11%)</title><rect x="681.5" y="869" width="1.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="684.54" y="879.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (3,765,077 samples, 0.10%)</title><rect x="349.2" y="773" width="1.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="352.20" y="783.5" ></text>
</g>
<g >
<title>ena_dump_stats_ex (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="565" width="0.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1071.47" y="575.5" ></text>
</g>
<g >
<title>ip_finish_output (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="709" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1192.40" y="719.5" ></text>
</g>
<g >
<title>tty_write (2,137,017 samples, 0.06%)</title><rect x="1144.0" y="549" width="0.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="1146.96" y="559.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1,945,718 samples, 0.05%)</title><rect x="1081.3" y="901" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1084.35" y="911.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (24,299,057 samples, 0.65%)</title><rect x="1129.7" y="773" width="7.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1132.65" y="783.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,215,494 samples, 0.06%)</title><rect x="293.1" y="661" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="296.13" y="671.5" ></text>
</g>
<g >
<title>do_page_fault (1,771,650 samples, 0.05%)</title><rect x="297.0" y="693" width="0.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="299.97" y="703.5" ></text>
</g>
<g >
<title>validate_xmit_skb (1,920,708 samples, 0.05%)</title><rect x="396.7" y="277" width="0.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="399.72" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (1,815,937 samples, 0.05%)</title><rect x="296.4" y="773" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="299.39" y="783.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,218,310 samples, 0.11%)</title><rect x="1114.5" y="741" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1117.54" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_allocate (1,943,777 samples, 0.05%)</title><rect x="1083.9" y="853" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1086.95" y="863.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (1,861,841 samples, 0.05%)</title><rect x="613.5" y="533" width="0.6" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="616.47" y="543.5" ></text>
</g>
<g >
<title>ip_rcv (1,920,708 samples, 0.05%)</title><rect x="396.7" y="581" width="0.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="399.72" y="591.5" ></text>
</g>
<g >
<title>do_el0_svc (29,165,244 samples, 0.78%)</title><rect x="18.9" y="869" width="9.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="21.89" y="879.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char*, char*&gt; (4,474,692 samples, 0.12%)</title><rect x="1134.8" y="693" width="1.4" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1137.77" y="703.5" ></text>
</g>
<g >
<title>do_exit (9,946,506 samples, 0.27%)</title><rect x="1186.9" y="933" width="3.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1189.87" y="943.5" ></text>
</g>
<g >
<title>__ip_finish_output (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="533" width="0.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1096.75" y="543.5" ></text>
</g>
<g >
<title>ep_item_poll.isra.0 (3,540,859 samples, 0.09%)</title><rect x="14.1" y="773" width="1.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="17.05" y="783.5" ></text>
</g>
<g >
<title>do_mem_abort (2,656,689 samples, 0.07%)</title><rect x="30.0" y="869" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="33.02" y="879.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,054,609 samples, 0.05%)</title><rect x="293.8" y="693" width="0.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="296.83" y="703.5" ></text>
</g>
<g >
<title>fmt::v9::detail::count_digits (4,248,160 samples, 0.11%)</title><rect x="1100.0" y="789" width="1.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1102.99" y="799.5" ></text>
</g>
<g >
<title>ktime_get (8,873,757 samples, 0.24%)</title><rect x="851.1" y="597" width="2.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="854.11" y="607.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char*, char*&gt; (2,156,427 samples, 0.06%)</title><rect x="1120.3" y="677" width="0.7" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1123.28" y="687.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (8,956,169 samples, 0.24%)</title><rect x="495.6" y="789" width="2.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="498.58" y="799.5" ></text>
</g>
<g >
<title>tcp_push (25,549,598 samples, 0.68%)</title><rect x="1071.9" y="661" width="8.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1074.93" y="671.5" ></text>
</g>
<g >
<title>fmt::v9::format_int::format_int (3,976,817 samples, 0.11%)</title><rect x="1183.2" y="821" width="1.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1186.24" y="831.5" ></text>
</g>
<g >
<title>el0t_64_sync (2,656,689 samples, 0.07%)</title><rect x="30.0" y="917" width="0.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="33.02" y="927.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;char*, char*&gt; (5,905,330 samples, 0.16%)</title><rect x="1105.6" y="693" width="1.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1108.55" y="703.5" ></text>
</g>
<g >
<title>___interceptor_strlen.part.0 (2,365,279 samples, 0.06%)</title><rect x="201.3" y="885" width="0.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="204.26" y="895.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (1,920,708 samples, 0.05%)</title><rect x="396.7" y="533" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="399.72" y="543.5" ></text>
</g>
<g >
<title>all (3,751,506,405 samples, 100%)</title><rect x="10.0" y="1077" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="1087.5" ></text>
</g>
<g >
<title>net_rx_action (1,992,540 samples, 0.05%)</title><rect x="349.8" y="677" width="0.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="352.76" y="687.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (2,014,467 samples, 0.05%)</title><rect x="1091.2" y="869" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1094.24" y="879.5" ></text>
</g>
<g >
<title>fpsimd_load_state (2,031,854 samples, 0.05%)</title><rect x="612.8" y="725" width="0.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="615.83" y="735.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (1,900,896 samples, 0.05%)</title><rect x="1149.0" y="901" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1151.99" y="911.5" ></text>
</g>
<g >
<title>fmt::v9::basic_format_context&lt;fmt::v9::appender, char&gt;::advance_to (4,541,685 samples, 0.12%)</title><rect x="1169.1" y="869" width="1.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1172.13" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (23,174,875 samples, 0.62%)</title><rect x="738.5" y="837" width="7.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="741.53" y="847.5" ></text>
</g>
<g >
<title>ip_finish_output2 (2,048,946 samples, 0.05%)</title><rect x="816.0" y="469" width="0.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="819.00" y="479.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1,904,211 samples, 0.05%)</title><rect x="679.9" y="725" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="682.88" y="735.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,474,692 samples, 0.12%)</title><rect x="1134.8" y="645" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1137.77" y="655.5" ></text>
</g>
<g >
<title>ip_finish_output2 (65,401,867 samples, 1.74%)</title><rect x="829.9" y="501" width="20.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="832.85" y="511.5" ></text>
</g>
<g >
<title>el0_svc_common.constprop.0 (2,401,585 samples, 0.06%)</title><rect x="497.6" y="613" width="0.8" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="500.64" y="623.5" ></text>
</g>
<g >
<title>do_el0_svc (31,780,582 samples, 0.85%)</title><rect x="1070.0" y="805" width="10.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1072.97" y="815.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="741" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1192.40" y="751.5" ></text>
</g>
<g >
<title>__napi_poll (1,992,540 samples, 0.05%)</title><rect x="349.8" y="661" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="352.76" y="671.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (16,848,985 samples, 0.45%)</title><rect x="1088.4" y="885" width="5.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1091.45" y="895.5" ></text>
</g>
<g >
<title>el0t_64_sync (1,965,532 samples, 0.05%)</title><rect x="1156.2" y="837" width="0.6" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1159.21" y="847.5" ></text>
</g>
<g >
<title>spdlog::logger::sink_it_ (48,531,175 samples, 1.29%)</title><rect x="1171.6" y="901" width="15.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1174.61" y="911.5" ></text>
</g>
<g >
<title>ip_rcv_finish (52,747,043 samples, 1.41%)</title><rect x="831.2" y="245" width="16.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="834.20" y="255.5" ></text>
</g>
<g >
<title>std::conditional&lt;std::is_same&lt;char, char&gt;::value, fmt::v9::appender, std::back_insert_iterator&lt;fmt::v9::detail::buffer&lt;char&gt; &gt; &gt;::type fmt::v9::detail::get_iterator&lt;char&gt; (4,152,862 samples, 0.11%)</title><rect x="1154.9" y="901" width="1.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1157.90" y="911.5" ></text>
</g>
<g >
<title>char* std::copy&lt;char const*, char*&gt; (7,500,602 samples, 0.20%)</title><rect x="1179.6" y="741" width="2.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1182.58" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr (274,265,893 samples, 7.31%)</title><rect x="433.0" y="917" width="86.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="435.99" y="927.5" >std::__cxx..</text>
</g>
<g >
<title>__napi_poll (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="501" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1192.40" y="511.5" ></text>
</g>
<g >
<title>iterate_tty_write (1,745,857 samples, 0.05%)</title><rect x="1143.4" y="485" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1146.41" y="495.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,514,216 samples, 0.12%)</title><rect x="1150.2" y="869" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1153.22" y="879.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (1,465,602 samples, 0.04%)</title><rect x="15.9" y="789" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="18.95" y="799.5" ></text>
</g>
<g >
<title>release_sock (1,884,408 samples, 0.05%)</title><rect x="1070.0" y="677" width="0.6" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1072.97" y="687.5" ></text>
</g>
<g >
<title>char const* fmt::v9::detail::parse_replacement_field&lt;char, fmt::v9::detail::vformat_to&lt;char&gt; (16,255,435 samples, 0.43%)</title><rect x="1156.2" y="885" width="5.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1159.21" y="895.5" ></text>
</g>
<g >
<title>get_page_from_freelist (2,187,267 samples, 0.06%)</title><rect x="821.0" y="565" width="0.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="824.01" y="575.5" ></text>
</g>
<g >
<title>do_page_fault (2,564,901 samples, 0.07%)</title><rect x="496.8" y="677" width="0.8" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="499.84" y="687.5" ></text>
</g>
<g >
<title>__pi_clear_page (2,187,267 samples, 0.06%)</title><rect x="821.0" y="549" width="0.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="824.01" y="559.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (113,472,255 samples, 3.02%)</title><rect x="303.1" y="885" width="35.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="306.08" y="895.5" >__a..</text>
</g>
<g >
<title>fmt::v9::detail::abort_fuzzing_if (2,175,201 samples, 0.06%)</title><rect x="1129.0" y="741" width="0.7" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1131.97" y="751.5" ></text>
</g>
<g >
<title>handle_mm_fault (4,143,223 samples, 0.11%)</title><rect x="71.3" y="709" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="74.32" y="719.5" ></text>
</g>
<g >
<title>neigh_hh_output (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="661" width="0.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1192.40" y="671.5" ></text>
</g>
<g >
<title>el0_da (5,834,634 samples, 0.16%)</title><rect x="70.8" y="773" width="1.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="73.79" y="783.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="613" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1096.75" y="623.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_2 (1,910,782 samples, 0.05%)</title><rect x="1146.6" y="917" width="0.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1149.59" y="927.5" ></text>
</g>
<g >
<title>__ip_finish_output (18,443,765 samples, 0.49%)</title><rect x="1071.9" y="533" width="5.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1074.93" y="543.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;tt::chat::server::ChannelManager*, std::default_delete&lt;tt::chat::server::ChannelManager&gt; &gt; &gt;::type const&amp; std::get&lt;0ul, tt::chat::server::ChannelManager*, std::default_delete&lt;tt::chat::server::ChannelManager&gt; &gt; (1,956,653 samples, 0.05%)</title><rect x="695.8" y="837" width="0.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="698.83" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (10,551,654 samples, 0.28%)</title><rect x="1173.0" y="821" width="3.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1175.97" y="831.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,222,575 samples, 0.06%)</title><rect x="1093.0" y="757" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1096.05" y="767.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,067,807 samples, 0.06%)</title><rect x="1145.9" y="901" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1148.94" y="911.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (1,992,540 samples, 0.05%)</title><rect x="349.8" y="517" width="0.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="352.76" y="527.5" ></text>
</g>
<g >
<title>____do_softirq (3,765,077 samples, 0.10%)</title><rect x="349.2" y="725" width="1.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="352.20" y="735.5" ></text>
</g>
<g >
<title>_IO_file_xsputn (1,450,096 samples, 0.04%)</title><rect x="1185.8" y="821" width="0.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1188.82" y="831.5" ></text>
</g>
<g >
<title>zap_pte_range (4,093,756 samples, 0.11%)</title><rect x="1187.5" y="789" width="1.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1190.52" y="799.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (1,956,180 samples, 0.05%)</title><rect x="1104.9" y="725" width="0.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1107.94" y="735.5" ></text>
</g>
<g >
<title>ip_finish_output (2,007,906 samples, 0.05%)</title><rect x="1093.7" y="549" width="0.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1096.75" y="559.5" ></text>
</g>
<g >
<title>operator new (2,329,689 samples, 0.06%)</title><rect x="420.5" y="837" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="423.49" y="847.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (5,839,610 samples, 0.16%)</title><rect x="1137.3" y="773" width="1.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1140.30" y="783.5" ></text>
</g>
<g >
<title>tcp_check_space (2,090,751 samples, 0.06%)</title><rect x="853.9" y="581" width="0.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="856.91" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (2,237,559 samples, 0.06%)</title><rect x="1171.6" y="821" width="0.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1174.61" y="831.5" ></text>
</g>
<g >
<title>__local_bh_enable_ip (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="629" width="0.6" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1192.40" y="639.5" ></text>
</g>
<g >
<title>void fmt::v9::detail::buffer&lt;char&gt;::append&lt;char&gt; (1,977,709 samples, 0.05%)</title><rect x="1139.6" y="789" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1142.60" y="799.5" ></text>
</g>
<g >
<title>[libfmt.so.9.1.0] (20,713,347 samples, 0.55%)</title><rect x="295.1" y="885" width="6.5" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="298.11" y="895.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char*, char*&gt; (2,029,428 samples, 0.05%)</title><rect x="1128.3" y="693" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1131.33" y="703.5" ></text>
</g>
<g >
<title>__asan::asan_memalign (8,163,431 samples, 0.22%)</title><rect x="296.4" y="805" width="2.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="299.39" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_1 (1,444,639 samples, 0.04%)</title><rect x="681.1" y="821" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="684.09" y="831.5" ></text>
</g>
<g >
<title>ma_free_rcu (2,363,931 samples, 0.06%)</title><rect x="297.5" y="389" width="0.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="300.52" y="399.5" ></text>
</g>
<g >
<title>__asan::Allocator::Allocate (1,982,687 samples, 0.05%)</title><rect x="1082.0" y="789" width="0.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1084.96" y="799.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (3,916,595 samples, 0.10%)</title><rect x="1115.9" y="741" width="1.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1118.87" y="751.5" ></text>
</g>
<g >
<title>invoke_syscall (29,165,244 samples, 0.78%)</title><rect x="18.9" y="837" width="9.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="21.89" y="847.5" ></text>
</g>
<g >
<title>__alloc_pages (1,771,650 samples, 0.05%)</title><rect x="297.0" y="549" width="0.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="299.97" y="559.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;int&gt;, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (1,444,639 samples, 0.04%)</title><rect x="681.1" y="869" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="684.09" y="879.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (1,973,615 samples, 0.05%)</title><rect x="1086.1" y="869" width="0.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1089.11" y="879.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;int, std::pair&lt;int const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Select1st, std::hash&lt;int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (2,078,922 samples, 0.06%)</title><rect x="682.8" y="885" width="0.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="685.79" y="895.5" ></text>
</g>
<g >
<title>__tcp_close (1,920,019 samples, 0.05%)</title><rect x="1189.4" y="805" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1192.40" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (2,179,139 samples, 0.06%)</title><rect x="1140.9" y="725" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1143.90" y="735.5" ></text>
</g>
<g >
<title>__sanitizer::SizeClassAllocator64LocalCache&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt; &gt;::Refill (1,946,263 samples, 0.05%)</title><rect x="12.8" y="789" width="0.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="15.82" y="799.5" ></text>
</g>
<g >
<title>el0_da (2,099,513 samples, 0.06%)</title><rect x="1122.4" y="597" width="0.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="1125.38" y="607.5" ></text>
</g>
<g >
<title>char* std::__copy_move_a&lt;false, char*, char*&gt; (4,474,692 samples, 0.12%)</title><rect x="1134.8" y="677" width="1.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1137.77" y="687.5" ></text>
</g>
<g >
<title>__do_softirq (1,920,708 samples, 0.05%)</title><rect x="396.7" y="693" width="0.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="399.72" y="703.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (2,109,875 samples, 0.06%)</title><rect x="1168.5" y="805" width="0.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1171.47" y="815.5" ></text>
</g>
<g >
<title>__sanitizer::CombinedAllocator&lt;__sanitizer::SizeClassAllocator64&lt;__asan::AP64&lt;__sanitizer::LocalAddressSpaceView&gt; &gt;, __sanitizer::LargeMmapAllocatorPtrArrayDynamic&gt;::Allocate (1,946,263 samples, 0.05%)</title><rect x="12.8" y="805" width="0.6" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="15.82" y="815.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,474,692 samples, 0.12%)</title><rect x="1134.8" y="661" width="1.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1137.77" y="671.5" ></text>
</g>
<g >
<title>schedule (1,465,602 samples, 0.04%)</title><rect x="15.9" y="757" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="18.95" y="767.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;tt::chat::server::ChannelManager, std::default_delete&lt;tt::chat::server::ChannelManager&gt; &gt;::operator (3,827,062 samples, 0.10%)</title><rect x="695.2" y="901" width="1.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="698.24" y="911.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (67,593,110 samples, 1.80%)</title><rect x="829.9" y="597" width="21.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="832.85" y="607.5" >_..</text>
</g>
<g >
<title>handle_mm_fault (1,359,675 samples, 0.04%)</title><rect x="30.0" y="821" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="33.02" y="831.5" ></text>
</g>
<g >
<title>ip_finish_output (65,401,867 samples, 1.74%)</title><rect x="829.9" y="533" width="20.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="832.85" y="543.5" ></text>
</g>
<g >
<title>el0t_64_sync_handler (4,575,844 samples, 0.12%)</title><rect x="297.5" y="661" width="1.5" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="300.52" y="671.5" ></text>
</g>
<g >
<title>skb_free_head (1,992,540 samples, 0.05%)</title><rect x="349.8" y="405" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="352.76" y="415.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,152,862 samples, 0.11%)</title><rect x="1154.9" y="885" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1157.90" y="895.5" ></text>
</g>
<g >
<title>____do_softirq (59,209,781 samples, 1.58%)</title><rect x="830.5" y="389" width="18.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="833.53" y="399.5" ></text>
</g>
<g >
<title>tcp_update_pacing_rate (2,027,376 samples, 0.05%)</title><rect x="846.5" y="133" width="0.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="849.51" y="143.5" ></text>
</g>
<g >
<title>el0_da (2,054,609 samples, 0.05%)</title><rect x="293.8" y="757" width="0.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="296.83" y="767.5" ></text>
</g>
<g >
<title>char* std::uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (1,956,180 samples, 0.05%)</title><rect x="1104.9" y="741" width="0.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1107.94" y="751.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (14,407,681 samples, 0.38%)</title><rect x="1073.2" y="229" width="4.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1076.20" y="239.5" ></text>
</g>
<g >
<title>tcp_write_xmit (88,627,833 samples, 2.36%)</title><rect x="827.4" y="613" width="27.9" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="830.39" y="623.5" >t..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (5,449,838 samples, 0.15%)</title><rect x="1086.7" y="869" width="1.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1089.73" y="879.5" ></text>
</g>
<g >
<title>char* std::__uninitialized_copy_n&lt;char const*, unsigned long, char*&gt; (10,043,248 samples, 0.27%)</title><rect x="1131.6" y="741" width="3.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1134.61" y="751.5" ></text>
</g>
<g >
<title>__asan_stack_malloc_0 (4,055,995 samples, 0.11%)</title><rect x="1095.0" y="853" width="1.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="1098.02" y="863.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (4,200,969 samples, 0.11%)</title><rect x="117.7" y="901" width="1.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="120.71" y="911.5" ></text>
</g>
<g >
<title>string (2,177,091 samples, 0.06%)</title><rect x="1068.5" y="501" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1071.47" y="511.5" ></text>
</g>
</g>
</svg>
